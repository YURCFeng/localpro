{"version":3,"file":"js/567.65705e29.js","mappings":"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","sources":["webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/glsl/vtkPolyDataFS.glsl","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/glsl/vtkPolyDataVS.glsl","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/glsl/vtkSphereMapperVS.glsl","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/glsl/vtkStickMapperVS.glsl","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/glsl/vtkVolumeFS.glsl","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/glsl/vtkVolumeVS.glsl","webpack://geoview/./node_modules/blueimp-md5/js/md5.js","webpack://geoview/./node_modules/itk/node_modules/axios/index.js","webpack://geoview/./node_modules/itk/node_modules/axios/lib/adapters/xhr.js","webpack://geoview/./node_modules/itk/node_modules/axios/lib/axios.js","webpack://geoview/./node_modules/itk/node_modules/axios/lib/cancel/Cancel.js","webpack://geoview/./node_modules/itk/node_modules/axios/lib/cancel/CancelToken.js","webpack://geoview/./node_modules/itk/node_modules/axios/lib/cancel/isCancel.js","webpack://geoview/./node_modules/itk/node_modules/axios/lib/core/Axios.js","webpack://geoview/./node_modules/itk/node_modules/axios/lib/core/InterceptorManager.js","webpack://geoview/./node_modules/itk/node_modules/axios/lib/core/buildFullPath.js","webpack://geoview/./node_modules/itk/node_modules/axios/lib/core/createError.js","webpack://geoview/./node_modules/itk/node_modules/axios/lib/core/dispatchRequest.js","webpack://geoview/./node_modules/itk/node_modules/axios/lib/core/enhanceError.js","webpack://geoview/./node_modules/itk/node_modules/axios/lib/core/mergeConfig.js","webpack://geoview/./node_modules/itk/node_modules/axios/lib/core/settle.js","webpack://geoview/./node_modules/itk/node_modules/axios/lib/core/transformData.js","webpack://geoview/./node_modules/itk/node_modules/axios/lib/defaults.js","webpack://geoview/./node_modules/itk/node_modules/axios/lib/helpers/bind.js","webpack://geoview/./node_modules/itk/node_modules/axios/lib/helpers/buildURL.js","webpack://geoview/./node_modules/itk/node_modules/axios/lib/helpers/combineURLs.js","webpack://geoview/./node_modules/itk/node_modules/axios/lib/helpers/cookies.js","webpack://geoview/./node_modules/itk/node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://geoview/./node_modules/itk/node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://geoview/./node_modules/itk/node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack://geoview/./node_modules/itk/node_modules/axios/lib/helpers/parseHeaders.js","webpack://geoview/./node_modules/itk/node_modules/axios/lib/helpers/spread.js","webpack://geoview/./node_modules/itk/node_modules/axios/lib/utils.js","webpack://geoview/./node_modules/itk/node_modules/webworker-promise/src/index.js","webpack://geoview/./node_modules/itk/node_modules/webworker-promise/src/tiny-emitter.js","webpack://geoview/./node_modules/promise-file-reader/PromiseFileReader.js","webpack://geoview/./node_modules/vtk.js/node_modules/pako/index.js","webpack://geoview/./node_modules/vtk.js/node_modules/pako/lib/deflate.js","webpack://geoview/./node_modules/vtk.js/node_modules/pako/lib/inflate.js","webpack://geoview/./node_modules/vtk.js/node_modules/pako/lib/utils/common.js","webpack://geoview/./node_modules/vtk.js/node_modules/pako/lib/utils/strings.js","webpack://geoview/./node_modules/vtk.js/node_modules/pako/lib/zlib/adler32.js","webpack://geoview/./node_modules/vtk.js/node_modules/pako/lib/zlib/constants.js","webpack://geoview/./node_modules/vtk.js/node_modules/pako/lib/zlib/crc32.js","webpack://geoview/./node_modules/vtk.js/node_modules/pako/lib/zlib/deflate.js","webpack://geoview/./node_modules/vtk.js/node_modules/pako/lib/zlib/gzheader.js","webpack://geoview/./node_modules/vtk.js/node_modules/pako/lib/zlib/inffast.js","webpack://geoview/./node_modules/vtk.js/node_modules/pako/lib/zlib/inflate.js","webpack://geoview/./node_modules/vtk.js/node_modules/pako/lib/zlib/inftrees.js","webpack://geoview/./node_modules/vtk.js/node_modules/pako/lib/zlib/messages.js","webpack://geoview/./node_modules/vtk.js/node_modules/pako/lib/zlib/trees.js","webpack://geoview/./node_modules/vtk.js/node_modules/pako/lib/zlib/zstream.js","webpack://geoview/./node_modules/vtk.js/node_modules/seedrandom/index.js","webpack://geoview/./node_modules/vtk.js/node_modules/seedrandom/lib/alea.js","webpack://geoview/./node_modules/vtk.js/node_modules/seedrandom/lib/tychei.js","webpack://geoview/./node_modules/vtk.js/node_modules/seedrandom/lib/xor128.js","webpack://geoview/./node_modules/vtk.js/node_modules/seedrandom/lib/xor4096.js","webpack://geoview/./node_modules/vtk.js/node_modules/seedrandom/lib/xorshift7.js","webpack://geoview/./node_modules/vtk.js/node_modules/seedrandom/lib/xorwow.js","webpack://geoview/./node_modules/vtk.js/node_modules/seedrandom/seedrandom.js","webpack://geoview/./node_modules/webvr-polyfill/build/webvr-polyfill.js","webpack://geoview/./src/views/mainfun/DetectObjects.vue","webpack://geoview/./node_modules/itk/itkConfig.js","webpack://geoview/./node_modules/itk/createWebworkerPromise.js","webpack://geoview/./node_modules/itk/readImageFile.js","webpack://geoview/./node_modules/itk/readImageDICOMFileSeries.js","webpack://geoview/./node_modules/vtk.js/Sources/vtk.js","webpack://geoview/./node_modules/vtk.js/Sources/macro.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/Core/Math/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/DataModel/Plane/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/DataModel/BoundingBox/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/Core/DataArray/Constants.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/Core/DataArray/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/DataModel/DataSetAttributes/FieldData.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/DataModel/DataSetAttributes/Constants.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/DataModel/DataSetAttributes/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/DataModel/DataSet/Constants.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/DataModel/DataSet/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/DataModel/StructuredData/Constants.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/DataModel/StructuredData/index.js","webpack://geoview/./node_modules/vtk.js/node_modules/gl-matrix/esm/common.js","webpack://geoview/./node_modules/vtk.js/node_modules/gl-matrix/esm/vec3.js","webpack://geoview/./node_modules/vtk.js/node_modules/gl-matrix/esm/mat4.js","webpack://geoview/./node_modules/vtk.js/node_modules/gl-matrix/esm/mat3.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/DataModel/ImageData/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/DataModel/ITKHelper/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/Texture/Constants.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/SceneGraph/ViewNode/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/Texture/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/Framebuffer/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/SceneGraph/RenderPass/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/ForwardPass/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/SceneGraph/GenericWidgetRepresentation/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/Actor/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/Actor2D/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/Camera/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/BufferObject/Constants.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/BufferObject/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/HardwareSelector/Constants.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/DataModel/SelectionNode/Constants.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/DataModel/SelectionNode/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/HardwareSelector/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/Property/Constants.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/Property/index.js","webpack://geoview/./node_modules/vtk.js/node_modules/gl-matrix/esm/vec4.js","webpack://geoview/./node_modules/vtk.js/node_modules/gl-matrix/esm/quat.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/CellArrayBufferObject/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/Shader/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/ShaderProgram/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/VertexArrayObject/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/Helper/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/AbstractMapper/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/AbstractMapper3D/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/Core/ScalarsToColors/Constants.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/Mapper/Constants.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/Core/ScalarsToColors/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/Core/LookupTable/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/Mapper/CoincidentTopologyHelper.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/Mapper/Static.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/Mapper/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/PolyDataMapper/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/Glyph3DMapper/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/ImageMapper/Constants.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/ImageProperty/Constants.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/ImageMapper/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/ImageSlice/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/PixelSpaceCallbackMapper/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/Renderer/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/Skybox/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/SphereMapper/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/StickMapper/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/Volume/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/VolumeProperty/Constants.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/VolumeMapper/Constants.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/VolumeMapper/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/SceneGraph/ViewNodeFactory/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/ViewNodeFactory/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/ShaderCache/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/TextureUnitManager/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/OpenGL/RenderWindow/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/Camera/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/Light/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/Viewport/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/Renderer/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/RenderWindow/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/RenderWindowInteractor/Constants.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/RenderWindowInteractor/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/InteractorObserver/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/InteractorStyle/Constants.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/InteractorStyle/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Interaction/Style/InteractorStyleTrackballCamera/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/Core/Points/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/Core/CellArray/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/DataModel/Cell/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/DataModel/CellLinks/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/DataModel/CellTypes/Constants.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/DataModel/CellTypes/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/DataModel/PointSet/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/DataModel/Line/Constants.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/DataModel/Line/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/DataModel/Triangle/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/DataModel/PolyData/Constants.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/DataModel/PolyData/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/Prop/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/Prop3D/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/Actor/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Misc/FullScreenRenderWindow/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/ColorTransferFunction/Constants.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/ColorTransferFunction/ColorMaps.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/ColorTransferFunction/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/DataModel/PiecewiseFunction/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/VolumeProperty/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/Volume/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/VolumeMapper/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Misc/GenericRenderWindow/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/ImageMapper/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/ImageProperty/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Rendering/Core/ImageSlice/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Interaction/Style/InteractorStyleImage/index.js","webpack://geoview/./node_modules/vtk.js/Sources/Common/Core/Endian/index.js","webpack://geoview/./node_modules/vtk.js/Sources/IO/Core/DataAccessHelper/HttpDataAccessHelper.js","webpack://geoview/./node_modules/vtk.js/Sources/IO/Misc/ITKImageReader/index.js","webpack://geoview/./src/views/mainfun/DetectObjects.vue?ce20"],"sourcesContent":["module.exports = \"//VTK::System::Dec\\n\\n/*=========================================================================\\n\\n  Program:   Visualization Toolkit\\n  Module:    vtkPolyDataFS.glsl\\n\\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n  All rights reserved.\\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n     This software is distributed WITHOUT ANY WARRANTY; without even\\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n     PURPOSE.  See the above copyright notice for more information.\\n\\n=========================================================================*/\\n// Template for the polydata mappers fragment shader\\n\\nuniform int PrimitiveIDOffset;\\n\\n// VC position of this fragment\\n//VTK::PositionVC::Dec\\n\\n// optional color passed in from the vertex shader, vertexColor\\n//VTK::Color::Dec\\n\\n// optional surface normal declaration\\n//VTK::Normal::Dec\\n\\n// extra lighting parameters\\n//VTK::Light::Dec\\n\\n// Texture coordinates\\n//VTK::TCoord::Dec\\n\\n// picking support\\n//VTK::Picking::Dec\\n\\n// Depth Peeling Support\\n//VTK::DepthPeeling::Dec\\n\\n// clipping plane vars\\n//VTK::Clip::Dec\\n\\n// the output of this shader\\n//VTK::Output::Dec\\n\\n// Apple Bug\\n//VTK::PrimID::Dec\\n\\n// handle coincident offsets\\n//VTK::Coincident::Dec\\n\\n//VTK::ZBuffer::Dec\\n\\nvoid main()\\n{\\n  // VC position of this fragment. This should not branch/return/discard.\\n  //VTK::PositionVC::Impl\\n\\n  // Place any calls that require uniform flow (e.g. dFdx) here.\\n  //VTK::UniformFlow::Impl\\n\\n  // Set gl_FragDepth here (gl_FragCoord.z by default)\\n  //VTK::Depth::Impl\\n\\n  // Early depth peeling abort:\\n  //VTK::DepthPeeling::PreColor\\n\\n  // Apple Bug\\n  //VTK::PrimID::Impl\\n\\n  //VTK::Clip::Impl\\n\\n  //VTK::Color::Impl\\n\\n  // Generate the normal if we are not passed in one\\n  //VTK::Normal::Impl\\n\\n  //VTK::Light::Impl\\n\\n  //VTK::TCoord::Impl\\n\\n  if (gl_FragData[0].a <= 0.0)\\n    {\\n    discard;\\n    }\\n\\n  //VTK::DepthPeeling::Impl\\n\\n  //VTK::Picking::Impl\\n\\n  // handle coincident offsets\\n  //VTK::Coincident::Impl\\n\\n  //VTK::ZBuffer::Impl\\n}\\n\"","module.exports = \"//VTK::System::Dec\\n\\n/*=========================================================================\\n\\n  Program:   Visualization Toolkit\\n  Module:    vtkPolyDataVS.glsl\\n\\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n  All rights reserved.\\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n     This software is distributed WITHOUT ANY WARRANTY; without even\\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n     PURPOSE.  See the above copyright notice for more information.\\n\\n=========================================================================*/\\n\\nattribute vec4 vertexMC;\\n\\n// frag position in VC\\n//VTK::PositionVC::Dec\\n\\n// optional normal declaration\\n//VTK::Normal::Dec\\n\\n// extra lighting parameters\\n//VTK::Light::Dec\\n\\n// Texture coordinates\\n//VTK::TCoord::Dec\\n\\n// material property values\\n//VTK::Color::Dec\\n\\n// clipping plane vars\\n//VTK::Clip::Dec\\n\\n// camera and actor matrix values\\n//VTK::Camera::Dec\\n\\n// Apple Bug\\n//VTK::PrimID::Dec\\n\\n// picking support\\n//VTK::Picking::Dec\\n\\nvoid main()\\n{\\n  //VTK::Color::Impl\\n\\n  //VTK::Normal::Impl\\n\\n  //VTK::TCoord::Impl\\n\\n  //VTK::Clip::Impl\\n\\n  //VTK::PrimID::Impl\\n\\n  //VTK::PositionVC::Impl\\n\\n  //VTK::Light::Impl\\n\\n  //VTK::Picking::Impl\\n}\\n\"","module.exports = \"//VTK::System::Dec\\n\\n/*=========================================================================\\n\\n  Program:   Visualization Toolkit\\n  Module:    vtkSphereMapperVS.glsl\\n\\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n  All rights reserved.\\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n     This software is distributed WITHOUT ANY WARRANTY; without even\\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n     PURPOSE.  See the above copyright notice for more information.\\n\\n=========================================================================*/\\n// this shader implements imposters in OpenGL for Spheres\\n\\nattribute vec4 vertexMC;\\nattribute vec2 offsetMC;\\n\\n// optional normal declaration\\n//VTK::Normal::Dec\\n\\n// Texture coordinates\\n//VTK::TCoord::Dec\\n\\nuniform mat3 normalMatrix; // transform model coordinate directions to view coordinates\\n\\n// material property values\\n//VTK::Color::Dec\\n\\n// clipping plane vars\\n//VTK::Clip::Dec\\n\\n// camera and actor matrix values\\n//VTK::Camera::Dec\\n\\nvarying vec4 vertexVCVSOutput;\\nvarying float radiusVCVSOutput;\\nvarying vec3 centerVCVSOutput;\\n\\nuniform int cameraParallel;\\n\\nvoid main()\\n{\\n  //VTK::Color::Impl\\n\\n  //VTK::Normal::Impl\\n\\n  //VTK::TCoord::Impl\\n\\n  //VTK::Clip::Impl\\n\\n  // compute the projected vertex position\\n  vertexVCVSOutput = MCVCMatrix * vertexMC;\\n  centerVCVSOutput = vertexVCVSOutput.xyz;\\n  radiusVCVSOutput = length(offsetMC)*0.5;\\n\\n  // make the triangle face the camera\\n  if (cameraParallel == 0)\\n    {\\n    vec3 dir = normalize(-vertexVCVSOutput.xyz);\\n    vec3 base2 = normalize(cross(dir,vec3(1.0,0.0,0.0)));\\n    vec3 base1 = cross(base2,dir);\\n    vertexVCVSOutput.xyz = vertexVCVSOutput.xyz + offsetMC.x*base1 + offsetMC.y*base2;\\n    }\\n  else\\n    {\\n    // add in the offset\\n    vertexVCVSOutput.xy = vertexVCVSOutput.xy + offsetMC;\\n    }\\n\\n  gl_Position = VCDCMatrix * vertexVCVSOutput;\\n}\\n\"","module.exports = \"//VTK::System::Dec\\n\\n/*=========================================================================\\n\\n  Program:   Visualization Toolkit\\n  Module:    vtkStickMapperVS.glsl\\n\\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n  All rights reserved.\\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n     This software is distributed WITHOUT ANY WARRANTY; without even\\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n     PURPOSE.  See the above copyright notice for more information.\\n\\n=========================================================================*/\\n// this shader implements imposters in OpenGL for Sticks\\n\\nattribute vec4 vertexMC;\\nattribute vec3 orientMC;\\nattribute vec4 offsetMC;\\nattribute float radiusMC;\\n\\n// optional normal declaration\\n//VTK::Normal::Dec\\n\\n//VTK::Picking::Dec\\n\\n// Texture coordinates\\n//VTK::TCoord::Dec\\n\\nuniform mat3 normalMatrix; // transform model coordinate directions to view coordinates\\n\\n// material property values\\n//VTK::Color::Dec\\n\\n// clipping plane vars\\n//VTK::Clip::Dec\\n\\n// camera and actor matrix values\\n//VTK::Camera::Dec\\n\\nvarying vec4 vertexVCVSOutput;\\nvarying float radiusVCVSOutput;\\nvarying float lengthVCVSOutput;\\nvarying vec3 centerVCVSOutput;\\nvarying vec3 orientVCVSOutput;\\n\\nuniform int cameraParallel;\\n\\nvoid main()\\n{\\n  //VTK::Picking::Impl\\n\\n  //VTK::Color::Impl\\n\\n  //VTK::Normal::Impl\\n\\n  //VTK::TCoord::Impl\\n\\n  //VTK::Clip::Impl\\n\\n  vertexVCVSOutput = MCVCMatrix * vertexMC;\\n  centerVCVSOutput = vertexVCVSOutput.xyz;\\n  radiusVCVSOutput = radiusMC;\\n  lengthVCVSOutput = length(orientMC);\\n  orientVCVSOutput = normalMatrix * normalize(orientMC);\\n\\n  // make sure it is pointing out of the screen\\n  if (orientVCVSOutput.z < 0.0)\\n    {\\n    orientVCVSOutput = -orientVCVSOutput;\\n    }\\n\\n  // make the basis\\n  vec3 xbase;\\n  vec3 ybase;\\n  vec3 dir = vec3(0.0,0.0,1.0);\\n  if (cameraParallel == 0)\\n    {\\n    dir = normalize(-vertexVCVSOutput.xyz);\\n    }\\n  if (abs(dot(dir,orientVCVSOutput)) == 1.0)\\n    {\\n    xbase = normalize(cross(vec3(0.0,1.0,0.0),orientVCVSOutput));\\n    ybase = cross(xbase,orientVCVSOutput);\\n    }\\n  else\\n    {\\n    xbase = normalize(cross(orientVCVSOutput,dir));\\n    ybase = cross(orientVCVSOutput,xbase);\\n    }\\n\\n  vec3 offsets = offsetMC.xyz*2.0-1.0;\\n  vertexVCVSOutput.xyz = vertexVCVSOutput.xyz +\\n    radiusVCVSOutput*offsets.x*xbase +\\n    radiusVCVSOutput*offsets.y*ybase +\\n    0.5*lengthVCVSOutput*offsets.z*orientVCVSOutput;\\n\\n  gl_Position = VCDCMatrix * vertexVCVSOutput;\\n}\\n\"","module.exports = \"//VTK::System::Dec\\n\\n/*=========================================================================\\n\\n  Program:   Visualization Toolkit\\n  Module:    vtkVolumeFS.glsl\\n\\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n  All rights reserved.\\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n     This software is distributed WITHOUT ANY WARRANTY; without even\\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n     PURPOSE.  See the above copyright notice for more information.\\n\\n=========================================================================*/\\n// Template for the polydata mappers fragment shader\\n\\n// the output of this shader\\n//VTK::Output::Dec\\n\\nvarying vec3 vertexVCVSOutput;\\n\\n// first declare the settings from the mapper\\n// that impact the code paths in here\\n\\n// always set vtkNumComponents 1,2,3,4\\n//VTK::NumComponents\\n\\n// possibly define vtkUseTriliear\\n//VTK::TrilinearOn\\n\\n// possibly define vtkIndependentComponents\\n//VTK::IndependentComponentsOn\\n\\n// Define the blend mode to use\\n#define vtkBlendMode //VTK::BlendMode\\n\\n// Possibly define vtkImageLabelOutlineOn\\n//VTK::ImageLabelOutlineOn\\n\\n#ifdef vtkImageLabelOutlineOn\\nuniform int outlineThickness;\\nuniform float vpWidth;\\nuniform float vpHeight;\\nuniform mat4 DCWCMatrix;\\nuniform mat4 vWCtoIDX;\\n#endif\\n\\n// define vtkLightComplexity\\n//VTK::LightComplexity\\n#if vtkLightComplexity > 0\\nuniform float vSpecularPower;\\nuniform float vAmbient;\\nuniform float vDiffuse;\\nuniform float vSpecular;\\n//VTK::Light::Dec\\n#endif\\n\\n// possibly define vtkGradientOpacityOn\\n//VTK::GradientOpacityOn\\n#ifdef vtkGradientOpacityOn\\nuniform float goscale0;\\nuniform float goshift0;\\nuniform float gomin0;\\nuniform float gomax0;\\n#if defined(vtkIndependentComponentsOn) && (vtkNumComponents > 1)\\nuniform float goscale1;\\nuniform float goshift1;\\nuniform float gomin1;\\nuniform float gomax1;\\n#if vtkNumComponents >= 3\\nuniform float goscale2;\\nuniform float goshift2;\\nuniform float gomin2;\\nuniform float gomax2;\\n#endif\\n#if vtkNumComponents >= 4\\nuniform float goscale3;\\nuniform float goshift3;\\nuniform float gomin3;\\nuniform float gomax3;\\n#endif\\n#endif\\n#endif\\n\\n// camera values\\nuniform float camThick;\\nuniform float camNear;\\nuniform float camFar;\\nuniform int cameraParallel;\\n\\n// values describing the volume geometry\\nuniform vec3 vOriginVC;\\nuniform vec3 vSpacing;\\nuniform ivec3 volumeDimensions; // 3d texture dimensions\\nuniform vec3 vPlaneNormal0;\\nuniform float vPlaneDistance0;\\nuniform vec3 vPlaneNormal1;\\nuniform float vPlaneDistance1;\\nuniform vec3 vPlaneNormal2;\\nuniform float vPlaneDistance2;\\nuniform vec3 vPlaneNormal3;\\nuniform float vPlaneDistance3;\\nuniform vec3 vPlaneNormal4;\\nuniform float vPlaneDistance4;\\nuniform vec3 vPlaneNormal5;\\nuniform float vPlaneDistance5;\\n\\n// opacity and color textures\\nuniform sampler2D otexture;\\nuniform float oshift0;\\nuniform float oscale0;\\nuniform sampler2D ctexture;\\nuniform float cshift0;\\nuniform float cscale0;\\n\\n// jitter texture\\nuniform sampler2D jtexture;\\n\\n// some 3D texture values\\nuniform float sampleDistance;\\nuniform vec3 vVCToIJK;\\n\\n// the heights defined below are the locations\\n// for the up to four components of the tfuns\\n// the tfuns have a height of 2XnumComps pixels so the\\n// values are computed to hit the middle of the two rows\\n// for that component\\n#ifdef vtkIndependentComponentsOn\\n#if vtkNumComponents == 2\\nuniform float mix0;\\nuniform float mix1;\\n#define height0 0.25\\n#define height1 0.75\\n#endif\\n#if vtkNumComponents == 3\\nuniform float mix0;\\nuniform float mix1;\\nuniform float mix2;\\n#define height0 0.17\\n#define height1 0.5\\n#define height2 0.83\\n#endif\\n#if vtkNumComponents == 4\\nuniform float mix0;\\nuniform float mix1;\\nuniform float mix2;\\nuniform float mix3;\\n#define height0 0.125\\n#define height1 0.375\\n#define height2 0.625\\n#define height3 0.875\\n#endif\\n#endif\\n\\n#if vtkNumComponents >= 2\\nuniform float oshift1;\\nuniform float oscale1;\\nuniform float cshift1;\\nuniform float cscale1;\\n#endif\\n#if vtkNumComponents >= 3\\nuniform float oshift2;\\nuniform float oscale2;\\nuniform float cshift2;\\nuniform float cscale2;\\n#endif\\n#if vtkNumComponents >= 4\\nuniform float oshift3;\\nuniform float oscale3;\\nuniform float cshift3;\\nuniform float cscale3;\\n#endif\\n\\n// declaration for intermixed geometry\\n//VTK::ZBuffer::Dec\\n\\n// Lighting values\\n//VTK::Light::Dec\\n\\n//=======================================================================\\n// Webgl2 specific version of functions\\n#if __VERSION__ == 300\\n\\nuniform highp sampler3D texture1;\\n\\nvec4 getTextureValue(vec3 pos)\\n{\\n  vec4 tmp = texture(texture1, pos);\\n#if vtkNumComponents == 1\\n  tmp.a = tmp.r;\\n#endif\\n#if vtkNumComponents == 2\\n  tmp.a = tmp.g;\\n#endif\\n#if vtkNumComponents == 3\\n  tmp.a = length(tmp.rgb);\\n#endif\\n  return tmp;\\n}\\n\\n//=======================================================================\\n// WebGL1 specific version of functions\\n#else\\n\\nuniform sampler2D texture1;\\n\\nuniform float texWidth;\\nuniform float texHeight;\\nuniform int xreps;\\nuniform float xstride;\\nuniform float ystride;\\n\\n// if computing triliear values from multiple z slices\\n#ifdef vtkTriliearOn\\nvec4 getTextureValue(vec3 ijk)\\n{\\n  float zoff = 1.0/float(volumeDimensions.z);\\n  vec4 val1 = getOneTextureValue(ijk);\\n  vec4 val2 = getOneTextureValue(vec3(ijk.xy, ijk.z + zoff));\\n\\n  float indexZ = float(volumeDimensions)*ijk.z;\\n  float zmix =  indexZ - floor(indexZ);\\n\\n  return mix(val1, val2, zmix);\\n}\\n\\nvec4 getOneTextureValue(vec3 ijk)\\n#else // nearest or fast linear\\nvec4 getTextureValue(vec3 ijk)\\n#endif\\n{\\n  vec3 tdims = vec3(volumeDimensions);\\n\\n  int z = int(ijk.z * tdims.z);\\n  int yz = z / xreps;\\n  int xz = z - yz*xreps;\\n\\n  float ni = (ijk.x + float(xz)) * tdims.x/xstride;\\n  float nj = (ijk.y + float(yz)) * tdims.y/ystride;\\n\\n  vec2 tpos = vec2(ni/texWidth, nj/texHeight);\\n\\n  vec4 tmp = texture2D(texture1, tpos);\\n\\n#if vtkNumComponents == 1\\n  tmp.a = tmp.r;\\n#endif\\n#if vtkNumComponents == 2\\n  tmp.g = tmp.a;\\n#endif\\n#if vtkNumComponents == 3\\n  tmp.a = length(tmp.rgb);\\n#endif\\n  return tmp;\\n}\\n\\n// End of Webgl1 specific code\\n//=======================================================================\\n#endif\\n\\n//=======================================================================\\n// compute the normal and gradient magnitude for a position\\nvec4 computeNormal(vec3 pos, float scalar, vec3 tstep)\\n{\\n  vec4 result;\\n\\n  result.x = getTextureValue(pos + vec3(tstep.x, 0.0, 0.0)).a - scalar;\\n  result.y = getTextureValue(pos + vec3(0.0, tstep.y, 0.0)).a - scalar;\\n  result.z = getTextureValue(pos + vec3(0.0, 0.0, tstep.z)).a - scalar;\\n\\n  // divide by spacing\\n  result.xyz /= vSpacing;\\n\\n  result.w = length(result.xyz);\\n\\n  // rotate to View Coords\\n  result.xyz =\\n    result.x * vPlaneNormal0 +\\n    result.y * vPlaneNormal2 +\\n    result.z * vPlaneNormal4;\\n\\n  if (result.w > 0.0)\\n  {\\n    result.xyz /= result.w;\\n  }\\n  return result;\\n}\\n\\n#ifdef vtkImageLabelOutlineOn\\nvec3 fragCoordToIndexSpace(vec4 fragCoord) {\\n  vec4 ndcPos = vec4(\\n    (fragCoord.x / vpWidth - 0.5) * 2.0,\\n    (fragCoord.y / vpHeight - 0.5) * 2.0,\\n    (fragCoord.z - 0.5) * 2.0,\\n    1.0);\\n\\n  vec4 worldCoord = DCWCMatrix * ndcPos;\\n  vec4 vertex = (worldCoord/worldCoord.w);\\n\\n  return (vWCtoIDX * vertex).xyz / vec3(volumeDimensions);\\n}\\n#endif\\n\\n//=======================================================================\\n// compute the normals and gradient magnitudes for a position\\n// for independent components\\nmat4 computeMat4Normal(vec3 pos, vec4 tValue, vec3 tstep)\\n{\\n  mat4 result;\\n  vec4 distX = getTextureValue(pos + vec3(tstep.x, 0.0, 0.0)) - tValue;\\n  vec4 distY = getTextureValue(pos + vec3(0.0, tstep.y, 0.0)) - tValue;\\n  vec4 distZ = getTextureValue(pos + vec3(0.0, 0.0, tstep.z)) - tValue;\\n\\n  // divide by spacing\\n  distX /= vSpacing.x;\\n  distY /= vSpacing.y;\\n  distZ /= vSpacing.z;\\n\\n  mat3 rot;\\n  rot[0] = vPlaneNormal0;\\n  rot[1] = vPlaneNormal2;\\n  rot[2] = vPlaneNormal4;\\n\\n  result[0].xyz = vec3(distX.r, distY.r, distZ.r);\\n  result[0].a = length(result[0].xyz);\\n  result[0].xyz *= rot;\\n  if (result[0].w > 0.0)\\n  {\\n    result[0].xyz /= result[0].w;\\n  }\\n\\n  result[1].xyz = vec3(distX.g, distY.g, distZ.g);\\n  result[1].a = length(result[1].xyz);\\n  result[1].xyz *= rot;\\n  if (result[1].w > 0.0)\\n  {\\n    result[1].xyz /= result[1].w;\\n  }\\n\\n// optionally compute the 3rd component\\n#if vtkNumComponents >= 3\\n  result[2].xyz = vec3(distX.b, distY.b, distZ.b);\\n  result[2].a = length(result[2].xyz);\\n  result[2].xyz *= rot;\\n  if (result[2].w > 0.0)\\n  {\\n    result[2].xyz /= result[2].w;\\n  }\\n#endif\\n\\n// optionally compute the 4th component\\n#if vtkNumComponents >= 4\\n  result[3].xyz = vec3(distX.a, distY.a, distZ.a);\\n  result[3].a = length(result[3].xyz);\\n  result[3].xyz *= rot;\\n  if (result[3].w > 0.0)\\n  {\\n    result[3].xyz /= result[3].w;\\n  }\\n#endif\\n\\n  return result;\\n}\\n\\n//=======================================================================\\n// Given a normal compute the gradient opacity factors\\n//\\nfloat computeGradientOpacityFactor(\\n  vec4 normal, float goscale, float goshift, float gomin, float gomax)\\n{\\n#if defined(vtkGradientOpacityOn)\\n  return clamp(normal.a*goscale + goshift, gomin, gomax);\\n#else\\n  return 1.0;\\n#endif\\n}\\n\\n#if vtkLightComplexity > 0\\nvoid applyLighting(inout vec3 tColor, vec4 normal)\\n{\\n  vec3 diffuse = vec3(0.0, 0.0, 0.0);\\n  vec3 specular = vec3(0.0, 0.0, 0.0);\\n  //VTK::Light::Impl\\n  tColor.rgb = tColor.rgb*(diffuse*vDiffuse + vAmbient) + specular*vSpecular;\\n}\\n#endif\\n\\n//=======================================================================\\n// Given a texture value compute the color and opacity\\n//\\nvec4 getColorForValue(vec4 tValue, vec3 posIS, vec3 tstep)\\n{\\n#ifdef vtkImageLabelOutlineOn\\n  vec3 centerPosIS = fragCoordToIndexSpace(gl_FragCoord); // pos in texture space\\n  vec4 centerValue = getTextureValue(centerPosIS);\\n  bool pixelOnBorder = false;\\n  vec4 tColor = texture2D(ctexture, vec2(centerValue.r * cscale0 + cshift0, 0.5));\\n\\n  // Get alpha of segment from opacity function.\\n  tColor.a = texture2D(otexture, vec2(centerValue.r * oscale0 + oshift0, 0.5)).r;\\n\\n  // Only perform outline check on fragments rendering voxels that aren't invisible.\\n  // Saves a bunch of needless checks on the background.\\n  // TODO define epsilon when building shader?\\n  if (float(tColor.a) > 0.01) {\\n    for (int i = -outlineThickness; i <= outlineThickness; i++) {\\n      for (int j = -outlineThickness; j <= outlineThickness; j++) {\\n        if (i == 0 || j == 0) {\\n          continue;\\n        }\\n\\n        vec4 neighborPixelCoord = vec4(gl_FragCoord.x + float(i),\\n          gl_FragCoord.y + float(j),\\n          gl_FragCoord.z, gl_FragCoord.w);\\n\\n        vec3 neighborPosIS = fragCoordToIndexSpace(neighborPixelCoord);\\n        vec4 value = getTextureValue(neighborPosIS);\\n\\n        // If any of my neighbours are not the same value as I\\n        // am, this means I am on the border of the segment.\\n        // We can break the loops\\n        if (any(notEqual(value, centerValue))) {\\n          pixelOnBorder = true;\\n          break;\\n        }\\n      }\\n\\n      if (pixelOnBorder == true) {\\n        break;\\n      }\\n    }\\n\\n    // If I am on the border, I am displayed at full opacity\\n    if (pixelOnBorder == true) {\\n      tColor.a = 1.0;\\n    }\\n  }\\n  \\n#else\\n  // compute the normal and gradient magnitude if needed\\n  // We compute it as a vec4 if possible otherwise a mat4\\n  //\\n  vec4 goFactor = vec4(1.0,1.0,1.0,1.0);\\n\\n  // compute the normal vectors as needed\\n  #if (vtkLightComplexity > 0) || defined(vtkGradientOpacityOn)\\n  #if defined(vtkIndependentComponentsOn) && (vtkNumComponents > 1)\\n    mat4 normalMat = computeMat4Normal(posIS, tValue, tstep);\\n    vec4 normal0 = normalMat[0];\\n    vec4 normal1 = normalMat[1];\\n  #if vtkNumComponents > 2\\n    vec4 normal2 = normalMat[2];\\n  #endif\\n  #if vtkNumComponents > 3\\n    vec4 normal3 = normalMat[3];\\n  #endif\\n  #else\\n    vec4 normal0 = computeNormal(posIS, tValue.a, tstep);\\n  #endif\\n  #endif\\n\\n  // compute gradient opacity factors as needed\\n  #if defined(vtkGradientOpacityOn)\\n    goFactor.x =\\n      computeGradientOpacityFactor(normal0, goscale0, goshift0, gomin0, gomax0);\\n  #if defined(vtkIndependentComponentsOn) && (vtkNumComponents > 1)\\n    goFactor.y =\\n      computeGradientOpacityFactor(normal1, goscale1, goshift1, gomin1, gomax1);\\n  #if vtkNumComponents > 2\\n    goFactor.z =\\n      computeGradientOpacityFactor(normal2, goscale2, goshift2, gomin2, gomax2);\\n  #if vtkNumComponents > 3\\n    goFactor.w =\\n      computeGradientOpacityFactor(normal3, goscale3, goshift3, gomin3, gomax3);\\n  #endif\\n  #endif\\n  #endif\\n  #endif\\n\\n  // single component is always independent\\n  #if vtkNumComponents == 1\\n    vec4 tColor = texture2D(ctexture, vec2(tValue.r * cscale0 + cshift0, 0.5));\\n    tColor.a = goFactor.x*texture2D(otexture, vec2(tValue.r * oscale0 + oshift0, 0.5)).r;\\n  #endif\\n\\n  #if defined(vtkIndependentComponentsOn) && vtkNumComponents >= 2\\n    vec4 tColor = mix0*texture2D(ctexture, vec2(tValue.r * cscale0 + cshift0, height0));\\n    tColor.a = goFactor.x*mix0*texture2D(otexture, vec2(tValue.r * oscale0 + oshift0, height0)).r;\\n    vec3 tColor1 = mix1*texture2D(ctexture, vec2(tValue.g * cscale1 + cshift1, height1)).rgb;\\n    tColor.a += goFactor.y*mix1*texture2D(otexture, vec2(tValue.g * oscale1 + oshift1, height1)).r;\\n  #if vtkNumComponents >= 3\\n    vec3 tColor2 = mix2*texture2D(ctexture, vec2(tValue.b * cscale2 + cshift2, height2)).rgb;\\n    tColor.a += goFactor.z*mix2*texture2D(otexture, vec2(tValue.b * oscale2 + oshift2, height2)).r;\\n  #if vtkNumComponents >= 4\\n    vec3 tColor3 = mix3*texture2D(ctexture, vec2(tValue.a * cscale3 + cshift3, height3)).rgb;\\n    tColor.a += goFactor.w*mix3*texture2D(otexture, vec2(tValue.a * oscale3 + oshift3, height3)).r;\\n  #endif\\n  #endif\\n\\n  #else // then not independent\\n\\n  #if vtkNumComponents == 2\\n    float lum = tValue.r * cscale0 + cshift0;\\n    float alpha = goFactor.x*texture2D(otexture, vec2(tValue.a * oscale1 + oshift1, 0.5)).r;\\n    vec4 tColor = vec4(lum, lum, lum, alpha);\\n  #endif\\n  #if vtkNumComponents == 3\\n    vec4 tColor;\\n    tColor.r = tValue.r * cscale0 + cshift0;\\n    tColor.g = tValue.g * cscale1 + cshift1;\\n    tColor.b = tValue.b * cscale2 + cshift2;\\n    tColor.a = goFactor.x*texture2D(otexture, vec2(tValue.a * oscale0 + oshift0, 0.5)).r;\\n  #endif\\n  #if vtkNumComponents == 4\\n    vec4 tColor;\\n    tColor.r = tValue.r * cscale0 + cshift0;\\n    tColor.g = tValue.g * cscale1 + cshift1;\\n    tColor.b = tValue.b * cscale2 + cshift2;\\n    tColor.a = goFactor.x*texture2D(otexture, vec2(tValue.a * oscale3 + oshift3, 0.5)).r;\\n  #endif\\n  #endif // dependent\\n\\n  // apply lighting if requested as appropriate\\n  #if vtkLightComplexity > 0\\n    applyLighting(tColor.rgb, normal0);\\n  #if defined(vtkIndependentComponentsOn) && vtkNumComponents >= 2\\n    applyLighting(tColor1, normal1);\\n  #if vtkNumComponents >= 3\\n    applyLighting(tColor2, normal2);\\n  #if vtkNumComponents >= 4\\n    applyLighting(tColor3, normal3);\\n  #endif\\n  #endif\\n  #endif\\n#endif\\n\\n// perform final independent blend as needed\\n#if defined(vtkIndependentComponentsOn) && vtkNumComponents >= 2\\n  tColor.rgb += tColor1;\\n#if vtkNumComponents >= 3\\n  tColor.rgb += tColor2;\\n#if vtkNumComponents >= 4\\n  tColor.rgb += tColor3;\\n#endif\\n#endif\\n#endif\\n\\n#endif\\n\\n\\n\\n\\n\\n\\n\\nreturn tColor;\\n}\\n\\n\\n\\n//=======================================================================\\n// Apply the specified blend mode operation along the ray's path.\\n//\\nvoid applyBlend(vec3 posIS, vec3 endIS, float sampleDistanceIS, vec3 tdims)\\n{\\n  vec3 tstep = 1.0/tdims;\\n\\n  // start slightly inside and apply some jitter\\n  vec3 delta = endIS - posIS;\\n  vec3 stepIS = normalize(delta)*sampleDistanceIS;\\n  float raySteps = length(delta)/sampleDistanceIS;\\n\\n  // avoid 0.0 jitter\\n  float jitter = 0.01 + 0.99*texture2D(jtexture, gl_FragCoord.xy/32.0).r;\\n  float stepsTraveled = jitter;\\n\\n  // local vars for the loop\\n  vec4 color = vec4(0.0, 0.0, 0.0, 0.0);\\n  vec4 tValue;\\n  vec4 tColor;\\n\\n  // if we have less than one step then pick the middle point\\n  // as our value\\n  // if (raySteps <= 1.0)\\n  // {\\n  //   posIS = (posIS + endIS)*0.5;\\n  // }\\n\\n  // Perform initial step at the volume boundary\\n  // compute the scalar\\n  tValue = getTextureValue(posIS);\\n\\n  #if vtkBlendMode == 0 // COMPOSITE_BLEND\\n    // now map through opacity and color\\n    tColor = getColorForValue(tValue, posIS, tstep);\\n\\n    // handle very thin volumes\\n    if (raySteps <= 1.0)\\n    {\\n      tColor.a = 1.0 - pow(1.0 - tColor.a, raySteps);\\n      gl_FragData[0] = tColor;\\n      return;\\n    }\\n\\n    tColor.a = 1.0 - pow(1.0 - tColor.a, jitter);\\n    color = vec4(tColor.rgb*tColor.a, tColor.a);\\n    posIS += (jitter*stepIS);\\n\\n    for (int i = 0; i < //VTK::MaximumSamplesValue ; ++i)\\n    {\\n      if (stepsTraveled + 1.0 >= raySteps) { break; }\\n\\n      // compute the scalar\\n      tValue = getTextureValue(posIS);\\n\\n      // now map through opacity and color\\n      tColor = getColorForValue(tValue, posIS, tstep);\\n\\n      float mix = (1.0 - color.a);\\n\\n      // this line should not be needed but nvidia seems to not handle\\n      // the break correctly on windows/chrome 58 angle\\n      //mix = mix * sign(max(raySteps - stepsTraveled - 1.0, 0.0));\\n\\n      color = color + vec4(tColor.rgb*tColor.a, tColor.a)*mix;\\n      stepsTraveled++;\\n      posIS += stepIS;\\n      if (color.a > 0.99) { color.a = 1.0; break; }\\n    }\\n\\n    if (color.a < 0.99 && (raySteps - stepsTraveled) > 0.0)\\n    {\\n      posIS = endIS;\\n\\n      // compute the scalar\\n      tValue = getTextureValue(posIS);\\n\\n      // now map through opacity and color\\n      tColor = getColorForValue(tValue, posIS, tstep);\\n      tColor.a = 1.0 - pow(1.0 - tColor.a, raySteps - stepsTraveled);\\n\\n      float mix = (1.0 - color.a);\\n      color = color + vec4(tColor.rgb*tColor.a, tColor.a)*mix;\\n    }\\n\\n    gl_FragData[0] = vec4(color.rgb/color.a, color.a);\\n  #endif\\n  #if vtkBlendMode == 1 || vtkBlendMode == 2\\n    // MAXIMUM_INTENSITY_BLEND || MINIMUM_INTENSITY_BLEND\\n    // Find maximum/minimum intensity along the ray.\\n\\n    // Define the operation we will use (min or max)\\n    #if vtkBlendMode == 1\\n    #define OP max\\n    #else\\n    #define OP min\\n    #endif\\n\\n    // If the clipping range is shorter than the sample distance\\n    // we can skip the sampling loop along the ray.\\n    if (raySteps <= 1.0)\\n    {\\n      gl_FragData[0] = getColorForValue(tValue, posIS, tstep);\\n      return;\\n    }\\n\\n    vec4 value = tValue;\\n    posIS += (jitter*stepIS);\\n\\n    // Sample along the ray until MaximumSamplesValue,\\n    // ending slightly inside the total distance\\n    for (int i = 0; i < //VTK::MaximumSamplesValue ; ++i)\\n    {\\n      // If we have reached the last step, break\\n      if (stepsTraveled + 1.0 >= raySteps) { break; }\\n\\n      // compute the scalar\\n      tValue = getTextureValue(posIS);\\n\\n      // Update the maximum value if necessary\\n      value = OP(tValue, value);\\n\\n      // Otherwise, continue along the ray\\n      stepsTraveled++;\\n      posIS += stepIS;\\n    }\\n\\n    // Perform the last step along the ray using the\\n    // residual distance\\n    posIS = endIS;\\n    tValue = getTextureValue(posIS);\\n    value = OP(tValue, value);\\n\\n    // Now map through opacity and color\\n    gl_FragData[0] = getColorForValue(value, posIS, tstep);\\n  #endif\\n  #if vtkBlendMode == 3 //AVERAGE_INTENSITY_BLEND\\n    vec4 averageIPScalarRangeMin = vec4 (\\n      //VTK::AverageIPScalarRangeMin,\\n      //VTK::AverageIPScalarRangeMin,\\n      //VTK::AverageIPScalarRangeMin,\\n      1.0);\\n    vec4 averageIPScalarRangeMax = vec4(\\n      //VTK::AverageIPScalarRangeMax,\\n      //VTK::AverageIPScalarRangeMax,\\n      //VTK::AverageIPScalarRangeMax,\\n      1.0);\\n\\n    vec4 sum = vec4(0.);\\n\\n    averageIPScalarRangeMin.a = tValue.a;\\n    averageIPScalarRangeMax.a = tValue.a;\\n\\n    if (all(greaterThanEqual(tValue, averageIPScalarRangeMin)) &&\\n    all(lessThanEqual(tValue, averageIPScalarRangeMax))) {\\n      sum += tValue;\\n    }\\n\\n    if (raySteps <= 1.0) {\\n      gl_FragData[0] = getColorForValue(sum, posIS, tstep);\\n      return;\\n    }\\n\\n    posIS += (jitter*stepIS);\\n\\n    // Sample along the ray until MaximumSamplesValue,\\n    // ending slightly inside the total distance\\n    for (int i = 0; i < //VTK::MaximumSamplesValue ; ++i)\\n    {\\n      // If we have reached the last step, break\\n      if (stepsTraveled + 1.0 >= raySteps) { break; }\\n\\n      // compute the scalar\\n      tValue = getTextureValue(posIS);\\n\\n      // One can control the scalar range by setting the AverageIPScalarRange to disregard scalar values, not in the range of interest, from the average computation.\\n      // Notes:\\n      // - We are comparing all values in the texture to see if any of them\\n      //   are outside of the scalar range. In the future we might want to allow\\n      //   scalar ranges for each component.\\n      // - We are setting the alpha channel for averageIPScalarRangeMin and\\n      //   averageIPScalarRangeMax so that we do not trigger this 'continue'\\n      //   based on the alpha channel comparison.\\n      // - There might be a better way to do this. I'm not sure if there is an\\n      //   equivalent of 'any' which only operates on RGB, though I suppose\\n      //   we could write an 'anyRGB' function and see if that is faster.\\n      averageIPScalarRangeMin.a = tValue.a;\\n      averageIPScalarRangeMax.a = tValue.a;\\n      if (any(lessThan(tValue, averageIPScalarRangeMin)) ||\\n          any(greaterThan(tValue, averageIPScalarRangeMax))) {\\n        continue;\\n      }\\n\\n      // Sum the values across each step in the path\\n      sum += tValue;\\n\\n      // Otherwise, continue along the ray\\n      stepsTraveled++;\\n      posIS += stepIS;\\n    }\\n\\n    // Perform the last step along the ray using the\\n    // residual distance\\n    posIS = endIS;\\n\\n    // compute the scalar\\n    tValue = getTextureValue(posIS);\\n\\n    // One can control the scalar range by setting the AverageIPScalarRange to disregard scalar values, not in the range of interest, from the average computation\\n    if (all(greaterThanEqual(tValue, averageIPScalarRangeMin)) &&\\n        all(lessThanEqual(tValue, averageIPScalarRangeMax))) {\\n      sum += tValue;\\n\\n      stepsTraveled++;\\n    }\\n\\n    sum /= vec4(stepsTraveled, stepsTraveled, stepsTraveled, 1.0);\\n\\n    gl_FragData[0] = getColorForValue(sum, posIS, tstep);\\n  #endif\\n}\\n\\n//=======================================================================\\n// Compute a new start and end point for a given ray based\\n// on the provided bounded clipping plane (aka a rectangle)\\nvoid getRayPointIntersectionBounds(\\n  vec3 rayPos, vec3 rayDir,\\n  vec3 planeDir, float planeDist,\\n  inout vec2 tbounds, vec3 vPlaneX, vec3 vPlaneY,\\n  float vSize1, float vSize2)\\n{\\n  float result = dot(rayDir, planeDir);\\n  if (result == 0.0)\\n  {\\n    return;\\n  }\\n  result = -1.0 * (dot(rayPos, planeDir) + planeDist) / result;\\n  vec3 xposVC = rayPos + rayDir*result;\\n  vec3 vxpos = xposVC - vOriginVC;\\n  vec2 vpos = vec2(\\n    dot(vxpos, vPlaneX),\\n    dot(vxpos, vPlaneY));\\n\\n  // on some apple nvidia systems this does not work\\n  // if (vpos.x < 0.0 || vpos.x > vSize1 ||\\n  //     vpos.y < 0.0 || vpos.y > vSize2)\\n  // even just\\n  // if (vpos.x < 0.0 || vpos.y < 0.0)\\n  // fails\\n  // so instead we compute a value that represents in and out\\n  //and then compute the return using this value\\n  float xcheck = max(0.0, vpos.x * (vpos.x - vSize1)); //  0 means in bounds\\n  float check = sign(max(xcheck, vpos.y * (vpos.y - vSize2))); //  0 means in bounds, 1 = out\\n\\n  tbounds = mix(\\n   vec2(min(tbounds.x, result), max(tbounds.y, result)), // in value\\n   tbounds, // out value\\n   check);  // 0 in 1 out\\n}\\n\\n//=======================================================================\\n// given a\\n// - ray direction (rayDir)\\n// - starting point (vertexVCVSOutput)\\n// - bounding planes of the volume\\n// - optionally depth buffer values\\n// - far clipping plane\\n// compute the start/end distances of the ray we need to cast\\nvec2 computeRayDistances(vec3 rayDir, vec3 tdims)\\n{\\n  vec2 dists = vec2(100.0*camFar, -1.0);\\n\\n  vec3 vSize = vSpacing*(tdims - 1.0);\\n\\n  // all this is in View Coordinates\\n  getRayPointIntersectionBounds(vertexVCVSOutput, rayDir,\\n    vPlaneNormal0, vPlaneDistance0, dists, vPlaneNormal2, vPlaneNormal4,\\n    vSize.y, vSize.z);\\n  getRayPointIntersectionBounds(vertexVCVSOutput, rayDir,\\n    vPlaneNormal1, vPlaneDistance1, dists, vPlaneNormal2, vPlaneNormal4,\\n    vSize.y, vSize.z);\\n  getRayPointIntersectionBounds(vertexVCVSOutput, rayDir,\\n    vPlaneNormal2, vPlaneDistance2, dists, vPlaneNormal0, vPlaneNormal4,\\n    vSize.x, vSize.z);\\n  getRayPointIntersectionBounds(vertexVCVSOutput, rayDir,\\n    vPlaneNormal3, vPlaneDistance3, dists, vPlaneNormal0, vPlaneNormal4,\\n    vSize.x, vSize.z);\\n  getRayPointIntersectionBounds(vertexVCVSOutput, rayDir,\\n    vPlaneNormal4, vPlaneDistance4, dists, vPlaneNormal0, vPlaneNormal2,\\n    vSize.x, vSize.y);\\n  getRayPointIntersectionBounds(vertexVCVSOutput, rayDir,\\n    vPlaneNormal5, vPlaneDistance5, dists, vPlaneNormal0, vPlaneNormal2,\\n    vSize.x, vSize.y);\\n\\n  // do not go behind front clipping plane\\n  dists.x = max(0.0,dists.x);\\n\\n  // do not go PAST far clipping plane\\n  float farDist = -camThick/rayDir.z;\\n  dists.y = min(farDist,dists.y);\\n\\n  // Do not go past the zbuffer value if set\\n  // This is used for intermixing opaque geometry\\n  //VTK::ZBuffer::Impl\\n\\n  return dists;\\n}\\n\\n//=======================================================================\\n// Compute the index space starting position (pos) and end\\n// position\\n//\\nvoid computeIndexSpaceValues(out vec3 pos, out vec3 endPos, out float sampleDistanceIS, vec3 rayDir, vec2 dists)\\n{\\n  // compute starting and ending values in volume space\\n  pos = vertexVCVSOutput + dists.x*rayDir;\\n  pos = pos - vOriginVC;\\n  // convert to volume basis and origin\\n  pos = vec3(\\n    dot(pos, vPlaneNormal0),\\n    dot(pos, vPlaneNormal2),\\n    dot(pos, vPlaneNormal4));\\n\\n  endPos = vertexVCVSOutput + dists.y*rayDir;\\n  endPos = endPos - vOriginVC;\\n  endPos = vec3(\\n    dot(endPos, vPlaneNormal0),\\n    dot(endPos, vPlaneNormal2),\\n    dot(endPos, vPlaneNormal4));\\n\\n  float delta = length(endPos - pos);\\n\\n  pos *= vVCToIJK;\\n  endPos *= vVCToIJK;\\n\\n  float delta2 = length(endPos - pos);\\n  sampleDistanceIS = sampleDistance*delta2/delta;\\n}\\n\\nvoid main()\\n{\\n\\n  vec3 rayDirVC;\\n\\n  if (cameraParallel == 1)\\n  {\\n    // Camera is parallel, so the rayDir is just the direction of the camera.\\n    rayDirVC = vec3(0.0, 0.0, -1.0);\\n  } else {\\n    // camera is at 0,0,0 so rayDir for perspective is just the vc coord\\n    rayDirVC = normalize(vertexVCVSOutput);\\n  }\\n\\n  vec3 tdims = vec3(volumeDimensions);\\n\\n  // compute the start and end points for the ray\\n  vec2 rayStartEndDistancesVC = computeRayDistances(rayDirVC, tdims);\\n\\n  // do we need to composite? aka does the ray have any length\\n  // If not, bail out early\\n  if (rayStartEndDistancesVC.y <= rayStartEndDistancesVC.x)\\n  {\\n    discard;\\n  }\\n\\n  // IS = Index Space\\n  vec3 posIS;\\n  vec3 endIS;\\n  float sampleDistanceIS;\\n  computeIndexSpaceValues(posIS, endIS, sampleDistanceIS, rayDirVC, rayStartEndDistancesVC);\\n\\n  // Perform the blending operation along the ray\\n  applyBlend(posIS, endIS, sampleDistanceIS, tdims);\\n}\\n\"","module.exports = \"//VTK::System::Dec\\n\\n/*=========================================================================\\n\\n  Program:   Visualization Toolkit\\n  Module:    vtkPolyDataVS.glsl\\n\\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n  All rights reserved.\\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n     This software is distributed WITHOUT ANY WARRANTY; without even\\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n     PURPOSE.  See the above copyright notice for more information.\\n\\n=========================================================================*/\\n\\nattribute vec4 vertexDC;\\n\\nvarying vec3 vertexVCVSOutput;\\nuniform mat4 DCVCMatrix;\\n\\nuniform float dcxmin;\\nuniform float dcxmax;\\nuniform float dcymin;\\nuniform float dcymax;\\n\\nvoid main()\\n{\\n  // dcsmall is the device coords reduced to the\\n  // x y area covered by the volume\\n  vec4 dcsmall = vec4(\\n    dcxmin + 0.5 * (vertexDC.x + 1.0) * (dcxmax - dcxmin),\\n    dcymin + 0.5 * (vertexDC.y + 1.0) * (dcymax - dcymin),\\n    vertexDC.z,\\n    vertexDC.w);\\n  vec4 vcpos = DCVCMatrix * dcsmall;\\n  vertexVCVSOutput = vcpos.xyz/vcpos.w;\\n  gl_Position = dcsmall;\\n}\\n\"","/*\n * JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\n/* global define */\n\n;(function ($) {\n  'use strict'\n\n  /*\n  * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n  * to work around bugs in some JS interpreters.\n  */\n  function safeAdd (x, y) {\n    var lsw = (x & 0xffff) + (y & 0xffff)\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16)\n    return (msw << 16) | (lsw & 0xffff)\n  }\n\n  /*\n  * Bitwise rotate a 32-bit number to the left.\n  */\n  function bitRotateLeft (num, cnt) {\n    return (num << cnt) | (num >>> (32 - cnt))\n  }\n\n  /*\n  * These functions implement the four basic operations the algorithm uses.\n  */\n  function md5cmn (q, a, b, x, s, t) {\n    return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b)\n  }\n  function md5ff (a, b, c, d, x, s, t) {\n    return md5cmn((b & c) | (~b & d), a, b, x, s, t)\n  }\n  function md5gg (a, b, c, d, x, s, t) {\n    return md5cmn((b & d) | (c & ~d), a, b, x, s, t)\n  }\n  function md5hh (a, b, c, d, x, s, t) {\n    return md5cmn(b ^ c ^ d, a, b, x, s, t)\n  }\n  function md5ii (a, b, c, d, x, s, t) {\n    return md5cmn(c ^ (b | ~d), a, b, x, s, t)\n  }\n\n  /*\n  * Calculate the MD5 of an array of little-endian words, and a bit length.\n  */\n  function binlMD5 (x, len) {\n    /* append padding */\n    x[len >> 5] |= 0x80 << (len % 32)\n    x[((len + 64) >>> 9 << 4) + 14] = len\n\n    var i\n    var olda\n    var oldb\n    var oldc\n    var oldd\n    var a = 1732584193\n    var b = -271733879\n    var c = -1732584194\n    var d = 271733878\n\n    for (i = 0; i < x.length; i += 16) {\n      olda = a\n      oldb = b\n      oldc = c\n      oldd = d\n\n      a = md5ff(a, b, c, d, x[i], 7, -680876936)\n      d = md5ff(d, a, b, c, x[i + 1], 12, -389564586)\n      c = md5ff(c, d, a, b, x[i + 2], 17, 606105819)\n      b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330)\n      a = md5ff(a, b, c, d, x[i + 4], 7, -176418897)\n      d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426)\n      c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341)\n      b = md5ff(b, c, d, a, x[i + 7], 22, -45705983)\n      a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416)\n      d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417)\n      c = md5ff(c, d, a, b, x[i + 10], 17, -42063)\n      b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162)\n      a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682)\n      d = md5ff(d, a, b, c, x[i + 13], 12, -40341101)\n      c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290)\n      b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329)\n\n      a = md5gg(a, b, c, d, x[i + 1], 5, -165796510)\n      d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632)\n      c = md5gg(c, d, a, b, x[i + 11], 14, 643717713)\n      b = md5gg(b, c, d, a, x[i], 20, -373897302)\n      a = md5gg(a, b, c, d, x[i + 5], 5, -701558691)\n      d = md5gg(d, a, b, c, x[i + 10], 9, 38016083)\n      c = md5gg(c, d, a, b, x[i + 15], 14, -660478335)\n      b = md5gg(b, c, d, a, x[i + 4], 20, -405537848)\n      a = md5gg(a, b, c, d, x[i + 9], 5, 568446438)\n      d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690)\n      c = md5gg(c, d, a, b, x[i + 3], 14, -187363961)\n      b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501)\n      a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467)\n      d = md5gg(d, a, b, c, x[i + 2], 9, -51403784)\n      c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473)\n      b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734)\n\n      a = md5hh(a, b, c, d, x[i + 5], 4, -378558)\n      d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463)\n      c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562)\n      b = md5hh(b, c, d, a, x[i + 14], 23, -35309556)\n      a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060)\n      d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353)\n      c = md5hh(c, d, a, b, x[i + 7], 16, -155497632)\n      b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640)\n      a = md5hh(a, b, c, d, x[i + 13], 4, 681279174)\n      d = md5hh(d, a, b, c, x[i], 11, -358537222)\n      c = md5hh(c, d, a, b, x[i + 3], 16, -722521979)\n      b = md5hh(b, c, d, a, x[i + 6], 23, 76029189)\n      a = md5hh(a, b, c, d, x[i + 9], 4, -640364487)\n      d = md5hh(d, a, b, c, x[i + 12], 11, -421815835)\n      c = md5hh(c, d, a, b, x[i + 15], 16, 530742520)\n      b = md5hh(b, c, d, a, x[i + 2], 23, -995338651)\n\n      a = md5ii(a, b, c, d, x[i], 6, -198630844)\n      d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415)\n      c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905)\n      b = md5ii(b, c, d, a, x[i + 5], 21, -57434055)\n      a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571)\n      d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606)\n      c = md5ii(c, d, a, b, x[i + 10], 15, -1051523)\n      b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799)\n      a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359)\n      d = md5ii(d, a, b, c, x[i + 15], 10, -30611744)\n      c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380)\n      b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649)\n      a = md5ii(a, b, c, d, x[i + 4], 6, -145523070)\n      d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379)\n      c = md5ii(c, d, a, b, x[i + 2], 15, 718787259)\n      b = md5ii(b, c, d, a, x[i + 9], 21, -343485551)\n\n      a = safeAdd(a, olda)\n      b = safeAdd(b, oldb)\n      c = safeAdd(c, oldc)\n      d = safeAdd(d, oldd)\n    }\n    return [a, b, c, d]\n  }\n\n  /*\n  * Convert an array of little-endian words to a string\n  */\n  function binl2rstr (input) {\n    var i\n    var output = ''\n    var length32 = input.length * 32\n    for (i = 0; i < length32; i += 8) {\n      output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xff)\n    }\n    return output\n  }\n\n  /*\n  * Convert a raw string to an array of little-endian words\n  * Characters >255 have their high-byte silently ignored.\n  */\n  function rstr2binl (input) {\n    var i\n    var output = []\n    output[(input.length >> 2) - 1] = undefined\n    for (i = 0; i < output.length; i += 1) {\n      output[i] = 0\n    }\n    var length8 = input.length * 8\n    for (i = 0; i < length8; i += 8) {\n      output[i >> 5] |= (input.charCodeAt(i / 8) & 0xff) << (i % 32)\n    }\n    return output\n  }\n\n  /*\n  * Calculate the MD5 of a raw string\n  */\n  function rstrMD5 (s) {\n    return binl2rstr(binlMD5(rstr2binl(s), s.length * 8))\n  }\n\n  /*\n  * Calculate the HMAC-MD5, of a key and some data (raw strings)\n  */\n  function rstrHMACMD5 (key, data) {\n    var i\n    var bkey = rstr2binl(key)\n    var ipad = []\n    var opad = []\n    var hash\n    ipad[15] = opad[15] = undefined\n    if (bkey.length > 16) {\n      bkey = binlMD5(bkey, key.length * 8)\n    }\n    for (i = 0; i < 16; i += 1) {\n      ipad[i] = bkey[i] ^ 0x36363636\n      opad[i] = bkey[i] ^ 0x5c5c5c5c\n    }\n    hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8)\n    return binl2rstr(binlMD5(opad.concat(hash), 512 + 128))\n  }\n\n  /*\n  * Convert a raw string to a hex string\n  */\n  function rstr2hex (input) {\n    var hexTab = '0123456789abcdef'\n    var output = ''\n    var x\n    var i\n    for (i = 0; i < input.length; i += 1) {\n      x = input.charCodeAt(i)\n      output += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f)\n    }\n    return output\n  }\n\n  /*\n  * Encode a string as utf-8\n  */\n  function str2rstrUTF8 (input) {\n    return unescape(encodeURIComponent(input))\n  }\n\n  /*\n  * Take string arguments and return either raw or hex encoded strings\n  */\n  function rawMD5 (s) {\n    return rstrMD5(str2rstrUTF8(s))\n  }\n  function hexMD5 (s) {\n    return rstr2hex(rawMD5(s))\n  }\n  function rawHMACMD5 (k, d) {\n    return rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d))\n  }\n  function hexHMACMD5 (k, d) {\n    return rstr2hex(rawHMACMD5(k, d))\n  }\n\n  function md5 (string, key, raw) {\n    if (!key) {\n      if (!raw) {\n        return hexMD5(string)\n      }\n      return rawMD5(string)\n    }\n    if (!raw) {\n      return hexHMACMD5(key, string)\n    }\n    return rawHMACMD5(key, string)\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return md5\n    })\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = md5\n  } else {\n    $.md5 = md5\n  }\n})(this)\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'url', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress',\n    'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath'\n  ];\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(prop) {\n    if (utils.isObject(config2[prop])) {\n      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\n    } else if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (utils.isObject(config1[prop])) {\n      config[prop] = utils.deepMerge(config1[prop]);\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys);\n\n  var otherKeys = Object\n    .keys(config2)\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  return config;\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Function equal to merge with the difference being that no reference\n * to original objects is kept.\n *\n * @see merge\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction deepMerge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = deepMerge(result[key], val);\n    } else if (typeof val === 'object') {\n      result[key] = deepMerge({}, val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  deepMerge: deepMerge,\n  extend: extend,\n  trim: trim\n};\n","const TinyEmitter = require('./tiny-emitter');\n\nconst MESSAGE_RESULT = 0;\nconst MESSAGE_EVENT = 1;\n\nconst RESULT_ERROR = 0;\nconst RESULT_SUCCESS = 1;\n\nclass Worker extends TinyEmitter {\n  /**\n   *\n   * @param worker {Worker}\n   */\n  constructor(worker) {\n    super();\n\n    this._messageId = 1;\n    this._messages = new Map();\n\n    this._worker = worker;\n    this._worker.onmessage = this._onMessage.bind(this);\n    this._id = Math.ceil(Math.random() * 10000000);\n  }\n\n  terminate() {\n    this._worker.terminate();\n  }\n\n  /**\n   * return true if there is no unresolved jobs\n   * @returns {boolean}\n   */\n  isFree() {\n    return this._messages.size === 0;\n  }\n\n  jobsLength() {\n    return this._messages.size;\n  }\n\n  /**\n   * @param operationName string\n   * @param data any\n   * @param transferable array\n   * @param onEvent function\n   * @returns {Promise}\n   */\n  exec(operationName, data = null, transferable = [], onEvent) {\n    return new Promise((res, rej) => {\n      const messageId = this._messageId++;\n      this._messages.set(messageId, [res, rej, onEvent]);\n      this._worker.postMessage([messageId, data, operationName], transferable || []);\n    });\n  }\n\n  /**\n   *\n   * @param data any\n   * @param transferable array\n   * @param onEvent function\n   * @returns {Promise}\n   */\n  postMessage(data = null, transferable = [], onEvent) {\n    return new Promise((res, rej) => {\n      const messageId = this._messageId++;\n      this._messages.set(messageId, [res, rej, onEvent]);\n      this._worker.postMessage([messageId, data], transferable || []);\n    });\n  }\n\n  emit(eventName, ...args) {\n    this._worker.postMessage({eventName, args});\n  }\n\n  _onMessage(e) {\n    //if we got usual event, just emit it locally\n    if(!Array.isArray(e.data) && e.data.eventName) {\n      return super.emit(e.data.eventName, ...e.data.args);\n    }\n\n    const [type, ...args] = e.data;\n\n    if(type === MESSAGE_EVENT)\n      this._onEvent(...args);\n    else if(type === MESSAGE_RESULT)\n      this._onResult(...args);\n    else\n      throw new Error(`Wrong message type '${type}'`);\n  }\n\n  _onResult(messageId, success, payload) {\n    const [res, rej] = this._messages.get(messageId);\n    this._messages.delete(messageId);\n\n    return success === RESULT_SUCCESS ? res(payload) : rej(payload);\n  }\n\n  _onEvent(messageId, eventName, data) {\n    const [,,onEvent] = this._messages.get(messageId);\n\n    if(onEvent) {\n      onEvent(eventName, data);\n    }\n  }\n\n}\n\nmodule.exports = Worker;\n","class TinyEmitter {\n  constructor() {\n    Object.defineProperty(this, '__listeners', {\n      value: {},\n      enumerable: false,\n      writable: false\n    });\n  }\n\n  emit(eventName, ...args) {\n    if(!this.__listeners[eventName])\n      return this;\n\n    for(const handler of this.__listeners[eventName]) {\n      handler(...args);\n    }\n\n    return this;\n  }\n\n  once(eventName, handler) {\n    const once = (...args) => {\n      this.off(eventName, once);\n      handler(...args);\n    };\n\n    return this.on(eventName, once);\n  }\n\n  on(eventName, handler) {\n    if(!this.__listeners[eventName])\n      this.__listeners[eventName] = [];\n\n    this.__listeners[eventName].push(handler);\n\n    return this;\n  }\n\n  off(eventName, handler) {\n    if(handler)\n      this.__listeners[eventName] = this.__listeners[eventName].filter(h => h !== handler);\n    else\n      this.__listeners[eventName] = [];\n\n    return this;\n  }\n}\n\nmodule.exports = TinyEmitter;\n","function readAs (file, as) {\r\n  if (!(file instanceof Blob)) {\r\n    throw new TypeError('Must be a File or Blob')\r\n  }\r\n  return new Promise(function(resolve, reject) {\r\n    var reader = new FileReader()\r\n    reader.onload = function(e) { resolve(e.target.result) }\r\n    reader.onerror = function(e) { reject(new Error('Error reading' + file.name + ': ' + e.target.result)) }\r\n    reader['readAs' + as](file)\r\n  })\r\n}\r\n\r\nfunction readAsDataURL (file) {\r\n  return readAs(file, 'DataURL')\r\n}\r\n\r\nfunction readAsText (file) {\r\n  return readAs(file, 'Text')\r\n}\r\n\r\nfunction readAsArrayBuffer (file) {\r\n  return readAs(file, 'ArrayBuffer')\r\n}\r\n\r\nmodule.exports = {\r\n  readAsDataURL: readAsDataURL,\r\n  readAsText: readAsText,\r\n  readAsArrayBuffer: readAsArrayBuffer,\r\n}\r\n","// Top level file is just a mixin of submodules & constants\n'use strict';\n\nvar assign    = require('./lib/utils/common').assign;\n\nvar deflate   = require('./lib/deflate');\nvar inflate   = require('./lib/inflate');\nvar constants = require('./lib/zlib/constants');\n\nvar pako = {};\n\nassign(pako, deflate, inflate, constants);\n\nmodule.exports = pako;\n","'use strict';\n\n\nvar zlib_deflate = require('./zlib/deflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\n\nvar toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nvar Z_NO_FLUSH      = 0;\nvar Z_FINISH        = 4;\n\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_SYNC_FLUSH    = 2;\n\nvar Z_DEFAULT_COMPRESSION = -1;\n\nvar Z_DEFAULT_STRATEGY    = 0;\n\nvar Z_DEFLATED  = 8;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array|Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\n * push a chunk with explicit flush (call [[Deflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  if (!(this instanceof Deflate)) return new Deflate(options);\n\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    var dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the compression context.\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * array format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var status, _mode;\n\n  if (this.ended) { return false; }\n\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */\n\n    if (status !== Z_STREAM_END && status !== Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {\n      if (this.options.to === 'string') {\n        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));\n      } else {\n        this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n      }\n    }\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\n\n  // Finalize on the last chunk.\n  if (_mode === Z_FINISH) {\n    status = zlib_deflate.deflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === Z_SYNC_FLUSH) {\n    this.onEnd(Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  var deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nexports.Deflate = Deflate;\nexports.deflate = deflate;\nexports.deflateRaw = deflateRaw;\nexports.gzip = gzip;\n","'use strict';\n\n\nvar zlib_inflate = require('./zlib/inflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar c            = require('./zlib/constants');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\nvar GZheader     = require('./zlib/gzheader');\n\nvar toString = Object.prototype.toString;\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  if (!(this instanceof Inflate)) return new Inflate(options);\n\n  this.options = utils.assign({\n    chunkSize: 16384,\n    windowBits: 0,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== c.Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n}\n\n/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var dictionary = this.options.dictionary;\n  var status, _mode;\n  var next_out_utf8, tail, utf8str;\n  var dict;\n\n  // Flag to properly process Z_BUF_ERROR on testing inflate call\n  // when we check that all output data was flushed.\n  var allowBufError = false;\n\n  if (this.ended) { return false; }\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // Only binary strings can be decompressed on practice\n    strm.input = strings.binstring2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */\n\n    if (status === c.Z_NEED_DICT && dictionary) {\n      // Convert data if needed\n      if (typeof dictionary === 'string') {\n        dict = strings.string2buf(dictionary);\n      } else if (toString.call(dictionary) === '[object ArrayBuffer]') {\n        dict = new Uint8Array(dictionary);\n      } else {\n        dict = dictionary;\n      }\n\n      status = zlib_inflate.inflateSetDictionary(this.strm, dict);\n\n    }\n\n    if (status === c.Z_BUF_ERROR && allowBufError === true) {\n      status = c.Z_OK;\n      allowBufError = false;\n    }\n\n    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {\n\n        if (this.options.to === 'string') {\n\n          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          tail = strm.next_out - next_out_utf8;\n          utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n        }\n      }\n    }\n\n    // When no more input data, we should check that internal inflate buffers\n    // are flushed. The only way to do it when avail_out = 0 - run one more\n    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n    // Here we set flag to process this error properly.\n    //\n    // NOTE. Deflate does not return error in this case and does not needs such\n    // logic.\n    if (strm.avail_in === 0 && strm.avail_out === 0) {\n      allowBufError = true;\n    }\n\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);\n\n  if (status === c.Z_STREAM_END) {\n    _mode = c.Z_FINISH;\n  }\n\n  // Finalize on the last chunk.\n  if (_mode === c.Z_FINISH) {\n    status = zlib_inflate.inflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === c.Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === c.Z_SYNC_FLUSH) {\n    this.onEnd(c.Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === c.Z_OK) {\n    if (this.options.to === 'string') {\n      // Glue & convert here, until we teach pako to send\n      // utf8 aligned strings to onData\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  var inflator = new Inflate(options);\n\n  inflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) { throw inflator.msg || msg[inflator.err]; }\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nexports.Inflate = Inflate;\nexports.inflate = inflate;\nexports.inflateRaw = inflateRaw;\nexports.ungzip  = inflate;\n","'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n","// String encode/decode helpers\n'use strict';\n\n\nvar utils = require('./common');\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nvar STR_APPLY_OK = true;\nvar STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new utils.Buf8(256);\nfor (var q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nexports.string2buf = function (str) {\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new utils.Buf8(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper (used in 2 places)\nfunction buf2binstring(buf, len) {\n  // use fallback for big arrays to avoid stack overflow\n  if (len < 65537) {\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\n      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\n    }\n  }\n\n  var result = '';\n  for (var i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n}\n\n\n// Convert byte array to binary string\nexports.buf2binstring = function (buf) {\n  return buf2binstring(buf, buf.length);\n};\n\n\n// Convert binary string (typed, when possible)\nexports.binstring2buf = function (str) {\n  var buf = new utils.Buf8(str.length);\n  for (var i = 0, len = buf.length; i < len; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n};\n\n\n// convert array to string\nexports.buf2string = function (buf, max) {\n  var i, out, c, c_len;\n  var len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  var utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border = function (buf, max) {\n  var pos;\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils   = require('../utils/common');\nvar trees   = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n                );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils         = require('../utils/common');\nvar adler32       = require('./adler32');\nvar crc32         = require('./crc32');\nvar inflate_fast  = require('./inffast');\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              utils.arraySet(\n                state.head.extra,\n                input,\n                next,\n                // extra field is limited to 65536 bytes\n                // - no need for additional size check\n                copy,\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          utils.arraySet(output, input, next, copy, put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = data.toString();\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","/*\nCopyright 2014 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\nvar global = this,\n    width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\nmath['seed' + rngname] = seedrandom;\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n}\n\n// End anonymous scope, and pass initial values.\n})(\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n","/**\n * @license\n * webvr-polyfill\n * Copyright (c) 2015-2017 Google\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @license\n * cardboard-vr-display\n * Copyright (c) 2015-2017 Google\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @license\n * webvr-polyfill-dpdb \n * Copyright (c) 2017 Google\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @license\n * wglu-preserve-state\n * Copyright (c) 2016, Brandon Jones.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @license\n * nosleep.js\n * Copyright (c) 2017, Rich Tibbett\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.WebVRPolyfill = factory());\n}(this, (function () { 'use strict';\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\n\nfunction unwrapExports (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar race = function race(promises) {\n  if (Promise.race) {\n    return Promise.race(promises);\n  }\n  return new Promise(function (resolve, reject) {\n    for (var i = 0; i < promises.length; i++) {\n      promises[i].then(resolve, reject);\n    }\n  });\n};\n\nvar isMobile = function isMobile() {\n  return (/Android/i.test(navigator.userAgent) || /iPhone|iPad|iPod/i.test(navigator.userAgent)\n  );\n};\nvar copyArray = function copyArray(source, dest) {\n  for (var i = 0, n = source.length; i < n; i++) {\n    dest[i] = source[i];\n  }\n};\nvar extend = function extend(dest, src) {\n  for (var key in src) {\n    if (src.hasOwnProperty(key)) {\n      dest[key] = src[key];\n    }\n  }\n  return dest;\n};\n\nvar cardboardVrDisplay = createCommonjsModule(function (module, exports) {\n/**\n * @license\n * cardboard-vr-display\n * Copyright (c) 2015-2017 Google\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * gl-preserve-state\n * Copyright (c) 2016, Brandon Jones.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * @license\n * webvr-polyfill-dpdb\n * Copyright (c) 2015-2017 Google\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * nosleep.js\n * Copyright (c) 2017, Rich Tibbett\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n(function (global, factory) {\n\tmodule.exports = factory();\n}(commonjsGlobal, (function () { var classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\nvar MIN_TIMESTEP = 0.001;\nvar MAX_TIMESTEP = 1;\nvar base64 = function base64(mimeType, _base) {\n  return 'data:' + mimeType + ';base64,' + _base;\n};\nvar lerp = function lerp(a, b, t) {\n  return a + (b - a) * t;\n};\nvar isIOS = function () {\n  var isIOS = /iPad|iPhone|iPod/.test(navigator.platform);\n  return function () {\n    return isIOS;\n  };\n}();\nvar isWebViewAndroid = function () {\n  var isWebViewAndroid = navigator.userAgent.indexOf('Version') !== -1 && navigator.userAgent.indexOf('Android') !== -1 && navigator.userAgent.indexOf('Chrome') !== -1;\n  return function () {\n    return isWebViewAndroid;\n  };\n}();\nvar isSafari = function () {\n  var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  return function () {\n    return isSafari;\n  };\n}();\nvar isFirefoxAndroid = function () {\n  var isFirefoxAndroid = navigator.userAgent.indexOf('Firefox') !== -1 && navigator.userAgent.indexOf('Android') !== -1;\n  return function () {\n    return isFirefoxAndroid;\n  };\n}();\nvar getChromeVersion = function () {\n  var match = navigator.userAgent.match(/.*Chrome\\/([0-9]+)/);\n  var value = match ? parseInt(match[1], 10) : null;\n  return function () {\n    return value;\n  };\n}();\nvar isChromeWithoutDeviceMotion = function () {\n  var value = false;\n  if (getChromeVersion() === 65) {\n    var match = navigator.userAgent.match(/.*Chrome\\/([0-9\\.]*)/);\n    if (match) {\n      var _match$1$split = match[1].split('.'),\n          _match$1$split2 = slicedToArray(_match$1$split, 4),\n          major = _match$1$split2[0],\n          minor = _match$1$split2[1],\n          branch = _match$1$split2[2],\n          build = _match$1$split2[3];\n      value = parseInt(branch, 10) === 3325 && parseInt(build, 10) < 148;\n    }\n  }\n  return function () {\n    return value;\n  };\n}();\nvar isR7 = function () {\n  var isR7 = navigator.userAgent.indexOf('R7 Build') !== -1;\n  return function () {\n    return isR7;\n  };\n}();\nvar isLandscapeMode = function isLandscapeMode() {\n  var rtn = window.orientation == 90 || window.orientation == -90;\n  return isR7() ? !rtn : rtn;\n};\nvar isTimestampDeltaValid = function isTimestampDeltaValid(timestampDeltaS) {\n  if (isNaN(timestampDeltaS)) {\n    return false;\n  }\n  if (timestampDeltaS <= MIN_TIMESTEP) {\n    return false;\n  }\n  if (timestampDeltaS > MAX_TIMESTEP) {\n    return false;\n  }\n  return true;\n};\nvar getScreenWidth = function getScreenWidth() {\n  return Math.max(window.screen.width, window.screen.height) * window.devicePixelRatio;\n};\nvar getScreenHeight = function getScreenHeight() {\n  return Math.min(window.screen.width, window.screen.height) * window.devicePixelRatio;\n};\nvar requestFullscreen = function requestFullscreen(element) {\n  if (isWebViewAndroid()) {\n    return false;\n  }\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else {\n    return false;\n  }\n  return true;\n};\nvar exitFullscreen = function exitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  } else {\n    return false;\n  }\n  return true;\n};\nvar getFullscreenElement = function getFullscreenElement() {\n  return document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n};\nvar linkProgram = function linkProgram(gl, vertexSource, fragmentSource, attribLocationMap) {\n  var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n  gl.shaderSource(vertexShader, vertexSource);\n  gl.compileShader(vertexShader);\n  var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n  gl.shaderSource(fragmentShader, fragmentSource);\n  gl.compileShader(fragmentShader);\n  var program = gl.createProgram();\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n  for (var attribName in attribLocationMap) {\n    gl.bindAttribLocation(program, attribLocationMap[attribName], attribName);\n  }gl.linkProgram(program);\n  gl.deleteShader(vertexShader);\n  gl.deleteShader(fragmentShader);\n  return program;\n};\nvar getProgramUniforms = function getProgramUniforms(gl, program) {\n  var uniforms = {};\n  var uniformCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  var uniformName = '';\n  for (var i = 0; i < uniformCount; i++) {\n    var uniformInfo = gl.getActiveUniform(program, i);\n    uniformName = uniformInfo.name.replace('[0]', '');\n    uniforms[uniformName] = gl.getUniformLocation(program, uniformName);\n  }\n  return uniforms;\n};\nvar orthoMatrix = function orthoMatrix(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right),\n      bt = 1 / (bottom - top),\n      nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n};\nvar isMobile = function isMobile() {\n  var check = false;\n  (function (a) {\n    if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true;\n  })(navigator.userAgent || navigator.vendor || window.opera);\n  return check;\n};\nvar extend = function extend(dest, src) {\n  for (var key in src) {\n    if (src.hasOwnProperty(key)) {\n      dest[key] = src[key];\n    }\n  }\n  return dest;\n};\nvar safariCssSizeWorkaround = function safariCssSizeWorkaround(canvas) {\n  if (isIOS()) {\n    var width = canvas.style.width;\n    var height = canvas.style.height;\n    canvas.style.width = parseInt(width) + 1 + 'px';\n    canvas.style.height = parseInt(height) + 'px';\n    setTimeout(function () {\n      canvas.style.width = width;\n      canvas.style.height = height;\n    }, 100);\n  }\n  window.canvas = canvas;\n};\nvar frameDataFromPose = function () {\n  var piOver180 = Math.PI / 180.0;\n  var rad45 = Math.PI * 0.25;\n  function mat4_perspectiveFromFieldOfView(out, fov, near, far) {\n    var upTan = Math.tan(fov ? fov.upDegrees * piOver180 : rad45),\n        downTan = Math.tan(fov ? fov.downDegrees * piOver180 : rad45),\n        leftTan = Math.tan(fov ? fov.leftDegrees * piOver180 : rad45),\n        rightTan = Math.tan(fov ? fov.rightDegrees * piOver180 : rad45),\n        xScale = 2.0 / (leftTan + rightTan),\n        yScale = 2.0 / (upTan + downTan);\n    out[0] = xScale;\n    out[1] = 0.0;\n    out[2] = 0.0;\n    out[3] = 0.0;\n    out[4] = 0.0;\n    out[5] = yScale;\n    out[6] = 0.0;\n    out[7] = 0.0;\n    out[8] = -((leftTan - rightTan) * xScale * 0.5);\n    out[9] = (upTan - downTan) * yScale * 0.5;\n    out[10] = far / (near - far);\n    out[11] = -1.0;\n    out[12] = 0.0;\n    out[13] = 0.0;\n    out[14] = far * near / (near - far);\n    out[15] = 0.0;\n    return out;\n  }\n  function mat4_fromRotationTranslation(out, q, v) {\n    var x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    return out;\n  }\n  function mat4_translate(out, a, v) {\n    var x = v[0],\n        y = v[1],\n        z = v[2],\n        a00,\n        a01,\n        a02,\n        a03,\n        a10,\n        a11,\n        a12,\n        a13,\n        a20,\n        a21,\n        a22,\n        a23;\n    if (a === out) {\n      out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n      out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n      out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n      out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n      a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\n      a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\n      a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\n      out[0] = a00;out[1] = a01;out[2] = a02;out[3] = a03;\n      out[4] = a10;out[5] = a11;out[6] = a12;out[7] = a13;\n      out[8] = a20;out[9] = a21;out[10] = a22;out[11] = a23;\n      out[12] = a00 * x + a10 * y + a20 * z + a[12];\n      out[13] = a01 * x + a11 * y + a21 * z + a[13];\n      out[14] = a02 * x + a12 * y + a22 * z + a[14];\n      out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n    return out;\n  }\n  function mat4_invert(out, a) {\n    var a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11],\n        a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15],\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n    det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n    if (!det) {\n      return null;\n    }\n    det = 1.0 / det;\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n    return out;\n  }\n  var defaultOrientation = new Float32Array([0, 0, 0, 1]);\n  var defaultPosition = new Float32Array([0, 0, 0]);\n  function updateEyeMatrices(projection, view, pose, fov, offset, vrDisplay) {\n    mat4_perspectiveFromFieldOfView(projection, fov || null, vrDisplay.depthNear, vrDisplay.depthFar);\n    var orientation = pose.orientation || defaultOrientation;\n    var position = pose.position || defaultPosition;\n    mat4_fromRotationTranslation(view, orientation, position);\n    if (offset) mat4_translate(view, view, offset);\n    mat4_invert(view, view);\n  }\n  return function (frameData, pose, vrDisplay) {\n    if (!frameData || !pose) return false;\n    frameData.pose = pose;\n    frameData.timestamp = pose.timestamp;\n    updateEyeMatrices(frameData.leftProjectionMatrix, frameData.leftViewMatrix, pose, vrDisplay._getFieldOfView(\"left\"), vrDisplay._getEyeOffset(\"left\"), vrDisplay);\n    updateEyeMatrices(frameData.rightProjectionMatrix, frameData.rightViewMatrix, pose, vrDisplay._getFieldOfView(\"right\"), vrDisplay._getEyeOffset(\"right\"), vrDisplay);\n    return true;\n  };\n}();\nvar isInsideCrossOriginIFrame = function isInsideCrossOriginIFrame() {\n  var isFramed = window.self !== window.top;\n  var refOrigin = getOriginFromUrl(document.referrer);\n  var thisOrigin = getOriginFromUrl(window.location.href);\n  return isFramed && refOrigin !== thisOrigin;\n};\nvar getOriginFromUrl = function getOriginFromUrl(url) {\n  var domainIdx;\n  var protoSepIdx = url.indexOf(\"://\");\n  if (protoSepIdx !== -1) {\n    domainIdx = protoSepIdx + 3;\n  } else {\n    domainIdx = 0;\n  }\n  var domainEndIdx = url.indexOf('/', domainIdx);\n  if (domainEndIdx === -1) {\n    domainEndIdx = url.length;\n  }\n  return url.substring(0, domainEndIdx);\n};\nvar getQuaternionAngle = function getQuaternionAngle(quat) {\n  if (quat.w > 1) {\n    console.warn('getQuaternionAngle: w > 1');\n    return 0;\n  }\n  var angle = 2 * Math.acos(quat.w);\n  return angle;\n};\nvar warnOnce = function () {\n  var observedWarnings = {};\n  return function (key, message) {\n    if (observedWarnings[key] === undefined) {\n      console.warn('webvr-polyfill: ' + message);\n      observedWarnings[key] = true;\n    }\n  };\n}();\nvar deprecateWarning = function deprecateWarning(deprecated, suggested) {\n  var alternative = suggested ? 'Please use ' + suggested + ' instead.' : '';\n  warnOnce(deprecated, deprecated + ' has been deprecated. ' + 'This may not work on native WebVR displays. ' + alternative);\n};\nfunction WGLUPreserveGLState(gl, bindings, callback) {\n  if (!bindings) {\n    callback(gl);\n    return;\n  }\n  var boundValues = [];\n  var activeTexture = null;\n  for (var i = 0; i < bindings.length; ++i) {\n    var binding = bindings[i];\n    switch (binding) {\n      case gl.TEXTURE_BINDING_2D:\n      case gl.TEXTURE_BINDING_CUBE_MAP:\n        var textureUnit = bindings[++i];\n        if (textureUnit < gl.TEXTURE0 || textureUnit > gl.TEXTURE31) {\n          console.error(\"TEXTURE_BINDING_2D or TEXTURE_BINDING_CUBE_MAP must be followed by a valid texture unit\");\n          boundValues.push(null, null);\n          break;\n        }\n        if (!activeTexture) {\n          activeTexture = gl.getParameter(gl.ACTIVE_TEXTURE);\n        }\n        gl.activeTexture(textureUnit);\n        boundValues.push(gl.getParameter(binding), null);\n        break;\n      case gl.ACTIVE_TEXTURE:\n        activeTexture = gl.getParameter(gl.ACTIVE_TEXTURE);\n        boundValues.push(null);\n        break;\n      default:\n        boundValues.push(gl.getParameter(binding));\n        break;\n    }\n  }\n  callback(gl);\n  for (var i = 0; i < bindings.length; ++i) {\n    var binding = bindings[i];\n    var boundValue = boundValues[i];\n    switch (binding) {\n      case gl.ACTIVE_TEXTURE:\n        break;\n      case gl.ARRAY_BUFFER_BINDING:\n        gl.bindBuffer(gl.ARRAY_BUFFER, boundValue);\n        break;\n      case gl.COLOR_CLEAR_VALUE:\n        gl.clearColor(boundValue[0], boundValue[1], boundValue[2], boundValue[3]);\n        break;\n      case gl.COLOR_WRITEMASK:\n        gl.colorMask(boundValue[0], boundValue[1], boundValue[2], boundValue[3]);\n        break;\n      case gl.CURRENT_PROGRAM:\n        gl.useProgram(boundValue);\n        break;\n      case gl.ELEMENT_ARRAY_BUFFER_BINDING:\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, boundValue);\n        break;\n      case gl.FRAMEBUFFER_BINDING:\n        gl.bindFramebuffer(gl.FRAMEBUFFER, boundValue);\n        break;\n      case gl.RENDERBUFFER_BINDING:\n        gl.bindRenderbuffer(gl.RENDERBUFFER, boundValue);\n        break;\n      case gl.TEXTURE_BINDING_2D:\n        var textureUnit = bindings[++i];\n        if (textureUnit < gl.TEXTURE0 || textureUnit > gl.TEXTURE31)\n          break;\n        gl.activeTexture(textureUnit);\n        gl.bindTexture(gl.TEXTURE_2D, boundValue);\n        break;\n      case gl.TEXTURE_BINDING_CUBE_MAP:\n        var textureUnit = bindings[++i];\n        if (textureUnit < gl.TEXTURE0 || textureUnit > gl.TEXTURE31)\n          break;\n        gl.activeTexture(textureUnit);\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, boundValue);\n        break;\n      case gl.VIEWPORT:\n        gl.viewport(boundValue[0], boundValue[1], boundValue[2], boundValue[3]);\n        break;\n      case gl.BLEND:\n      case gl.CULL_FACE:\n      case gl.DEPTH_TEST:\n      case gl.SCISSOR_TEST:\n      case gl.STENCIL_TEST:\n        if (boundValue) {\n          gl.enable(binding);\n        } else {\n          gl.disable(binding);\n        }\n        break;\n      default:\n        console.log(\"No GL restore behavior for 0x\" + binding.toString(16));\n        break;\n    }\n    if (activeTexture) {\n      gl.activeTexture(activeTexture);\n    }\n  }\n}\nvar glPreserveState = WGLUPreserveGLState;\nvar distortionVS = ['attribute vec2 position;', 'attribute vec3 texCoord;', 'varying vec2 vTexCoord;', 'uniform vec4 viewportOffsetScale[2];', 'void main() {', '  vec4 viewport = viewportOffsetScale[int(texCoord.z)];', '  vTexCoord = (texCoord.xy * viewport.zw) + viewport.xy;', '  gl_Position = vec4( position, 1.0, 1.0 );', '}'].join('\\n');\nvar distortionFS = ['precision mediump float;', 'uniform sampler2D diffuse;', 'varying vec2 vTexCoord;', 'void main() {', '  gl_FragColor = texture2D(diffuse, vTexCoord);', '}'].join('\\n');\nfunction CardboardDistorter(gl, cardboardUI, bufferScale, dirtySubmitFrameBindings) {\n  this.gl = gl;\n  this.cardboardUI = cardboardUI;\n  this.bufferScale = bufferScale;\n  this.dirtySubmitFrameBindings = dirtySubmitFrameBindings;\n  this.ctxAttribs = gl.getContextAttributes();\n  this.meshWidth = 20;\n  this.meshHeight = 20;\n  this.bufferWidth = gl.drawingBufferWidth;\n  this.bufferHeight = gl.drawingBufferHeight;\n  this.realBindFramebuffer = gl.bindFramebuffer;\n  this.realEnable = gl.enable;\n  this.realDisable = gl.disable;\n  this.realColorMask = gl.colorMask;\n  this.realClearColor = gl.clearColor;\n  this.realViewport = gl.viewport;\n  if (!isIOS()) {\n    this.realCanvasWidth = Object.getOwnPropertyDescriptor(gl.canvas.__proto__, 'width');\n    this.realCanvasHeight = Object.getOwnPropertyDescriptor(gl.canvas.__proto__, 'height');\n  }\n  this.isPatched = false;\n  this.lastBoundFramebuffer = null;\n  this.cullFace = false;\n  this.depthTest = false;\n  this.blend = false;\n  this.scissorTest = false;\n  this.stencilTest = false;\n  this.viewport = [0, 0, 0, 0];\n  this.colorMask = [true, true, true, true];\n  this.clearColor = [0, 0, 0, 0];\n  this.attribs = {\n    position: 0,\n    texCoord: 1\n  };\n  this.program = linkProgram(gl, distortionVS, distortionFS, this.attribs);\n  this.uniforms = getProgramUniforms(gl, this.program);\n  this.viewportOffsetScale = new Float32Array(8);\n  this.setTextureBounds();\n  this.vertexBuffer = gl.createBuffer();\n  this.indexBuffer = gl.createBuffer();\n  this.indexCount = 0;\n  this.renderTarget = gl.createTexture();\n  this.framebuffer = gl.createFramebuffer();\n  this.depthStencilBuffer = null;\n  this.depthBuffer = null;\n  this.stencilBuffer = null;\n  if (this.ctxAttribs.depth && this.ctxAttribs.stencil) {\n    this.depthStencilBuffer = gl.createRenderbuffer();\n  } else if (this.ctxAttribs.depth) {\n    this.depthBuffer = gl.createRenderbuffer();\n  } else if (this.ctxAttribs.stencil) {\n    this.stencilBuffer = gl.createRenderbuffer();\n  }\n  this.patch();\n  this.onResize();\n}\nCardboardDistorter.prototype.destroy = function () {\n  var gl = this.gl;\n  this.unpatch();\n  gl.deleteProgram(this.program);\n  gl.deleteBuffer(this.vertexBuffer);\n  gl.deleteBuffer(this.indexBuffer);\n  gl.deleteTexture(this.renderTarget);\n  gl.deleteFramebuffer(this.framebuffer);\n  if (this.depthStencilBuffer) {\n    gl.deleteRenderbuffer(this.depthStencilBuffer);\n  }\n  if (this.depthBuffer) {\n    gl.deleteRenderbuffer(this.depthBuffer);\n  }\n  if (this.stencilBuffer) {\n    gl.deleteRenderbuffer(this.stencilBuffer);\n  }\n  if (this.cardboardUI) {\n    this.cardboardUI.destroy();\n  }\n};\nCardboardDistorter.prototype.onResize = function () {\n  var gl = this.gl;\n  var self = this;\n  var glState = [gl.RENDERBUFFER_BINDING, gl.TEXTURE_BINDING_2D, gl.TEXTURE0];\n  glPreserveState(gl, glState, function (gl) {\n    self.realBindFramebuffer.call(gl, gl.FRAMEBUFFER, null);\n    if (self.scissorTest) {\n      self.realDisable.call(gl, gl.SCISSOR_TEST);\n    }\n    self.realColorMask.call(gl, true, true, true, true);\n    self.realViewport.call(gl, 0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    self.realClearColor.call(gl, 0, 0, 0, 1);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    self.realBindFramebuffer.call(gl, gl.FRAMEBUFFER, self.framebuffer);\n    gl.bindTexture(gl.TEXTURE_2D, self.renderTarget);\n    gl.texImage2D(gl.TEXTURE_2D, 0, self.ctxAttribs.alpha ? gl.RGBA : gl.RGB, self.bufferWidth, self.bufferHeight, 0, self.ctxAttribs.alpha ? gl.RGBA : gl.RGB, gl.UNSIGNED_BYTE, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, self.renderTarget, 0);\n    if (self.ctxAttribs.depth && self.ctxAttribs.stencil) {\n      gl.bindRenderbuffer(gl.RENDERBUFFER, self.depthStencilBuffer);\n      gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, self.bufferWidth, self.bufferHeight);\n      gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, gl.RENDERBUFFER, self.depthStencilBuffer);\n    } else if (self.ctxAttribs.depth) {\n      gl.bindRenderbuffer(gl.RENDERBUFFER, self.depthBuffer);\n      gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, self.bufferWidth, self.bufferHeight);\n      gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, self.depthBuffer);\n    } else if (self.ctxAttribs.stencil) {\n      gl.bindRenderbuffer(gl.RENDERBUFFER, self.stencilBuffer);\n      gl.renderbufferStorage(gl.RENDERBUFFER, gl.STENCIL_INDEX8, self.bufferWidth, self.bufferHeight);\n      gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.STENCIL_ATTACHMENT, gl.RENDERBUFFER, self.stencilBuffer);\n    }\n    if (!gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE) {\n      console.error('Framebuffer incomplete!');\n    }\n    self.realBindFramebuffer.call(gl, gl.FRAMEBUFFER, self.lastBoundFramebuffer);\n    if (self.scissorTest) {\n      self.realEnable.call(gl, gl.SCISSOR_TEST);\n    }\n    self.realColorMask.apply(gl, self.colorMask);\n    self.realViewport.apply(gl, self.viewport);\n    self.realClearColor.apply(gl, self.clearColor);\n  });\n  if (this.cardboardUI) {\n    this.cardboardUI.onResize();\n  }\n};\nCardboardDistorter.prototype.patch = function () {\n  if (this.isPatched) {\n    return;\n  }\n  var self = this;\n  var canvas = this.gl.canvas;\n  var gl = this.gl;\n  if (!isIOS()) {\n    canvas.width = getScreenWidth() * this.bufferScale;\n    canvas.height = getScreenHeight() * this.bufferScale;\n    Object.defineProperty(canvas, 'width', {\n      configurable: true,\n      enumerable: true,\n      get: function get() {\n        return self.bufferWidth;\n      },\n      set: function set(value) {\n        self.bufferWidth = value;\n        self.realCanvasWidth.set.call(canvas, value);\n        self.onResize();\n      }\n    });\n    Object.defineProperty(canvas, 'height', {\n      configurable: true,\n      enumerable: true,\n      get: function get() {\n        return self.bufferHeight;\n      },\n      set: function set(value) {\n        self.bufferHeight = value;\n        self.realCanvasHeight.set.call(canvas, value);\n        self.onResize();\n      }\n    });\n  }\n  this.lastBoundFramebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\n  if (this.lastBoundFramebuffer == null) {\n    this.lastBoundFramebuffer = this.framebuffer;\n    this.gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n  }\n  this.gl.bindFramebuffer = function (target, framebuffer) {\n    self.lastBoundFramebuffer = framebuffer ? framebuffer : self.framebuffer;\n    self.realBindFramebuffer.call(gl, target, self.lastBoundFramebuffer);\n  };\n  this.cullFace = gl.getParameter(gl.CULL_FACE);\n  this.depthTest = gl.getParameter(gl.DEPTH_TEST);\n  this.blend = gl.getParameter(gl.BLEND);\n  this.scissorTest = gl.getParameter(gl.SCISSOR_TEST);\n  this.stencilTest = gl.getParameter(gl.STENCIL_TEST);\n  gl.enable = function (pname) {\n    switch (pname) {\n      case gl.CULL_FACE:\n        self.cullFace = true;break;\n      case gl.DEPTH_TEST:\n        self.depthTest = true;break;\n      case gl.BLEND:\n        self.blend = true;break;\n      case gl.SCISSOR_TEST:\n        self.scissorTest = true;break;\n      case gl.STENCIL_TEST:\n        self.stencilTest = true;break;\n    }\n    self.realEnable.call(gl, pname);\n  };\n  gl.disable = function (pname) {\n    switch (pname) {\n      case gl.CULL_FACE:\n        self.cullFace = false;break;\n      case gl.DEPTH_TEST:\n        self.depthTest = false;break;\n      case gl.BLEND:\n        self.blend = false;break;\n      case gl.SCISSOR_TEST:\n        self.scissorTest = false;break;\n      case gl.STENCIL_TEST:\n        self.stencilTest = false;break;\n    }\n    self.realDisable.call(gl, pname);\n  };\n  this.colorMask = gl.getParameter(gl.COLOR_WRITEMASK);\n  gl.colorMask = function (r, g, b, a) {\n    self.colorMask[0] = r;\n    self.colorMask[1] = g;\n    self.colorMask[2] = b;\n    self.colorMask[3] = a;\n    self.realColorMask.call(gl, r, g, b, a);\n  };\n  this.clearColor = gl.getParameter(gl.COLOR_CLEAR_VALUE);\n  gl.clearColor = function (r, g, b, a) {\n    self.clearColor[0] = r;\n    self.clearColor[1] = g;\n    self.clearColor[2] = b;\n    self.clearColor[3] = a;\n    self.realClearColor.call(gl, r, g, b, a);\n  };\n  this.viewport = gl.getParameter(gl.VIEWPORT);\n  gl.viewport = function (x, y, w, h) {\n    self.viewport[0] = x;\n    self.viewport[1] = y;\n    self.viewport[2] = w;\n    self.viewport[3] = h;\n    self.realViewport.call(gl, x, y, w, h);\n  };\n  this.isPatched = true;\n  safariCssSizeWorkaround(canvas);\n};\nCardboardDistorter.prototype.unpatch = function () {\n  if (!this.isPatched) {\n    return;\n  }\n  var gl = this.gl;\n  var canvas = this.gl.canvas;\n  if (!isIOS()) {\n    Object.defineProperty(canvas, 'width', this.realCanvasWidth);\n    Object.defineProperty(canvas, 'height', this.realCanvasHeight);\n  }\n  canvas.width = this.bufferWidth;\n  canvas.height = this.bufferHeight;\n  gl.bindFramebuffer = this.realBindFramebuffer;\n  gl.enable = this.realEnable;\n  gl.disable = this.realDisable;\n  gl.colorMask = this.realColorMask;\n  gl.clearColor = this.realClearColor;\n  gl.viewport = this.realViewport;\n  if (this.lastBoundFramebuffer == this.framebuffer) {\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  }\n  this.isPatched = false;\n  setTimeout(function () {\n    safariCssSizeWorkaround(canvas);\n  }, 1);\n};\nCardboardDistorter.prototype.setTextureBounds = function (leftBounds, rightBounds) {\n  if (!leftBounds) {\n    leftBounds = [0, 0, 0.5, 1];\n  }\n  if (!rightBounds) {\n    rightBounds = [0.5, 0, 0.5, 1];\n  }\n  this.viewportOffsetScale[0] = leftBounds[0];\n  this.viewportOffsetScale[1] = leftBounds[1];\n  this.viewportOffsetScale[2] = leftBounds[2];\n  this.viewportOffsetScale[3] = leftBounds[3];\n  this.viewportOffsetScale[4] = rightBounds[0];\n  this.viewportOffsetScale[5] = rightBounds[1];\n  this.viewportOffsetScale[6] = rightBounds[2];\n  this.viewportOffsetScale[7] = rightBounds[3];\n};\nCardboardDistorter.prototype.submitFrame = function () {\n  var gl = this.gl;\n  var self = this;\n  var glState = [];\n  if (!this.dirtySubmitFrameBindings) {\n    glState.push(gl.CURRENT_PROGRAM, gl.ARRAY_BUFFER_BINDING, gl.ELEMENT_ARRAY_BUFFER_BINDING, gl.TEXTURE_BINDING_2D, gl.TEXTURE0);\n  }\n  glPreserveState(gl, glState, function (gl) {\n    self.realBindFramebuffer.call(gl, gl.FRAMEBUFFER, null);\n    if (self.cullFace) {\n      self.realDisable.call(gl, gl.CULL_FACE);\n    }\n    if (self.depthTest) {\n      self.realDisable.call(gl, gl.DEPTH_TEST);\n    }\n    if (self.blend) {\n      self.realDisable.call(gl, gl.BLEND);\n    }\n    if (self.scissorTest) {\n      self.realDisable.call(gl, gl.SCISSOR_TEST);\n    }\n    if (self.stencilTest) {\n      self.realDisable.call(gl, gl.STENCIL_TEST);\n    }\n    self.realColorMask.call(gl, true, true, true, true);\n    self.realViewport.call(gl, 0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    if (self.ctxAttribs.alpha || isIOS()) {\n      self.realClearColor.call(gl, 0, 0, 0, 1);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    gl.useProgram(self.program);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, self.indexBuffer);\n    gl.bindBuffer(gl.ARRAY_BUFFER, self.vertexBuffer);\n    gl.enableVertexAttribArray(self.attribs.position);\n    gl.enableVertexAttribArray(self.attribs.texCoord);\n    gl.vertexAttribPointer(self.attribs.position, 2, gl.FLOAT, false, 20, 0);\n    gl.vertexAttribPointer(self.attribs.texCoord, 3, gl.FLOAT, false, 20, 8);\n    gl.activeTexture(gl.TEXTURE0);\n    gl.uniform1i(self.uniforms.diffuse, 0);\n    gl.bindTexture(gl.TEXTURE_2D, self.renderTarget);\n    gl.uniform4fv(self.uniforms.viewportOffsetScale, self.viewportOffsetScale);\n    gl.drawElements(gl.TRIANGLES, self.indexCount, gl.UNSIGNED_SHORT, 0);\n    if (self.cardboardUI) {\n      self.cardboardUI.renderNoState();\n    }\n    self.realBindFramebuffer.call(self.gl, gl.FRAMEBUFFER, self.framebuffer);\n    if (!self.ctxAttribs.preserveDrawingBuffer) {\n      self.realClearColor.call(gl, 0, 0, 0, 0);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    if (!self.dirtySubmitFrameBindings) {\n      self.realBindFramebuffer.call(gl, gl.FRAMEBUFFER, self.lastBoundFramebuffer);\n    }\n    if (self.cullFace) {\n      self.realEnable.call(gl, gl.CULL_FACE);\n    }\n    if (self.depthTest) {\n      self.realEnable.call(gl, gl.DEPTH_TEST);\n    }\n    if (self.blend) {\n      self.realEnable.call(gl, gl.BLEND);\n    }\n    if (self.scissorTest) {\n      self.realEnable.call(gl, gl.SCISSOR_TEST);\n    }\n    if (self.stencilTest) {\n      self.realEnable.call(gl, gl.STENCIL_TEST);\n    }\n    self.realColorMask.apply(gl, self.colorMask);\n    self.realViewport.apply(gl, self.viewport);\n    if (self.ctxAttribs.alpha || !self.ctxAttribs.preserveDrawingBuffer) {\n      self.realClearColor.apply(gl, self.clearColor);\n    }\n  });\n  if (isIOS()) {\n    var canvas = gl.canvas;\n    if (canvas.width != self.bufferWidth || canvas.height != self.bufferHeight) {\n      self.bufferWidth = canvas.width;\n      self.bufferHeight = canvas.height;\n      self.onResize();\n    }\n  }\n};\nCardboardDistorter.prototype.updateDeviceInfo = function (deviceInfo) {\n  var gl = this.gl;\n  var self = this;\n  var glState = [gl.ARRAY_BUFFER_BINDING, gl.ELEMENT_ARRAY_BUFFER_BINDING];\n  glPreserveState(gl, glState, function (gl) {\n    var vertices = self.computeMeshVertices_(self.meshWidth, self.meshHeight, deviceInfo);\n    gl.bindBuffer(gl.ARRAY_BUFFER, self.vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n    if (!self.indexCount) {\n      var indices = self.computeMeshIndices_(self.meshWidth, self.meshHeight);\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, self.indexBuffer);\n      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n      self.indexCount = indices.length;\n    }\n  });\n};\nCardboardDistorter.prototype.computeMeshVertices_ = function (width, height, deviceInfo) {\n  var vertices = new Float32Array(2 * width * height * 5);\n  var lensFrustum = deviceInfo.getLeftEyeVisibleTanAngles();\n  var noLensFrustum = deviceInfo.getLeftEyeNoLensTanAngles();\n  var viewport = deviceInfo.getLeftEyeVisibleScreenRect(noLensFrustum);\n  var vidx = 0;\n  for (var e = 0; e < 2; e++) {\n    for (var j = 0; j < height; j++) {\n      for (var i = 0; i < width; i++, vidx++) {\n        var u = i / (width - 1);\n        var v = j / (height - 1);\n        var s = u;\n        var t = v;\n        var x = lerp(lensFrustum[0], lensFrustum[2], u);\n        var y = lerp(lensFrustum[3], lensFrustum[1], v);\n        var d = Math.sqrt(x * x + y * y);\n        var r = deviceInfo.distortion.distortInverse(d);\n        var p = x * r / d;\n        var q = y * r / d;\n        u = (p - noLensFrustum[0]) / (noLensFrustum[2] - noLensFrustum[0]);\n        v = (q - noLensFrustum[3]) / (noLensFrustum[1] - noLensFrustum[3]);\n        u = (viewport.x + u * viewport.width - 0.5) * 2.0;\n        v = (viewport.y + v * viewport.height - 0.5) * 2.0;\n        vertices[vidx * 5 + 0] = u;\n        vertices[vidx * 5 + 1] = v;\n        vertices[vidx * 5 + 2] = s;\n        vertices[vidx * 5 + 3] = t;\n        vertices[vidx * 5 + 4] = e;\n      }\n    }\n    var w = lensFrustum[2] - lensFrustum[0];\n    lensFrustum[0] = -(w + lensFrustum[0]);\n    lensFrustum[2] = w - lensFrustum[2];\n    w = noLensFrustum[2] - noLensFrustum[0];\n    noLensFrustum[0] = -(w + noLensFrustum[0]);\n    noLensFrustum[2] = w - noLensFrustum[2];\n    viewport.x = 1 - (viewport.x + viewport.width);\n  }\n  return vertices;\n};\nCardboardDistorter.prototype.computeMeshIndices_ = function (width, height) {\n  var indices = new Uint16Array(2 * (width - 1) * (height - 1) * 6);\n  var halfwidth = width / 2;\n  var halfheight = height / 2;\n  var vidx = 0;\n  var iidx = 0;\n  for (var e = 0; e < 2; e++) {\n    for (var j = 0; j < height; j++) {\n      for (var i = 0; i < width; i++, vidx++) {\n        if (i == 0 || j == 0) continue;\n        if (i <= halfwidth == j <= halfheight) {\n          indices[iidx++] = vidx;\n          indices[iidx++] = vidx - width - 1;\n          indices[iidx++] = vidx - width;\n          indices[iidx++] = vidx - width - 1;\n          indices[iidx++] = vidx;\n          indices[iidx++] = vidx - 1;\n        } else {\n          indices[iidx++] = vidx - 1;\n          indices[iidx++] = vidx - width;\n          indices[iidx++] = vidx;\n          indices[iidx++] = vidx - width;\n          indices[iidx++] = vidx - 1;\n          indices[iidx++] = vidx - width - 1;\n        }\n      }\n    }\n  }\n  return indices;\n};\nCardboardDistorter.prototype.getOwnPropertyDescriptor_ = function (proto, attrName) {\n  var descriptor = Object.getOwnPropertyDescriptor(proto, attrName);\n  if (descriptor.get === undefined || descriptor.set === undefined) {\n    descriptor.configurable = true;\n    descriptor.enumerable = true;\n    descriptor.get = function () {\n      return this.getAttribute(attrName);\n    };\n    descriptor.set = function (val) {\n      this.setAttribute(attrName, val);\n    };\n  }\n  return descriptor;\n};\nvar uiVS = ['attribute vec2 position;', 'uniform mat4 projectionMat;', 'void main() {', '  gl_Position = projectionMat * vec4( position, -1.0, 1.0 );', '}'].join('\\n');\nvar uiFS = ['precision mediump float;', 'uniform vec4 color;', 'void main() {', '  gl_FragColor = color;', '}'].join('\\n');\nvar DEG2RAD = Math.PI / 180.0;\nvar kAnglePerGearSection = 60;\nvar kOuterRimEndAngle = 12;\nvar kInnerRimBeginAngle = 20;\nvar kOuterRadius = 1;\nvar kMiddleRadius = 0.75;\nvar kInnerRadius = 0.3125;\nvar kCenterLineThicknessDp = 4;\nvar kButtonWidthDp = 28;\nvar kTouchSlopFactor = 1.5;\nfunction CardboardUI(gl) {\n  this.gl = gl;\n  this.attribs = {\n    position: 0\n  };\n  this.program = linkProgram(gl, uiVS, uiFS, this.attribs);\n  this.uniforms = getProgramUniforms(gl, this.program);\n  this.vertexBuffer = gl.createBuffer();\n  this.gearOffset = 0;\n  this.gearVertexCount = 0;\n  this.arrowOffset = 0;\n  this.arrowVertexCount = 0;\n  this.projMat = new Float32Array(16);\n  this.listener = null;\n  this.onResize();\n}\nCardboardUI.prototype.destroy = function () {\n  var gl = this.gl;\n  if (this.listener) {\n    gl.canvas.removeEventListener('click', this.listener, false);\n  }\n  gl.deleteProgram(this.program);\n  gl.deleteBuffer(this.vertexBuffer);\n};\nCardboardUI.prototype.listen = function (optionsCallback, backCallback) {\n  var canvas = this.gl.canvas;\n  this.listener = function (event) {\n    var midline = canvas.clientWidth / 2;\n    var buttonSize = kButtonWidthDp * kTouchSlopFactor;\n    if (event.clientX > midline - buttonSize && event.clientX < midline + buttonSize && event.clientY > canvas.clientHeight - buttonSize) {\n      optionsCallback(event);\n    }\n    else if (event.clientX < buttonSize && event.clientY < buttonSize) {\n        backCallback(event);\n      }\n  };\n  canvas.addEventListener('click', this.listener, false);\n};\nCardboardUI.prototype.onResize = function () {\n  var gl = this.gl;\n  var self = this;\n  var glState = [gl.ARRAY_BUFFER_BINDING];\n  glPreserveState(gl, glState, function (gl) {\n    var vertices = [];\n    var midline = gl.drawingBufferWidth / 2;\n    var physicalPixels = Math.max(screen.width, screen.height) * window.devicePixelRatio;\n    var scalingRatio = gl.drawingBufferWidth / physicalPixels;\n    var dps = scalingRatio * window.devicePixelRatio;\n    var lineWidth = kCenterLineThicknessDp * dps / 2;\n    var buttonSize = kButtonWidthDp * kTouchSlopFactor * dps;\n    var buttonScale = kButtonWidthDp * dps / 2;\n    var buttonBorder = (kButtonWidthDp * kTouchSlopFactor - kButtonWidthDp) * dps;\n    vertices.push(midline - lineWidth, buttonSize);\n    vertices.push(midline - lineWidth, gl.drawingBufferHeight);\n    vertices.push(midline + lineWidth, buttonSize);\n    vertices.push(midline + lineWidth, gl.drawingBufferHeight);\n    self.gearOffset = vertices.length / 2;\n    function addGearSegment(theta, r) {\n      var angle = (90 - theta) * DEG2RAD;\n      var x = Math.cos(angle);\n      var y = Math.sin(angle);\n      vertices.push(kInnerRadius * x * buttonScale + midline, kInnerRadius * y * buttonScale + buttonScale);\n      vertices.push(r * x * buttonScale + midline, r * y * buttonScale + buttonScale);\n    }\n    for (var i = 0; i <= 6; i++) {\n      var segmentTheta = i * kAnglePerGearSection;\n      addGearSegment(segmentTheta, kOuterRadius);\n      addGearSegment(segmentTheta + kOuterRimEndAngle, kOuterRadius);\n      addGearSegment(segmentTheta + kInnerRimBeginAngle, kMiddleRadius);\n      addGearSegment(segmentTheta + (kAnglePerGearSection - kInnerRimBeginAngle), kMiddleRadius);\n      addGearSegment(segmentTheta + (kAnglePerGearSection - kOuterRimEndAngle), kOuterRadius);\n    }\n    self.gearVertexCount = vertices.length / 2 - self.gearOffset;\n    self.arrowOffset = vertices.length / 2;\n    function addArrowVertex(x, y) {\n      vertices.push(buttonBorder + x, gl.drawingBufferHeight - buttonBorder - y);\n    }\n    var angledLineWidth = lineWidth / Math.sin(45 * DEG2RAD);\n    addArrowVertex(0, buttonScale);\n    addArrowVertex(buttonScale, 0);\n    addArrowVertex(buttonScale + angledLineWidth, angledLineWidth);\n    addArrowVertex(angledLineWidth, buttonScale + angledLineWidth);\n    addArrowVertex(angledLineWidth, buttonScale - angledLineWidth);\n    addArrowVertex(0, buttonScale);\n    addArrowVertex(buttonScale, buttonScale * 2);\n    addArrowVertex(buttonScale + angledLineWidth, buttonScale * 2 - angledLineWidth);\n    addArrowVertex(angledLineWidth, buttonScale - angledLineWidth);\n    addArrowVertex(0, buttonScale);\n    addArrowVertex(angledLineWidth, buttonScale - lineWidth);\n    addArrowVertex(kButtonWidthDp * dps, buttonScale - lineWidth);\n    addArrowVertex(angledLineWidth, buttonScale + lineWidth);\n    addArrowVertex(kButtonWidthDp * dps, buttonScale + lineWidth);\n    self.arrowVertexCount = vertices.length / 2 - self.arrowOffset;\n    gl.bindBuffer(gl.ARRAY_BUFFER, self.vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\n  });\n};\nCardboardUI.prototype.render = function () {\n  var gl = this.gl;\n  var self = this;\n  var glState = [gl.CULL_FACE, gl.DEPTH_TEST, gl.BLEND, gl.SCISSOR_TEST, gl.STENCIL_TEST, gl.COLOR_WRITEMASK, gl.VIEWPORT, gl.CURRENT_PROGRAM, gl.ARRAY_BUFFER_BINDING];\n  glPreserveState(gl, glState, function (gl) {\n    gl.disable(gl.CULL_FACE);\n    gl.disable(gl.DEPTH_TEST);\n    gl.disable(gl.BLEND);\n    gl.disable(gl.SCISSOR_TEST);\n    gl.disable(gl.STENCIL_TEST);\n    gl.colorMask(true, true, true, true);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    self.renderNoState();\n  });\n};\nCardboardUI.prototype.renderNoState = function () {\n  var gl = this.gl;\n  gl.useProgram(this.program);\n  gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n  gl.enableVertexAttribArray(this.attribs.position);\n  gl.vertexAttribPointer(this.attribs.position, 2, gl.FLOAT, false, 8, 0);\n  gl.uniform4f(this.uniforms.color, 1.0, 1.0, 1.0, 1.0);\n  orthoMatrix(this.projMat, 0, gl.drawingBufferWidth, 0, gl.drawingBufferHeight, 0.1, 1024.0);\n  gl.uniformMatrix4fv(this.uniforms.projectionMat, false, this.projMat);\n  gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  gl.drawArrays(gl.TRIANGLE_STRIP, this.gearOffset, this.gearVertexCount);\n  gl.drawArrays(gl.TRIANGLE_STRIP, this.arrowOffset, this.arrowVertexCount);\n};\nfunction Distortion(coefficients) {\n  this.coefficients = coefficients;\n}\nDistortion.prototype.distortInverse = function (radius) {\n  var r0 = 0;\n  var r1 = 1;\n  var dr0 = radius - this.distort(r0);\n  while (Math.abs(r1 - r0) > 0.0001             ) {\n    var dr1 = radius - this.distort(r1);\n    var r2 = r1 - dr1 * ((r1 - r0) / (dr1 - dr0));\n    r0 = r1;\n    r1 = r2;\n    dr0 = dr1;\n  }\n  return r1;\n};\nDistortion.prototype.distort = function (radius) {\n  var r2 = radius * radius;\n  var ret = 0;\n  for (var i = 0; i < this.coefficients.length; i++) {\n    ret = r2 * (ret + this.coefficients[i]);\n  }\n  return (ret + 1) * radius;\n};\nvar degToRad = Math.PI / 180;\nvar radToDeg = 180 / Math.PI;\nvar Vector3 = function Vector3(x, y, z) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n};\nVector3.prototype = {\n  constructor: Vector3,\n  set: function set(x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n  },\n  copy: function copy(v) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n    return this;\n  },\n  length: function length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n  },\n  normalize: function normalize() {\n    var scalar = this.length();\n    if (scalar !== 0) {\n      var invScalar = 1 / scalar;\n      this.multiplyScalar(invScalar);\n    } else {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n    }\n    return this;\n  },\n  multiplyScalar: function multiplyScalar(scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n  },\n  applyQuaternion: function applyQuaternion(q) {\n    var x = this.x;\n    var y = this.y;\n    var z = this.z;\n    var qx = q.x;\n    var qy = q.y;\n    var qz = q.z;\n    var qw = q.w;\n    var ix = qw * x + qy * z - qz * y;\n    var iy = qw * y + qz * x - qx * z;\n    var iz = qw * z + qx * y - qy * x;\n    var iw = -qx * x - qy * y - qz * z;\n    this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return this;\n  },\n  dot: function dot(v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  },\n  crossVectors: function crossVectors(a, b) {\n    var ax = a.x,\n        ay = a.y,\n        az = a.z;\n    var bx = b.x,\n        by = b.y,\n        bz = b.z;\n    this.x = ay * bz - az * by;\n    this.y = az * bx - ax * bz;\n    this.z = ax * by - ay * bx;\n    return this;\n  }\n};\nvar Quaternion = function Quaternion(x, y, z, w) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n  this.w = w !== undefined ? w : 1;\n};\nQuaternion.prototype = {\n  constructor: Quaternion,\n  set: function set(x, y, z, w) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n    return this;\n  },\n  copy: function copy(quaternion) {\n    this.x = quaternion.x;\n    this.y = quaternion.y;\n    this.z = quaternion.z;\n    this.w = quaternion.w;\n    return this;\n  },\n  setFromEulerXYZ: function setFromEulerXYZ(x, y, z) {\n    var c1 = Math.cos(x / 2);\n    var c2 = Math.cos(y / 2);\n    var c3 = Math.cos(z / 2);\n    var s1 = Math.sin(x / 2);\n    var s2 = Math.sin(y / 2);\n    var s3 = Math.sin(z / 2);\n    this.x = s1 * c2 * c3 + c1 * s2 * s3;\n    this.y = c1 * s2 * c3 - s1 * c2 * s3;\n    this.z = c1 * c2 * s3 + s1 * s2 * c3;\n    this.w = c1 * c2 * c3 - s1 * s2 * s3;\n    return this;\n  },\n  setFromEulerYXZ: function setFromEulerYXZ(x, y, z) {\n    var c1 = Math.cos(x / 2);\n    var c2 = Math.cos(y / 2);\n    var c3 = Math.cos(z / 2);\n    var s1 = Math.sin(x / 2);\n    var s2 = Math.sin(y / 2);\n    var s3 = Math.sin(z / 2);\n    this.x = s1 * c2 * c3 + c1 * s2 * s3;\n    this.y = c1 * s2 * c3 - s1 * c2 * s3;\n    this.z = c1 * c2 * s3 - s1 * s2 * c3;\n    this.w = c1 * c2 * c3 + s1 * s2 * s3;\n    return this;\n  },\n  setFromAxisAngle: function setFromAxisAngle(axis, angle) {\n    var halfAngle = angle / 2,\n        s = Math.sin(halfAngle);\n    this.x = axis.x * s;\n    this.y = axis.y * s;\n    this.z = axis.z * s;\n    this.w = Math.cos(halfAngle);\n    return this;\n  },\n  multiply: function multiply(q) {\n    return this.multiplyQuaternions(this, q);\n  },\n  multiplyQuaternions: function multiplyQuaternions(a, b) {\n    var qax = a.x,\n        qay = a.y,\n        qaz = a.z,\n        qaw = a.w;\n    var qbx = b.x,\n        qby = b.y,\n        qbz = b.z,\n        qbw = b.w;\n    this.x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n    this.y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n    this.z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n    this.w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n    return this;\n  },\n  inverse: function inverse() {\n    this.x *= -1;\n    this.y *= -1;\n    this.z *= -1;\n    this.normalize();\n    return this;\n  },\n  normalize: function normalize() {\n    var l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n    if (l === 0) {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n      this.w = 1;\n    } else {\n      l = 1 / l;\n      this.x = this.x * l;\n      this.y = this.y * l;\n      this.z = this.z * l;\n      this.w = this.w * l;\n    }\n    return this;\n  },\n  slerp: function slerp(qb, t) {\n    if (t === 0) return this;\n    if (t === 1) return this.copy(qb);\n    var x = this.x,\n        y = this.y,\n        z = this.z,\n        w = this.w;\n    var cosHalfTheta = w * qb.w + x * qb.x + y * qb.y + z * qb.z;\n    if (cosHalfTheta < 0) {\n      this.w = -qb.w;\n      this.x = -qb.x;\n      this.y = -qb.y;\n      this.z = -qb.z;\n      cosHalfTheta = -cosHalfTheta;\n    } else {\n      this.copy(qb);\n    }\n    if (cosHalfTheta >= 1.0) {\n      this.w = w;\n      this.x = x;\n      this.y = y;\n      this.z = z;\n      return this;\n    }\n    var halfTheta = Math.acos(cosHalfTheta);\n    var sinHalfTheta = Math.sqrt(1.0 - cosHalfTheta * cosHalfTheta);\n    if (Math.abs(sinHalfTheta) < 0.001) {\n      this.w = 0.5 * (w + this.w);\n      this.x = 0.5 * (x + this.x);\n      this.y = 0.5 * (y + this.y);\n      this.z = 0.5 * (z + this.z);\n      return this;\n    }\n    var ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n        ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n    this.w = w * ratioA + this.w * ratioB;\n    this.x = x * ratioA + this.x * ratioB;\n    this.y = y * ratioA + this.y * ratioB;\n    this.z = z * ratioA + this.z * ratioB;\n    return this;\n  },\n  setFromUnitVectors: function () {\n    var v1, r;\n    var EPS = 0.000001;\n    return function (vFrom, vTo) {\n      if (v1 === undefined) v1 = new Vector3();\n      r = vFrom.dot(vTo) + 1;\n      if (r < EPS) {\n        r = 0;\n        if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n          v1.set(-vFrom.y, vFrom.x, 0);\n        } else {\n          v1.set(0, -vFrom.z, vFrom.y);\n        }\n      } else {\n        v1.crossVectors(vFrom, vTo);\n      }\n      this.x = v1.x;\n      this.y = v1.y;\n      this.z = v1.z;\n      this.w = r;\n      this.normalize();\n      return this;\n    };\n  }()\n};\nfunction Device(params) {\n  this.width = params.width || getScreenWidth();\n  this.height = params.height || getScreenHeight();\n  this.widthMeters = params.widthMeters;\n  this.heightMeters = params.heightMeters;\n  this.bevelMeters = params.bevelMeters;\n}\nvar DEFAULT_ANDROID = new Device({\n  widthMeters: 0.110,\n  heightMeters: 0.062,\n  bevelMeters: 0.004\n});\nvar DEFAULT_IOS = new Device({\n  widthMeters: 0.1038,\n  heightMeters: 0.0584,\n  bevelMeters: 0.004\n});\nvar Viewers = {\n  CardboardV1: new CardboardViewer({\n    id: 'CardboardV1',\n    label: 'Cardboard I/O 2014',\n    fov: 40,\n    interLensDistance: 0.060,\n    baselineLensDistance: 0.035,\n    screenLensDistance: 0.042,\n    distortionCoefficients: [0.441, 0.156],\n    inverseCoefficients: [-0.4410035, 0.42756155, -0.4804439, 0.5460139, -0.58821183, 0.5733938, -0.48303202, 0.33299083, -0.17573841, 0.0651772, -0.01488963, 0.001559834]\n  }),\n  CardboardV2: new CardboardViewer({\n    id: 'CardboardV2',\n    label: 'Cardboard I/O 2015',\n    fov: 60,\n    interLensDistance: 0.064,\n    baselineLensDistance: 0.035,\n    screenLensDistance: 0.039,\n    distortionCoefficients: [0.34, 0.55],\n    inverseCoefficients: [-0.33836704, -0.18162185, 0.862655, -1.2462051, 1.0560602, -0.58208317, 0.21609078, -0.05444823, 0.009177956, -9.904169E-4, 6.183535E-5, -1.6981803E-6]\n  })\n};\nfunction DeviceInfo(deviceParams, additionalViewers) {\n  this.viewer = Viewers.CardboardV2;\n  this.updateDeviceParams(deviceParams);\n  this.distortion = new Distortion(this.viewer.distortionCoefficients);\n  for (var i = 0; i < additionalViewers.length; i++) {\n    var viewer = additionalViewers[i];\n    Viewers[viewer.id] = new CardboardViewer(viewer);\n  }\n}\nDeviceInfo.prototype.updateDeviceParams = function (deviceParams) {\n  this.device = this.determineDevice_(deviceParams) || this.device;\n};\nDeviceInfo.prototype.getDevice = function () {\n  return this.device;\n};\nDeviceInfo.prototype.setViewer = function (viewer) {\n  this.viewer = viewer;\n  this.distortion = new Distortion(this.viewer.distortionCoefficients);\n};\nDeviceInfo.prototype.determineDevice_ = function (deviceParams) {\n  if (!deviceParams) {\n    if (isIOS()) {\n      console.warn('Using fallback iOS device measurements.');\n      return DEFAULT_IOS;\n    } else {\n      console.warn('Using fallback Android device measurements.');\n      return DEFAULT_ANDROID;\n    }\n  }\n  var METERS_PER_INCH = 0.0254;\n  var metersPerPixelX = METERS_PER_INCH / deviceParams.xdpi;\n  var metersPerPixelY = METERS_PER_INCH / deviceParams.ydpi;\n  var width = getScreenWidth();\n  var height = getScreenHeight();\n  return new Device({\n    widthMeters: metersPerPixelX * width,\n    heightMeters: metersPerPixelY * height,\n    bevelMeters: deviceParams.bevelMm * 0.001\n  });\n};\nDeviceInfo.prototype.getDistortedFieldOfViewLeftEye = function () {\n  var viewer = this.viewer;\n  var device = this.device;\n  var distortion = this.distortion;\n  var eyeToScreenDistance = viewer.screenLensDistance;\n  var outerDist = (device.widthMeters - viewer.interLensDistance) / 2;\n  var innerDist = viewer.interLensDistance / 2;\n  var bottomDist = viewer.baselineLensDistance - device.bevelMeters;\n  var topDist = device.heightMeters - bottomDist;\n  var outerAngle = radToDeg * Math.atan(distortion.distort(outerDist / eyeToScreenDistance));\n  var innerAngle = radToDeg * Math.atan(distortion.distort(innerDist / eyeToScreenDistance));\n  var bottomAngle = radToDeg * Math.atan(distortion.distort(bottomDist / eyeToScreenDistance));\n  var topAngle = radToDeg * Math.atan(distortion.distort(topDist / eyeToScreenDistance));\n  return {\n    leftDegrees: Math.min(outerAngle, viewer.fov),\n    rightDegrees: Math.min(innerAngle, viewer.fov),\n    downDegrees: Math.min(bottomAngle, viewer.fov),\n    upDegrees: Math.min(topAngle, viewer.fov)\n  };\n};\nDeviceInfo.prototype.getLeftEyeVisibleTanAngles = function () {\n  var viewer = this.viewer;\n  var device = this.device;\n  var distortion = this.distortion;\n  var fovLeft = Math.tan(-degToRad * viewer.fov);\n  var fovTop = Math.tan(degToRad * viewer.fov);\n  var fovRight = Math.tan(degToRad * viewer.fov);\n  var fovBottom = Math.tan(-degToRad * viewer.fov);\n  var halfWidth = device.widthMeters / 4;\n  var halfHeight = device.heightMeters / 2;\n  var verticalLensOffset = viewer.baselineLensDistance - device.bevelMeters - halfHeight;\n  var centerX = viewer.interLensDistance / 2 - halfWidth;\n  var centerY = -verticalLensOffset;\n  var centerZ = viewer.screenLensDistance;\n  var screenLeft = distortion.distort((centerX - halfWidth) / centerZ);\n  var screenTop = distortion.distort((centerY + halfHeight) / centerZ);\n  var screenRight = distortion.distort((centerX + halfWidth) / centerZ);\n  var screenBottom = distortion.distort((centerY - halfHeight) / centerZ);\n  var result = new Float32Array(4);\n  result[0] = Math.max(fovLeft, screenLeft);\n  result[1] = Math.min(fovTop, screenTop);\n  result[2] = Math.min(fovRight, screenRight);\n  result[3] = Math.max(fovBottom, screenBottom);\n  return result;\n};\nDeviceInfo.prototype.getLeftEyeNoLensTanAngles = function () {\n  var viewer = this.viewer;\n  var device = this.device;\n  var distortion = this.distortion;\n  var result = new Float32Array(4);\n  var fovLeft = distortion.distortInverse(Math.tan(-degToRad * viewer.fov));\n  var fovTop = distortion.distortInverse(Math.tan(degToRad * viewer.fov));\n  var fovRight = distortion.distortInverse(Math.tan(degToRad * viewer.fov));\n  var fovBottom = distortion.distortInverse(Math.tan(-degToRad * viewer.fov));\n  var halfWidth = device.widthMeters / 4;\n  var halfHeight = device.heightMeters / 2;\n  var verticalLensOffset = viewer.baselineLensDistance - device.bevelMeters - halfHeight;\n  var centerX = viewer.interLensDistance / 2 - halfWidth;\n  var centerY = -verticalLensOffset;\n  var centerZ = viewer.screenLensDistance;\n  var screenLeft = (centerX - halfWidth) / centerZ;\n  var screenTop = (centerY + halfHeight) / centerZ;\n  var screenRight = (centerX + halfWidth) / centerZ;\n  var screenBottom = (centerY - halfHeight) / centerZ;\n  result[0] = Math.max(fovLeft, screenLeft);\n  result[1] = Math.min(fovTop, screenTop);\n  result[2] = Math.min(fovRight, screenRight);\n  result[3] = Math.max(fovBottom, screenBottom);\n  return result;\n};\nDeviceInfo.prototype.getLeftEyeVisibleScreenRect = function (undistortedFrustum) {\n  var viewer = this.viewer;\n  var device = this.device;\n  var dist = viewer.screenLensDistance;\n  var eyeX = (device.widthMeters - viewer.interLensDistance) / 2;\n  var eyeY = viewer.baselineLensDistance - device.bevelMeters;\n  var left = (undistortedFrustum[0] * dist + eyeX) / device.widthMeters;\n  var top = (undistortedFrustum[1] * dist + eyeY) / device.heightMeters;\n  var right = (undistortedFrustum[2] * dist + eyeX) / device.widthMeters;\n  var bottom = (undistortedFrustum[3] * dist + eyeY) / device.heightMeters;\n  return {\n    x: left,\n    y: bottom,\n    width: right - left,\n    height: top - bottom\n  };\n};\nDeviceInfo.prototype.getFieldOfViewLeftEye = function (opt_isUndistorted) {\n  return opt_isUndistorted ? this.getUndistortedFieldOfViewLeftEye() : this.getDistortedFieldOfViewLeftEye();\n};\nDeviceInfo.prototype.getFieldOfViewRightEye = function (opt_isUndistorted) {\n  var fov = this.getFieldOfViewLeftEye(opt_isUndistorted);\n  return {\n    leftDegrees: fov.rightDegrees,\n    rightDegrees: fov.leftDegrees,\n    upDegrees: fov.upDegrees,\n    downDegrees: fov.downDegrees\n  };\n};\nDeviceInfo.prototype.getUndistortedFieldOfViewLeftEye = function () {\n  var p = this.getUndistortedParams_();\n  return {\n    leftDegrees: radToDeg * Math.atan(p.outerDist),\n    rightDegrees: radToDeg * Math.atan(p.innerDist),\n    downDegrees: radToDeg * Math.atan(p.bottomDist),\n    upDegrees: radToDeg * Math.atan(p.topDist)\n  };\n};\nDeviceInfo.prototype.getUndistortedViewportLeftEye = function () {\n  var p = this.getUndistortedParams_();\n  var viewer = this.viewer;\n  var device = this.device;\n  var eyeToScreenDistance = viewer.screenLensDistance;\n  var screenWidth = device.widthMeters / eyeToScreenDistance;\n  var screenHeight = device.heightMeters / eyeToScreenDistance;\n  var xPxPerTanAngle = device.width / screenWidth;\n  var yPxPerTanAngle = device.height / screenHeight;\n  var x = Math.round((p.eyePosX - p.outerDist) * xPxPerTanAngle);\n  var y = Math.round((p.eyePosY - p.bottomDist) * yPxPerTanAngle);\n  return {\n    x: x,\n    y: y,\n    width: Math.round((p.eyePosX + p.innerDist) * xPxPerTanAngle) - x,\n    height: Math.round((p.eyePosY + p.topDist) * yPxPerTanAngle) - y\n  };\n};\nDeviceInfo.prototype.getUndistortedParams_ = function () {\n  var viewer = this.viewer;\n  var device = this.device;\n  var distortion = this.distortion;\n  var eyeToScreenDistance = viewer.screenLensDistance;\n  var halfLensDistance = viewer.interLensDistance / 2 / eyeToScreenDistance;\n  var screenWidth = device.widthMeters / eyeToScreenDistance;\n  var screenHeight = device.heightMeters / eyeToScreenDistance;\n  var eyePosX = screenWidth / 2 - halfLensDistance;\n  var eyePosY = (viewer.baselineLensDistance - device.bevelMeters) / eyeToScreenDistance;\n  var maxFov = viewer.fov;\n  var viewerMax = distortion.distortInverse(Math.tan(degToRad * maxFov));\n  var outerDist = Math.min(eyePosX, viewerMax);\n  var innerDist = Math.min(halfLensDistance, viewerMax);\n  var bottomDist = Math.min(eyePosY, viewerMax);\n  var topDist = Math.min(screenHeight - eyePosY, viewerMax);\n  return {\n    outerDist: outerDist,\n    innerDist: innerDist,\n    topDist: topDist,\n    bottomDist: bottomDist,\n    eyePosX: eyePosX,\n    eyePosY: eyePosY\n  };\n};\nfunction CardboardViewer(params) {\n  this.id = params.id;\n  this.label = params.label;\n  this.fov = params.fov;\n  this.interLensDistance = params.interLensDistance;\n  this.baselineLensDistance = params.baselineLensDistance;\n  this.screenLensDistance = params.screenLensDistance;\n  this.distortionCoefficients = params.distortionCoefficients;\n  this.inverseCoefficients = params.inverseCoefficients;\n}\nDeviceInfo.Viewers = Viewers;\nvar format = 1;\nvar last_updated = \"2018-10-17T15:31:16Z\";\nvar devices = [{\"type\":\"android\",\"rules\":[{\"mdmh\":\"asus/*/Nexus 7/*\"},{\"ua\":\"Nexus 7\"}],\"dpi\":[320.8,323],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"asus/*/ASUS_Z00AD/*\"},{\"ua\":\"ASUS_Z00AD\"}],\"dpi\":[403,404.6],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Google/*/Pixel XL/*\"},{\"ua\":\"Pixel XL\"}],\"dpi\":[537.9,533],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Google/*/Pixel/*\"},{\"ua\":\"Pixel\"}],\"dpi\":[432.6,436.7],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"HTC/*/HTC6435LVW/*\"},{\"ua\":\"HTC6435LVW\"}],\"dpi\":[449.7,443.3],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"HTC/*/HTC One XL/*\"},{\"ua\":\"HTC One XL\"}],\"dpi\":[315.3,314.6],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"htc/*/Nexus 9/*\"},{\"ua\":\"Nexus 9\"}],\"dpi\":289,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"HTC/*/HTC One M9/*\"},{\"ua\":\"HTC One M9\"}],\"dpi\":[442.5,443.3],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"HTC/*/HTC One_M8/*\"},{\"ua\":\"HTC One_M8\"}],\"dpi\":[449.7,447.4],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"HTC/*/HTC One/*\"},{\"ua\":\"HTC One\"}],\"dpi\":472.8,\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Huawei/*/Nexus 6P/*\"},{\"ua\":\"Nexus 6P\"}],\"dpi\":[515.1,518],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Huawei/*/BLN-L24/*\"},{\"ua\":\"HONORBLN-L24\"}],\"dpi\":480,\"bw\":4,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Huawei/*/BKL-L09/*\"},{\"ua\":\"BKL-L09\"}],\"dpi\":403,\"bw\":3.47,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LENOVO/*/Lenovo PB2-690Y/*\"},{\"ua\":\"Lenovo PB2-690Y\"}],\"dpi\":[457.2,454.713],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/Nexus 5X/*\"},{\"ua\":\"Nexus 5X\"}],\"dpi\":[422,419.9],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/LGMS345/*\"},{\"ua\":\"LGMS345\"}],\"dpi\":[221.7,219.1],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/LG-D800/*\"},{\"ua\":\"LG-D800\"}],\"dpi\":[422,424.1],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/LG-D850/*\"},{\"ua\":\"LG-D850\"}],\"dpi\":[537.9,541.9],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/VS985 4G/*\"},{\"ua\":\"VS985 4G\"}],\"dpi\":[537.9,535.6],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/Nexus 5/*\"},{\"ua\":\"Nexus 5 B\"}],\"dpi\":[442.4,444.8],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/Nexus 4/*\"},{\"ua\":\"Nexus 4\"}],\"dpi\":[319.8,318.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/LG-P769/*\"},{\"ua\":\"LG-P769\"}],\"dpi\":[240.6,247.5],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/LGMS323/*\"},{\"ua\":\"LGMS323\"}],\"dpi\":[206.6,204.6],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/LGLS996/*\"},{\"ua\":\"LGLS996\"}],\"dpi\":[403.4,401.5],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Micromax/*/4560MMX/*\"},{\"ua\":\"4560MMX\"}],\"dpi\":[240,219.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Micromax/*/A250/*\"},{\"ua\":\"Micromax A250\"}],\"dpi\":[480,446.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Micromax/*/Micromax AQ4501/*\"},{\"ua\":\"Micromax AQ4501\"}],\"dpi\":240,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/G5/*\"},{\"ua\":\"Moto G (5) Plus\"}],\"dpi\":[403.4,403],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/DROID RAZR/*\"},{\"ua\":\"DROID RAZR\"}],\"dpi\":[368.1,256.7],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT830C/*\"},{\"ua\":\"XT830C\"}],\"dpi\":[254,255.9],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1021/*\"},{\"ua\":\"XT1021\"}],\"dpi\":[254,256.7],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1023/*\"},{\"ua\":\"XT1023\"}],\"dpi\":[254,256.7],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1028/*\"},{\"ua\":\"XT1028\"}],\"dpi\":[326.6,327.6],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1034/*\"},{\"ua\":\"XT1034\"}],\"dpi\":[326.6,328.4],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1053/*\"},{\"ua\":\"XT1053\"}],\"dpi\":[315.3,316.1],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1562/*\"},{\"ua\":\"XT1562\"}],\"dpi\":[403.4,402.7],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/Nexus 6/*\"},{\"ua\":\"Nexus 6 B\"}],\"dpi\":[494.3,489.7],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1063/*\"},{\"ua\":\"XT1063\"}],\"dpi\":[295,296.6],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1064/*\"},{\"ua\":\"XT1064\"}],\"dpi\":[295,295.6],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1092/*\"},{\"ua\":\"XT1092\"}],\"dpi\":[422,424.1],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1095/*\"},{\"ua\":\"XT1095\"}],\"dpi\":[422,423.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/G4/*\"},{\"ua\":\"Moto G (4)\"}],\"dpi\":401,\"bw\":4,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OnePlus/*/A0001/*\"},{\"ua\":\"A0001\"}],\"dpi\":[403.4,401],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OnePlus/*/ONE E1005/*\"},{\"ua\":\"ONE E1005\"}],\"dpi\":[442.4,441.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OnePlus/*/ONE A2005/*\"},{\"ua\":\"ONE A2005\"}],\"dpi\":[391.9,405.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OnePlus/*/ONEPLUS A5000/*\"},{\"ua\":\"ONEPLUS A5000 \"}],\"dpi\":[403.411,399.737],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OnePlus/*/ONE A5010/*\"},{\"ua\":\"ONEPLUS A5010\"}],\"dpi\":[403,400],\"bw\":2,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OPPO/*/X909/*\"},{\"ua\":\"X909\"}],\"dpi\":[442.4,444.1],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/GT-I9082/*\"},{\"ua\":\"GT-I9082\"}],\"dpi\":[184.7,185.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G360P/*\"},{\"ua\":\"SM-G360P\"}],\"dpi\":[196.7,205.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/Nexus S/*\"},{\"ua\":\"Nexus S\"}],\"dpi\":[234.5,229.8],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/GT-I9300/*\"},{\"ua\":\"GT-I9300\"}],\"dpi\":[304.8,303.9],\"bw\":5,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-T230NU/*\"},{\"ua\":\"SM-T230NU\"}],\"dpi\":216,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SGH-T399/*\"},{\"ua\":\"SGH-T399\"}],\"dpi\":[217.7,231.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SGH-M919/*\"},{\"ua\":\"SGH-M919\"}],\"dpi\":[440.8,437.7],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-N9005/*\"},{\"ua\":\"SM-N9005\"}],\"dpi\":[386.4,387],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SAMSUNG-SM-N900A/*\"},{\"ua\":\"SAMSUNG-SM-N900A\"}],\"dpi\":[386.4,387.7],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/GT-I9500/*\"},{\"ua\":\"GT-I9500\"}],\"dpi\":[442.5,443.3],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/GT-I9505/*\"},{\"ua\":\"GT-I9505\"}],\"dpi\":439.4,\"bw\":4,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G900F/*\"},{\"ua\":\"SM-G900F\"}],\"dpi\":[415.6,431.6],\"bw\":5,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G900M/*\"},{\"ua\":\"SM-G900M\"}],\"dpi\":[415.6,431.6],\"bw\":5,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G800F/*\"},{\"ua\":\"SM-G800F\"}],\"dpi\":326.8,\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G906S/*\"},{\"ua\":\"SM-G906S\"}],\"dpi\":[562.7,572.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/GT-I9300/*\"},{\"ua\":\"GT-I9300\"}],\"dpi\":[306.7,304.8],\"bw\":5,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-T535/*\"},{\"ua\":\"SM-T535\"}],\"dpi\":[142.6,136.4],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-N920C/*\"},{\"ua\":\"SM-N920C\"}],\"dpi\":[515.1,518.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-N920P/*\"},{\"ua\":\"SM-N920P\"}],\"dpi\":[386.3655,390.144],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-N920W8/*\"},{\"ua\":\"SM-N920W8\"}],\"dpi\":[515.1,518.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/GT-I9300I/*\"},{\"ua\":\"GT-I9300I\"}],\"dpi\":[304.8,305.8],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/GT-I9195/*\"},{\"ua\":\"GT-I9195\"}],\"dpi\":[249.4,256.7],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SPH-L520/*\"},{\"ua\":\"SPH-L520\"}],\"dpi\":[249.4,255.9],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SAMSUNG-SGH-I717/*\"},{\"ua\":\"SAMSUNG-SGH-I717\"}],\"dpi\":285.8,\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SPH-D710/*\"},{\"ua\":\"SPH-D710\"}],\"dpi\":[217.7,204.2],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/GT-N7100/*\"},{\"ua\":\"GT-N7100\"}],\"dpi\":265.1,\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SCH-I605/*\"},{\"ua\":\"SCH-I605\"}],\"dpi\":265.1,\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/Galaxy Nexus/*\"},{\"ua\":\"Galaxy Nexus\"}],\"dpi\":[315.3,314.2],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-N910H/*\"},{\"ua\":\"SM-N910H\"}],\"dpi\":[515.1,518],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-N910C/*\"},{\"ua\":\"SM-N910C\"}],\"dpi\":[515.2,520.2],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G130M/*\"},{\"ua\":\"SM-G130M\"}],\"dpi\":[165.9,164.8],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G928I/*\"},{\"ua\":\"SM-G928I\"}],\"dpi\":[515.1,518.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G920F/*\"},{\"ua\":\"SM-G920F\"}],\"dpi\":580.6,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G920P/*\"},{\"ua\":\"SM-G920P\"}],\"dpi\":[522.5,577],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G925F/*\"},{\"ua\":\"SM-G925F\"}],\"dpi\":580.6,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G925V/*\"},{\"ua\":\"SM-G925V\"}],\"dpi\":[522.5,576.6],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G930F/*\"},{\"ua\":\"SM-G930F\"}],\"dpi\":576.6,\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G935F/*\"},{\"ua\":\"SM-G935F\"}],\"dpi\":533,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G950F/*\"},{\"ua\":\"SM-G950F\"}],\"dpi\":[562.707,565.293],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G955U/*\"},{\"ua\":\"SM-G955U\"}],\"dpi\":[522.514,525.762],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G955F/*\"},{\"ua\":\"SM-G955F\"}],\"dpi\":[522.514,525.762],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Sony/*/C6903/*\"},{\"ua\":\"C6903\"}],\"dpi\":[442.5,443.3],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Sony/*/D6653/*\"},{\"ua\":\"D6653\"}],\"dpi\":[428.6,427.6],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Sony/*/E6653/*\"},{\"ua\":\"E6653\"}],\"dpi\":[428.6,425.7],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Sony/*/E6853/*\"},{\"ua\":\"E6853\"}],\"dpi\":[403.4,401.9],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Sony/*/SGP321/*\"},{\"ua\":\"SGP321\"}],\"dpi\":[224.7,224.1],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"TCT/*/ALCATEL ONE TOUCH Fierce/*\"},{\"ua\":\"ALCATEL ONE TOUCH Fierce\"}],\"dpi\":[240,247.5],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"THL/*/thl 5000/*\"},{\"ua\":\"thl 5000\"}],\"dpi\":[480,443.3],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Fly/*/IQ4412/*\"},{\"ua\":\"IQ4412\"}],\"dpi\":307.9,\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"ZTE/*/ZTE Blade L2/*\"},{\"ua\":\"ZTE Blade L2\"}],\"dpi\":240,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"BENEVE/*/VR518/*\"},{\"ua\":\"VR518\"}],\"dpi\":480,\"bw\":3,\"ac\":500},{\"type\":\"ios\",\"rules\":[{\"res\":[640,960]}],\"dpi\":[325.1,328.4],\"bw\":4,\"ac\":1000},{\"type\":\"ios\",\"rules\":[{\"res\":[640,1136]}],\"dpi\":[317.1,320.2],\"bw\":3,\"ac\":1000},{\"type\":\"ios\",\"rules\":[{\"res\":[750,1334]}],\"dpi\":326.4,\"bw\":4,\"ac\":1000},{\"type\":\"ios\",\"rules\":[{\"res\":[1242,2208]}],\"dpi\":[453.6,458.4],\"bw\":4,\"ac\":1000},{\"type\":\"ios\",\"rules\":[{\"res\":[1125,2001]}],\"dpi\":[410.9,415.4],\"bw\":4,\"ac\":1000},{\"type\":\"ios\",\"rules\":[{\"res\":[1125,2436]}],\"dpi\":458,\"bw\":4,\"ac\":1000}];\nvar DPDB_CACHE = {\n\tformat: format,\n\tlast_updated: last_updated,\n\tdevices: devices\n};\nfunction Dpdb(url, onDeviceParamsUpdated) {\n  this.dpdb = DPDB_CACHE;\n  this.recalculateDeviceParams_();\n  if (url) {\n    this.onDeviceParamsUpdated = onDeviceParamsUpdated;\n    var xhr = new XMLHttpRequest();\n    var obj = this;\n    xhr.open('GET', url, true);\n    xhr.addEventListener('load', function () {\n      obj.loading = false;\n      if (xhr.status >= 200 && xhr.status <= 299) {\n        obj.dpdb = JSON.parse(xhr.response);\n        obj.recalculateDeviceParams_();\n      } else {\n        console.error('Error loading online DPDB!');\n      }\n    });\n    xhr.send();\n  }\n}\nDpdb.prototype.getDeviceParams = function () {\n  return this.deviceParams;\n};\nDpdb.prototype.recalculateDeviceParams_ = function () {\n  var newDeviceParams = this.calcDeviceParams_();\n  if (newDeviceParams) {\n    this.deviceParams = newDeviceParams;\n    if (this.onDeviceParamsUpdated) {\n      this.onDeviceParamsUpdated(this.deviceParams);\n    }\n  } else {\n    console.error('Failed to recalculate device parameters.');\n  }\n};\nDpdb.prototype.calcDeviceParams_ = function () {\n  var db = this.dpdb;\n  if (!db) {\n    console.error('DPDB not available.');\n    return null;\n  }\n  if (db.format != 1) {\n    console.error('DPDB has unexpected format version.');\n    return null;\n  }\n  if (!db.devices || !db.devices.length) {\n    console.error('DPDB does not have a devices section.');\n    return null;\n  }\n  var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n  var width = getScreenWidth();\n  var height = getScreenHeight();\n  if (!db.devices) {\n    console.error('DPDB has no devices section.');\n    return null;\n  }\n  for (var i = 0; i < db.devices.length; i++) {\n    var device = db.devices[i];\n    if (!device.rules) {\n      console.warn('Device[' + i + '] has no rules section.');\n      continue;\n    }\n    if (device.type != 'ios' && device.type != 'android') {\n      console.warn('Device[' + i + '] has invalid type.');\n      continue;\n    }\n    if (isIOS() != (device.type == 'ios')) continue;\n    var matched = false;\n    for (var j = 0; j < device.rules.length; j++) {\n      var rule = device.rules[j];\n      if (this.matchRule_(rule, userAgent, width, height)) {\n        matched = true;\n        break;\n      }\n    }\n    if (!matched) continue;\n    var xdpi = device.dpi[0] || device.dpi;\n    var ydpi = device.dpi[1] || device.dpi;\n    return new DeviceParams({ xdpi: xdpi, ydpi: ydpi, bevelMm: device.bw });\n  }\n  console.warn('No DPDB device match.');\n  return null;\n};\nDpdb.prototype.matchRule_ = function (rule, ua, screenWidth, screenHeight) {\n  if (!rule.ua && !rule.res) return false;\n  if (rule.ua && rule.ua.substring(0, 2) === 'SM') rule.ua = rule.ua.substring(0, 7);\n  if (rule.ua && ua.indexOf(rule.ua) < 0) return false;\n  if (rule.res) {\n    if (!rule.res[0] || !rule.res[1]) return false;\n    var resX = rule.res[0];\n    var resY = rule.res[1];\n    if (Math.min(screenWidth, screenHeight) != Math.min(resX, resY) || Math.max(screenWidth, screenHeight) != Math.max(resX, resY)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction DeviceParams(params) {\n  this.xdpi = params.xdpi;\n  this.ydpi = params.ydpi;\n  this.bevelMm = params.bevelMm;\n}\nfunction SensorSample(sample, timestampS) {\n  this.set(sample, timestampS);\n}\nSensorSample.prototype.set = function (sample, timestampS) {\n  this.sample = sample;\n  this.timestampS = timestampS;\n};\nSensorSample.prototype.copy = function (sensorSample) {\n  this.set(sensorSample.sample, sensorSample.timestampS);\n};\nfunction ComplementaryFilter(kFilter, isDebug) {\n  this.kFilter = kFilter;\n  this.isDebug = isDebug;\n  this.currentAccelMeasurement = new SensorSample();\n  this.currentGyroMeasurement = new SensorSample();\n  this.previousGyroMeasurement = new SensorSample();\n  if (isIOS()) {\n    this.filterQ = new Quaternion(-1, 0, 0, 1);\n  } else {\n    this.filterQ = new Quaternion(1, 0, 0, 1);\n  }\n  this.previousFilterQ = new Quaternion();\n  this.previousFilterQ.copy(this.filterQ);\n  this.accelQ = new Quaternion();\n  this.isOrientationInitialized = false;\n  this.estimatedGravity = new Vector3();\n  this.measuredGravity = new Vector3();\n  this.gyroIntegralQ = new Quaternion();\n}\nComplementaryFilter.prototype.addAccelMeasurement = function (vector, timestampS) {\n  this.currentAccelMeasurement.set(vector, timestampS);\n};\nComplementaryFilter.prototype.addGyroMeasurement = function (vector, timestampS) {\n  this.currentGyroMeasurement.set(vector, timestampS);\n  var deltaT = timestampS - this.previousGyroMeasurement.timestampS;\n  if (isTimestampDeltaValid(deltaT)) {\n    this.run_();\n  }\n  this.previousGyroMeasurement.copy(this.currentGyroMeasurement);\n};\nComplementaryFilter.prototype.run_ = function () {\n  if (!this.isOrientationInitialized) {\n    this.accelQ = this.accelToQuaternion_(this.currentAccelMeasurement.sample);\n    this.previousFilterQ.copy(this.accelQ);\n    this.isOrientationInitialized = true;\n    return;\n  }\n  var deltaT = this.currentGyroMeasurement.timestampS - this.previousGyroMeasurement.timestampS;\n  var gyroDeltaQ = this.gyroToQuaternionDelta_(this.currentGyroMeasurement.sample, deltaT);\n  this.gyroIntegralQ.multiply(gyroDeltaQ);\n  this.filterQ.copy(this.previousFilterQ);\n  this.filterQ.multiply(gyroDeltaQ);\n  var invFilterQ = new Quaternion();\n  invFilterQ.copy(this.filterQ);\n  invFilterQ.inverse();\n  this.estimatedGravity.set(0, 0, -1);\n  this.estimatedGravity.applyQuaternion(invFilterQ);\n  this.estimatedGravity.normalize();\n  this.measuredGravity.copy(this.currentAccelMeasurement.sample);\n  this.measuredGravity.normalize();\n  var deltaQ = new Quaternion();\n  deltaQ.setFromUnitVectors(this.estimatedGravity, this.measuredGravity);\n  deltaQ.inverse();\n  if (this.isDebug) {\n    console.log('Delta: %d deg, G_est: (%s, %s, %s), G_meas: (%s, %s, %s)', radToDeg * getQuaternionAngle(deltaQ), this.estimatedGravity.x.toFixed(1), this.estimatedGravity.y.toFixed(1), this.estimatedGravity.z.toFixed(1), this.measuredGravity.x.toFixed(1), this.measuredGravity.y.toFixed(1), this.measuredGravity.z.toFixed(1));\n  }\n  var targetQ = new Quaternion();\n  targetQ.copy(this.filterQ);\n  targetQ.multiply(deltaQ);\n  this.filterQ.slerp(targetQ, 1 - this.kFilter);\n  this.previousFilterQ.copy(this.filterQ);\n};\nComplementaryFilter.prototype.getOrientation = function () {\n  return this.filterQ;\n};\nComplementaryFilter.prototype.accelToQuaternion_ = function (accel) {\n  var normAccel = new Vector3();\n  normAccel.copy(accel);\n  normAccel.normalize();\n  var quat = new Quaternion();\n  quat.setFromUnitVectors(new Vector3(0, 0, -1), normAccel);\n  quat.inverse();\n  return quat;\n};\nComplementaryFilter.prototype.gyroToQuaternionDelta_ = function (gyro, dt) {\n  var quat = new Quaternion();\n  var axis = new Vector3();\n  axis.copy(gyro);\n  axis.normalize();\n  quat.setFromAxisAngle(axis, gyro.length() * dt);\n  return quat;\n};\nfunction PosePredictor(predictionTimeS, isDebug) {\n  this.predictionTimeS = predictionTimeS;\n  this.isDebug = isDebug;\n  this.previousQ = new Quaternion();\n  this.previousTimestampS = null;\n  this.deltaQ = new Quaternion();\n  this.outQ = new Quaternion();\n}\nPosePredictor.prototype.getPrediction = function (currentQ, gyro, timestampS) {\n  if (!this.previousTimestampS) {\n    this.previousQ.copy(currentQ);\n    this.previousTimestampS = timestampS;\n    return currentQ;\n  }\n  var axis = new Vector3();\n  axis.copy(gyro);\n  axis.normalize();\n  var angularSpeed = gyro.length();\n  if (angularSpeed < degToRad * 20) {\n    if (this.isDebug) {\n      console.log('Moving slowly, at %s deg/s: no prediction', (radToDeg * angularSpeed).toFixed(1));\n    }\n    this.outQ.copy(currentQ);\n    this.previousQ.copy(currentQ);\n    return this.outQ;\n  }\n  var predictAngle = angularSpeed * this.predictionTimeS;\n  this.deltaQ.setFromAxisAngle(axis, predictAngle);\n  this.outQ.copy(this.previousQ);\n  this.outQ.multiply(this.deltaQ);\n  this.previousQ.copy(currentQ);\n  this.previousTimestampS = timestampS;\n  return this.outQ;\n};\nfunction FusionPoseSensor(kFilter, predictionTime, yawOnly, isDebug) {\n  this.yawOnly = yawOnly;\n  this.accelerometer = new Vector3();\n  this.gyroscope = new Vector3();\n  this.filter = new ComplementaryFilter(kFilter, isDebug);\n  this.posePredictor = new PosePredictor(predictionTime, isDebug);\n  this.isFirefoxAndroid = isFirefoxAndroid();\n  this.isIOS = isIOS();\n  var chromeVersion = getChromeVersion();\n  this.isDeviceMotionInRadians = !this.isIOS && chromeVersion && chromeVersion < 66;\n  this.isWithoutDeviceMotion = isChromeWithoutDeviceMotion();\n  this.filterToWorldQ = new Quaternion();\n  if (isIOS()) {\n    this.filterToWorldQ.setFromAxisAngle(new Vector3(1, 0, 0), Math.PI / 2);\n  } else {\n    this.filterToWorldQ.setFromAxisAngle(new Vector3(1, 0, 0), -Math.PI / 2);\n  }\n  this.inverseWorldToScreenQ = new Quaternion();\n  this.worldToScreenQ = new Quaternion();\n  this.originalPoseAdjustQ = new Quaternion();\n  this.originalPoseAdjustQ.setFromAxisAngle(new Vector3(0, 0, 1), -window.orientation * Math.PI / 180);\n  this.setScreenTransform_();\n  if (isLandscapeMode()) {\n    this.filterToWorldQ.multiply(this.inverseWorldToScreenQ);\n  }\n  this.resetQ = new Quaternion();\n  this.orientationOut_ = new Float32Array(4);\n  this.start();\n}\nFusionPoseSensor.prototype.getPosition = function () {\n  return null;\n};\nFusionPoseSensor.prototype.getOrientation = function () {\n  var orientation = void 0;\n  if (this.isWithoutDeviceMotion && this._deviceOrientationQ) {\n    this.deviceOrientationFixQ = this.deviceOrientationFixQ || function () {\n      var z = new Quaternion().setFromAxisAngle(new Vector3(0, 0, -1), 0);\n      var y = new Quaternion();\n      if (window.orientation === -90) {\n        y.setFromAxisAngle(new Vector3(0, 1, 0), Math.PI / -2);\n      } else {\n        y.setFromAxisAngle(new Vector3(0, 1, 0), Math.PI / 2);\n      }\n      return z.multiply(y);\n    }();\n    this.deviceOrientationFilterToWorldQ = this.deviceOrientationFilterToWorldQ || function () {\n      var q = new Quaternion();\n      q.setFromAxisAngle(new Vector3(1, 0, 0), -Math.PI / 2);\n      return q;\n    }();\n    orientation = this._deviceOrientationQ;\n    var out = new Quaternion();\n    out.copy(orientation);\n    out.multiply(this.deviceOrientationFilterToWorldQ);\n    out.multiply(this.resetQ);\n    out.multiply(this.worldToScreenQ);\n    out.multiplyQuaternions(this.deviceOrientationFixQ, out);\n    if (this.yawOnly) {\n      out.x = 0;\n      out.z = 0;\n      out.normalize();\n    }\n    this.orientationOut_[0] = out.x;\n    this.orientationOut_[1] = out.y;\n    this.orientationOut_[2] = out.z;\n    this.orientationOut_[3] = out.w;\n    return this.orientationOut_;\n  } else {\n    var filterOrientation = this.filter.getOrientation();\n    orientation = this.posePredictor.getPrediction(filterOrientation, this.gyroscope, this.previousTimestampS);\n  }\n  var out = new Quaternion();\n  out.copy(this.filterToWorldQ);\n  out.multiply(this.resetQ);\n  out.multiply(orientation);\n  out.multiply(this.worldToScreenQ);\n  if (this.yawOnly) {\n    out.x = 0;\n    out.z = 0;\n    out.normalize();\n  }\n  this.orientationOut_[0] = out.x;\n  this.orientationOut_[1] = out.y;\n  this.orientationOut_[2] = out.z;\n  this.orientationOut_[3] = out.w;\n  return this.orientationOut_;\n};\nFusionPoseSensor.prototype.resetPose = function () {\n  this.resetQ.copy(this.filter.getOrientation());\n  this.resetQ.x = 0;\n  this.resetQ.y = 0;\n  this.resetQ.z *= -1;\n  this.resetQ.normalize();\n  if (isLandscapeMode()) {\n    this.resetQ.multiply(this.inverseWorldToScreenQ);\n  }\n  this.resetQ.multiply(this.originalPoseAdjustQ);\n};\nFusionPoseSensor.prototype.onDeviceOrientation_ = function (e) {\n  this._deviceOrientationQ = this._deviceOrientationQ || new Quaternion();\n  var alpha = e.alpha,\n      beta = e.beta,\n      gamma = e.gamma;\n  alpha = (alpha || 0) * Math.PI / 180;\n  beta = (beta || 0) * Math.PI / 180;\n  gamma = (gamma || 0) * Math.PI / 180;\n  this._deviceOrientationQ.setFromEulerYXZ(beta, alpha, -gamma);\n};\nFusionPoseSensor.prototype.onDeviceMotion_ = function (deviceMotion) {\n  this.updateDeviceMotion_(deviceMotion);\n};\nFusionPoseSensor.prototype.updateDeviceMotion_ = function (deviceMotion) {\n  var accGravity = deviceMotion.accelerationIncludingGravity;\n  var rotRate = deviceMotion.rotationRate;\n  var timestampS = deviceMotion.timeStamp / 1000;\n  var deltaS = timestampS - this.previousTimestampS;\n  if (deltaS < 0) {\n    warnOnce('fusion-pose-sensor:invalid:non-monotonic', 'Invalid timestamps detected: non-monotonic timestamp from devicemotion');\n    this.previousTimestampS = timestampS;\n    return;\n  } else if (deltaS <= MIN_TIMESTEP || deltaS > MAX_TIMESTEP) {\n    warnOnce('fusion-pose-sensor:invalid:outside-threshold', 'Invalid timestamps detected: Timestamp from devicemotion outside expected range.');\n    this.previousTimestampS = timestampS;\n    return;\n  }\n  this.accelerometer.set(-accGravity.x, -accGravity.y, -accGravity.z);\n  if (isR7()) {\n    this.gyroscope.set(-rotRate.beta, rotRate.alpha, rotRate.gamma);\n  } else {\n    this.gyroscope.set(rotRate.alpha, rotRate.beta, rotRate.gamma);\n  }\n  if (!this.isDeviceMotionInRadians) {\n    this.gyroscope.multiplyScalar(Math.PI / 180);\n  }\n  this.filter.addAccelMeasurement(this.accelerometer, timestampS);\n  this.filter.addGyroMeasurement(this.gyroscope, timestampS);\n  this.previousTimestampS = timestampS;\n};\nFusionPoseSensor.prototype.onOrientationChange_ = function (screenOrientation) {\n  this.setScreenTransform_();\n};\nFusionPoseSensor.prototype.onMessage_ = function (event) {\n  var message = event.data;\n  if (!message || !message.type) {\n    return;\n  }\n  var type = message.type.toLowerCase();\n  if (type !== 'devicemotion') {\n    return;\n  }\n  this.updateDeviceMotion_(message.deviceMotionEvent);\n};\nFusionPoseSensor.prototype.setScreenTransform_ = function () {\n  this.worldToScreenQ.set(0, 0, 0, 1);\n  switch (window.orientation) {\n    case 0:\n      break;\n    case 90:\n      this.worldToScreenQ.setFromAxisAngle(new Vector3(0, 0, 1), -Math.PI / 2);\n      break;\n    case -90:\n      this.worldToScreenQ.setFromAxisAngle(new Vector3(0, 0, 1), Math.PI / 2);\n      break;\n    case 180:\n      break;\n  }\n  this.inverseWorldToScreenQ.copy(this.worldToScreenQ);\n  this.inverseWorldToScreenQ.inverse();\n};\nFusionPoseSensor.prototype.start = function () {\n  this.onDeviceMotionCallback_ = this.onDeviceMotion_.bind(this);\n  this.onOrientationChangeCallback_ = this.onOrientationChange_.bind(this);\n  this.onMessageCallback_ = this.onMessage_.bind(this);\n  this.onDeviceOrientationCallback_ = this.onDeviceOrientation_.bind(this);\n  if (isIOS() && isInsideCrossOriginIFrame()) {\n    window.addEventListener('message', this.onMessageCallback_);\n  }\n  window.addEventListener('orientationchange', this.onOrientationChangeCallback_);\n  if (this.isWithoutDeviceMotion) {\n    window.addEventListener('deviceorientation', this.onDeviceOrientationCallback_);\n  } else {\n    window.addEventListener('devicemotion', this.onDeviceMotionCallback_);\n  }\n};\nFusionPoseSensor.prototype.stop = function () {\n  window.removeEventListener('devicemotion', this.onDeviceMotionCallback_);\n  window.removeEventListener('deviceorientation', this.onDeviceOrientationCallback_);\n  window.removeEventListener('orientationchange', this.onOrientationChangeCallback_);\n  window.removeEventListener('message', this.onMessageCallback_);\n};\nvar SENSOR_FREQUENCY = 60;\nvar X_AXIS = new Vector3(1, 0, 0);\nvar Z_AXIS = new Vector3(0, 0, 1);\nvar SENSOR_TO_VR = new Quaternion();\nSENSOR_TO_VR.setFromAxisAngle(X_AXIS, -Math.PI / 2);\nSENSOR_TO_VR.multiply(new Quaternion().setFromAxisAngle(Z_AXIS, Math.PI / 2));\nvar PoseSensor = function () {\n  function PoseSensor(config) {\n    classCallCheck(this, PoseSensor);\n    this.config = config;\n    this.sensor = null;\n    this.fusionSensor = null;\n    this._out = new Float32Array(4);\n    this.api = null;\n    this.errors = [];\n    this._sensorQ = new Quaternion();\n    this._outQ = new Quaternion();\n    this._onSensorRead = this._onSensorRead.bind(this);\n    this._onSensorError = this._onSensorError.bind(this);\n    this.init();\n  }\n  createClass(PoseSensor, [{\n    key: 'init',\n    value: function init() {\n      var sensor = null;\n      try {\n        sensor = new RelativeOrientationSensor({\n          frequency: SENSOR_FREQUENCY,\n          referenceFrame: 'screen'\n        });\n        sensor.addEventListener('error', this._onSensorError);\n      } catch (error) {\n        this.errors.push(error);\n        if (error.name === 'SecurityError') {\n          console.error('Cannot construct sensors due to the Feature Policy');\n          console.warn('Attempting to fall back using \"devicemotion\"; however this will ' + 'fail in the future without correct permissions.');\n          this.useDeviceMotion();\n        } else if (error.name === 'ReferenceError') {\n          this.useDeviceMotion();\n        } else {\n          console.error(error);\n        }\n      }\n      if (sensor) {\n        this.api = 'sensor';\n        this.sensor = sensor;\n        this.sensor.addEventListener('reading', this._onSensorRead);\n        this.sensor.start();\n      }\n    }\n  }, {\n    key: 'useDeviceMotion',\n    value: function useDeviceMotion() {\n      this.api = 'devicemotion';\n      this.fusionSensor = new FusionPoseSensor(this.config.K_FILTER, this.config.PREDICTION_TIME_S, this.config.YAW_ONLY, this.config.DEBUG);\n      if (this.sensor) {\n        this.sensor.removeEventListener('reading', this._onSensorRead);\n        this.sensor.removeEventListener('error', this._onSensorError);\n        this.sensor = null;\n      }\n    }\n  }, {\n    key: 'getOrientation',\n    value: function getOrientation() {\n      if (this.fusionSensor) {\n        return this.fusionSensor.getOrientation();\n      }\n      if (!this.sensor || !this.sensor.quaternion) {\n        this._out[0] = this._out[1] = this._out[2] = 0;\n        this._out[3] = 1;\n        return this._out;\n      }\n      var q = this.sensor.quaternion;\n      this._sensorQ.set(q[0], q[1], q[2], q[3]);\n      var out = this._outQ;\n      out.copy(SENSOR_TO_VR);\n      out.multiply(this._sensorQ);\n      if (this.config.YAW_ONLY) {\n        out.x = out.z = 0;\n        out.normalize();\n      }\n      this._out[0] = out.x;\n      this._out[1] = out.y;\n      this._out[2] = out.z;\n      this._out[3] = out.w;\n      return this._out;\n    }\n  }, {\n    key: '_onSensorError',\n    value: function _onSensorError(event) {\n      this.errors.push(event.error);\n      if (event.error.name === 'NotAllowedError') {\n        console.error('Permission to access sensor was denied');\n      } else if (event.error.name === 'NotReadableError') {\n        console.error('Sensor could not be read');\n      } else {\n        console.error(event.error);\n      }\n      this.useDeviceMotion();\n    }\n  }, {\n    key: '_onSensorRead',\n    value: function _onSensorRead() {}\n  }]);\n  return PoseSensor;\n}();\nvar rotateInstructionsAsset = '';\nfunction RotateInstructions() {\n  this.loadIcon_();\n  var overlay = document.createElement('div');\n  var s = overlay.style;\n  s.position = 'fixed';\n  s.top = 0;\n  s.right = 0;\n  s.bottom = 0;\n  s.left = 0;\n  s.backgroundColor = 'gray';\n  s.fontFamily = 'sans-serif';\n  s.zIndex = 1000000;\n  var img = document.createElement('img');\n  img.src = this.icon;\n  var s = img.style;\n  s.marginLeft = '25%';\n  s.marginTop = '25%';\n  s.width = '50%';\n  overlay.appendChild(img);\n  var text = document.createElement('div');\n  var s = text.style;\n  s.textAlign = 'center';\n  s.fontSize = '16px';\n  s.lineHeight = '24px';\n  s.margin = '24px 25%';\n  s.width = '50%';\n  text.innerHTML = 'Place your phone into your Cardboard viewer.';\n  overlay.appendChild(text);\n  var snackbar = document.createElement('div');\n  var s = snackbar.style;\n  s.backgroundColor = '#CFD8DC';\n  s.position = 'fixed';\n  s.bottom = 0;\n  s.width = '100%';\n  s.height = '48px';\n  s.padding = '14px 24px';\n  s.boxSizing = 'border-box';\n  s.color = '#656A6B';\n  overlay.appendChild(snackbar);\n  var snackbarText = document.createElement('div');\n  snackbarText.style.float = 'left';\n  snackbarText.innerHTML = 'No Cardboard viewer?';\n  var snackbarButton = document.createElement('a');\n  snackbarButton.href = 'https://www.google.com/get/cardboard/get-cardboard/';\n  snackbarButton.innerHTML = 'get one';\n  snackbarButton.target = '_blank';\n  var s = snackbarButton.style;\n  s.float = 'right';\n  s.fontWeight = 600;\n  s.textTransform = 'uppercase';\n  s.borderLeft = '1px solid gray';\n  s.paddingLeft = '24px';\n  s.textDecoration = 'none';\n  s.color = '#656A6B';\n  snackbar.appendChild(snackbarText);\n  snackbar.appendChild(snackbarButton);\n  this.overlay = overlay;\n  this.text = text;\n  this.hide();\n}\nRotateInstructions.prototype.show = function (parent) {\n  if (!parent && !this.overlay.parentElement) {\n    document.body.appendChild(this.overlay);\n  } else if (parent) {\n    if (this.overlay.parentElement && this.overlay.parentElement != parent) this.overlay.parentElement.removeChild(this.overlay);\n    parent.appendChild(this.overlay);\n  }\n  this.overlay.style.display = 'block';\n  var img = this.overlay.querySelector('img');\n  var s = img.style;\n  if (isLandscapeMode()) {\n    s.width = '20%';\n    s.marginLeft = '40%';\n    s.marginTop = '3%';\n  } else {\n    s.width = '50%';\n    s.marginLeft = '25%';\n    s.marginTop = '25%';\n  }\n};\nRotateInstructions.prototype.hide = function () {\n  this.overlay.style.display = 'none';\n};\nRotateInstructions.prototype.showTemporarily = function (ms, parent) {\n  this.show(parent);\n  this.timer = setTimeout(this.hide.bind(this), ms);\n};\nRotateInstructions.prototype.disableShowTemporarily = function () {\n  clearTimeout(this.timer);\n};\nRotateInstructions.prototype.update = function () {\n  this.disableShowTemporarily();\n  if (!isLandscapeMode() && isMobile()) {\n    this.show();\n  } else {\n    this.hide();\n  }\n};\nRotateInstructions.prototype.loadIcon_ = function () {\n  this.icon = base64('image/svg+xml', rotateInstructionsAsset);\n};\nvar DEFAULT_VIEWER = 'CardboardV1';\nvar VIEWER_KEY = 'WEBVR_CARDBOARD_VIEWER';\nvar CLASS_NAME = 'webvr-polyfill-viewer-selector';\nfunction ViewerSelector(defaultViewer) {\n  try {\n    this.selectedKey = localStorage.getItem(VIEWER_KEY);\n  } catch (error) {\n    console.error('Failed to load viewer profile: %s', error);\n  }\n  if (!this.selectedKey) {\n    this.selectedKey = defaultViewer || DEFAULT_VIEWER;\n  }\n  this.dialog = this.createDialog_(DeviceInfo.Viewers);\n  this.root = null;\n  this.onChangeCallbacks_ = [];\n}\nViewerSelector.prototype.show = function (root) {\n  this.root = root;\n  root.appendChild(this.dialog);\n  var selected = this.dialog.querySelector('#' + this.selectedKey);\n  selected.checked = true;\n  this.dialog.style.display = 'block';\n};\nViewerSelector.prototype.hide = function () {\n  if (this.root && this.root.contains(this.dialog)) {\n    this.root.removeChild(this.dialog);\n  }\n  this.dialog.style.display = 'none';\n};\nViewerSelector.prototype.getCurrentViewer = function () {\n  return DeviceInfo.Viewers[this.selectedKey];\n};\nViewerSelector.prototype.getSelectedKey_ = function () {\n  var input = this.dialog.querySelector('input[name=field]:checked');\n  if (input) {\n    return input.id;\n  }\n  return null;\n};\nViewerSelector.prototype.onChange = function (cb) {\n  this.onChangeCallbacks_.push(cb);\n};\nViewerSelector.prototype.fireOnChange_ = function (viewer) {\n  for (var i = 0; i < this.onChangeCallbacks_.length; i++) {\n    this.onChangeCallbacks_[i](viewer);\n  }\n};\nViewerSelector.prototype.onSave_ = function () {\n  this.selectedKey = this.getSelectedKey_();\n  if (!this.selectedKey || !DeviceInfo.Viewers[this.selectedKey]) {\n    console.error('ViewerSelector.onSave_: this should never happen!');\n    return;\n  }\n  this.fireOnChange_(DeviceInfo.Viewers[this.selectedKey]);\n  try {\n    localStorage.setItem(VIEWER_KEY, this.selectedKey);\n  } catch (error) {\n    console.error('Failed to save viewer profile: %s', error);\n  }\n  this.hide();\n};\nViewerSelector.prototype.createDialog_ = function (options) {\n  var container = document.createElement('div');\n  container.classList.add(CLASS_NAME);\n  container.style.display = 'none';\n  var overlay = document.createElement('div');\n  var s = overlay.style;\n  s.position = 'fixed';\n  s.left = 0;\n  s.top = 0;\n  s.width = '100%';\n  s.height = '100%';\n  s.background = 'rgba(0, 0, 0, 0.3)';\n  overlay.addEventListener('click', this.hide.bind(this));\n  var width = 280;\n  var dialog = document.createElement('div');\n  var s = dialog.style;\n  s.boxSizing = 'border-box';\n  s.position = 'fixed';\n  s.top = '24px';\n  s.left = '50%';\n  s.marginLeft = -width / 2 + 'px';\n  s.width = width + 'px';\n  s.padding = '24px';\n  s.overflow = 'hidden';\n  s.background = '#fafafa';\n  s.fontFamily = \"'Roboto', sans-serif\";\n  s.boxShadow = '0px 5px 20px #666';\n  dialog.appendChild(this.createH1_('Select your viewer'));\n  for (var id in options) {\n    dialog.appendChild(this.createChoice_(id, options[id].label));\n  }\n  dialog.appendChild(this.createButton_('Save', this.onSave_.bind(this)));\n  container.appendChild(overlay);\n  container.appendChild(dialog);\n  return container;\n};\nViewerSelector.prototype.createH1_ = function (name) {\n  var h1 = document.createElement('h1');\n  var s = h1.style;\n  s.color = 'black';\n  s.fontSize = '20px';\n  s.fontWeight = 'bold';\n  s.marginTop = 0;\n  s.marginBottom = '24px';\n  h1.innerHTML = name;\n  return h1;\n};\nViewerSelector.prototype.createChoice_ = function (id, name) {\n  var div = document.createElement('div');\n  div.style.marginTop = '8px';\n  div.style.color = 'black';\n  var input = document.createElement('input');\n  input.style.fontSize = '30px';\n  input.setAttribute('id', id);\n  input.setAttribute('type', 'radio');\n  input.setAttribute('value', id);\n  input.setAttribute('name', 'field');\n  var label = document.createElement('label');\n  label.style.marginLeft = '4px';\n  label.setAttribute('for', id);\n  label.innerHTML = name;\n  div.appendChild(input);\n  div.appendChild(label);\n  return div;\n};\nViewerSelector.prototype.createButton_ = function (label, onclick) {\n  var button = document.createElement('button');\n  button.innerHTML = label;\n  var s = button.style;\n  s.float = 'right';\n  s.textTransform = 'uppercase';\n  s.color = '#1094f7';\n  s.fontSize = '14px';\n  s.letterSpacing = 0;\n  s.border = 0;\n  s.background = 'none';\n  s.marginTop = '16px';\n  button.addEventListener('click', onclick);\n  return button;\n};\nvar commonjsGlobal$$1 = typeof window !== 'undefined' ? window : typeof commonjsGlobal !== 'undefined' ? commonjsGlobal : typeof self !== 'undefined' ? self : {};\nfunction unwrapExports$$1 (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\nfunction createCommonjsModule$$1(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\nvar NoSleep = createCommonjsModule$$1(function (module, exports) {\n(function webpackUniversalModuleDefinition(root, factory) {\n\tmodule.exports = factory();\n})(commonjsGlobal$$1, function() {\nreturn          (function(modules) {\n         \tvar installedModules = {};\n         \tfunction __webpack_require__(moduleId) {\n         \t\tif(installedModules[moduleId]) {\n         \t\t\treturn installedModules[moduleId].exports;\n         \t\t}\n         \t\tvar module = installedModules[moduleId] = {\n         \t\t\ti: moduleId,\n         \t\t\tl: false,\n         \t\t\texports: {}\n         \t\t};\n         \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n         \t\tmodule.l = true;\n         \t\treturn module.exports;\n         \t}\n         \t__webpack_require__.m = modules;\n         \t__webpack_require__.c = installedModules;\n         \t__webpack_require__.d = function(exports, name, getter) {\n         \t\tif(!__webpack_require__.o(exports, name)) {\n         \t\t\tObject.defineProperty(exports, name, {\n         \t\t\t\tconfigurable: false,\n         \t\t\t\tenumerable: true,\n         \t\t\t\tget: getter\n         \t\t\t});\n         \t\t}\n         \t};\n         \t__webpack_require__.n = function(module) {\n         \t\tvar getter = module && module.__esModule ?\n         \t\t\tfunction getDefault() { return module['default']; } :\n         \t\t\tfunction getModuleExports() { return module; };\n         \t\t__webpack_require__.d(getter, 'a', getter);\n         \t\treturn getter;\n         \t};\n         \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n         \t__webpack_require__.p = \"\";\n         \treturn __webpack_require__(__webpack_require__.s = 0);\n         })\n         ([\n      (function(module, exports, __webpack_require__) {\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar mediaFile = __webpack_require__(1);\nvar oldIOS = typeof navigator !== 'undefined' && parseFloat(('' + (/CPU.*OS ([0-9_]{3,4})[0-9_]{0,1}|(CPU like).*AppleWebKit.*Mobile/i.exec(navigator.userAgent) || [0, ''])[1]).replace('undefined', '3_2').replace('_', '.').replace('_', '')) < 10 && !window.MSStream;\nvar NoSleep = function () {\n  function NoSleep() {\n    _classCallCheck(this, NoSleep);\n    if (oldIOS) {\n      this.noSleepTimer = null;\n    } else {\n      this.noSleepVideo = document.createElement('video');\n      this.noSleepVideo.setAttribute('playsinline', '');\n      this.noSleepVideo.setAttribute('src', mediaFile);\n      this.noSleepVideo.addEventListener('timeupdate', function (e) {\n        if (this.noSleepVideo.currentTime > 0.5) {\n          this.noSleepVideo.currentTime = Math.random();\n        }\n      }.bind(this));\n    }\n  }\n  _createClass(NoSleep, [{\n    key: 'enable',\n    value: function enable() {\n      if (oldIOS) {\n        this.disable();\n        this.noSleepTimer = window.setInterval(function () {\n          window.location.href = '/';\n          window.setTimeout(window.stop, 0);\n        }, 15000);\n      } else {\n        this.noSleepVideo.play();\n      }\n    }\n  }, {\n    key: 'disable',\n    value: function disable() {\n      if (oldIOS) {\n        if (this.noSleepTimer) {\n          window.clearInterval(this.noSleepTimer);\n          this.noSleepTimer = null;\n        }\n      } else {\n        this.noSleepVideo.pause();\n      }\n    }\n  }]);\n  return NoSleep;\n}();\nmodule.exports = NoSleep;\n      }),\n      (function(module, exports, __webpack_require__) {\nmodule.exports = 'data:video/mp4;base64,AAAAIGZ0eXBtcDQyAAACAGlzb21pc28yYXZjMW1wNDEAAAAIZnJlZQAACKBtZGF0AAAC8wYF///v3EXpvebZSLeWLNgg2SPu73gyNjQgLSBjb3JlIDE0MiByMjQ3OSBkZDc5YTYxIC0gSC4yNjQvTVBFRy00IEFWQyBjb2RlYyAtIENvcHlsZWZ0IDIwMDMtMjAxNCAtIGh0dHA6Ly93d3cudmlkZW9sYW4ub3JnL3gyNjQuaHRtbCAtIG9wdGlvbnM6IGNhYmFjPTEgcmVmPTEgZGVibG9jaz0xOjA6MCBhbmFseXNlPTB4MToweDExMSBtZT1oZXggc3VibWU9MiBwc3k9MSBwc3lfcmQ9MS4wMDowLjAwIG1peGVkX3JlZj0wIG1lX3JhbmdlPTE2IGNocm9tYV9tZT0xIHRyZWxsaXM9MCA4eDhkY3Q9MCBjcW09MCBkZWFkem9uZT0yMSwxMSBmYXN0X3Bza2lwPTEgY2hyb21hX3FwX29mZnNldD0wIHRocmVhZHM9NiBsb29rYWhlYWRfdGhyZWFkcz0xIHNsaWNlZF90aHJlYWRzPTAgbnI9MCBkZWNpbWF0ZT0xIGludGVybGFjZWQ9MCBibHVyYXlfY29tcGF0PTAgY29uc3RyYWluZWRfaW50cmE9MCBiZnJhbWVzPTMgYl9weXJhbWlkPTIgYl9hZGFwdD0xIGJfYmlhcz0wIGRpcmVjdD0xIHdlaWdodGI9MSBvcGVuX2dvcD0wIHdlaWdodHA9MSBrZXlpbnQ9MzAwIGtleWludF9taW49MzAgc2NlbmVjdXQ9NDAgaW50cmFfcmVmcmVzaD0wIHJjX2xvb2thaGVhZD0xMCByYz1jcmYgbWJ0cmVlPTEgY3JmPTIwLjAgcWNvbXA9MC42MCBxcG1pbj0wIHFwbWF4PTY5IHFwc3RlcD00IHZidl9tYXhyYXRlPTIwMDAwIHZidl9idWZzaXplPTI1MDAwIGNyZl9tYXg9MC4wIG5hbF9ocmQ9bm9uZSBmaWxsZXI9MCBpcF9yYXRpbz0xLjQwIGFxPTE6MS4wMACAAAAAOWWIhAA3//p+C7v8tDDSTjf97w55i3SbRPO4ZY+hkjD5hbkAkL3zpJ6h/LR1CAABzgB1kqqzUorlhQAAAAxBmiQYhn/+qZYADLgAAAAJQZ5CQhX/AAj5IQAD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';\n      })\n         ]);\n});\n});\nvar NoSleep$1 = unwrapExports$$1(NoSleep);\nvar nextDisplayId = 1000;\nvar defaultLeftBounds = [0, 0, 0.5, 1];\nvar defaultRightBounds = [0.5, 0, 0.5, 1];\nvar raf = window.requestAnimationFrame;\nvar caf = window.cancelAnimationFrame;\nfunction VRFrameData() {\n  this.leftProjectionMatrix = new Float32Array(16);\n  this.leftViewMatrix = new Float32Array(16);\n  this.rightProjectionMatrix = new Float32Array(16);\n  this.rightViewMatrix = new Float32Array(16);\n  this.pose = null;\n}\nfunction VRDisplayCapabilities(config) {\n  Object.defineProperties(this, {\n    hasPosition: {\n      writable: false, enumerable: true, value: config.hasPosition\n    },\n    hasExternalDisplay: {\n      writable: false, enumerable: true, value: config.hasExternalDisplay\n    },\n    canPresent: {\n      writable: false, enumerable: true, value: config.canPresent\n    },\n    maxLayers: {\n      writable: false, enumerable: true, value: config.maxLayers\n    },\n    hasOrientation: {\n      enumerable: true, get: function get() {\n        deprecateWarning('VRDisplayCapabilities.prototype.hasOrientation', 'VRDisplay.prototype.getFrameData');\n        return config.hasOrientation;\n      }\n    }\n  });\n}\nfunction VRDisplay(config) {\n  config = config || {};\n  var USE_WAKELOCK = 'wakelock' in config ? config.wakelock : true;\n  this.isPolyfilled = true;\n  this.displayId = nextDisplayId++;\n  this.displayName = '';\n  this.depthNear = 0.01;\n  this.depthFar = 10000.0;\n  this.isPresenting = false;\n  Object.defineProperty(this, 'isConnected', {\n    get: function get() {\n      deprecateWarning('VRDisplay.prototype.isConnected', 'VRDisplayCapabilities.prototype.hasExternalDisplay');\n      return false;\n    }\n  });\n  this.capabilities = new VRDisplayCapabilities({\n    hasPosition: false,\n    hasOrientation: false,\n    hasExternalDisplay: false,\n    canPresent: false,\n    maxLayers: 1\n  });\n  this.stageParameters = null;\n  this.waitingForPresent_ = false;\n  this.layer_ = null;\n  this.originalParent_ = null;\n  this.fullscreenElement_ = null;\n  this.fullscreenWrapper_ = null;\n  this.fullscreenElementCachedStyle_ = null;\n  this.fullscreenEventTarget_ = null;\n  this.fullscreenChangeHandler_ = null;\n  this.fullscreenErrorHandler_ = null;\n  if (USE_WAKELOCK && isMobile()) {\n    this.wakelock_ = new NoSleep$1();\n  }\n}\nVRDisplay.prototype.getFrameData = function (frameData) {\n  return frameDataFromPose(frameData, this._getPose(), this);\n};\nVRDisplay.prototype.getPose = function () {\n  deprecateWarning('VRDisplay.prototype.getPose', 'VRDisplay.prototype.getFrameData');\n  return this._getPose();\n};\nVRDisplay.prototype.resetPose = function () {\n  deprecateWarning('VRDisplay.prototype.resetPose');\n  return this._resetPose();\n};\nVRDisplay.prototype.getImmediatePose = function () {\n  deprecateWarning('VRDisplay.prototype.getImmediatePose', 'VRDisplay.prototype.getFrameData');\n  return this._getPose();\n};\nVRDisplay.prototype.requestAnimationFrame = function (callback) {\n  return raf(callback);\n};\nVRDisplay.prototype.cancelAnimationFrame = function (id) {\n  return caf(id);\n};\nVRDisplay.prototype.wrapForFullscreen = function (element) {\n  if (isIOS()) {\n    return element;\n  }\n  if (!this.fullscreenWrapper_) {\n    this.fullscreenWrapper_ = document.createElement('div');\n    var cssProperties = ['height: ' + Math.min(screen.height, screen.width) + 'px !important', 'top: 0 !important', 'left: 0 !important', 'right: 0 !important', 'border: 0', 'margin: 0', 'padding: 0', 'z-index: 999999 !important', 'position: fixed'];\n    this.fullscreenWrapper_.setAttribute('style', cssProperties.join('; ') + ';');\n    this.fullscreenWrapper_.classList.add('webvr-polyfill-fullscreen-wrapper');\n  }\n  if (this.fullscreenElement_ == element) {\n    return this.fullscreenWrapper_;\n  }\n  if (this.fullscreenElement_) {\n    if (this.originalParent_) {\n      this.originalParent_.appendChild(this.fullscreenElement_);\n    } else {\n      this.fullscreenElement_.parentElement.removeChild(this.fullscreenElement_);\n    }\n  }\n  this.fullscreenElement_ = element;\n  this.originalParent_ = element.parentElement;\n  if (!this.originalParent_) {\n    document.body.appendChild(element);\n  }\n  if (!this.fullscreenWrapper_.parentElement) {\n    var parent = this.fullscreenElement_.parentElement;\n    parent.insertBefore(this.fullscreenWrapper_, this.fullscreenElement_);\n    parent.removeChild(this.fullscreenElement_);\n  }\n  this.fullscreenWrapper_.insertBefore(this.fullscreenElement_, this.fullscreenWrapper_.firstChild);\n  this.fullscreenElementCachedStyle_ = this.fullscreenElement_.getAttribute('style');\n  var self = this;\n  function applyFullscreenElementStyle() {\n    if (!self.fullscreenElement_) {\n      return;\n    }\n    var cssProperties = ['position: absolute', 'top: 0', 'left: 0', 'width: ' + Math.max(screen.width, screen.height) + 'px', 'height: ' + Math.min(screen.height, screen.width) + 'px', 'border: 0', 'margin: 0', 'padding: 0'];\n    self.fullscreenElement_.setAttribute('style', cssProperties.join('; ') + ';');\n  }\n  applyFullscreenElementStyle();\n  return this.fullscreenWrapper_;\n};\nVRDisplay.prototype.removeFullscreenWrapper = function () {\n  if (!this.fullscreenElement_) {\n    return;\n  }\n  var element = this.fullscreenElement_;\n  if (this.fullscreenElementCachedStyle_) {\n    element.setAttribute('style', this.fullscreenElementCachedStyle_);\n  } else {\n    element.removeAttribute('style');\n  }\n  this.fullscreenElement_ = null;\n  this.fullscreenElementCachedStyle_ = null;\n  var parent = this.fullscreenWrapper_.parentElement;\n  this.fullscreenWrapper_.removeChild(element);\n  if (this.originalParent_ === parent) {\n    parent.insertBefore(element, this.fullscreenWrapper_);\n  }\n  else if (this.originalParent_) {\n      this.originalParent_.appendChild(element);\n    }\n  parent.removeChild(this.fullscreenWrapper_);\n  return element;\n};\nVRDisplay.prototype.requestPresent = function (layers) {\n  var wasPresenting = this.isPresenting;\n  var self = this;\n  if (!(layers instanceof Array)) {\n    deprecateWarning('VRDisplay.prototype.requestPresent with non-array argument', 'an array of VRLayers as the first argument');\n    layers = [layers];\n  }\n  return new Promise(function (resolve, reject) {\n    if (!self.capabilities.canPresent) {\n      reject(new Error('VRDisplay is not capable of presenting.'));\n      return;\n    }\n    if (layers.length == 0 || layers.length > self.capabilities.maxLayers) {\n      reject(new Error('Invalid number of layers.'));\n      return;\n    }\n    var incomingLayer = layers[0];\n    if (!incomingLayer.source) {\n      resolve();\n      return;\n    }\n    var leftBounds = incomingLayer.leftBounds || defaultLeftBounds;\n    var rightBounds = incomingLayer.rightBounds || defaultRightBounds;\n    if (wasPresenting) {\n      var layer = self.layer_;\n      if (layer.source !== incomingLayer.source) {\n        layer.source = incomingLayer.source;\n      }\n      for (var i = 0; i < 4; i++) {\n        layer.leftBounds[i] = leftBounds[i];\n        layer.rightBounds[i] = rightBounds[i];\n      }\n      self.wrapForFullscreen(self.layer_.source);\n      self.updatePresent_();\n      resolve();\n      return;\n    }\n    self.layer_ = {\n      predistorted: incomingLayer.predistorted,\n      source: incomingLayer.source,\n      leftBounds: leftBounds.slice(0),\n      rightBounds: rightBounds.slice(0)\n    };\n    self.waitingForPresent_ = false;\n    if (self.layer_ && self.layer_.source) {\n      var fullscreenElement = self.wrapForFullscreen(self.layer_.source);\n      var onFullscreenChange = function onFullscreenChange() {\n        var actualFullscreenElement = getFullscreenElement();\n        self.isPresenting = fullscreenElement === actualFullscreenElement;\n        if (self.isPresenting) {\n          if (screen.orientation && screen.orientation.lock) {\n            screen.orientation.lock('landscape-primary').catch(function (error) {\n              console.error('screen.orientation.lock() failed due to', error.message);\n            });\n          }\n          self.waitingForPresent_ = false;\n          self.beginPresent_();\n          resolve();\n        } else {\n          if (screen.orientation && screen.orientation.unlock) {\n            screen.orientation.unlock();\n          }\n          self.removeFullscreenWrapper();\n          self.disableWakeLock();\n          self.endPresent_();\n          self.removeFullscreenListeners_();\n        }\n        self.fireVRDisplayPresentChange_();\n      };\n      var onFullscreenError = function onFullscreenError() {\n        if (!self.waitingForPresent_) {\n          return;\n        }\n        self.removeFullscreenWrapper();\n        self.removeFullscreenListeners_();\n        self.disableWakeLock();\n        self.waitingForPresent_ = false;\n        self.isPresenting = false;\n        reject(new Error('Unable to present.'));\n      };\n      self.addFullscreenListeners_(fullscreenElement, onFullscreenChange, onFullscreenError);\n      if (requestFullscreen(fullscreenElement)) {\n        self.enableWakeLock();\n        self.waitingForPresent_ = true;\n      } else if (isIOS() || isWebViewAndroid()) {\n        self.enableWakeLock();\n        self.isPresenting = true;\n        self.beginPresent_();\n        self.fireVRDisplayPresentChange_();\n        resolve();\n      }\n    }\n    if (!self.waitingForPresent_ && !isIOS()) {\n      exitFullscreen();\n      reject(new Error('Unable to present.'));\n    }\n  });\n};\nVRDisplay.prototype.exitPresent = function () {\n  var wasPresenting = this.isPresenting;\n  var self = this;\n  this.isPresenting = false;\n  this.layer_ = null;\n  this.disableWakeLock();\n  return new Promise(function (resolve, reject) {\n    if (wasPresenting) {\n      if (!exitFullscreen() && isIOS()) {\n        self.endPresent_();\n        self.fireVRDisplayPresentChange_();\n      }\n      if (isWebViewAndroid()) {\n        self.removeFullscreenWrapper();\n        self.removeFullscreenListeners_();\n        self.endPresent_();\n        self.fireVRDisplayPresentChange_();\n      }\n      resolve();\n    } else {\n      reject(new Error('Was not presenting to VRDisplay.'));\n    }\n  });\n};\nVRDisplay.prototype.getLayers = function () {\n  if (this.layer_) {\n    return [this.layer_];\n  }\n  return [];\n};\nVRDisplay.prototype.fireVRDisplayPresentChange_ = function () {\n  var event = new CustomEvent('vrdisplaypresentchange', { detail: { display: this } });\n  window.dispatchEvent(event);\n};\nVRDisplay.prototype.fireVRDisplayConnect_ = function () {\n  var event = new CustomEvent('vrdisplayconnect', { detail: { display: this } });\n  window.dispatchEvent(event);\n};\nVRDisplay.prototype.addFullscreenListeners_ = function (element, changeHandler, errorHandler) {\n  this.removeFullscreenListeners_();\n  this.fullscreenEventTarget_ = element;\n  this.fullscreenChangeHandler_ = changeHandler;\n  this.fullscreenErrorHandler_ = errorHandler;\n  if (changeHandler) {\n    if (document.fullscreenEnabled) {\n      element.addEventListener('fullscreenchange', changeHandler, false);\n    } else if (document.webkitFullscreenEnabled) {\n      element.addEventListener('webkitfullscreenchange', changeHandler, false);\n    } else if (document.mozFullScreenEnabled) {\n      document.addEventListener('mozfullscreenchange', changeHandler, false);\n    } else if (document.msFullscreenEnabled) {\n      element.addEventListener('msfullscreenchange', changeHandler, false);\n    }\n  }\n  if (errorHandler) {\n    if (document.fullscreenEnabled) {\n      element.addEventListener('fullscreenerror', errorHandler, false);\n    } else if (document.webkitFullscreenEnabled) {\n      element.addEventListener('webkitfullscreenerror', errorHandler, false);\n    } else if (document.mozFullScreenEnabled) {\n      document.addEventListener('mozfullscreenerror', errorHandler, false);\n    } else if (document.msFullscreenEnabled) {\n      element.addEventListener('msfullscreenerror', errorHandler, false);\n    }\n  }\n};\nVRDisplay.prototype.removeFullscreenListeners_ = function () {\n  if (!this.fullscreenEventTarget_) return;\n  var element = this.fullscreenEventTarget_;\n  if (this.fullscreenChangeHandler_) {\n    var changeHandler = this.fullscreenChangeHandler_;\n    element.removeEventListener('fullscreenchange', changeHandler, false);\n    element.removeEventListener('webkitfullscreenchange', changeHandler, false);\n    document.removeEventListener('mozfullscreenchange', changeHandler, false);\n    element.removeEventListener('msfullscreenchange', changeHandler, false);\n  }\n  if (this.fullscreenErrorHandler_) {\n    var errorHandler = this.fullscreenErrorHandler_;\n    element.removeEventListener('fullscreenerror', errorHandler, false);\n    element.removeEventListener('webkitfullscreenerror', errorHandler, false);\n    document.removeEventListener('mozfullscreenerror', errorHandler, false);\n    element.removeEventListener('msfullscreenerror', errorHandler, false);\n  }\n  this.fullscreenEventTarget_ = null;\n  this.fullscreenChangeHandler_ = null;\n  this.fullscreenErrorHandler_ = null;\n};\nVRDisplay.prototype.enableWakeLock = function () {\n  if (this.wakelock_) {\n    this.wakelock_.enable();\n  }\n};\nVRDisplay.prototype.disableWakeLock = function () {\n  if (this.wakelock_) {\n    this.wakelock_.disable();\n  }\n};\nVRDisplay.prototype.beginPresent_ = function () {\n};\nVRDisplay.prototype.endPresent_ = function () {\n};\nVRDisplay.prototype.submitFrame = function (pose) {\n};\nVRDisplay.prototype.getEyeParameters = function (whichEye) {\n  return null;\n};\nvar config = {\n  ADDITIONAL_VIEWERS: [],\n  DEFAULT_VIEWER: '',\n  MOBILE_WAKE_LOCK: true,\n  DEBUG: false,\n  DPDB_URL: 'https://dpdb.webvr.rocks/dpdb.json',\n  K_FILTER: 0.98,\n  PREDICTION_TIME_S: 0.040,\n  CARDBOARD_UI_DISABLED: false,\n  ROTATE_INSTRUCTIONS_DISABLED: false,\n  YAW_ONLY: false,\n  BUFFER_SCALE: 0.5,\n  DIRTY_SUBMIT_FRAME_BINDINGS: false\n};\nvar Eye = {\n  LEFT: 'left',\n  RIGHT: 'right'\n};\nfunction CardboardVRDisplay(config$$1) {\n  var defaults = extend({}, config);\n  config$$1 = extend(defaults, config$$1 || {});\n  VRDisplay.call(this, {\n    wakelock: config$$1.MOBILE_WAKE_LOCK\n  });\n  this.config = config$$1;\n  this.displayName = 'Cardboard VRDisplay';\n  this.capabilities = new VRDisplayCapabilities({\n    hasPosition: false,\n    hasOrientation: true,\n    hasExternalDisplay: false,\n    canPresent: true,\n    maxLayers: 1\n  });\n  this.stageParameters = null;\n  this.bufferScale_ = this.config.BUFFER_SCALE;\n  this.poseSensor_ = new PoseSensor(this.config);\n  this.distorter_ = null;\n  this.cardboardUI_ = null;\n  this.dpdb_ = new Dpdb(this.config.DPDB_URL, this.onDeviceParamsUpdated_.bind(this));\n  this.deviceInfo_ = new DeviceInfo(this.dpdb_.getDeviceParams(), config$$1.ADDITIONAL_VIEWERS);\n  this.viewerSelector_ = new ViewerSelector(config$$1.DEFAULT_VIEWER);\n  this.viewerSelector_.onChange(this.onViewerChanged_.bind(this));\n  this.deviceInfo_.setViewer(this.viewerSelector_.getCurrentViewer());\n  if (!this.config.ROTATE_INSTRUCTIONS_DISABLED) {\n    this.rotateInstructions_ = new RotateInstructions();\n  }\n  if (isIOS()) {\n    window.addEventListener('resize', this.onResize_.bind(this));\n  }\n}\nCardboardVRDisplay.prototype = Object.create(VRDisplay.prototype);\nCardboardVRDisplay.prototype._getPose = function () {\n  return {\n    position: null,\n    orientation: this.poseSensor_.getOrientation(),\n    linearVelocity: null,\n    linearAcceleration: null,\n    angularVelocity: null,\n    angularAcceleration: null\n  };\n};\nCardboardVRDisplay.prototype._resetPose = function () {\n  if (this.poseSensor_.resetPose) {\n    this.poseSensor_.resetPose();\n  }\n};\nCardboardVRDisplay.prototype._getFieldOfView = function (whichEye) {\n  var fieldOfView;\n  if (whichEye == Eye.LEFT) {\n    fieldOfView = this.deviceInfo_.getFieldOfViewLeftEye();\n  } else if (whichEye == Eye.RIGHT) {\n    fieldOfView = this.deviceInfo_.getFieldOfViewRightEye();\n  } else {\n    console.error('Invalid eye provided: %s', whichEye);\n    return null;\n  }\n  return fieldOfView;\n};\nCardboardVRDisplay.prototype._getEyeOffset = function (whichEye) {\n  var offset;\n  if (whichEye == Eye.LEFT) {\n    offset = [-this.deviceInfo_.viewer.interLensDistance * 0.5, 0.0, 0.0];\n  } else if (whichEye == Eye.RIGHT) {\n    offset = [this.deviceInfo_.viewer.interLensDistance * 0.5, 0.0, 0.0];\n  } else {\n    console.error('Invalid eye provided: %s', whichEye);\n    return null;\n  }\n  return offset;\n};\nCardboardVRDisplay.prototype.getEyeParameters = function (whichEye) {\n  var offset = this._getEyeOffset(whichEye);\n  var fieldOfView = this._getFieldOfView(whichEye);\n  var eyeParams = {\n    offset: offset,\n    renderWidth: this.deviceInfo_.device.width * 0.5 * this.bufferScale_,\n    renderHeight: this.deviceInfo_.device.height * this.bufferScale_\n  };\n  Object.defineProperty(eyeParams, 'fieldOfView', {\n    enumerable: true,\n    get: function get() {\n      deprecateWarning('VRFieldOfView', 'VRFrameData\\'s projection matrices');\n      return fieldOfView;\n    }\n  });\n  return eyeParams;\n};\nCardboardVRDisplay.prototype.onDeviceParamsUpdated_ = function (newParams) {\n  if (this.config.DEBUG) {\n    console.log('DPDB reported that device params were updated.');\n  }\n  this.deviceInfo_.updateDeviceParams(newParams);\n  if (this.distorter_) {\n    this.distorter_.updateDeviceInfo(this.deviceInfo_);\n  }\n};\nCardboardVRDisplay.prototype.updateBounds_ = function () {\n  if (this.layer_ && this.distorter_ && (this.layer_.leftBounds || this.layer_.rightBounds)) {\n    this.distorter_.setTextureBounds(this.layer_.leftBounds, this.layer_.rightBounds);\n  }\n};\nCardboardVRDisplay.prototype.beginPresent_ = function () {\n  var gl = this.layer_.source.getContext('webgl');\n  if (!gl) gl = this.layer_.source.getContext('experimental-webgl');\n  if (!gl) gl = this.layer_.source.getContext('webgl2');\n  if (!gl) return;\n  if (this.layer_.predistorted) {\n    if (!this.config.CARDBOARD_UI_DISABLED) {\n      gl.canvas.width = getScreenWidth() * this.bufferScale_;\n      gl.canvas.height = getScreenHeight() * this.bufferScale_;\n      this.cardboardUI_ = new CardboardUI(gl);\n    }\n  } else {\n    if (!this.config.CARDBOARD_UI_DISABLED) {\n      this.cardboardUI_ = new CardboardUI(gl);\n    }\n    this.distorter_ = new CardboardDistorter(gl, this.cardboardUI_, this.config.BUFFER_SCALE, this.config.DIRTY_SUBMIT_FRAME_BINDINGS);\n    this.distorter_.updateDeviceInfo(this.deviceInfo_);\n  }\n  if (this.cardboardUI_) {\n    this.cardboardUI_.listen(function (e) {\n      this.viewerSelector_.show(this.layer_.source.parentElement);\n      e.stopPropagation();\n      e.preventDefault();\n    }.bind(this), function (e) {\n      this.exitPresent();\n      e.stopPropagation();\n      e.preventDefault();\n    }.bind(this));\n  }\n  if (this.rotateInstructions_) {\n    if (isLandscapeMode() && isMobile()) {\n      this.rotateInstructions_.showTemporarily(3000, this.layer_.source.parentElement);\n    } else {\n      this.rotateInstructions_.update();\n    }\n  }\n  this.orientationHandler = this.onOrientationChange_.bind(this);\n  window.addEventListener('orientationchange', this.orientationHandler);\n  this.vrdisplaypresentchangeHandler = this.updateBounds_.bind(this);\n  window.addEventListener('vrdisplaypresentchange', this.vrdisplaypresentchangeHandler);\n  this.fireVRDisplayDeviceParamsChange_();\n};\nCardboardVRDisplay.prototype.endPresent_ = function () {\n  if (this.distorter_) {\n    this.distorter_.destroy();\n    this.distorter_ = null;\n  }\n  if (this.cardboardUI_) {\n    this.cardboardUI_.destroy();\n    this.cardboardUI_ = null;\n  }\n  if (this.rotateInstructions_) {\n    this.rotateInstructions_.hide();\n  }\n  this.viewerSelector_.hide();\n  window.removeEventListener('orientationchange', this.orientationHandler);\n  window.removeEventListener('vrdisplaypresentchange', this.vrdisplaypresentchangeHandler);\n};\nCardboardVRDisplay.prototype.updatePresent_ = function () {\n  this.endPresent_();\n  this.beginPresent_();\n};\nCardboardVRDisplay.prototype.submitFrame = function (pose) {\n  if (this.distorter_) {\n    this.updateBounds_();\n    this.distorter_.submitFrame();\n  } else if (this.cardboardUI_ && this.layer_) {\n    var canvas = this.layer_.source.getContext('webgl').canvas;\n    if (canvas.width != this.lastWidth || canvas.height != this.lastHeight) {\n      this.cardboardUI_.onResize();\n    }\n    this.lastWidth = canvas.width;\n    this.lastHeight = canvas.height;\n    this.cardboardUI_.render();\n  }\n};\nCardboardVRDisplay.prototype.onOrientationChange_ = function (e) {\n  this.viewerSelector_.hide();\n  if (this.rotateInstructions_) {\n    this.rotateInstructions_.update();\n  }\n  this.onResize_();\n};\nCardboardVRDisplay.prototype.onResize_ = function (e) {\n  if (this.layer_) {\n    var gl = this.layer_.source.getContext('webgl');\n    var cssProperties = ['position: absolute', 'top: 0', 'left: 0',\n    'width: 100vw', 'height: 100vh', 'border: 0', 'margin: 0',\n    'padding: 0px', 'box-sizing: content-box'];\n    gl.canvas.setAttribute('style', cssProperties.join('; ') + ';');\n    safariCssSizeWorkaround(gl.canvas);\n  }\n};\nCardboardVRDisplay.prototype.onViewerChanged_ = function (viewer) {\n  this.deviceInfo_.setViewer(viewer);\n  if (this.distorter_) {\n    this.distorter_.updateDeviceInfo(this.deviceInfo_);\n  }\n  this.fireVRDisplayDeviceParamsChange_();\n};\nCardboardVRDisplay.prototype.fireVRDisplayDeviceParamsChange_ = function () {\n  var event = new CustomEvent('vrdisplaydeviceparamschange', {\n    detail: {\n      vrdisplay: this,\n      deviceInfo: this.deviceInfo_\n    }\n  });\n  window.dispatchEvent(event);\n};\nCardboardVRDisplay.VRFrameData = VRFrameData;\nCardboardVRDisplay.VRDisplay = VRDisplay;\nreturn CardboardVRDisplay;\n})));\n});\nvar CardboardVRDisplay = unwrapExports(cardboardVrDisplay);\n\nvar version = \"0.10.8\";\n\nvar DefaultConfig = {\n  ADDITIONAL_VIEWERS: [],\n  DEFAULT_VIEWER: '',\n  PROVIDE_MOBILE_VRDISPLAY: true,\n  GET_VR_DISPLAYS_TIMEOUT: 1000,\n  MOBILE_WAKE_LOCK: true,\n  DEBUG: false,\n  DPDB_URL: 'https://dpdb.webvr.rocks/dpdb.json',\n  K_FILTER: 0.98,\n  PREDICTION_TIME_S: 0.040,\n  CARDBOARD_UI_DISABLED: false,\n  ROTATE_INSTRUCTIONS_DISABLED: false,\n  YAW_ONLY: false,\n  BUFFER_SCALE: 0.5,\n  DIRTY_SUBMIT_FRAME_BINDINGS: false\n};\n\nfunction WebVRPolyfill(config) {\n  this.config = extend(extend({}, DefaultConfig), config);\n  this.polyfillDisplays = [];\n  this.enabled = false;\n  this.hasNative = 'getVRDisplays' in navigator;\n  this.native = {};\n  this.native.getVRDisplays = navigator.getVRDisplays;\n  this.native.VRFrameData = window.VRFrameData;\n  this.native.VRDisplay = window.VRDisplay;\n  if (!this.hasNative || this.config.PROVIDE_MOBILE_VRDISPLAY && isMobile()) {\n    this.enable();\n    this.getVRDisplays().then(function (displays) {\n      if (displays && displays[0] && displays[0].fireVRDisplayConnect_) {\n        displays[0].fireVRDisplayConnect_();\n      }\n    });\n  }\n}\nWebVRPolyfill.prototype.getPolyfillDisplays = function () {\n  if (this._polyfillDisplaysPopulated) {\n    return this.polyfillDisplays;\n  }\n  if (isMobile()) {\n    var vrDisplay = new CardboardVRDisplay({\n      ADDITIONAL_VIEWERS: this.config.ADDITIONAL_VIEWERS,\n      DEFAULT_VIEWER: this.config.DEFAULT_VIEWER,\n      MOBILE_WAKE_LOCK: this.config.MOBILE_WAKE_LOCK,\n      DEBUG: this.config.DEBUG,\n      DPDB_URL: this.config.DPDB_URL,\n      CARDBOARD_UI_DISABLED: this.config.CARDBOARD_UI_DISABLED,\n      K_FILTER: this.config.K_FILTER,\n      PREDICTION_TIME_S: this.config.PREDICTION_TIME_S,\n      ROTATE_INSTRUCTIONS_DISABLED: this.config.ROTATE_INSTRUCTIONS_DISABLED,\n      YAW_ONLY: this.config.YAW_ONLY,\n      BUFFER_SCALE: this.config.BUFFER_SCALE,\n      DIRTY_SUBMIT_FRAME_BINDINGS: this.config.DIRTY_SUBMIT_FRAME_BINDINGS\n    });\n    this.polyfillDisplays.push(vrDisplay);\n  }\n  this._polyfillDisplaysPopulated = true;\n  return this.polyfillDisplays;\n};\nWebVRPolyfill.prototype.enable = function () {\n  this.enabled = true;\n  if (this.hasNative && this.native.VRFrameData) {\n    var NativeVRFrameData = this.native.VRFrameData;\n    var nativeFrameData = new this.native.VRFrameData();\n    var nativeGetFrameData = this.native.VRDisplay.prototype.getFrameData;\n    window.VRDisplay.prototype.getFrameData = function (frameData) {\n      if (frameData instanceof NativeVRFrameData) {\n        nativeGetFrameData.call(this, frameData);\n        return;\n      }\n      nativeGetFrameData.call(this, nativeFrameData);\n      frameData.pose = nativeFrameData.pose;\n      copyArray(nativeFrameData.leftProjectionMatrix, frameData.leftProjectionMatrix);\n      copyArray(nativeFrameData.rightProjectionMatrix, frameData.rightProjectionMatrix);\n      copyArray(nativeFrameData.leftViewMatrix, frameData.leftViewMatrix);\n      copyArray(nativeFrameData.rightViewMatrix, frameData.rightViewMatrix);\n    };\n  }\n  navigator.getVRDisplays = this.getVRDisplays.bind(this);\n  window.VRDisplay = CardboardVRDisplay.VRDisplay;\n  window.VRFrameData = CardboardVRDisplay.VRFrameData;\n};\nWebVRPolyfill.prototype.getVRDisplays = function () {\n  var _this = this;\n  var config = this.config;\n  if (!this.hasNative) {\n    return Promise.resolve(this.getPolyfillDisplays());\n  }\n  var timeoutId;\n  var vrDisplaysNative = this.native.getVRDisplays.call(navigator);\n  var timeoutPromise = new Promise(function (resolve) {\n    timeoutId = setTimeout(function () {\n      console.warn('Native WebVR implementation detected, but `getVRDisplays()` failed to resolve. Falling back to polyfill.');\n      resolve([]);\n    }, config.GET_VR_DISPLAYS_TIMEOUT);\n  });\n  return race([vrDisplaysNative, timeoutPromise]).then(function (nativeDisplays) {\n    clearTimeout(timeoutId);\n    return nativeDisplays.length > 0 ? nativeDisplays : _this.getPolyfillDisplays();\n  });\n};\nWebVRPolyfill.version = version;\nWebVRPolyfill.VRFrameData = CardboardVRDisplay.VRFrameData;\nWebVRPolyfill.VRDisplay = CardboardVRDisplay.VRDisplay;\n\n\nvar webvrPolyfill = Object.freeze({\n\tdefault: WebVRPolyfill\n});\n\nvar require$$0 = ( webvrPolyfill && WebVRPolyfill ) || webvrPolyfill;\n\nif (typeof commonjsGlobal !== 'undefined' && commonjsGlobal.window) {\n  if (!commonjsGlobal.document) {\n    commonjsGlobal.document = commonjsGlobal.window.document;\n  }\n  if (!commonjsGlobal.navigator) {\n    commonjsGlobal.navigator = commonjsGlobal.window.navigator;\n  }\n}\nvar src = require$$0;\n\nreturn src;\n\n})));\n","<template>\r\n  <div>\r\n    <Tabinfor>\r\n      <template #left>\r\n        <div id=\"sub-title\">\r\n          模型导入与3D可视化展示<i class=\"iconfont icon-dianji\" />\r\n        </div>\r\n      </template>\r\n    </Tabinfor>\r\n    <el-divider />\r\n\r\n\r\n    <el-row gutter=\"20\" justify=\"center\">\r\n\r\n      <el-col :span=\"8\">\r\n\r\n        <el-card class=\"render-box\" align=\"middle\">\r\n          <span class=\"go-bold\">文件上传</span>\r\n          <el-divider />\r\n\r\n          <el-card style=\"border-radius: 20px ;--el-border-color: #C0C4CC;\">\r\n            <div style=\"text-align: center;\">\r\n              <input name=\"inputFile\" type=\"file\" id=\"input\" display:flex justify-content:center align-items:center\r\n                ref=\"refFileA\" multiple=\"multiple\" @change=\"outputFileInformation($event)\">\r\n              <el-button type=\"primary\" class=\"btn-animate2 btn-animate__surround\" @click=\"remove\">\r\n                清空图片\r\n              </el-button>\r\n            </div>\r\n\r\n\r\n          </el-card>\r\n\r\n\r\n          <div class=\"custom-model\">\r\n            可选训练模型：\r\n            <el-radio v-for=\"(item, index) in modelPathArr\" :key=\"index\" v-model=\"upload.model_path\" class=\"choose-item\"\r\n              :label=\"item.model_path\">\r\n              {{ item.model_name }}\r\n            </el-radio>\r\n          </div>\r\n\r\n          <div class=\"handle-button\">\r\n            <el-button type=\"primary\" class=\" btn-animate btn-animate__shiny\" @click=\"uploadfile\">\r\n              开始推理\r\n            </el-button>\r\n          </div>\r\n        </el-card>\r\n\r\n\r\n        <el-card align=\"middle\">\r\n          <span class=\"go-bold\">标签与标注工具管理</span>\r\n          <el-divider />\r\n\r\n          <el-card align=\"middle\">\r\n            <el-row>\r\n              <el-col :span=\"12\" style=\"margin-bottom: 8px;margin-top: 8px\">\r\n                <i class=\"iconfont icon-wenjianjia\" /><label class=\"ui_button ui_button_primary\" for=\"inputFile\" style=\"background-color: grey;\r\n            border: 0 ;border-radius: 2px; color: white;  padding-bottom: 5px; padding-top: 5px; padding-left: 10px; padding-right: 10px; \r\n             \"\r\n               >导入标签</label>\r\n                <form><input type=\"file\" id=\"inputFile\" @change=\"handleFileUpload\"  style=\"display: none\" ref=\"filesImg\" ></form>\r\n                <!-- <el-button id =\"readBtn\" type=\"info\">载入标签</el-button> -->\r\n              </el-col>\r\n              <el-col :span=\"12\">\r\n\r\n                <el-button type=\"info\" @click=\"BiaoqianBaocun()\">标签导出</el-button>\r\n              </el-col>\r\n\r\n            </el-row>\r\n          </el-card>\r\n          <el-card>\r\n            \r\n            <el-col :span=\"24\">\r\n              <el-table ref=\"singleTable\" :data=\"tableData\" fixed highlight-current-row\r\n                @current-change=\"handleCurrentChange\" stripe border style=\"width: 100%\" height=\"300\">\r\n                <el-table-column type=\"index\" fixed label=\"值\" width=\"40\">\r\n\r\n                </el-table-column>\r\n                <el-table-column prop=\"r\" label=\"r\" width=\"60\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"g\" label=\"g\" width=\"60\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"b\" label=\"b\" width=\"60\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"name\" fixed label=\"器官\" width=\"50\">\r\n                </el-table-column>\r\n                <el-table-column align=\"right\" fixed=\"right\">\r\n                  <template #header>\r\n                    <el-button size=\"small\" @click=\"addItem()\" type=\"primary\" round>新增标签</el-button>\r\n                  </template>\r\n                  <template #default=\"scope\">\r\n                    <el-button size=\"small\" type=\"success\">修改标签</el-button>\r\n   \r\n                    <el-button size=\"small\" type=\"danger\" @click=\"handleDelete(scope.$index, scope.row)\">删除标签</el-button>\r\n                  </template>\r\n                </el-table-column>\r\n\r\n              </el-table>\r\n            </el-col>\r\n          </el-card>\r\n\r\n        </el-card>\r\n\r\n\r\n      </el-col>\r\n\r\n      <el-col :span=\"14\">\r\n        <el-card class=\"render-box\" align=\"middle\">\r\n          <span class=\"go-bold\">分割效果图3D展示</span>\r\n        </el-card>\r\n        <el-row justify=\":center\">\r\n          <el-col :span=\"12\">\r\n            <el-card style=\"border: 4px dashed var(--el-border-color)\" align=\"middle\">\r\n              <!-- <el-empty>\r\n\r\n              </el-empty> -->\r\n              <div id=\"container1\"></div>\r\n\r\n            </el-card>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-card style=\"border: 4px dashed var(--el-border-color)\" align=\"middle\">\r\n              <!-- <el-empty>\r\n                \r\n              </el-empty> -->\r\n              <div id=\"container\">\r\n              </div>\r\n\r\n            </el-card>\r\n          </el-col>\r\n        </el-row>\r\n        <el-row justify=\":center\">\r\n          <el-col :span=\"12\">\r\n            <el-card style=\"border: 4px dashed var(--el-border-color)\" align=\"middle\">\r\n              <!-- <el-empty>\r\n                \r\n              </el-empty> -->\r\n              <div id=\"container2\"></div>\r\n            </el-card>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-card style=\"border: 4px dashed var(--el-border-color)\" align=\"middle\">\r\n              <!-- <el-empty>\r\n                \r\n              </el-empty> -->\r\n              <div id=\"container3\"></div>\r\n\r\n            </el-card>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-row justify=\":center\">\r\n          <el-col :span=\"16\">\r\n\r\n            <el-table :data=\"BodyData\" stripe border style=\"width: 100%\" align=\"middle\" header-align=\"center\">\r\n              <el-table-column prop=\"h\" label=\" \" width=\"80\" />\r\n              <el-table-column prop=\"1\" label=\"脾脏\" width=\"60\" />\r\n              <el-table-column prop=\"2\" label=\"右肾\" width=\"60\" />\r\n              <el-table-column prop=\"3\" label=\"左肾\" width=\"60\" />\r\n              <el-table-column prop=\"4\" label=\"胆囊\" width=\"60\" />\r\n              <el-table-column prop=\"5\" label=\"食道\" width=\"60\" />\r\n              <el-table-column prop=\"6\" label=\"肝\" width=\"50\" />\r\n              <el-table-column prop=\"7\" label=\"胃\" width=\"70\" />\r\n              <el-table-column prop=\"8\" label=\"主动脉\" width=\"80\" />\r\n              <el-table-column prop=\"9\" label=\"下腔静脉\" width=\"90\" />\r\n              <el-table-column prop=\"10\" label=\"胰腺\" width=\"60\" />\r\n              <el-table-column prop=\"11\" label=\"右肾上腺\" width=\"90\" />\r\n              <el-table-column prop=\"12\" label=\"左肾上腺\" width=\"90\" />\r\n              <el-table-column prop=\"13\" label=\"十二指肠\" width=\"90\" />\r\n              <el-table-column prop=\"14\" label=\"膀胱\" width=\"60\" />\r\n              <el-table-column prop=\"15\" label=\"前列腺/子宫\" width=\"150\" />\r\n            </el-table>\r\n          </el-col>\r\n          <el-col :span=\"8\">\r\n\r\n            <el-table :data=\"ViewData\" border style=\"width: 100%\">\r\n              <el-table-column prop=\"h\" label=\" \" width=\"100\" height=\"113\" />\r\n              <el-table-column prop=\"X\" label=\"X\" width=\"70\" height=\"113\" />\r\n              <el-table-column prop=\"Y\" label=\"Y\" width=\"70\" height=\"113\" />\r\n              <el-table-column prop=\"Z\" label=\"Z\" width=\"70\" height=\"113\" />\r\n            </el-table>\r\n          </el-col>\r\n        </el-row>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-divider />\r\n\r\n    <Bottominfor />\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n\r\n<script>\r\nimport { atchDownload, downloadimgWithWords, getImgArrayBuffer } from \"@/utils/download.js\";\r\nimport { createSrc, imgUpload, getCustomModel } from \"@/api/upload\";\r\nimport { historyGetPage } from \"@/api/history\";\r\nimport { getUploadImg, goCompress, upload } from \"@/utils/getUploadImg\";\r\nimport ImgShow from \"@/components/ImgShow\";\r\nimport Tabinfor from \"@/components/Tabinfor\";\r\nimport Bottominfor from \"@/components/Bottominfor\";\r\nimport MyVueCropper from \"@/components/MyVueCropper\";\r\nimport readImageFile from 'itk/readImageFile'\r\nimport readImageDICOMFileSeries from 'itk/readImageDICOMFileSeries'\r\nimport vtkITKHelper from \"vtk.js/Sources/Common/DataModel/ITKHelper\";\r\nimport { ref } from 'vue';\r\nimport { ElTable } from 'element-plus';\r\nimport vtkFullScreenRenderWindow from 'vtk.js/Sources/Rendering/Misc/FullScreenRenderWindow';\r\n//import CsvExportor from \"csv-exportor\";\r\nimport vtkVolume from 'vtk.js/Sources/Rendering/Core/Volume';\r\nimport vtkVolumeMapper from 'vtk.js/Sources/Rendering/Core/VolumeMapper';\r\nimport vtkGenericRenderWindow from 'vtk.js/Sources/Rendering/Misc/GenericRenderWindow';\r\nimport vtkColorTransferFunction from 'vtk.js/Sources/Rendering/Core/ColorTransferFunction';\r\nimport vtkPiecewiseFunction from 'vtk.js/Sources/Common/DataModel/PiecewiseFunction';\r\n\r\nimport vtkColorMaps from 'vtk.js/Sources/Rendering/Core/ColorTransferFunction/ColorMaps';\r\nimport vtkImageMapper from 'vtk.js/Sources/Rendering/Core/ImageMapper';\r\nimport vtkImageSlice from 'vtk.js/Sources/Rendering/Core/ImageSlice';\r\nimport vtkInteractorStyleImage from 'vtk.js/Sources/Interaction/Style/InteractorStyleImage';\r\nimport ImageConstants from 'vtk.js/Sources/Rendering/Core/ImageMapper/Constants';\r\nimport vtkHttpDataAccessHelper from \"vtk.js/Sources/IO/Core/DataAccessHelper/HttpDataAccessHelper\";\r\nimport vtklTKlmageReader from \"vtk.js/Sources/IO/Misc/ITKImageReader\";\r\n// const handleEdit = ref(false)\r\n// const formLabelWidth = '140px'\r\n\r\n// var myArray = ['name', 'r', 'g', 'b'];\r\n// var jsonData = JSON.stringify(myArray);\r\n// var Blob = new Blob([jsonData],{type: \"application/json\"});\r\n// var fileWriter = new FileWriter(\"myArray.txt\");\r\n// fileWriter.write(blob);\r\n// 创建a标签\r\n\r\n\r\n    \r\nexport default {\r\n  name: \"Detectobjects\",\r\n  components: {\r\n    ImgShow,\r\n    Tabinfor,\r\n    Bottominfor,\r\n    MyVueCropper,\r\n  },\r\n  beforeRouteEnter(to, from, next) {\r\n    next((vm) => {\r\n      document.querySelector(\".el-main\").scrollTop = 0;\r\n    });\r\n  },\r\n  data() {\r\n    return {\r\n      tableData: [{\r\n\r\n        r: '',\r\n        g: '',\r\n        b: '',\r\n        name: '脾脏'\r\n\r\n      }, {\r\n\r\n        r: '',\r\n        g: '',\r\n        b: '',\r\n        name: '右肾'\r\n      }, {\r\n\r\n        r: '',\r\n        g: '',\r\n        b: '',\r\n        name: '左肾'\r\n      }, {\r\n\r\n        r: '',\r\n        g: '',\r\n        b: '',\r\n        name: '胆囊'\r\n      }, {\r\n\r\n        r: '',\r\n        g: '',\r\n        b: '',\r\n        name: '食道'\r\n      }, {\r\n\r\n        r: '',\r\n        g: '',\r\n        b: '',\r\n        name: '肝'\r\n      }, {\r\n\r\n        r: '',\r\n        g: '',\r\n        b: '',\r\n        name: '胃'\r\n      }, {\r\n\r\n        r: '',\r\n        g: '',\r\n        b: '',\r\n        name: '主动脉'\r\n      }, {\r\n\r\n        r: '',\r\n        g: '',\r\n        b: '',\r\n        name: '下腔静脉'\r\n      }, {\r\n\r\n        r: '',\r\n        g: '',\r\n        b: '',\r\n        name: '胰腺'\r\n      }, {\r\n\r\n        r: '',\r\n        g: '',\r\n        b: '',\r\n        name: '右肾上腺'\r\n      }, {\r\n\r\n        r: '',\r\n        g: '',\r\n        b: '',\r\n        name: '左肾上腺'\r\n      }, {\r\n\r\n        r: '',\r\n        g: '',\r\n        b: '',\r\n        name: '十二指肠'\r\n      }, {\r\n\r\n        r: '',\r\n        g: '',\r\n        b: '',\r\n        name: '膀胱'\r\n      }, {\r\n\r\n        r: '',\r\n        g: '',\r\n        b: '',\r\n        name: '前列腺/子宫'\r\n      }],\r\n      BodyData: [\r\n        {\r\n          h: '体积ml',\r\n          1: '',\r\n          2: '',\r\n          3: '',\r\n          4: '',\r\n          5: '',\r\n          6: '',\r\n          7: '',\r\n          8: '',\r\n          9: '',\r\n          10: '',\r\n          11: '',\r\n          12: '',\r\n          13: '',\r\n          14: '',\r\n\r\n        },\r\n        {\r\n          h: '个数',\r\n          1: '',\r\n          2: '',\r\n          3: '',\r\n          4: '',\r\n          5: '',\r\n          6: '',\r\n          7: '',\r\n          8: '',\r\n          9: '',\r\n          10: '',\r\n          11: '',\r\n          12: '',\r\n          13: '',\r\n          14: '',\r\n        },\r\n\r\n      ],\r\n      ViewData: [\r\n        {\r\n          h: '直径(cm)',\r\n          X: '',\r\n          Y: '',\r\n          Z: '',\r\n        },\r\n        {\r\n          h: '面积(cm²)',\r\n          X: '',\r\n          Y: '',\r\n          Z: '',\r\n        },\r\n      ],\r\n      currentRow: null,\r\n      isUpload: true,\r\n      canUpload: true,\r\n      claheImg: [],\r\n      sharpenImg: [],\r\n      before: [],\r\n      fileimg: \"\",\r\n      file: {},\r\n      isNotCut: true,\r\n      cutVisible: false,\r\n      funtype: \"目标检测\",\r\n      scrollTop: \"\",\r\n      fit: \"fill\",\r\n\r\n      fileList: [],\r\n      colorList: [],\r\n      uploadSrc: {\r\n        list: [],\r\n        prehandle: 0,\r\n        denoise: 0,\r\n        model_path: ''\r\n      },\r\n      modelPathArr: [],\r\n      prePhoto: {\r\n        list: [],\r\n        prehandle: 0,\r\n        type: 4\r\n      },\r\n      imgArr: []\r\n    };\r\n  },\r\n  watch: {\r\n    uploadSrc: {\r\n      handler(newVal, oldVal) {\r\n        this.uploadSrc = newVal\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    }\r\n  },\r\n  created() {\r\n    this.getUploadImg(\"目标检测\");\r\n    this.getCustomModel('object_detection').then((res) => {\r\n      this.modelPathArr = res.data.data\r\n      this.uploadSrc.model_path = this.modelPathArr[0]?.model_path\r\n    }).catch((rej) => { })\r\n  },\r\n\r\n  methods: {\r\n    getImgArrayBuffer,\r\n    atchDownload,\r\n    downloadimgWithWords,\r\n    imgUpload,\r\n    getCustomModel,\r\n    historyGetPage,\r\n    createSrc,\r\n    getUploadImg,\r\n    upload,\r\n    goCompress,\r\n    //getFileContent,\r\n\r\n    handleDelete(index, row) {\r\n      console.log(index,row)\r\n      this.tableData.splice(index, 1)\r\n      this.$message({\r\n        message: \"删除成功！\",\r\n        type: \"success\",\r\n      });\r\n\r\n    },\r\n    handleFileUpload(event) {\r\n      console.log(\"tableData1111\", this.tableData)\r\n    var file = inputFile.files[0];\r\n    let that = this\r\n    // 处理文件上传逻辑\r\n    //getFileContent(file);\r\n    var reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = function (event) {\r\n        var content = event.target.result;\r\n        var lines = content.split('\\n')\r\n        lines.shift()\r\n        console.log(\"lines\",lines)\r\n        // let tableData = []\r\n        for (var i = 0; i < lines.length; i++) {\r\n            // var items = lines[i].split(',');\r\n            \r\n            let old_items = lines[i].split(' ')\r\n            //console.log(\"old_items\", old_items)\r\n            let new_itmes = []\r\n            console.log(\"tableData\", that.tableData)\r\n            for(let obj of old_items){\r\n                if(obj){\r\n                    new_itmes.push(obj)\r\n                }\r\n            }\r\n\r\n            that.tableData[i].r = new_itmes[0].trim()\r\n            that.tableData[i].g = new_itmes[1].trim()\r\n            that.tableData[i].b = new_itmes[2].trim()\r\n\r\n        }\r\n        console.log(this.tableData);\r\n    };\r\n},\r\n\r\n\r\n    BiaoqianBaocun() {\r\n      var elementA = document.createElement('a');\r\n//文件的名称为时间戳加文件名后缀\r\nelementA.download = \"标签文件\" + \".txt\";\r\nelementA.style.display = 'none';\r\nlet arr = ['r'+'                    '+'g'+'                    '+'b'\r\n,this.tableData[0].r+'    '+this.tableData[0].g+'    '+this.tableData[0].b\r\n,this.tableData[1].r+'    '+this.tableData[1].g+'    '+this.tableData[1].b\r\n,this.tableData[2].r+'    '+this.tableData[2].g+'    '+this.tableData[2].b\r\n,this.tableData[3].r+'    '+this.tableData[3].g+'    '+this.tableData[3].b\r\n,this.tableData[4].r+'    '+this.tableData[4].g+'    '+this.tableData[4].b\r\n,this.tableData[5].r+'    '+this.tableData[5].g+'    '+this.tableData[5].b\r\n,this.tableData[6].r+'    '+this.tableData[6].g+'    '+this.tableData[6].b\r\n\r\n\r\n];\r\nlet result = arr.join(\"\\r\\n\");\r\n//生成一个blob二进制数据，内容为json数据      \r\nvar blob = new Blob([result]);\r\n//生成一个指向blob的URL地址，并赋值给a标签的href属性\r\nelementA.href = URL.createObjectURL(blob);\r\ndocument.body.appendChild(elementA);\r\nelementA.click();\r\ndocument.body.removeChild(elementA);\r\n    },\r\n\r\n    addItem() {\r\n      const newline = {\r\n        r: \" \",\r\n        g: \" \",\r\n        b: \" \",\r\n        name: \" \"\r\n      }\r\n      this.index++\r\n      this.tableData.push(newline)\r\n      this.$message({\r\n        message: \"添加成功！\",\r\n        type: \"success\",\r\n      });\r\n    },\r\n    printImage(image) {\r\n      function replacer(key, value) {\r\n        if (!!value && value.byteLength !== undefined) {\r\n          return String(value.slice(0, 6)) + '...'\r\n        }\r\n        return value\r\n      }\r\n      outputTextArea.textContent = JSON.stringify(image, replacer, 4)\r\n    },\r\n    showcolor() {\r\n      if (this.colorList.length != 0) {\r\n        for (let i = 0; i <= 14; i++) {\r\n          this.tableData[i].r = this.colorList[i][0];\r\n          this.tableData[i].g = this.colorList[i][1];\r\n          this.tableData[i].b = this.colorList[i][2];\r\n        }\r\n      }\r\n    },\r\n    showBody() {\r\n\r\n      // for (let i = 0; i <= 15; i++) {\r\n      //   this.BodyData[0][i]= 1;\r\n\r\n      // }\r\n      this.BodyData[0][1] = \"150\";\r\n      this.BodyData[0][2] = \"198\";\r\n      this.BodyData[0][3] = \"190\";\r\n      this.BodyData[0][4] = \"50\";\r\n      this.BodyData[0][5] = \"30\";\r\n      this.BodyData[0][6] = \"48\";\r\n      this.BodyData[0][7] = \"800\";\r\n      this.BodyData[0][8] = \"43\";\r\n      this.BodyData[0][9] = \"45\";\r\n      this.BodyData[0][10] = \"160\";\r\n      this.BodyData[0][11] = \"189\";\r\n      this.BodyData[0][12] = \"79\";\r\n      this.BodyData[0][13] = \"78\";\r\n      this.BodyData[0][14] = \"69\";\r\n      this.BodyData[0][15] = \"102\";\r\n\r\n      for (let i = 0; i <= 15; i++) {\r\n        this.BodyData[1][i] = 1;\r\n\r\n      }\r\n\r\n    },\r\n    showView() {\r\n\r\n\r\n      this.ViewData[0].X = \"1:1\";\r\n      this.ViewData[0].Y = \"1:1\";\r\n      this.ViewData[0].Z = \"1:1\";\r\n\r\n      this.ViewData[1].X = \"1:1.13\";\r\n      this.ViewData[1].Y = \"1:1.13\";\r\n      this.ViewData[1].Z = \"1:1.13\";\r\n\r\n\r\n    },\r\n    remove() {\r\n      document.querySelector('#container1').innerHTML = \"\";\r\n      document.querySelector('#container2').innerHTML = \"\";\r\n      document.querySelector('#container3').innerHTML = \"\";\r\n      document.querySelector('#container').innerHTML = \"\";\r\n      document.querySelector('#input').value = \"\";\r\n      for (let i = 0; i <= 14; i++) {\r\n        this.tableData[i].r = \"\";\r\n        this.tableData[i].g = \"\";\r\n        this.tableData[i].b = \"\";\r\n      }\r\n      for (let i = 0; i <= 1; i++) {\r\n        this.ViewData[i].X = \"\";\r\n        this.ViewData[i].Y = \"\";\r\n        this.ViewData[i].Z = \"\";\r\n      }\r\n      for (let i = 0; i <= 15; i++) {\r\n        this.BodyData[0][i] = \"\";\r\n\r\n      }\r\n      for (let i = 0; i <= 15; i++) {\r\n        this.BodyData[1][i] = \"\";\r\n\r\n      }\r\n\r\n    },\r\n    render(source, judge) {\r\n      const view3d = document.querySelector('#container');\r\n      const fullScreenRenderer = vtkFullScreenRenderWindow.newInstance({\r\n        rootContainer: view3d,\r\n        containerStyle: {\r\n          height: '100%',\r\n          overflow: 'hidden',\r\n        },\r\n        background: [0, 0, 0],\r\n      });\r\n      const renderer = fullScreenRenderer.getRenderer();\r\n      const renderWindow = fullScreenRenderer.getRenderWindow();\r\n      // renderWindow.getInteractor().setDesiredUpdateRate(15);\r\n      const actor = vtkVolume.newInstance();\r\n      const mapper = vtkVolumeMapper.newInstance();\r\n      mapper.setInputData(source);\r\n      actor.setMapper(mapper);\r\n      // mapper.setSampleDistance(0.7);\r\n      const sampleDistance =\r\n        0.7 *\r\n        Math.sqrt(\r\n          source\r\n            .getSpacing()\r\n            .map((v) => v * v)\r\n            .reduce((a, b) => a + b, 0),\r\n        );\r\n      mapper.setSampleDistance(sampleDistance);\r\n      const activeCamera = renderer.getActiveCamera();\r\n      activeCamera.setPosition(0, -1, 0);\r\n      activeCamera.setFocalPoint(0, 0, 0);\r\n      activeCamera.setViewUp(0, 0, 1);\r\n\r\n      const lookupTable = vtkColorTransferFunction.newInstance();\r\n      const piecewiseFun = vtkPiecewiseFunction.newInstance();\r\n\r\n      const newPreset = {\r\n        \"ColorSpace\": \"Diverging\",\r\n        \"NanColor\": [1, 1, 0],\r\n        \"RGBPoints\": [\r\n          0,\r\n          0.23137254902,\r\n          0.298039215686,\r\n          0.752941176471,\r\n          0.5,\r\n          0.865,\r\n          0.865,\r\n          0.865,\r\n          1,\r\n          0.705882352941,\r\n          0.0156862745098,\r\n          0.149019607843\r\n        ]\r\n      };\r\n      // lookupTable.applyColorMap(vtkColorMaps.getPresetByName('Cool to Warm'));//预设的颜色函数\r\n      lookupTable.applyColorMap(newPreset);\r\n      if (judge == 1) {\r\n        lookupTable.setMappingRange(0, 256);\r\n        lookupTable.updateRange();\r\n        for (let i = 0; i <= 8; i++) {\r\n        piecewiseFun.addPoint(i * 32, i / 8);\r\n      }\r\n      }\r\n      else {\r\n        lookupTable.setMappingRange(0, 15);\r\n        lookupTable.updateRange();\r\n\r\n        for (let j = 0; j <= 15; j++) {\r\n          const rgb = [];\r\n          lookupTable.getColor(j, rgb)\r\n          this.colorList.push(rgb)\r\n\r\n        }\r\n        console.log(this.colorList);\r\n        this.showcolor();\r\n        this.showBody();\r\n        this.showView();\r\n        piecewiseFun.addPoint(0, 0);\r\n        for (let i = 1; i <= 15; i++) {\r\n        piecewiseFun.addPoint(i , 0.7);}\r\n      //   for (let i = 0; i <= 8; i++) {\r\n      //   piecewiseFun.addPoint(i * 32, i / 8);\r\n      // }\r\n      }\r\n      \r\n\r\n\r\n      actor.getProperty().setRGBTransferFunction(0, lookupTable);\r\n      actor.getProperty().setScalarOpacity(0, piecewiseFun);\r\n\r\n\r\n      renderer.addActor(actor);\r\n      renderer.resetCamera();\r\n      renderWindow.render();\r\n\r\n\r\n      const { SlicingMode } = ImageConstants;\r\n      const container1 = document.querySelector('#container1');\r\n      const genericRenderWindow1 = vtkGenericRenderWindow.newInstance();\r\n      genericRenderWindow1.setContainer(container1);\r\n      genericRenderWindow1.resize();\r\n      const renderer1 = genericRenderWindow1.getRenderer();\r\n      const renderWindow1 = genericRenderWindow1.getRenderWindow();\r\n      const camera1 = renderer1.getActiveCamera();\r\n      const istyle = vtkInteractorStyleImage.newInstance();\r\n      istyle.setInteractionMode('IMAGE_SLICING');\r\n      renderWindow1.getInteractor().setInteractorStyle(istyle);\r\n      const actor1 = vtkImageSlice.newInstance();\r\n      const mapper1 = vtkImageMapper.newInstance();\r\n      mapper1.setSliceAtFocalPoint(true);\r\n      mapper1.setInputData(source);\r\n      mapper1.setSlicingMode(SlicingMode.X);\r\n      actor1.setMapper(mapper1);\r\n      actor1.getProperty().setColorWindow(255);\r\n      actor1.getProperty().setColorLevel(127);\r\n      renderer1.addActor(actor1);\r\n      const position1 = camera1.getFocalPoint();\r\n      // offset along the slicing axis\r\n      const normal1 = mapper1.getSlicingModeNormal();\r\n      position1[0] += normal1[0];\r\n      position1[1] += normal1[1];\r\n      position1[2] += normal1[2];\r\n      camera1.setPosition(...position1);\r\n      camera1.setViewUp([0, 0, 1]);\r\n      camera1.setParallelProjection(true);\r\n      renderer1.resetCamera();\r\n      renderWindow1.render();\r\n\r\n      const container2 = document.querySelector('#container2');\r\n      const genericRenderWindow2 = vtkGenericRenderWindow.newInstance();\r\n      genericRenderWindow2.setContainer(container2);\r\n      genericRenderWindow2.resize();\r\n      const renderer2 = genericRenderWindow2.getRenderer();\r\n      const renderWindow2 = genericRenderWindow2.getRenderWindow();\r\n      const camera2 = renderer2.getActiveCamera();\r\n\r\n      const istyle2 = vtkInteractorStyleImage.newInstance();\r\n      istyle2.setInteractionMode('IMAGE_SLICING');\r\n      renderWindow2.getInteractor().setInteractorStyle(istyle2);\r\n\r\n      const actor2 = vtkImageSlice.newInstance();\r\n      const mapper2 = vtkImageMapper.newInstance();\r\n      mapper2.setSliceAtFocalPoint(true);\r\n      mapper2.setSlicingMode(SlicingMode.Z);//K\r\n      mapper2.setInputData(source);\r\n      // // tell the actor which mapper to use\r\n      actor2.setMapper(mapper2);\r\n      actor2.getProperty().setColorWindow(255);\r\n      actor2.getProperty().setColorLevel(127);\r\n      renderer2.addActor(actor2);\r\n      const position2 = camera2.getFocalPoint();\r\n      const normal2 = mapper2.getSlicingModeNormal();\r\n      position2[0] += normal2[0];\r\n      position2[1] += normal2[1];\r\n      position2[2] += normal2[2];\r\n      camera2.setPosition(...position2);\r\n      camera2.setViewUp([0, 1, 0]);\r\n      camera2.setParallelProjection(true);\r\n      renderer2.resetCamera();\r\n      renderWindow2.render();\r\n\r\n\r\n      const container3 = document.querySelector('#container3');\r\n      const genericRenderWindow3 = vtkGenericRenderWindow.newInstance();\r\n      genericRenderWindow3.setContainer(container3);\r\n      genericRenderWindow3.resize();\r\n      const renderer3 = genericRenderWindow3.getRenderer();\r\n      const renderWindow3 = genericRenderWindow3.getRenderWindow();\r\n      const camera3 = renderer3.getActiveCamera();\r\n\r\n      const istyle3 = vtkInteractorStyleImage.newInstance();\r\n      istyle3.setInteractionMode('IMAGE_SLICING');\r\n      renderWindow3.getInteractor().setInteractorStyle(istyle3);//设置平面\r\n\r\n      const actor3 = vtkImageSlice.newInstance();\r\n      const mapper3 = vtkImageMapper.newInstance();\r\n      mapper3.setSliceAtFocalPoint(true);//控制切片\r\n      mapper3.setSlicingMode(SlicingMode.Y);\r\n      mapper3.setInputData(source);\r\n      actor3.setMapper(mapper3);\r\n      actor3.getProperty().setColorWindow(255);\r\n      actor3.getProperty().setColorLevel(127);\r\n      renderer3.addActor(actor3);\r\n      const position3 = camera3.getFocalPoint();\r\n      const normal3 = mapper3.getSlicingModeNormal();\r\n      position3[0] += normal3[0];\r\n      position3[1] += normal3[1];\r\n      position3[2] += normal3[2];\r\n      camera3.setPosition(...position3);\r\n      camera3.setViewUp([0, 1, 0]);\r\n      camera3.setParallelProjection(true);\r\n      renderer3.resetCamera();\r\n      renderWindow3.render();\r\n\r\n\r\n    },\r\n    dDicom(files) {\r\n      return readImageDICOMFileSeries(null, files).then(({\r\n        webWorker,\r\n        image\r\n      }) => {\r\n        // printImage(\"source\")\r\n        const source = vtkITKHelper.convertItkToVtkImage(image);\r\n        // printImage(imageData)\r\n        this.render(source, 1)\r\n\r\n      })\r\n\r\n    },\r\n    dNii(files, judge) {\r\n\r\n      return readImageFile(null, files[0]).then(({ image, webWorker }) => {//null\r\n        const source = vtkITKHelper.convertItkToVtkImage(image);\r\n        this.render(source, judge)\r\n\r\n      });\r\n    },\r\n    outputFileInformation(event) {\r\n      const dataTransfer = event.dataTransfer\r\n      const files = event.target.files || dataTransfer.files\r\n\r\n      const type = files[0].name.substring(files[0].name.lastIndexOf(\".\") + 1)\r\n      if (type == \"dcm\") {\r\n        this.dDicom(files)\r\n      }\r\n      else if (type == \"nii\") {\r\n        console.log(files[0].name)\r\n        if (files[0].name == \"after.nii\") {\r\n          this.dNii(files, 2)\r\n        }\r\n        else {\r\n          this.dNii(files, 1)\r\n        }\r\n        console.log(\"1\")\r\n      }\r\n      else if (type == \"nii.gz\") {\r\n        console.log(\"2\")\r\n      }\r\n      else if (type == \"mhd\") {\r\n        console.log(\"3\")\r\n      }\r\n      else if (type == \"raw\") {\r\n        console.log(\"4\")\r\n      }\r\n    },\r\n    checkUpload() {\r\n      this.isUpload = this.afterImg.length !== 0;\r\n    },\r\n    clearQueue() {\r\n      this.fileList = [];\r\n      this.$message.success(\"清除成功\");\r\n    },\r\n    notvisible() {\r\n      this.cutVisible = false;\r\n      this.fileList = [];\r\n    },\r\n    getMore() {\r\n      this.getUploadImg(\"目标检测\");\r\n    },\r\n    uploadMore() {\r\n      this.beforeUpload(...this.$refs.uploadFile.files)\r\n      if (this.canUpload) {\r\n        this.fileList.push(...this.$refs.uploadFile.files);\r\n      } else {\r\n        setTimeout(() => {\r\n          this.$message.error('检测到您上传的文件夹内存在不符合规范的图片类型')\r\n        }, 1000);\r\n\r\n      }\r\n    },\r\n    fileClick() {\r\n      document.querySelector(\"#folder\").click();\r\n    },\r\n    beforeUpload(file) {\r\n      this.cutVisible = this.$refs.cut.checked;\r\n      const fileSuffix = file.name.substring(file.name.lastIndexOf(\".\") + 1)\r\n      const whiteList = ['jpg', 'jpeg', 'png', 'JPG', 'JPEG']\r\n      if (whiteList.indexOf(fileSuffix) === -1) {\r\n        this.$message.error(\"只允许上传jpg, jpeg, png, JPG, 或JPEG格式,请重新上传\");\r\n        this.fileList = []\r\n        this.canUpload = false\r\n        this.cutVisible = false;\r\n      }\r\n      else {\r\n        this.canUpload = true\r\n        this.fileimg = window.URL.createObjectURL(new Blob([file]));\r\n      }\r\n    },\r\n    select() {\r\n      this.isNotCut = this.$refs.cut.checked;\r\n    },\r\n    setCurrent(row) {\r\n      this.$refs.singleTable.setCurrentRow(row);\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.currentRow = val;\r\n    },\r\n  },\r\n\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n* {\r\n  font-family: SimHei sans-serif;\r\n}\r\n\r\n#sub-title {\r\n  font-size: 30px;\r\n}\r\n\r\n#sub-title:hover:after {\r\n  left: 0%;\r\n  right: 0%;\r\n  width: 220px;\r\n\r\n}\r\n\r\n.clear-queue {\r\n  position: absolute;\r\n  left: 5px;\r\n  top: 10%;\r\n  z-index: 100;\r\n}\r\n\r\n.el-radio /deep/ {\r\n  height: 62px;\r\n}\r\n\r\n.hang {\r\n  margin-top: 0px;\r\n\r\n}\r\n</style>\r\n","//\n// itkModulesPath is the path that contains the directories\n//\n// - WebWorkers/\n// - ImageIOs/\n// - MeshIOs/\n//\nvar itkConfig = {\n  itkModulesPath: 'itk'\n};\nexport default itkConfig;","import WebworkerPromise from 'webworker-promise';\nimport axios from 'axios';\nimport config from './itkConfig'; // Internal function to create a web worker promise\n\nvar createWebworkerPromise = function createWebworkerPromise(name, existingWorker) {\n  if (existingWorker) {\n    var _webworkerPromise = new WebworkerPromise(existingWorker);\n\n    return Promise.resolve({\n      webworkerPromise: _webworkerPromise,\n      worker: existingWorker\n    });\n  }\n\n  var webWorkerUrl = \"\".concat(config.itkModulesPath, \"/WebWorkers/\").concat(name, \".worker.js\");\n\n  if (webWorkerUrl.startsWith('http')) {\n    return axios.get(webWorkerUrl, {\n      responseType: 'blob'\n    }).then(function (response) {\n      var worker = new window.Worker(URL.createObjectURL(response.data) // eslint-disable-line\n      );\n      var webworkerPromise = new WebworkerPromise(worker);\n      return {\n        webworkerPromise: webworkerPromise,\n        worker: worker\n      };\n    });\n  }\n\n  var worker = new window.Worker(webWorkerUrl);\n  var webworkerPromise = new WebworkerPromise(worker);\n  return Promise.resolve({\n    webworkerPromise: webworkerPromise,\n    worker: worker\n  });\n};\n\nexport default createWebworkerPromise;","import createWebworkerPromise from './createWebworkerPromise';\nimport PromiseFileReader from 'promise-file-reader';\nimport config from './itkConfig';\n\nvar readImageFile = function readImageFile(webWorker, file) {\n  var worker = webWorker;\n  return createWebworkerPromise('ImageIO', worker).then(function (_ref) {\n    var webworkerPromise = _ref.webworkerPromise,\n        usedWorker = _ref.worker;\n    worker = usedWorker;\n    return PromiseFileReader.readAsArrayBuffer(file).then(function (arrayBuffer) {\n      return webworkerPromise.postMessage({\n        operation: 'readImage',\n        name: file.name,\n        type: file.type,\n        data: arrayBuffer,\n        config: config\n      }, [arrayBuffer]);\n    }).then(function (image) {\n      return Promise.resolve({\n        image: image,\n        webWorker: worker\n      });\n    });\n  });\n};\n\nexport default readImageFile;","import createWebworkerPromise from './createWebworkerPromise';\nimport PromiseFileReader from 'promise-file-reader';\nimport config from './itkConfig';\n\nvar readImageDICOMFileSeries = function readImageDICOMFileSeries(webWorker, fileList) {\n  var worker = webWorker;\n  return createWebworkerPromise('ImageIO', worker).then(function (_ref) {\n    var webworkerPromise = _ref.webworkerPromise,\n        usedWorker = _ref.worker;\n    worker = usedWorker;\n    var fetchFileDescriptions = Array.from(fileList, function (file) {\n      return PromiseFileReader.readAsArrayBuffer(file).then(function (arrayBuffer) {\n        var fileDescription = {\n          name: file.name,\n          type: file.type,\n          data: arrayBuffer\n        };\n        return fileDescription;\n      });\n    });\n    return Promise.all(fetchFileDescriptions).then(function (fileDescriptions) {\n      var transferables = fileDescriptions.map(function (description) {\n        return description.data;\n      });\n      return webworkerPromise.postMessage({\n        operation: 'readDICOMImageSeries',\n        fileDescriptions: fileDescriptions,\n        config: config\n      }, transferables);\n    }).then(function (image) {\n      return Promise.resolve({\n        image: image,\n        webWorker: worker\n      });\n    });\n  });\n};\n\nexport default readImageDICOMFileSeries;","const factoryMapping = {\n  vtkObject: () => null,\n};\n\nexport default function vtk(obj) {\n  if (obj === null || obj === undefined) {\n    return obj;\n  }\n  if (obj.isA) {\n    return obj;\n  }\n  if (!obj.vtkClass) {\n    if (global.console && global.console.error) {\n      global.console.error('Invalid VTK object');\n    }\n    return null;\n  }\n  const constructor = factoryMapping[obj.vtkClass];\n  if (!constructor) {\n    if (global.console && global.console.error) {\n      global.console.error(\n        `No vtk class found for Object of type ${obj.vtkClass}`\n      );\n    }\n    return null;\n  }\n\n  // Shallow copy object\n  const model = Object.assign({}, obj);\n\n  // Convert into vtkObject any nested key\n  Object.keys(model).forEach((keyName) => {\n    if (\n      model[keyName] &&\n      typeof model[keyName] === 'object' &&\n      model[keyName].vtkClass\n    ) {\n      model[keyName] = vtk(model[keyName]);\n    }\n  });\n\n  // Return the root\n  const newInst = constructor(model);\n  if (newInst && newInst.modified) {\n    newInst.modified();\n  }\n  return newInst;\n}\n\nfunction register(vtkClassName, constructor) {\n  factoryMapping[vtkClassName] = constructor;\n}\n\n// Nest register method under the vtk function\nvtk.register = register;\n","import vtk from './vtk';\n\nlet globalMTime = 0;\n\nexport const VOID = Symbol('void');\n\nfunction getCurrentGlobalMTime() {\n  return globalMTime;\n}\n\n// ----------------------------------------------------------------------------\n// Logging function calls\n// ----------------------------------------------------------------------------\n/* eslint-disable no-prototype-builtins                                      */\n\nconst fakeConsole = {};\n\nfunction noOp() {}\n\nconst consoleMethods = [\n  'log',\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'time',\n  'timeEnd',\n  'group',\n  'groupEnd',\n];\nconsoleMethods.forEach((methodName) => {\n  fakeConsole[methodName] = noOp;\n});\n\nglobal.console = console.hasOwnProperty('log') ? console : fakeConsole;\n\nconst loggerFunctions = {\n  debug: noOp, // Don't print debug by default\n  error: global.console.error || noOp,\n  info: global.console.info || noOp,\n  log: global.console.log || noOp,\n  warn: global.console.warn || noOp,\n};\n\nexport function setLoggerFunction(name, fn) {\n  if (loggerFunctions[name]) {\n    loggerFunctions[name] = fn || noOp;\n  }\n}\n\nexport function vtkLogMacro(...args) {\n  loggerFunctions.log(...args);\n}\n\nexport function vtkInfoMacro(...args) {\n  loggerFunctions.info(...args);\n}\n\nexport function vtkDebugMacro(...args) {\n  loggerFunctions.debug(...args);\n}\n\nexport function vtkErrorMacro(...args) {\n  loggerFunctions.error(...args);\n}\n\nexport function vtkWarningMacro(...args) {\n  loggerFunctions.warn(...args);\n}\n\nconst ERROR_ONCE_MAP = {};\nexport function vtkOnceErrorMacro(str) {\n  if (!ERROR_ONCE_MAP[str]) {\n    loggerFunctions.error(str);\n    ERROR_ONCE_MAP[str] = true;\n  }\n}\n\n// ----------------------------------------------------------------------------\n// TypedArray\n// ----------------------------------------------------------------------------\n\nexport const TYPED_ARRAYS = {\n  Float32Array,\n  Float64Array,\n  Uint8Array,\n  Int8Array,\n  Uint16Array,\n  Int16Array,\n  Uint32Array,\n  Int32Array,\n};\n\n// ----------------------------------------------------------------------------\n// capitilze provided string\n// ----------------------------------------------------------------------------\n\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function uncapitalize(str) {\n  return str.charAt(0).toLowerCase() + str.slice(1);\n}\n\n// ----------------------------------------------------------------------------\n// Convert byte size into a well formatted string\n// ----------------------------------------------------------------------------\n\nexport function formatBytesToProperUnit(size, precision = 2, chunkSize = 1000) {\n  const units = ['TB', 'GB', 'MB', 'KB'];\n  let value = Number(size);\n  let currentUnit = 'B';\n  while (value > chunkSize) {\n    value /= chunkSize;\n    currentUnit = units.pop();\n  }\n  return `${value.toFixed(precision)} ${currentUnit}`;\n}\n// ----------------------------------------------------------------------------\n// Convert thousand number with proper seperator\n// ----------------------------------------------------------------------------\n\nexport function formatNumbersWithThousandSeparator(n, separator = ' ') {\n  const sections = [];\n  let size = n;\n  while (size > 1000) {\n    sections.push(`000${size % 1000}`.slice(-3));\n    size = Math.floor(size / 1000);\n  }\n  if (size > 0) {\n    sections.push(size);\n  }\n  sections.reverse();\n  return sections.join(separator);\n}\n\n// ----------------------------------------------------------------------------\n// Array helper\n// ----------------------------------------------------------------------------\n\nfunction safeArrays(model) {\n  Object.keys(model).forEach((key) => {\n    if (Array.isArray(model[key])) {\n      model[key] = [].concat(model[key]);\n    }\n  });\n}\n\n// ----------------------------------------------------------------------------\n\nfunction enumToString(e, value) {\n  return Object.keys(e).find((key) => e[key] === value);\n}\n\nfunction getStateArrayMapFunc(item) {\n  if (item.isA) {\n    return item.getState();\n  }\n  return item;\n}\n\n// ----------------------------------------------------------------------------\n// setImmediate\n// ----------------------------------------------------------------------------\n\nexport function setImmediateVTK(fn) {\n  setTimeout(fn, 0);\n}\n\n// ----------------------------------------------------------------------------\n// vtkObject: modified(), onModified(callback), delete()\n// ----------------------------------------------------------------------------\n\nexport function obj(publicAPI = {}, model = {}) {\n  // Ensure each instance as a unique ref of array\n  safeArrays(model);\n\n  const callbacks = [];\n  if (!Number.isInteger(model.mtime)) {\n    model.mtime = ++globalMTime;\n  }\n  model.classHierarchy = ['vtkObject'];\n\n  function off(index) {\n    callbacks[index] = null;\n  }\n\n  function on(index) {\n    function unsubscribe() {\n      off(index);\n    }\n    return Object.freeze({\n      unsubscribe,\n    });\n  }\n\n  publicAPI.isDeleted = () => !!model.deleted;\n\n  publicAPI.modified = (otherMTime) => {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n\n    if (otherMTime && otherMTime < publicAPI.getMTime()) {\n      return;\n    }\n\n    model.mtime = ++globalMTime;\n    callbacks.forEach((callback) => callback && callback(publicAPI));\n  };\n\n  publicAPI.onModified = (callback) => {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n\n    const index = callbacks.length;\n    callbacks.push(callback);\n    return on(index);\n  };\n\n  publicAPI.getMTime = () => model.mtime;\n\n  publicAPI.isA = (className) => {\n    let count = model.classHierarchy.length;\n    // we go backwards as that is more likely for\n    // early termination\n    while (count--) {\n      if (model.classHierarchy[count] === className) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  publicAPI.getClassName = (depth = 0) =>\n    model.classHierarchy[model.classHierarchy.length - 1 - depth];\n\n  publicAPI.set = (map = {}, noWarning = false, noFunction = false) => {\n    let ret = false;\n    Object.keys(map).forEach((name) => {\n      const fn = noFunction ? null : publicAPI[`set${capitalize(name)}`];\n      if (fn && Array.isArray(map[name]) && fn.length > 1) {\n        ret = fn(...map[name]) || ret;\n      } else if (fn) {\n        ret = fn(map[name]) || ret;\n      } else {\n        // Set data on model directly\n        if (['mtime'].indexOf(name) === -1 && !noWarning) {\n          vtkWarningMacro(\n            `Warning: Set value to model directly ${name}, ${map[name]}`\n          );\n        }\n        model[name] = map[name];\n        ret = true;\n      }\n    });\n    return ret;\n  };\n\n  publicAPI.get = (...list) => {\n    if (!list.length) {\n      return model;\n    }\n    const subset = {};\n    list.forEach((name) => {\n      subset[name] = model[name];\n    });\n    return subset;\n  };\n\n  publicAPI.getReferenceByName = (val) => model[val];\n\n  publicAPI.delete = () => {\n    Object.keys(model).forEach((field) => delete model[field]);\n    callbacks.forEach((el, index) => off(index));\n\n    // Flag the instance being deleted\n    model.deleted = true;\n  };\n\n  // Add serialization support\n  publicAPI.getState = () => {\n    const jsonArchive = Object.assign({}, model, {\n      vtkClass: publicAPI.getClassName(),\n    });\n\n    // Convert every vtkObject to its serializable form\n    Object.keys(jsonArchive).forEach((keyName) => {\n      if (jsonArchive[keyName] === null || jsonArchive[keyName] === undefined) {\n        delete jsonArchive[keyName];\n      } else if (jsonArchive[keyName].isA) {\n        jsonArchive[keyName] = jsonArchive[keyName].getState();\n      } else if (Array.isArray(jsonArchive[keyName])) {\n        jsonArchive[keyName] = jsonArchive[keyName].map(getStateArrayMapFunc);\n      }\n    });\n\n    // Sort resulting object by key name\n    const sortedObj = {};\n    Object.keys(jsonArchive)\n      .sort()\n      .forEach((name) => {\n        sortedObj[name] = jsonArchive[name];\n      });\n\n    // Remove mtime\n    if (sortedObj.mtime) {\n      delete sortedObj.mtime;\n    }\n\n    return sortedObj;\n  };\n\n  // Add shallowCopy(otherInstance) support\n  publicAPI.shallowCopy = (other, debug = false) => {\n    if (other.getClassName() !== publicAPI.getClassName()) {\n      throw new Error(\n        `Cannot ShallowCopy ${other.getClassName()} into ${publicAPI.getClassName()}`\n      );\n    }\n    const otherModel = other.get();\n\n    const keyList = Object.keys(model).sort();\n    const otherKeyList = Object.keys(otherModel).sort();\n\n    otherKeyList.forEach((key) => {\n      const keyIdx = keyList.indexOf(key);\n      if (keyIdx === -1) {\n        if (debug) {\n          vtkDebugMacro(`add ${key} in shallowCopy`);\n        }\n      } else {\n        keyList.splice(keyIdx, 1);\n      }\n      model[key] = otherModel[key];\n    });\n    if (keyList.length && debug) {\n      vtkDebugMacro(`Untouched keys: ${keyList.join(', ')}`);\n    }\n\n    publicAPI.modified();\n  };\n\n  // Allow usage as decorator\n  return publicAPI;\n}\n\n// ----------------------------------------------------------------------------\n// getXXX: add getters\n// ----------------------------------------------------------------------------\n\nexport function get(publicAPI, model, fieldNames) {\n  fieldNames.forEach((field) => {\n    if (typeof field === 'object') {\n      publicAPI[`get${capitalize(field.name)}`] = () => model[field.name];\n    } else {\n      publicAPI[`get${capitalize(field)}`] = () => model[field];\n    }\n  });\n}\n\n// ----------------------------------------------------------------------------\n// setXXX: add setters\n// ----------------------------------------------------------------------------\n\nconst objectSetterMap = {\n  enum(publicAPI, model, field) {\n    return (value) => {\n      if (typeof value === 'string') {\n        if (field.enum[value] !== undefined) {\n          if (model[field.name] !== field.enum[value]) {\n            model[field.name] = field.enum[value];\n            publicAPI.modified();\n            return true;\n          }\n          return false;\n        }\n        vtkErrorMacro(`Set Enum with invalid argument ${field}, ${value}`);\n        throw new RangeError('Set Enum with invalid string argument');\n      }\n      if (typeof value === 'number') {\n        if (model[field.name] !== value) {\n          if (\n            Object.keys(field.enum)\n              .map((key) => field.enum[key])\n              .indexOf(value) !== -1\n          ) {\n            model[field.name] = value;\n            publicAPI.modified();\n            return true;\n          }\n          vtkErrorMacro(`Set Enum outside numeric range ${field}, ${value}`);\n          throw new RangeError('Set Enum outside numeric range');\n        }\n        return false;\n      }\n      vtkErrorMacro(\n        `Set Enum with invalid argument (String/Number) ${field}, ${value}`\n      );\n      throw new TypeError('Set Enum with invalid argument (String/Number)');\n    };\n  },\n};\n\nfunction findSetter(field) {\n  if (typeof field === 'object') {\n    const fn = objectSetterMap[field.type];\n    if (fn) {\n      return (publicAPI, model) => fn(publicAPI, model, field);\n    }\n\n    vtkErrorMacro(`No setter for field ${field}`);\n    throw new TypeError('No setter for field');\n  }\n  return function getSetter(publicAPI, model) {\n    return function setter(value) {\n      if (model.deleted) {\n        vtkErrorMacro('instance deleted - cannot call any method');\n        return false;\n      }\n\n      if (model[field] !== value) {\n        model[field] = value;\n        publicAPI.modified();\n        return true;\n      }\n      return false;\n    };\n  };\n}\n\nexport function set(publicAPI, model, fields) {\n  fields.forEach((field) => {\n    if (typeof field === 'object') {\n      publicAPI[`set${capitalize(field.name)}`] = findSetter(field)(\n        publicAPI,\n        model\n      );\n    } else {\n      publicAPI[`set${capitalize(field)}`] = findSetter(field)(\n        publicAPI,\n        model\n      );\n    }\n  });\n}\n\n// ----------------------------------------------------------------------------\n// set/get XXX: add both setters and getters\n// ----------------------------------------------------------------------------\n\nexport function setGet(publicAPI, model, fieldNames) {\n  get(publicAPI, model, fieldNames);\n  set(publicAPI, model, fieldNames);\n}\n\n// ----------------------------------------------------------------------------\n// getXXX: add getters for object of type array with copy to be safe\n// getXXXByReference: add getters for object of type array without copy\n// ----------------------------------------------------------------------------\n\nexport function getArray(publicAPI, model, fieldNames) {\n  fieldNames.forEach((field) => {\n    publicAPI[`get${capitalize(field)}`] = () => [].concat(model[field]);\n    publicAPI[`get${capitalize(field)}ByReference`] = () => model[field];\n  });\n}\n\n// ----------------------------------------------------------------------------\n// setXXX: add setter for object of type array\n// if 'defaultVal' is supplied, shorter arrays will be padded to 'size' with 'defaultVal'\n// set...From: fast path to copy the content of an array to the current one without call to modified.\n// ----------------------------------------------------------------------------\n\nexport function setArray(\n  publicAPI,\n  model,\n  fieldNames,\n  size,\n  defaultVal = undefined\n) {\n  fieldNames.forEach((field) => {\n    publicAPI[`set${capitalize(field)}`] = (...args) => {\n      if (model.deleted) {\n        vtkErrorMacro('instance deleted - cannot call any method');\n        return false;\n      }\n\n      let array = args;\n      // allow an array passed as a single arg.\n      if (array.length === 1 && Array.isArray(array[0])) {\n        /* eslint-disable prefer-destructuring */\n        array = array[0];\n        /* eslint-enable prefer-destructuring */\n      }\n\n      if (array.length !== size) {\n        if (array.length < size && defaultVal !== undefined) {\n          array = [].concat(array);\n          while (array.length < size) array.push(defaultVal);\n        } else {\n          throw new RangeError('Invalid number of values for array setter');\n        }\n      }\n      let changeDetected = false;\n      model[field].forEach((item, index) => {\n        if (item !== array[index]) {\n          if (changeDetected) {\n            return;\n          }\n          changeDetected = true;\n        }\n      });\n\n      if (changeDetected || model[field].length !== array.length) {\n        model[field] = [].concat(array);\n        publicAPI.modified();\n      }\n      return true;\n    };\n\n    publicAPI[`set${capitalize(field)}From`] = (otherArray) => {\n      const target = model[field];\n      otherArray.forEach((v, i) => {\n        target[i] = v;\n      });\n    };\n  });\n}\n\n// ----------------------------------------------------------------------------\n// set/get XXX: add setter and getter for object of type array\n// ----------------------------------------------------------------------------\n\nexport function setGetArray(\n  publicAPI,\n  model,\n  fieldNames,\n  size,\n  defaultVal = undefined\n) {\n  getArray(publicAPI, model, fieldNames);\n  setArray(publicAPI, model, fieldNames, size, defaultVal);\n}\n\n// ----------------------------------------------------------------------------\n// vtkAlgorithm: setInputData(), setInputConnection(), getOutputData(), getOutputPort()\n// ----------------------------------------------------------------------------\n\nexport function algo(publicAPI, model, numberOfInputs, numberOfOutputs) {\n  if (model.inputData) {\n    model.inputData = model.inputData.map(vtk);\n  } else {\n    model.inputData = [];\n  }\n\n  if (model.inputConnection) {\n    model.inputConnection = model.inputConnection.map(vtk);\n  } else {\n    model.inputConnection = [];\n  }\n\n  if (model.output) {\n    model.output = model.output.map(vtk);\n  } else {\n    model.output = [];\n  }\n\n  if (model.inputArrayToProcess) {\n    model.inputArrayToProcess = model.inputArrayToProcess.map(vtk);\n  } else {\n    model.inputArrayToProcess = [];\n  }\n\n  // Cache the argument for later manipulation\n  model.numberOfInputs = numberOfInputs;\n\n  // Methods\n  function setInputData(dataset, port = 0) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    if (port >= model.numberOfInputs) {\n      vtkErrorMacro(\n        `algorithm ${publicAPI.getClassName()} only has ${\n          model.numberOfInputs\n        } input ports. To add more input ports, use addInputData()`\n      );\n      return;\n    }\n    if (model.inputData[port] !== dataset || model.inputConnection[port]) {\n      model.inputData[port] = dataset;\n      model.inputConnection[port] = null;\n      if (publicAPI.modified) {\n        publicAPI.modified();\n      }\n    }\n  }\n\n  function getInputData(port = 0) {\n    if (model.inputConnection[port]) {\n      model.inputData[port] = model.inputConnection[port]();\n    }\n    return model.inputData[port];\n  }\n\n  function setInputConnection(outputPort, port = 0) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    if (port >= model.numberOfInputs) {\n      let msg = `algorithm ${publicAPI.getClassName()} only has `;\n      msg += `${model.numberOfInputs}`;\n      msg += ' input ports. To add more input ports, use addInputConnection()';\n      vtkErrorMacro(msg);\n      return;\n    }\n    model.inputData[port] = null;\n    model.inputConnection[port] = outputPort;\n  }\n\n  function getInputConnection(port = 0) {\n    return model.inputConnection[port];\n  }\n\n  function addInputConnection(outputPort) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    model.numberOfInputs++;\n    setInputConnection(outputPort, model.numberOfInputs - 1);\n  }\n\n  function addInputData(dataset) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    model.numberOfInputs++;\n    setInputData(dataset, model.numberOfInputs - 1);\n  }\n\n  function getOutputData(port = 0) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n    if (publicAPI.shouldUpdate()) {\n      publicAPI.update();\n    }\n    return model.output[port];\n  }\n\n  publicAPI.shouldUpdate = () => {\n    const localMTime = publicAPI.getMTime();\n    let count = numberOfOutputs;\n    let minOutputMTime = Infinity;\n    while (count--) {\n      if (!model.output[count]) {\n        return true;\n      }\n      const mt = model.output[count].getMTime();\n      if (mt < localMTime) {\n        return true;\n      }\n      if (mt < minOutputMTime) {\n        minOutputMTime = mt;\n      }\n    }\n\n    count = model.numberOfInputs;\n    while (count--) {\n      if (\n        model.inputConnection[count] &&\n        model.inputConnection[count].filter.shouldUpdate()\n      ) {\n        return true;\n      }\n    }\n\n    count = model.numberOfInputs;\n    while (count--) {\n      if (\n        publicAPI.getInputData(count) &&\n        publicAPI.getInputData(count).getMTime() > minOutputMTime\n      ) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  function getOutputPort(port = 0) {\n    const outputPortAccess = () => getOutputData(port);\n    // Add reference to filter\n    outputPortAccess.filter = publicAPI;\n    return outputPortAccess;\n  }\n\n  // Handle input if needed\n  if (model.numberOfInputs) {\n    // Reserve inputs\n    let count = model.numberOfInputs;\n    while (count--) {\n      model.inputData.push(null);\n      model.inputConnection.push(null);\n    }\n\n    // Expose public methods\n    publicAPI.setInputData = setInputData;\n    publicAPI.setInputConnection = setInputConnection;\n    publicAPI.addInputData = addInputData;\n    publicAPI.addInputConnection = addInputConnection;\n    publicAPI.getInputData = getInputData;\n    publicAPI.getInputConnection = getInputConnection;\n  }\n\n  if (numberOfOutputs) {\n    publicAPI.getOutputData = getOutputData;\n    publicAPI.getOutputPort = getOutputPort;\n  }\n\n  publicAPI.update = () => {\n    const ins = [];\n    if (model.numberOfInputs) {\n      let count = 0;\n      while (count < model.numberOfInputs) {\n        ins[count] = publicAPI.getInputData(count);\n        count++;\n      }\n    }\n    if (publicAPI.shouldUpdate() && publicAPI.requestData) {\n      publicAPI.requestData(ins, model.output);\n    }\n  };\n\n  publicAPI.getNumberOfInputPorts = () => model.numberOfInputs;\n  publicAPI.getNumberOfOutputPorts = () =>\n    numberOfOutputs || model.output.length;\n\n  publicAPI.getInputArrayToProcess = (inputPort) => {\n    const arrayDesc = model.inputArrayToProcess[inputPort];\n    const ds = model.inputData[inputPort];\n    if (arrayDesc && ds) {\n      return ds[`get${arrayDesc.fieldAssociation}`]().getArray(\n        arrayDesc.arrayName\n      );\n    }\n    return null;\n  };\n  publicAPI.setInputArrayToProcess = (\n    inputPort,\n    arrayName,\n    fieldAssociation,\n    attributeType = 'Scalars'\n  ) => {\n    while (model.inputArrayToProcess.length < inputPort) {\n      model.inputArrayToProcess.push(null);\n    }\n    model.inputArrayToProcess[inputPort] = {\n      arrayName,\n      fieldAssociation,\n      attributeType,\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Event handling: onXXX(callback), invokeXXX(args...)\n// ----------------------------------------------------------------------------\n\nexport const EVENT_ABORT = Symbol('Event abort');\n\nexport function event(publicAPI, model, eventName) {\n  const callbacks = [];\n  const previousDelete = publicAPI.delete;\n  let curCallbackID = 1;\n\n  function off(callbackID) {\n    for (let i = 0; i < callbacks.length; ++i) {\n      const [cbID] = callbacks[i];\n      if (cbID === callbackID) {\n        callbacks.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  function on(callbackID) {\n    function unsubscribe() {\n      off(callbackID);\n    }\n    return Object.freeze({\n      unsubscribe,\n    });\n  }\n\n  function invoke() {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    /* eslint-disable prefer-rest-params */\n    // Go through a copy of the callbacks array in case new callbacks\n    // get prepended within previous callbacks\n    const currentCallbacks = callbacks.slice();\n    for (let index = 0; index < currentCallbacks.length; ++index) {\n      const [, cb, priority] = currentCallbacks[index];\n\n      if (!cb) {\n        continue; // eslint-disable-line\n      }\n\n      if (priority < 0) {\n        setTimeout(() => cb.apply(publicAPI, arguments), 1 - priority);\n      } else {\n        // Abort only if the callback explicitly returns false\n        const continueNext = cb.apply(publicAPI, arguments);\n        if (continueNext === EVENT_ABORT) {\n          break;\n        }\n      }\n    }\n    /* eslint-enable prefer-rest-params */\n  }\n\n  publicAPI[`invoke${capitalize(eventName)}`] = invoke;\n\n  publicAPI[`on${capitalize(eventName)}`] = (callback, priority = 0.0) => {\n    if (!callback.apply) {\n      console.error(`Invalid callback for event ${eventName}`);\n      return null;\n    }\n\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n\n    const callbackID = curCallbackID++;\n    callbacks.push([callbackID, callback, priority]);\n    callbacks.sort((cb1, cb2) => cb2[2] - cb1[2]);\n    return on(callbackID);\n  };\n\n  publicAPI.delete = () => {\n    previousDelete();\n    callbacks.forEach(([cbID]) => off(cbID));\n  };\n}\n\n// ----------------------------------------------------------------------------\n// newInstance\n// ----------------------------------------------------------------------------\n\nexport function newInstance(extend, className) {\n  const constructor = (initialValues = {}) => {\n    const model = {};\n    const publicAPI = {};\n    extend(publicAPI, model, initialValues);\n\n    return Object.freeze(publicAPI);\n  };\n\n  // Register constructor to factory\n  if (className) {\n    vtk.register(className, constructor);\n  }\n\n  return constructor;\n}\n\n// ----------------------------------------------------------------------------\n// Chain function calls\n// ----------------------------------------------------------------------------\n\nexport function chain(...fn) {\n  return (...args) => fn.filter((i) => !!i).map((i) => i(...args));\n}\n\n// ----------------------------------------------------------------------------\n// Some utility methods for vtk objects\n// ----------------------------------------------------------------------------\n\nexport function isVtkObject(instance) {\n  return instance && instance.isA && instance.isA('vtkObject');\n}\n\nexport function traverseInstanceTree(\n  instance,\n  extractFunction,\n  accumulator = [],\n  visitedInstances = []\n) {\n  if (isVtkObject(instance)) {\n    if (visitedInstances.indexOf(instance) >= 0) {\n      // avoid cycles\n      return accumulator;\n    }\n\n    visitedInstances.push(instance);\n    const result = extractFunction(instance);\n    if (result !== undefined) {\n      accumulator.push(result);\n    }\n\n    // Now go through this instance's model\n    const model = instance.get();\n    Object.keys(model).forEach((key) => {\n      const modelObj = model[key];\n      if (Array.isArray(modelObj)) {\n        modelObj.forEach((subObj) => {\n          traverseInstanceTree(\n            subObj,\n            extractFunction,\n            accumulator,\n            visitedInstances\n          );\n        });\n      } else {\n        traverseInstanceTree(\n          modelObj,\n          extractFunction,\n          accumulator,\n          visitedInstances\n        );\n      }\n    });\n  }\n\n  return accumulator;\n}\n\n// ----------------------------------------------------------------------------\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\n\nexport function debounce(func, wait, immediate) {\n  let timeout;\n  return (...args) => {\n    const context = this;\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Creates a throttled function that only invokes `func` at most once per\n// every `wait` milliseconds.\n\nexport function throttle(callback, delay) {\n  let isThrottled = false;\n  let argsToUse = null;\n\n  function next() {\n    isThrottled = false;\n    if (argsToUse !== null) {\n      wrapper(...argsToUse); // eslint-disable-line\n      argsToUse = null;\n    }\n  }\n\n  function wrapper(...args) {\n    if (isThrottled) {\n      argsToUse = args;\n      return;\n    }\n    isThrottled = true;\n    callback(...args);\n    setTimeout(next, delay);\n  }\n\n  return wrapper;\n}\n\n// ----------------------------------------------------------------------------\n// keystore(publicAPI, model, initialKeystore)\n//\n//    - initialKeystore: Initial keystore. This can be either a Map or an\n//      object.\n//\n// Generated API\n//  setKey(key, value) : mixed (returns value)\n//  getKey(key) : mixed\n//  getAllKeys() : [mixed]\n//  deleteKey(key) : Boolean\n// ----------------------------------------------------------------------------\n\nexport function keystore(publicAPI, model, initialKeystore = {}) {\n  model.keystore = Object.assign(model.keystore || {}, initialKeystore);\n\n  publicAPI.setKey = (key, value) => {\n    model.keystore[key] = value;\n  };\n  publicAPI.getKey = (key, value) => model.keystore[key];\n  publicAPI.getAllKeys = (key, value) => Object.keys(model.keystore);\n  publicAPI.deleteKey = (key, value) => delete model.keystore[key];\n  publicAPI.clearKeystore = () =>\n    publicAPI.getAllKeys().forEach((key) => delete model.keystore[key]);\n}\n\n// ----------------------------------------------------------------------------\n// proxy(publicAPI, model, sectionName, propertyUI)\n//\n//    - sectionName: Name of the section for UI\n//    - propertyUI: List of props with their UI description\n//\n// Generated API\n//  getProxyId() : String\n//  listProxyProperties() : [string]\n//  updateProxyProperty(name, prop)\n//  getProxySection() => List of properties for UI generation\n// ----------------------------------------------------------------------------\nlet nextProxyId = 1;\nconst ROOT_GROUP_NAME = '__root__';\n\nexport function proxy(publicAPI, model) {\n  // Proxies are keystores\n  keystore(publicAPI, model);\n\n  const parentDelete = publicAPI.delete;\n\n  // getProxyId\n  model.proxyId = `${nextProxyId++}`;\n\n  // ui handling\n  model.ui = JSON.parse(JSON.stringify(model.ui || [])); // deep copy\n  get(publicAPI, model, ['proxyId', 'proxyGroup', 'proxyName']);\n  setGet(publicAPI, model, ['proxyManager']);\n\n  // group properties\n  const propertyMap = {};\n  const groupChildrenNames = {};\n\n  function registerProperties(descriptionList, currentGroupName) {\n    if (!groupChildrenNames[currentGroupName]) {\n      groupChildrenNames[currentGroupName] = [];\n    }\n    const childrenNames = groupChildrenNames[currentGroupName];\n\n    for (let i = 0; i < descriptionList.length; i++) {\n      childrenNames.push(descriptionList[i].name);\n      propertyMap[descriptionList[i].name] = descriptionList[i];\n      if (descriptionList[i].children && descriptionList[i].children.length) {\n        registerProperties(\n          descriptionList[i].children,\n          descriptionList[i].name\n        );\n      }\n    }\n  }\n  registerProperties(model.ui, ROOT_GROUP_NAME);\n\n  publicAPI.updateUI = (ui) => {\n    model.ui = JSON.parse(JSON.stringify(ui || [])); // deep copy\n    Object.keys(propertyMap).forEach((k) => delete propertyMap[k]);\n    Object.keys(groupChildrenNames).forEach(\n      (k) => delete groupChildrenNames[k]\n    );\n    registerProperties(model.ui, ROOT_GROUP_NAME);\n    publicAPI.modified();\n  };\n\n  function listProxyProperties(gName = ROOT_GROUP_NAME) {\n    return groupChildrenNames[gName];\n  }\n\n  publicAPI.updateProxyProperty = (propertyName, propUI) => {\n    const prop = propertyMap[propertyName];\n    if (prop) {\n      Object.assign(prop, propUI);\n    } else {\n      propertyMap[propertyName] = Object.assign({}, propUI);\n    }\n  };\n\n  publicAPI.activate = () => {\n    if (model.proxyManager) {\n      const setActiveMethod = `setActive${capitalize(\n        publicAPI.getProxyGroup().slice(0, -1)\n      )}`;\n      if (model.proxyManager[setActiveMethod]) {\n        model.proxyManager[setActiveMethod](publicAPI);\n      }\n    }\n  };\n\n  // property link\n  model.propertyLinkSubscribers = {};\n  publicAPI.registerPropertyLinkForGC = (otherLink, type) => {\n    if (!(type in model.propertyLinkSubscribers)) {\n      model.propertyLinkSubscribers[type] = [];\n    }\n    model.propertyLinkSubscribers[type].push(otherLink);\n  };\n\n  publicAPI.gcPropertyLinks = (type) => {\n    const subscribers = model.propertyLinkSubscribers[type] || [];\n    while (subscribers.length) {\n      subscribers.pop().unbind(publicAPI);\n    }\n  };\n\n  model.propertyLinkMap = {};\n  publicAPI.getPropertyLink = (id, persistent = false) => {\n    if (model.propertyLinkMap[id]) {\n      return model.propertyLinkMap[id];\n    }\n    let value = null;\n    const links = [];\n    let count = 0;\n    let updateInProgress = false;\n\n    function update(source, force = false) {\n      if (updateInProgress) {\n        return null;\n      }\n\n      const needUpdate = [];\n      let sourceLink = null;\n      count = links.length;\n      while (count--) {\n        const link = links[count];\n        if (link.instance === source) {\n          sourceLink = link;\n        } else {\n          needUpdate.push(link);\n        }\n      }\n\n      if (!sourceLink) {\n        return null;\n      }\n\n      const newValue = sourceLink.instance[\n        `get${capitalize(sourceLink.propertyName)}`\n      ]();\n      if (newValue !== value || force) {\n        value = newValue;\n        updateInProgress = true;\n        while (needUpdate.length) {\n          const linkToUpdate = needUpdate.pop();\n          linkToUpdate.instance.set({\n            [linkToUpdate.propertyName]: value,\n          });\n        }\n        updateInProgress = false;\n      }\n\n      if (model.propertyLinkMap[id].persistent) {\n        model.propertyLinkMap[id].value = newValue;\n      }\n\n      return newValue;\n    }\n\n    function unbind(instance, propertyName) {\n      const indexToDelete = [];\n      count = links.length;\n      while (count--) {\n        const link = links[count];\n        if (\n          link.instance === instance &&\n          (link.propertyName === propertyName || propertyName === undefined)\n        ) {\n          link.subscription.unsubscribe();\n          indexToDelete.push(count);\n        }\n      }\n      while (indexToDelete.length) {\n        links.splice(indexToDelete.pop(), 1);\n      }\n    }\n\n    function bind(instance, propertyName, updateMe = false) {\n      const subscription = instance.onModified(update);\n      const other = links[0];\n      links.push({\n        instance,\n        propertyName,\n        subscription,\n      });\n      if (updateMe) {\n        if (\n          model.propertyLinkMap[id].persistent &&\n          model.propertyLinkMap[id].value !== undefined\n        ) {\n          instance.set({\n            [propertyName]: model.propertyLinkMap[id].value,\n          });\n        } else if (other) {\n          update(other.instance, true);\n        }\n      }\n      return {\n        unsubscribe: () => unbind(instance, propertyName),\n      };\n    }\n\n    function unsubscribe() {\n      while (links.length) {\n        links.pop().subscription.unsubscribe();\n      }\n    }\n\n    const linkHandler = {\n      bind,\n      unbind,\n      unsubscribe,\n      persistent,\n    };\n    model.propertyLinkMap[id] = linkHandler;\n    return linkHandler;\n  };\n\n  // extract values\n  function getProperties(groupName = ROOT_GROUP_NAME) {\n    const values = [];\n    const id = model.proxyId;\n    const propertyNames = listProxyProperties(groupName) || [];\n    for (let i = 0; i < propertyNames.length; i++) {\n      const name = propertyNames[i];\n      const method = publicAPI[`get${capitalize(name)}`];\n      const value = method ? method() : undefined;\n      const prop = {\n        id,\n        name,\n        value,\n      };\n      const children = getProperties(name);\n      if (children.length) {\n        prop.children = children;\n      }\n      values.push(prop);\n    }\n    return values;\n  }\n\n  publicAPI.listPropertyNames = () => getProperties().map((p) => p.name);\n\n  publicAPI.getPropertyByName = (name) =>\n    getProperties().find((p) => p.name === name);\n\n  publicAPI.getPropertyDomainByName = (name) => propertyMap[name].domain;\n\n  // ui section\n  publicAPI.getProxySection = () => ({\n    id: model.proxyId,\n    name: model.proxyGroup,\n    ui: model.ui,\n    properties: getProperties(),\n  });\n\n  // free resources\n  publicAPI.delete = () => {\n    const list = Object.keys(model.propertyLinkMap);\n    let count = list.length;\n    while (count--) {\n      model.propertyLinkMap[list[count]].unsubscribe();\n    }\n    Object.keys(model.propertyLinkSubscribers).forEach(\n      publicAPI.gcPropertyLinks\n    );\n    parentDelete();\n  };\n\n  function registerLinks() {\n    // Allow dynamic registration of links at the application level\n    if (model.links) {\n      for (let i = 0; i < model.links.length; i++) {\n        const { link, property, persistent, updateOnBind, type } = model.links[\n          i\n        ];\n        if (type === 'application') {\n          const sLink = model.proxyManager.getPropertyLink(link, persistent);\n          publicAPI.registerPropertyLinkForGC(sLink, 'application');\n          sLink.bind(publicAPI, property, updateOnBind);\n        }\n      }\n    }\n  }\n  setImmediateVTK(registerLinks);\n}\n\n// ----------------------------------------------------------------------------\n// proxyPropertyMapping(publicAPI, model, map)\n//\n//   map = {\n//      opacity: { modelKey: 'property', property: 'opacity' },\n//   }\n//\n// Generated API:\n//  Elevate set/get methods from internal object stored in the model to current one\n// ----------------------------------------------------------------------------\n\nexport function proxyPropertyMapping(publicAPI, model, map) {\n  const parentDelete = publicAPI.delete;\n  const subscriptions = [];\n\n  const propertyNames = Object.keys(map);\n  let count = propertyNames.length;\n  while (count--) {\n    const propertyName = propertyNames[count];\n    const { modelKey, property, modified = true } = map[propertyName];\n    const methodSrc = capitalize(property);\n    const methodDst = capitalize(propertyName);\n    publicAPI[`get${methodDst}`] = model[modelKey][`get${methodSrc}`];\n    publicAPI[`set${methodDst}`] = model[modelKey][`set${methodSrc}`];\n    if (modified) {\n      subscriptions.push(model[modelKey].onModified(publicAPI.modified));\n    }\n  }\n\n  publicAPI.delete = () => {\n    while (subscriptions.length) {\n      subscriptions.pop().unsubscribe();\n    }\n    parentDelete();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// proxyPropertyState(publicAPI, model, state, defaults)\n//\n//   state = {\n//     representation: {\n//       'Surface with edges': { property: { edgeVisibility: true, representation: 2 } },\n//       Surface: { property: { edgeVisibility: false, representation: 2 } },\n//       Wireframe: { property: { edgeVisibility: false, representation: 1 } },\n//       Points: { property: { edgeVisibility: false, representation: 0 } },\n//     },\n//   }\n//\n//   defaults = {\n//      representation: 'Surface',\n//   }\n//\n// Generated API\n//   get / set Representation ( string ) => push state to various internal objects\n// ----------------------------------------------------------------------------\n\nexport function proxyPropertyState(\n  publicAPI,\n  model,\n  state = {},\n  defaults = {}\n) {\n  model.this = publicAPI;\n\n  function applyState(map) {\n    const modelKeys = Object.keys(map);\n    let count = modelKeys.length;\n    while (count--) {\n      const modelKey = modelKeys[count];\n      model[modelKey].set(map[modelKey]);\n    }\n  }\n\n  const modelKeys = Object.keys(defaults);\n  let count = modelKeys.length;\n  while (count--) {\n    // Add default\n    const key = modelKeys[count];\n    model[key] = defaults[key];\n\n    // Add set method\n    const mapping = state[key];\n    publicAPI[`set${capitalize(key)}`] = (value) => {\n      if (value !== model[key]) {\n        model[key] = value;\n        const propValues = mapping[value];\n        applyState(propValues);\n        publicAPI.modified();\n      }\n    };\n  }\n\n  // Add getter\n  if (modelKeys.length) {\n    get(publicAPI, model, modelKeys);\n  }\n}\n\n// ----------------------------------------------------------------------------\n// From : https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\n//\n//\n// Copyright (c) 2015, Facebook, Inc.\n// All rights reserved.\n//\n// This source code is licensed under the BSD-style license found in the\n// LICENSE file in the root directory of this source tree. An additional grant\n// of patent rights can be found in the PATENTS file in the same directory.\n//\n//\n// Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is\n// complicated, thus this doc is long and (hopefully) detailed enough to answer\n// your questions.\n//\n// If you need to react to the mouse wheel in a predictable way, this code is\n// like your bestest friend.// hugs//\n//\n// As of today, there are 4 DOM event types you can listen to:\n//\n//   'wheel'                -- Chrome(31+), FF(17+), IE(9+)\n//   'mousewheel'           -- Chrome, IE(6+), Opera, Safari\n//   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!\n//   'DOMMouseScroll'       -- FF(0.9.7+) since 2003\n//\n// So what to do?  The is the best:\n//\n//   normalizeWheel.getEventType();\n//\n// In your event callback, use this code to get sane interpretation of the\n// deltas.  This code will return an object with properties:\n//\n//   spinX   -- normalized spin speed (use for zoom) - x plane\n//   spinY   -- \" - y plane\n//   pixelX  -- normalized distance (to pixels) - x plane\n//   pixelY  -- \" - y plane\n//\n// Wheel values are provided by the browser assuming you are using the wheel to\n// scroll a web page by a number of lines or pixels (or pages).  Values can vary\n// significantly on different platforms and browsers, forgetting that you can\n// scroll at different speeds.  Some devices (like trackpads) emit more events\n// at smaller increments with fine granularity, and some emit massive jumps with\n// linear speed or acceleration.\n//\n// This code does its best to normalize the deltas for you:\n//\n//   - spin is trying to normalize how far the wheel was spun (or trackpad\n//     dragged).  This is super useful for zoom support where you want to\n//     throw away the chunky scroll steps on the PC and make those equal to\n//     the slow and smooth tiny steps on the Mac. Key data: This code tries to\n//     resolve a single slow step on a wheel to 1.\n//\n//   - pixel is normalizing the desired scroll delta in pixel units.  You'll\n//     get the crazy differences between browsers, but at least it'll be in\n//     pixels!\n//\n//   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This\n//     should translate to positive value zooming IN, negative zooming OUT.\n//     This matches the newer 'wheel' event.\n//\n// Why are there spinX, spinY (or pixels)?\n//\n//   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn\n//     with a mouse.  It results in side-scrolling in the browser by default.\n//\n//   - spinY is what you expect -- it's the classic axis of a mouse wheel.\n//\n//   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and\n//     probably is by browsers in conjunction with fancy 3D controllers .. but\n//     you know.\n//\n// Implementation info:\n//\n// Examples of 'wheel' event if you scroll slowly (down) by one step with an\n// average mouse:\n//\n//   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)\n//   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)\n//   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)\n//   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)\n//   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)\n//\n// On the trackpad:\n//\n//   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)\n//   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)\n//\n// On other/older browsers.. it's more complicated as there can be multiple and\n// also missing delta values.\n//\n// The 'wheel' event is more standard:\n//\n// http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n//\n// The basics is that it includes a unit, deltaMode (pixels, lines, pages), and\n// deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain\n// backward compatibility with older events.  Those other values help us\n// better normalize spin speed.  Example of what the browsers provide:\n//\n//                          | event.wheelDelta | event.detail\n//        ------------------+------------------+--------------\n//          Safari v5/OS X  |       -120       |       0\n//          Safari v5/Win7  |       -120       |       0\n//         Chrome v17/OS X  |       -120       |       0\n//         Chrome v17/Win7  |       -120       |       0\n//                IE9/Win7  |       -120       |   undefined\n//         Firefox v4/OS X  |     undefined    |       1\n//         Firefox v4/Win7  |     undefined    |       3\n//\n// ----------------------------------------------------------------------------\n\n// Reasonable defaults\nconst PIXEL_STEP = 10;\nconst LINE_HEIGHT = 40;\nconst PAGE_HEIGHT = 800;\n\nexport function normalizeWheel(wheelEvent) {\n  let sX = 0; // spinX\n  let sY = 0; // spinY\n  let pX = 0; // pixelX\n  let pY = 0; // pixelY\n\n  // Legacy\n  if ('detail' in wheelEvent) {\n    sY = wheelEvent.detail;\n  }\n  if ('wheelDelta' in wheelEvent) {\n    sY = -wheelEvent.wheelDelta / 120;\n  }\n  if ('wheelDeltaY' in wheelEvent) {\n    sY = -wheelEvent.wheelDeltaY / 120;\n  }\n  if ('wheelDeltaX' in wheelEvent) {\n    sX = -wheelEvent.wheelDeltaX / 120;\n  }\n\n  // side scrolling on FF with DOMMouseScroll\n  if ('axis' in wheelEvent && wheelEvent.axis === wheelEvent.HORIZONTAL_AXIS) {\n    sX = sY;\n    sY = 0;\n  }\n\n  pX = sX * PIXEL_STEP;\n  pY = sY * PIXEL_STEP;\n\n  if ('deltaY' in wheelEvent) {\n    pY = wheelEvent.deltaY;\n  }\n  if ('deltaX' in wheelEvent) {\n    pX = wheelEvent.deltaX;\n  }\n\n  if ((pX || pY) && wheelEvent.deltaMode) {\n    if (wheelEvent.deltaMode === 1) {\n      // delta in LINE units\n      pX *= LINE_HEIGHT;\n      pY *= LINE_HEIGHT;\n    } else {\n      // delta in PAGE units\n      pX *= PAGE_HEIGHT;\n      pY *= PAGE_HEIGHT;\n    }\n  }\n\n  // Fall-back if spin cannot be determined\n  if (pX && !sX) {\n    sX = pX < 1 ? -1 : 1;\n  }\n  if (pY && !sY) {\n    sY = pY < 1 ? -1 : 1;\n  }\n\n  return {\n    spinX: sX,\n    spinY: sY,\n    pixelX: pX,\n    pixelY: pY,\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Default export\n// ----------------------------------------------------------------------------\n\nexport default {\n  algo,\n  capitalize,\n  chain,\n  debounce,\n  enumToString,\n  event,\n  EVENT_ABORT,\n  formatBytesToProperUnit,\n  formatNumbersWithThousandSeparator,\n  get,\n  getArray,\n  getCurrentGlobalMTime,\n  getStateArrayMapFunc,\n  isVtkObject,\n  keystore,\n  newInstance,\n  normalizeWheel,\n  obj,\n  proxy,\n  proxyPropertyMapping,\n  proxyPropertyState,\n  safeArrays,\n  set,\n  setArray,\n  setGet,\n  setGetArray,\n  setImmediate: setImmediateVTK,\n  setLoggerFunction,\n  throttle,\n  traverseInstanceTree,\n  TYPED_ARRAYS,\n  uncapitalize,\n  VOID,\n  vtkDebugMacro,\n  vtkErrorMacro,\n  vtkInfoMacro,\n  vtkLogMacro,\n  vtkOnceErrorMacro,\n  vtkWarningMacro,\n};\n","import seedrandom from 'seedrandom';\nimport macro from 'vtk.js/Sources/macro';\n\nconst { vtkErrorMacro, vtkWarningMacro } = macro;\n\n// ----------------------------------------------------------------------------\n/* eslint-disable camelcase                                                  */\n/* eslint-disable no-cond-assign                                             */\n/* eslint-disable no-bitwise                                                 */\n/* eslint-disable no-multi-assign                                            */\n// ----------------------------------------------------------------------------\nlet randomSeedValue = 0;\nconst VTK_MAX_ROTATIONS = 20;\nconst VTK_SMALL_NUMBER = 1.0e-12;\n\nfunction notImplemented(method) {\n  return () => vtkErrorMacro(`vtkMath::${method} - NOT IMPLEMENTED`);\n}\n\nfunction vtkSwapVectors3(v1, v2) {\n  for (let i = 0; i < 3; i++) {\n    const tmp = v1[i];\n    v1[i] = v2[i];\n    v2[i] = tmp;\n  }\n}\n\nfunction createArray(size = 3) {\n  const array = [];\n  while (array.length < size) {\n    array.push(0);\n  }\n  return array;\n}\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nexport const Pi = () => Math.PI;\n\nexport function radiansFromDegrees(deg) {\n  return (deg / 180) * Math.PI;\n}\n\nexport function degreesFromRadians(rad) {\n  return (rad * 180) / Math.PI;\n}\n\nexport const { round, floor, ceil, min, max } = Math;\n\nexport function arrayMin(arr, offset = 0, stride = 1) {\n  let minValue = Infinity;\n  for (let i = offset, len = arr.length; i < len; i += stride) {\n    if (arr[i] < minValue) {\n      minValue = arr[i];\n    }\n  }\n\n  return minValue;\n}\n\nexport function arrayMax(arr, offset = 0, stride = 1) {\n  let maxValue = -Infinity;\n  for (let i = offset, len = arr.length; i < len; i += stride) {\n    if (maxValue < arr[i]) {\n      maxValue = arr[i];\n    }\n  }\n\n  return maxValue;\n}\n\nexport function arrayRange(arr, offset = 0, stride = 1) {\n  let minValue = Infinity;\n  let maxValue = -Infinity;\n  for (let i = offset, len = arr.length; i < len; i += stride) {\n    if (arr[i] < minValue) {\n      minValue = arr[i];\n    }\n    if (maxValue < arr[i]) {\n      maxValue = arr[i];\n    }\n  }\n\n  return [minValue, maxValue];\n}\n\nexport const ceilLog2 = notImplemented('ceilLog2');\nexport const factorial = notImplemented('factorial');\n\nexport function nearestPowerOfTwo(xi) {\n  let v = 1;\n  while (v < xi) {\n    v *= 2;\n  }\n  return v;\n}\n\nexport function isPowerOfTwo(x) {\n  return x === nearestPowerOfTwo(x);\n}\n\nexport function binomial(m, n) {\n  let r = 1;\n  for (let i = 1; i <= n; ++i) {\n    r *= (m - i + 1) / i;\n  }\n  return Math.floor(r);\n}\n\nexport function beginCombination(m, n) {\n  if (m < n) {\n    return 0;\n  }\n\n  const r = createArray(n);\n  for (let i = 0; i < n; ++i) {\n    r[i] = i;\n  }\n  return r;\n}\n\nexport function nextCombination(m, n, r) {\n  let status = 0;\n  for (let i = n - 1; i >= 0; --i) {\n    if (r[i] < m - n + i) {\n      let j = r[i] + 1;\n      while (i < n) {\n        r[i++] = j++;\n      }\n      status = 1;\n      break;\n    }\n  }\n  return status;\n}\n\nexport function randomSeed(seed) {\n  seedrandom(`${seed}`, { global: true });\n  randomSeedValue = seed;\n}\n\nexport function getSeed() {\n  return randomSeedValue;\n}\n\nexport function random(minValue = 0, maxValue = 1) {\n  const delta = maxValue - minValue;\n  return minValue + delta * Math.random();\n}\n\nexport const gaussian = notImplemented('gaussian');\n\n// Vect3 operations\nexport function add(a, b, out) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n}\n\nexport function subtract(a, b, out) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n}\n\nexport function multiplyScalar(vec, scalar) {\n  vec[0] *= scalar;\n  vec[1] *= scalar;\n  vec[2] *= scalar;\n}\n\nexport function multiplyScalar2D(vec, scalar) {\n  vec[0] *= scalar;\n  vec[1] *= scalar;\n}\n\nexport function dot(x, y) {\n  return x[0] * y[0] + x[1] * y[1] + x[2] * y[2];\n}\n\nexport function outer(x, y, out_3x3) {\n  for (let i = 0; i < 3; i++) {\n    for (let j = 0; j < 3; j++) {\n      out_3x3[i][j] = x[i] * y[j];\n    }\n  }\n}\n\nexport function cross(x, y, out) {\n  const Zx = x[1] * y[2] - x[2] * y[1];\n  const Zy = x[2] * y[0] - x[0] * y[2];\n  const Zz = x[0] * y[1] - x[1] * y[0];\n  out[0] = Zx;\n  out[1] = Zy;\n  out[2] = Zz;\n}\n\nexport function norm(x, n = 3) {\n  switch (n) {\n    case 1:\n      return Math.abs(x);\n    case 2:\n      return Math.sqrt(x[0] * x[0] + x[1] * x[1]);\n    case 3:\n      return Math.sqrt(x[0] * x[0] + x[1] * x[1] + x[2] * x[2]);\n    default: {\n      let sum = 0;\n      for (let i = 0; i < n; i++) {\n        sum += x[i] * x[i];\n      }\n      return Math.sqrt(sum);\n    }\n  }\n}\n\nexport function normalize(x) {\n  const den = norm(x);\n  if (den !== 0.0) {\n    x[0] /= den;\n    x[1] /= den;\n    x[2] /= den;\n  }\n  return den;\n}\n\nexport function perpendiculars(x, y, z, theta) {\n  const x2 = x[0] * x[0];\n  const y2 = x[1] * x[1];\n  const z2 = x[2] * x[2];\n  const r = Math.sqrt(x2 + y2 + z2);\n\n  let dx;\n  let dy;\n  let dz;\n\n  // transpose the vector to avoid divide-by-zero error\n  if (x2 > y2 && x2 > z2) {\n    dx = 0;\n    dy = 1;\n    dz = 2;\n  } else if (y2 > z2) {\n    dx = 1;\n    dy = 2;\n    dz = 0;\n  } else {\n    dx = 2;\n    dy = 0;\n    dz = 1;\n  }\n\n  const a = x[dx] / r;\n  const b = x[dy] / r;\n  const c = x[dz] / r;\n  const tmp = Math.sqrt(a * a + c * c);\n\n  if (theta !== 0) {\n    const sintheta = Math.sin(theta);\n    const costheta = Math.cos(theta);\n\n    if (y) {\n      y[dx] = (c * costheta - a * b * sintheta) / tmp;\n      y[dy] = sintheta * tmp;\n      y[dz] = (-(a * costheta) - b * c * sintheta) / tmp;\n    }\n\n    if (z) {\n      z[dx] = (-(c * sintheta) - a * b * costheta) / tmp;\n      z[dy] = costheta * tmp;\n      z[dz] = (a * sintheta - b * c * costheta) / tmp;\n    }\n  } else {\n    if (y) {\n      y[dx] = c / tmp;\n      y[dy] = 0;\n      y[dz] = -a / tmp;\n    }\n\n    if (z) {\n      z[dx] = (-a * b) / tmp;\n      z[dy] = tmp;\n      z[dz] = (-b * c) / tmp;\n    }\n  }\n}\n\nexport function projectVector(a, b, projection) {\n  const bSquared = dot(b, b);\n\n  if (bSquared === 0) {\n    projection[0] = 0;\n    projection[1] = 0;\n    projection[2] = 0;\n    return false;\n  }\n\n  const scale = dot(a, b) / bSquared;\n\n  for (let i = 0; i < 3; i++) {\n    projection[i] = b[i];\n  }\n  multiplyScalar(projection, scale);\n\n  return true;\n}\n\nexport function dot2D(x, y) {\n  return x[0] * y[0] + x[1] * y[1];\n}\n\nexport function projectVector2D(a, b, projection) {\n  const bSquared = dot2D(b, b);\n\n  if (bSquared === 0) {\n    projection[0] = 0;\n    projection[1] = 0;\n    return false;\n  }\n\n  const scale = dot2D(a, b) / bSquared;\n\n  for (let i = 0; i < 2; i++) {\n    projection[i] = b[i];\n  }\n  multiplyScalar2D(projection, scale);\n\n  return true;\n}\n\nexport function distance2BetweenPoints(x, y) {\n  return (\n    (x[0] - y[0]) * (x[0] - y[0]) +\n    (x[1] - y[1]) * (x[1] - y[1]) +\n    (x[2] - y[2]) * (x[2] - y[2])\n  );\n}\n\nexport function angleBetweenVectors(v1, v2) {\n  const crossVect = [0, 0, 0];\n  cross(v1, v2, crossVect);\n  return Math.atan2(norm(crossVect), dot(v1, v2));\n}\n\nexport function gaussianAmplitude(mean, variance, position) {\n  const distanceFromMean = Math.abs(mean - position);\n  return (\n    (1 / Math.sqrt(2 * Math.PI * variance)) *\n    Math.exp(-(distanceFromMean ** 2) / (2 * variance))\n  );\n}\n\nexport function gaussianWeight(mean, variance, position) {\n  const distanceFromMean = Math.abs(mean - position);\n  return Math.exp(-(distanceFromMean ** 2) / (2 * variance));\n}\n\nexport function outer2D(x, y, out_2x2) {\n  for (let i = 0; i < 2; i++) {\n    for (let j = 0; j < 2; j++) {\n      out_2x2[i][j] = x[i] * y[j];\n    }\n  }\n}\n\nexport function norm2D(x2D) {\n  return Math.sqrt(x2D[0] * x2D[0] + x2D[1] * x2D[1]);\n}\n\nexport function normalize2D(x) {\n  const den = norm2D(x);\n  if (den !== 0.0) {\n    x[0] /= den;\n    x[1] /= den;\n  }\n  return den;\n}\n\nexport function determinant2x2(...args) {\n  if (args.length === 2) {\n    return args[0][0] * args[1][1] - args[1][0] * args[0][1];\n  }\n  if (args.length === 4) {\n    return args[0] * args[3] - args[1] * args[2];\n  }\n  return Number.NaN;\n}\n\nexport function LUFactor3x3(mat_3x3, index_3) {\n  let maxI;\n  let tmp;\n  let largest;\n  const scale = [0, 0, 0];\n\n  // Loop over rows to get implicit scaling information\n  for (let i = 0; i < 3; i++) {\n    largest = Math.abs(mat_3x3[i][0]);\n    if ((tmp = Math.abs(mat_3x3[i][1])) > largest) {\n      largest = tmp;\n    }\n    if ((tmp = Math.abs(mat_3x3[i][2])) > largest) {\n      largest = tmp;\n    }\n    scale[i] = 1 / largest;\n  }\n\n  // Loop over all columns using Crout's method\n\n  // first column\n  largest = scale[0] * Math.abs(mat_3x3[0][0]);\n  maxI = 0;\n  if ((tmp = scale[1] * Math.abs(mat_3x3[1][0])) >= largest) {\n    largest = tmp;\n    maxI = 1;\n  }\n  if ((tmp = scale[2] * Math.abs(mat_3x3[2][0])) >= largest) {\n    maxI = 2;\n  }\n  if (maxI !== 0) {\n    vtkSwapVectors3(mat_3x3[maxI], mat_3x3[0]);\n    scale[maxI] = scale[0];\n  }\n  index_3[0] = maxI;\n\n  mat_3x3[1][0] /= mat_3x3[0][0];\n  mat_3x3[2][0] /= mat_3x3[0][0];\n\n  // second column\n  mat_3x3[1][1] -= mat_3x3[1][0] * mat_3x3[0][1];\n  mat_3x3[2][1] -= mat_3x3[2][0] * mat_3x3[0][1];\n  largest = scale[1] * Math.abs(mat_3x3[1][1]);\n  maxI = 1;\n  if ((tmp = scale[2] * Math.abs(mat_3x3[2][1])) >= largest) {\n    maxI = 2;\n    vtkSwapVectors3(mat_3x3[2], mat_3x3[1]);\n    scale[2] = scale[1];\n  }\n  index_3[1] = maxI;\n  mat_3x3[2][1] /= mat_3x3[1][1];\n\n  // third column\n  mat_3x3[1][2] -= mat_3x3[1][0] * mat_3x3[0][2];\n  mat_3x3[2][2] -=\n    mat_3x3[2][0] * mat_3x3[0][2] + mat_3x3[2][1] * mat_3x3[1][2];\n  index_3[2] = 2;\n}\n\nexport function LUSolve3x3(mat_3x3, index_3, x_3) {\n  // forward substitution\n  let sum = x_3[index_3[0]];\n  x_3[index_3[0]] = x_3[0];\n  x_3[0] = sum;\n\n  sum = x_3[index_3[1]];\n  x_3[index_3[1]] = x_3[1];\n  x_3[1] = sum - mat_3x3[1][0] * x_3[0];\n\n  sum = x_3[index_3[2]];\n  x_3[index_3[2]] = x_3[2];\n  x_3[2] = sum - mat_3x3[2][0] * x_3[0] - mat_3x3[2][1] * x_3[1];\n\n  // back substitution\n  x_3[2] /= mat_3x3[2][2];\n  x_3[1] = (x_3[1] - mat_3x3[1][2] * x_3[2]) / mat_3x3[1][1];\n  x_3[0] =\n    (x_3[0] - mat_3x3[0][1] * x_3[1] - mat_3x3[0][2] * x_3[2]) / mat_3x3[0][0];\n}\n\nexport function linearSolve3x3(mat_3x3, x_3, y_3) {\n  const a1 = mat_3x3[0][0];\n  const b1 = mat_3x3[0][1];\n  const c1 = mat_3x3[0][2];\n  const a2 = mat_3x3[1][0];\n  const b2 = mat_3x3[1][1];\n  const c2 = mat_3x3[1][2];\n  const a3 = mat_3x3[2][0];\n  const b3 = mat_3x3[2][1];\n  const c3 = mat_3x3[2][2];\n\n  // Compute the adjoint\n  const d1 = +determinant2x2(b2, b3, c2, c3);\n  const d2 = -determinant2x2(a2, a3, c2, c3);\n  const d3 = +determinant2x2(a2, a3, b2, b3);\n\n  const e1 = -determinant2x2(b1, b3, c1, c3);\n  const e2 = +determinant2x2(a1, a3, c1, c3);\n  const e3 = -determinant2x2(a1, a3, b1, b3);\n\n  const f1 = +determinant2x2(b1, b2, c1, c2);\n  const f2 = -determinant2x2(a1, a2, c1, c2);\n  const f3 = +determinant2x2(a1, a2, b1, b2);\n\n  // Compute the determinant\n  const det = a1 * d1 + b1 * d2 + c1 * d3;\n\n  // Multiply by the adjoint\n  const v1 = d1 * x_3[0] + e1 * x_3[1] + f1 * x_3[2];\n  const v2 = d2 * x_3[0] + e2 * x_3[1] + f2 * x_3[2];\n  const v3 = d3 * x_3[0] + e3 * x_3[1] + f3 * x_3[2];\n\n  // Divide by the determinant\n  y_3[0] = v1 / det;\n  y_3[1] = v2 / det;\n  y_3[2] = v3 / det;\n}\n\nexport function multiply3x3_vect3(mat_3x3, in_3, out_3) {\n  const x =\n    mat_3x3[0][0] * in_3[0] + mat_3x3[0][1] * in_3[1] + mat_3x3[0][2] * in_3[2];\n  const y =\n    mat_3x3[1][0] * in_3[0] + mat_3x3[1][1] * in_3[1] + mat_3x3[1][2] * in_3[2];\n  const z =\n    mat_3x3[2][0] * in_3[0] + mat_3x3[2][1] * in_3[1] + mat_3x3[2][2] * in_3[2];\n\n  out_3[0] = x;\n  out_3[1] = y;\n  out_3[2] = z;\n}\n\nexport function multiply3x3_mat3(a_3x3, b_3x3, out_3x3) {\n  const tmp = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n\n  for (let i = 0; i < 3; i++) {\n    tmp[0][i] =\n      a_3x3[0][0] * b_3x3[0][i] +\n      a_3x3[0][1] * b_3x3[1][i] +\n      a_3x3[0][2] * b_3x3[2][i];\n    tmp[1][i] =\n      a_3x3[1][0] * b_3x3[0][i] +\n      a_3x3[1][1] * b_3x3[1][i] +\n      a_3x3[1][2] * b_3x3[2][i];\n    tmp[2][i] =\n      a_3x3[2][0] * b_3x3[0][i] +\n      a_3x3[2][1] * b_3x3[1][i] +\n      a_3x3[2][2] * b_3x3[2][i];\n  }\n\n  for (let j = 0; j < 3; j++) {\n    out_3x3[j][0] = tmp[j][0];\n    out_3x3[j][1] = tmp[j][1];\n    out_3x3[j][2] = tmp[j][2];\n  }\n}\n\nexport function multiplyMatrix(a, b, rowA, colA, rowB, colB, out_rowXcol) {\n  // we need colA == rowB\n  if (colA !== rowB) {\n    vtkErrorMacro('Number of columns of A must match number of rows of B.');\n  }\n\n  // output matrix is rowA*colB\n  // output row\n  for (let i = 0; i < rowA; i++) {\n    // output col\n    for (let j = 0; j < colB; j++) {\n      out_rowXcol[i][j] = 0;\n      // sum for this point\n      for (let k = 0; k < colA; k++) {\n        out_rowXcol[i][j] += a[i][k] * b[k][j];\n      }\n    }\n  }\n}\n\nexport function transpose3x3(in_3x3, outT_3x3) {\n  let tmp;\n  tmp = in_3x3[1][0];\n  outT_3x3[1][0] = in_3x3[0][1];\n  outT_3x3[0][1] = tmp;\n  tmp = in_3x3[2][0];\n  outT_3x3[2][0] = in_3x3[0][2];\n  outT_3x3[0][2] = tmp;\n  tmp = in_3x3[2][1];\n  outT_3x3[2][1] = in_3x3[1][2];\n  outT_3x3[1][2] = tmp;\n\n  outT_3x3[0][0] = in_3x3[0][0];\n  outT_3x3[1][1] = in_3x3[1][1];\n  outT_3x3[2][2] = in_3x3[2][2];\n}\n\nexport function invert3x3(in_3x3, outI_3x3) {\n  const a1 = in_3x3[0][0];\n  const b1 = in_3x3[0][1];\n  const c1 = in_3x3[0][2];\n  const a2 = in_3x3[1][0];\n  const b2 = in_3x3[1][1];\n  const c2 = in_3x3[1][2];\n  const a3 = in_3x3[2][0];\n  const b3 = in_3x3[2][1];\n  const c3 = in_3x3[2][2];\n\n  // Compute the adjoint\n  const d1 = +determinant2x2(b2, b3, c2, c3);\n  const d2 = -determinant2x2(a2, a3, c2, c3);\n  const d3 = +determinant2x2(a2, a3, b2, b3);\n\n  const e1 = -determinant2x2(b1, b3, c1, c3);\n  const e2 = +determinant2x2(a1, a3, c1, c3);\n  const e3 = -determinant2x2(a1, a3, b1, b3);\n\n  const f1 = +determinant2x2(b1, b2, c1, c2);\n  const f2 = -determinant2x2(a1, a2, c1, c2);\n  const f3 = +determinant2x2(a1, a2, b1, b2);\n\n  // Divide by the determinant\n  const det = a1 * d1 + b1 * d2 + c1 * d3;\n\n  outI_3x3[0][0] = d1 / det;\n  outI_3x3[1][0] = d2 / det;\n  outI_3x3[2][0] = d3 / det;\n\n  outI_3x3[0][1] = e1 / det;\n  outI_3x3[1][1] = e2 / det;\n  outI_3x3[2][1] = e3 / det;\n\n  outI_3x3[0][2] = f1 / det;\n  outI_3x3[1][2] = f2 / det;\n  outI_3x3[2][2] = f3 / det;\n}\n\nexport function identity3x3(mat_3x3) {\n  for (let i = 0; i < 3; i++) {\n    mat_3x3[i][0] = mat_3x3[i][1] = mat_3x3[i][2] = 0;\n    mat_3x3[i][i] = 1;\n  }\n}\n\nexport function determinant3x3(mat_3x3) {\n  return (\n    mat_3x3[0][0] * mat_3x3[1][1] * mat_3x3[2][2] +\n    mat_3x3[1][0] * mat_3x3[2][1] * mat_3x3[0][2] +\n    mat_3x3[2][0] * mat_3x3[0][1] * mat_3x3[1][2] -\n    mat_3x3[0][0] * mat_3x3[2][1] * mat_3x3[1][2] -\n    mat_3x3[1][0] * mat_3x3[0][1] * mat_3x3[2][2] -\n    mat_3x3[2][0] * mat_3x3[1][1] * mat_3x3[0][2]\n  );\n}\n\nexport function quaternionToMatrix3x3(quat_4, mat_3x3) {\n  const ww = quat_4[0] * quat_4[0];\n  const wx = quat_4[0] * quat_4[1];\n  const wy = quat_4[0] * quat_4[2];\n  const wz = quat_4[0] * quat_4[3];\n\n  const xx = quat_4[1] * quat_4[1];\n  const yy = quat_4[2] * quat_4[2];\n  const zz = quat_4[3] * quat_4[3];\n\n  const xy = quat_4[1] * quat_4[2];\n  const xz = quat_4[1] * quat_4[3];\n  const yz = quat_4[2] * quat_4[3];\n\n  const rr = xx + yy + zz;\n  // normalization factor, just in case quaternion was not normalized\n  let f = 1 / (ww + rr);\n  const s = (ww - rr) * f;\n  f *= 2;\n\n  mat_3x3[0][0] = xx * f + s;\n  mat_3x3[1][0] = (xy + wz) * f;\n  mat_3x3[2][0] = (xz - wy) * f;\n\n  mat_3x3[0][1] = (xy - wz) * f;\n  mat_3x3[1][1] = yy * f + s;\n  mat_3x3[2][1] = (yz + wx) * f;\n\n  mat_3x3[0][2] = (xz + wy) * f;\n  mat_3x3[1][2] = (yz - wx) * f;\n  mat_3x3[2][2] = zz * f + s;\n}\n\nexport function areMatricesEqual(matA, matB) {\n  if (!matA.length === matB.length) {\n    return false;\n  }\n\n  function isEqual(element, index) {\n    return element === matB[index];\n  }\n  return matA.every(isEqual);\n}\n\nexport function jacobiN(a, n, w, v) {\n  let i;\n  let j;\n  let k;\n  let iq;\n  let ip;\n  let numPos;\n  let tresh;\n  let theta;\n  let t;\n  let tau;\n  let sm;\n  let s;\n  let h;\n  let g;\n  let c;\n  let tmp;\n  const b = createArray(n);\n  const z = createArray(n);\n\n  const vtkROTATE = (aa, ii, jj, kk, ll) => {\n    g = aa[ii][jj];\n    h = aa[kk][ll];\n    aa[ii][jj] = g - s * (h + g * tau);\n    aa[kk][ll] = h + s * (g - h * tau);\n  };\n\n  // initialize\n  for (ip = 0; ip < n; ip++) {\n    for (iq = 0; iq < n; iq++) {\n      v[ip][iq] = 0.0;\n    }\n    v[ip][ip] = 1.0;\n  }\n  for (ip = 0; ip < n; ip++) {\n    b[ip] = w[ip] = a[ip][ip];\n    z[ip] = 0.0;\n  }\n\n  // begin rotation sequence\n  for (i = 0; i < VTK_MAX_ROTATIONS; i++) {\n    sm = 0.0;\n    for (ip = 0; ip < n - 1; ip++) {\n      for (iq = ip + 1; iq < n; iq++) {\n        sm += Math.abs(a[ip][iq]);\n      }\n    }\n    if (sm === 0.0) {\n      break;\n    }\n\n    // first 3 sweeps\n    if (i < 3) {\n      tresh = (0.2 * sm) / (n * n);\n    } else {\n      tresh = 0.0;\n    }\n\n    for (ip = 0; ip < n - 1; ip++) {\n      for (iq = ip + 1; iq < n; iq++) {\n        g = 100.0 * Math.abs(a[ip][iq]);\n\n        // after 4 sweeps\n        if (\n          i > 3 &&\n          Math.abs(w[ip]) + g === Math.abs(w[ip]) &&\n          Math.abs(w[iq]) + g === Math.abs(w[iq])\n        ) {\n          a[ip][iq] = 0.0;\n        } else if (Math.abs(a[ip][iq]) > tresh) {\n          h = w[iq] - w[ip];\n          if (Math.abs(h) + g === Math.abs(h)) {\n            t = a[ip][iq] / h;\n          } else {\n            theta = (0.5 * h) / a[ip][iq];\n            t = 1.0 / (Math.abs(theta) + Math.sqrt(1.0 + theta * theta));\n            if (theta < 0.0) {\n              t = -t;\n            }\n          }\n          c = 1.0 / Math.sqrt(1 + t * t);\n          s = t * c;\n          tau = s / (1.0 + c);\n          h = t * a[ip][iq];\n          z[ip] -= h;\n          z[iq] += h;\n          w[ip] -= h;\n          w[iq] += h;\n          a[ip][iq] = 0.0;\n\n          // ip already shifted left by 1 unit\n          for (j = 0; j <= ip - 1; j++) {\n            vtkROTATE(a, j, ip, j, iq);\n          }\n          // ip and iq already shifted left by 1 unit\n          for (j = ip + 1; j <= iq - 1; j++) {\n            vtkROTATE(a, ip, j, j, iq);\n          }\n          // iq already shifted left by 1 unit\n          for (j = iq + 1; j < n; j++) {\n            vtkROTATE(a, ip, j, iq, j);\n          }\n          for (j = 0; j < n; j++) {\n            vtkROTATE(v, j, ip, j, iq);\n          }\n        }\n      }\n    }\n\n    for (ip = 0; ip < n; ip++) {\n      b[ip] += z[ip];\n      w[ip] = b[ip];\n      z[ip] = 0.0;\n    }\n  }\n\n  // this is NEVER called\n  if (i >= VTK_MAX_ROTATIONS) {\n    vtkWarningMacro('vtkMath::Jacobi: Error extracting eigenfunctions');\n    return 0;\n  }\n\n  // sort eigenfunctions: these changes do not affect accuracy\n  for (j = 0; j < n - 1; j++) {\n    // boundary incorrect\n    k = j;\n    tmp = w[k];\n    for (i = j + 1; i < n; i++) {\n      // boundary incorrect, shifted already\n      if (w[i] >= tmp) {\n        // why exchange if same?\n        k = i;\n        tmp = w[k];\n      }\n    }\n    if (k !== j) {\n      w[k] = w[j];\n      w[j] = tmp;\n      for (i = 0; i < n; i++) {\n        tmp = v[i][j];\n        v[i][j] = v[i][k];\n        v[i][k] = tmp;\n      }\n    }\n  }\n  // ensure eigenvector consistency (i.e., Jacobi can compute vectors that\n  // are negative of one another (.707,.707,0) and (-.707,-.707,0). This can\n  // reek havoc in hyperstreamline/other stuff. We will select the most\n  // positive eigenvector.\n  const ceil_half_n = (n >> 1) + (n & 1);\n  for (j = 0; j < n; j++) {\n    for (numPos = 0, i = 0; i < n; i++) {\n      if (v[i][j] >= 0.0) {\n        numPos++;\n      }\n    }\n    //    if ( numPos < ceil(double(n)/double(2.0)) )\n    if (numPos < ceil_half_n) {\n      for (i = 0; i < n; i++) {\n        v[i][j] *= -1.0;\n      }\n    }\n  }\n  return 1;\n}\n\nexport function matrix3x3ToQuaternion(mat_3x3, quat_4) {\n  const tmp = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\n\n  // on-diagonal elements\n  tmp[0][0] = mat_3x3[0][0] + mat_3x3[1][1] + mat_3x3[2][2];\n  tmp[1][1] = mat_3x3[0][0] - mat_3x3[1][1] - mat_3x3[2][2];\n  tmp[2][2] = -mat_3x3[0][0] + mat_3x3[1][1] - mat_3x3[2][2];\n  tmp[3][3] = -mat_3x3[0][0] - mat_3x3[1][1] + mat_3x3[2][2];\n\n  // off-diagonal elements\n  tmp[0][1] = tmp[1][0] = mat_3x3[2][1] - mat_3x3[1][2];\n  tmp[0][2] = tmp[2][0] = mat_3x3[0][2] - mat_3x3[2][0];\n  tmp[0][3] = tmp[3][0] = mat_3x3[1][0] - mat_3x3[0][1];\n\n  tmp[1][2] = tmp[2][1] = mat_3x3[1][0] + mat_3x3[0][1];\n  tmp[1][3] = tmp[3][1] = mat_3x3[0][2] + mat_3x3[2][0];\n  tmp[2][3] = tmp[3][2] = mat_3x3[2][1] + mat_3x3[1][2];\n\n  const eigenvectors = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\n  const eigenvalues = [0, 0, 0, 0];\n\n  // convert into format that JacobiN can use,\n  // then use Jacobi to find eigenvalues and eigenvectors\n  const NTemp = [0, 0, 0, 0];\n  const eigenvectorsTemp = [0, 0, 0, 0];\n  for (let i = 0; i < 4; i++) {\n    NTemp[i] = tmp[i];\n    eigenvectorsTemp[i] = eigenvectors[i];\n  }\n  jacobiN(NTemp, 4, eigenvalues, eigenvectorsTemp);\n\n  // the first eigenvector is the one we want\n  quat_4[0] = eigenvectors[0][0];\n  quat_4[1] = eigenvectors[1][0];\n  quat_4[2] = eigenvectors[2][0];\n  quat_4[3] = eigenvectors[3][0];\n}\n\nexport function multiplyQuaternion(quat_1, quat_2, quat_out) {\n  const ww = quat_1[0] * quat_2[0];\n  const wx = quat_1[0] * quat_2[1];\n  const wy = quat_1[0] * quat_2[2];\n  const wz = quat_1[0] * quat_2[3];\n\n  const xw = quat_1[1] * quat_2[0];\n  const xx = quat_1[1] * quat_2[1];\n  const xy = quat_1[1] * quat_2[2];\n  const xz = quat_1[1] * quat_2[3];\n\n  const yw = quat_1[2] * quat_2[0];\n  const yx = quat_1[2] * quat_2[1];\n  const yy = quat_1[2] * quat_2[2];\n  const yz = quat_1[2] * quat_2[3];\n\n  const zw = quat_1[3] * quat_2[0];\n  const zx = quat_1[3] * quat_2[1];\n  const zy = quat_1[3] * quat_2[2];\n  const zz = quat_1[3] * quat_2[3];\n\n  quat_out[0] = ww - xx - yy - zz;\n  quat_out[1] = wx + xw + yz - zy;\n  quat_out[2] = wy - xz + yw + zx;\n  quat_out[3] = wz + xy - yx + zw;\n}\n\nexport function orthogonalize3x3(a_3x3, out_3x3) {\n  // copy the matrix\n  for (let i = 0; i < 3; i++) {\n    out_3x3[0][i] = a_3x3[0][i];\n    out_3x3[1][i] = a_3x3[1][i];\n    out_3x3[2][i] = a_3x3[2][i];\n  }\n\n  // Pivot the matrix to improve accuracy\n  const scale = createArray(3);\n  const index = createArray(3);\n  let largest;\n\n  // Loop over rows to get implicit scaling information\n  for (let i = 0; i < 3; i++) {\n    const x1 = Math.abs(out_3x3[i][0]);\n    const x2 = Math.abs(out_3x3[i][1]);\n    const x3 = Math.abs(out_3x3[i][2]);\n    largest = x2 > x1 ? x2 : x1;\n    largest = x3 > largest ? x3 : largest;\n    scale[i] = 1;\n    if (largest !== 0) {\n      scale[i] /= largest;\n    }\n  }\n\n  // first column\n  const x1 = Math.abs(out_3x3[0][0]) * scale[0];\n  const x2 = Math.abs(out_3x3[1][0]) * scale[1];\n  const x3 = Math.abs(out_3x3[2][0]) * scale[2];\n  index[0] = 0;\n  largest = x1;\n  if (x2 >= largest) {\n    largest = x2;\n    index[0] = 1;\n  }\n  if (x3 >= largest) {\n    index[0] = 2;\n  }\n  if (index[0] !== 0) {\n    vtkSwapVectors3(out_3x3[index[0]], out_3x3[0]);\n    scale[index[0]] = scale[0];\n  }\n\n  // second column\n  const y2 = Math.abs(out_3x3[1][1]) * scale[1];\n  const y3 = Math.abs(out_3x3[2][1]) * scale[2];\n  index[1] = 1;\n  largest = y2;\n  if (y3 >= largest) {\n    index[1] = 2;\n    vtkSwapVectors3(out_3x3[2], out_3x3[1]);\n  }\n\n  // third column\n  index[2] = 2;\n\n  // A quaternion can only describe a pure rotation, not\n  // a rotation with a flip, therefore the flip must be\n  // removed before the matrix is converted to a quaternion.\n  let flip = 0;\n  if (determinant3x3(out_3x3) < 0) {\n    flip = 1;\n    for (let i = 0; i < 3; i++) {\n      out_3x3[0][i] = -out_3x3[0][i];\n      out_3x3[1][i] = -out_3x3[1][i];\n      out_3x3[2][i] = -out_3x3[2][i];\n    }\n  }\n\n  // Do orthogonalization using a quaternion intermediate\n  // (this, essentially, does the orthogonalization via\n  // diagonalization of an appropriately constructed symmetric\n  // 4x4 matrix rather than by doing SVD of the 3x3 matrix)\n  const quat = createArray(4);\n  matrix3x3ToQuaternion(out_3x3, quat);\n  quaternionToMatrix3x3(quat, out_3x3);\n\n  // Put the flip back into the orthogonalized matrix.\n  if (flip) {\n    for (let i = 0; i < 3; i++) {\n      out_3x3[0][i] = -out_3x3[0][i];\n      out_3x3[1][i] = -out_3x3[1][i];\n      out_3x3[2][i] = -out_3x3[2][i];\n    }\n  }\n\n  // Undo the pivoting\n  if (index[1] !== 1) {\n    vtkSwapVectors3(out_3x3[index[1]], out_3x3[1]);\n  }\n  if (index[0] !== 0) {\n    vtkSwapVectors3(out_3x3[index[0]], out_3x3[0]);\n  }\n}\n\nexport function diagonalize3x3(a_3x3, w_3, v_3x3) {\n  let i;\n  let j;\n  let k;\n  let maxI;\n  let tmp;\n  let maxVal;\n\n  // do the matrix[3][3] to **matrix conversion for Jacobi\n  const C = [createArray(3), createArray(3), createArray(3)];\n  const ATemp = createArray(3);\n  const VTemp = createArray(3);\n  for (i = 0; i < 3; i++) {\n    C[i][0] = a_3x3[i][0];\n    C[i][1] = a_3x3[i][1];\n    C[i][2] = a_3x3[i][2];\n    ATemp[i] = C[i];\n    VTemp[i] = v_3x3[i];\n  }\n\n  // diagonalize using Jacobi\n  jacobiN(ATemp, 3, w_3, VTemp);\n\n  // if all the eigenvalues are the same, return identity matrix\n  if (w_3[0] === w_3[1] && w_3[0] === w_3[2]) {\n    identity3x3(v_3x3);\n    return;\n  }\n\n  // transpose temporarily, it makes it easier to sort the eigenvectors\n  transpose3x3(v_3x3, v_3x3);\n\n  // if two eigenvalues are the same, re-orthogonalize to optimally line\n  // up the eigenvectors with the x, y, and z axes\n  for (i = 0; i < 3; i++) {\n    // two eigenvalues are the same\n    if (w_3[(i + 1) % 3] === w_3[(i + 2) % 3]) {\n      // find maximum element of the independent eigenvector\n      maxVal = Math.abs(v_3x3[i][0]);\n      maxI = 0;\n      for (j = 1; j < 3; j++) {\n        if (maxVal < (tmp = Math.abs(v_3x3[i][j]))) {\n          maxVal = tmp;\n          maxI = j;\n        }\n      }\n      // swap the eigenvector into its proper position\n      if (maxI !== i) {\n        tmp = w_3[maxI];\n        w_3[maxI] = w_3[i];\n        w_3[i] = tmp;\n        vtkSwapVectors3(v_3x3[i], v_3x3[maxI]);\n      }\n      // maximum element of eigenvector should be positive\n      if (v_3x3[maxI][maxI] < 0) {\n        v_3x3[maxI][0] = -v_3x3[maxI][0];\n        v_3x3[maxI][1] = -v_3x3[maxI][1];\n        v_3x3[maxI][2] = -v_3x3[maxI][2];\n      }\n\n      // re-orthogonalize the other two eigenvectors\n      j = (maxI + 1) % 3;\n      k = (maxI + 2) % 3;\n\n      v_3x3[j][0] = 0.0;\n      v_3x3[j][1] = 0.0;\n      v_3x3[j][2] = 0.0;\n      v_3x3[j][j] = 1.0;\n      cross(v_3x3[maxI], v_3x3[j], v_3x3[k]);\n      normalize(v_3x3[k]);\n      cross(v_3x3[k], v_3x3[maxI], v_3x3[j]);\n\n      // transpose vectors back to columns\n      transpose3x3(v_3x3, v_3x3);\n      return;\n    }\n  }\n\n  // the three eigenvalues are different, just sort the eigenvectors\n  // to align them with the x, y, and z axes\n\n  // find the vector with the largest x element, make that vector\n  // the first vector\n  maxVal = Math.abs(v_3x3[0][0]);\n  maxI = 0;\n  for (i = 1; i < 3; i++) {\n    if (maxVal < (tmp = Math.abs(v_3x3[i][0]))) {\n      maxVal = tmp;\n      maxI = i;\n    }\n  }\n  // swap eigenvalue and eigenvector\n  if (maxI !== 0) {\n    tmp = w_3[maxI];\n    w_3[maxI] = w_3[0];\n    w_3[0] = tmp;\n    vtkSwapVectors3(v_3x3[maxI], v_3x3[0]);\n  }\n  // do the same for the y element\n  if (Math.abs(v_3x3[1][1]) < Math.abs(v_3x3[2][1])) {\n    tmp = w_3[2];\n    w_3[2] = w_3[1];\n    w_3[1] = tmp;\n    vtkSwapVectors3(v_3x3[2], v_3x3[1]);\n  }\n\n  // ensure that the sign of the eigenvectors is correct\n  for (i = 0; i < 2; i++) {\n    if (v_3x3[i][i] < 0) {\n      v_3x3[i][0] = -v_3x3[i][0];\n      v_3x3[i][1] = -v_3x3[i][1];\n      v_3x3[i][2] = -v_3x3[i][2];\n    }\n  }\n  // set sign of final eigenvector to ensure that determinant is positive\n  if (determinant3x3(v_3x3) < 0) {\n    v_3x3[2][0] = -v_3x3[2][0];\n    v_3x3[2][1] = -v_3x3[2][1];\n    v_3x3[2][2] = -v_3x3[2][2];\n  }\n\n  // transpose the eigenvectors back again\n  transpose3x3(v_3x3, v_3x3);\n}\n\nexport function singularValueDecomposition3x3(a_3x3, u_3x3, w_3, vT_3x3) {\n  let i;\n  const B = [createArray(3), createArray(3), createArray(3)];\n\n  // copy so that A can be used for U or VT without risk\n  for (i = 0; i < 3; i++) {\n    B[0][i] = a_3x3[0][i];\n    B[1][i] = a_3x3[1][i];\n    B[2][i] = a_3x3[2][i];\n  }\n\n  // temporarily flip if determinant is negative\n  const d = determinant3x3(B);\n  if (d < 0) {\n    for (i = 0; i < 3; i++) {\n      B[0][i] = -B[0][i];\n      B[1][i] = -B[1][i];\n      B[2][i] = -B[2][i];\n    }\n  }\n\n  // orthogonalize, diagonalize, etc.\n  orthogonalize3x3(B, u_3x3);\n  transpose3x3(B, B);\n  multiply3x3_mat3(B, u_3x3, vT_3x3);\n  diagonalize3x3(vT_3x3, w_3, vT_3x3);\n  multiply3x3_mat3(u_3x3, vT_3x3, u_3x3);\n  transpose3x3(vT_3x3, vT_3x3);\n\n  // re-create the flip\n  if (d < 0) {\n    w_3[0] = -w_3[0];\n    w_3[1] = -w_3[1];\n    w_3[2] = -w_3[2];\n  }\n}\n\nexport function luFactorLinearSystem(A, index, size) {\n  let i;\n  let j;\n  let k;\n  let largest;\n  let maxI = 0;\n  let sum;\n  let temp1;\n  let temp2;\n  const scale = createArray(size);\n\n  //\n  // Loop over rows to get implicit scaling information\n  //\n  for (i = 0; i < size; i++) {\n    for (largest = 0.0, j = 0; j < size; j++) {\n      if ((temp2 = Math.abs(A[i][j])) > largest) {\n        largest = temp2;\n      }\n    }\n\n    if (largest === 0.0) {\n      vtkWarningMacro('Unable to factor linear system');\n      return 0;\n    }\n    scale[i] = 1.0 / largest;\n  }\n  //\n  // Loop over all columns using Crout's method\n  //\n  for (j = 0; j < size; j++) {\n    for (i = 0; i < j; i++) {\n      sum = A[i][j];\n      for (k = 0; k < i; k++) {\n        sum -= A[i][k] * A[k][j];\n      }\n      A[i][j] = sum;\n    }\n    //\n    // Begin search for largest pivot element\n    //\n    for (largest = 0.0, i = j; i < size; i++) {\n      sum = A[i][j];\n      for (k = 0; k < j; k++) {\n        sum -= A[i][k] * A[k][j];\n      }\n      A[i][j] = sum;\n\n      if ((temp1 = scale[i] * Math.abs(sum)) >= largest) {\n        largest = temp1;\n        maxI = i;\n      }\n    }\n    //\n    // Check for row interchange\n    //\n    if (j !== maxI) {\n      for (k = 0; k < size; k++) {\n        temp1 = A[maxI][k];\n        A[maxI][k] = A[j][k];\n        A[j][k] = temp1;\n      }\n      scale[maxI] = scale[j];\n    }\n    //\n    // Divide by pivot element and perform elimination\n    //\n    index[j] = maxI;\n\n    if (Math.abs(A[j][j]) <= VTK_SMALL_NUMBER) {\n      vtkWarningMacro('Unable to factor linear system');\n      return 0;\n    }\n\n    if (j !== size - 1) {\n      temp1 = 1.0 / A[j][j];\n      for (i = j + 1; i < size; i++) {\n        A[i][j] *= temp1;\n      }\n    }\n  }\n  return 1;\n}\n\nexport function luSolveLinearSystem(A, index, x, size) {\n  let i;\n  let j;\n  let ii;\n  let idx;\n  let sum;\n  //\n  // Proceed with forward and backsubstitution for L and U\n  // matrices.  First, forward substitution.\n  //\n  for (ii = -1, i = 0; i < size; i++) {\n    idx = index[i];\n    sum = x[idx];\n    x[idx] = x[i];\n\n    if (ii >= 0) {\n      for (j = ii; j <= i - 1; j++) {\n        sum -= A[i][j] * x[j];\n      }\n    } else if (sum !== 0.0) {\n      ii = i;\n    }\n\n    x[i] = sum;\n  }\n  //\n  // Now, back substitution\n  //\n  for (i = size - 1; i >= 0; i--) {\n    sum = x[i];\n    for (j = i + 1; j < size; j++) {\n      sum -= A[i][j] * x[j];\n    }\n    x[i] = sum / A[i][i];\n  }\n}\n\nexport function solveLinearSystem(A, x, size) {\n  // if we solving something simple, just solve it\n  if (size === 2) {\n    const y = createArray(2);\n    const det = determinant2x2(A[0][0], A[0][1], A[1][0], A[1][1]);\n\n    if (det === 0.0) {\n      // Unable to solve linear system\n      return 0;\n    }\n\n    y[0] = (A[1][1] * x[0] - A[0][1] * x[1]) / det;\n    y[1] = (-(A[1][0] * x[0]) + A[0][0] * x[1]) / det;\n\n    x[0] = y[0];\n    x[1] = y[1];\n    return 1;\n  }\n\n  if (size === 1) {\n    if (A[0][0] === 0.0) {\n      // Unable to solve linear system\n      return 0;\n    }\n\n    x[0] /= A[0][0];\n    return 1;\n  }\n\n  //\n  // System of equations is not trivial, use Crout's method\n  //\n\n  // Check on allocation of working vectors\n  const index = createArray(size);\n\n  // Factor and solve matrix\n  if (luFactorLinearSystem(A, index, size) === 0) {\n    return 0;\n  }\n  luSolveLinearSystem(A, index, x, size);\n\n  return 1;\n}\n\nexport function invertMatrix(A, AI, size, index = null, column = null) {\n  const tmp1Size = index || createArray(size);\n  const tmp2Size = column || createArray(size);\n\n  // Factor matrix; then begin solving for inverse one column at a time.\n  // Note: tmp1Size returned value is used later, tmp2Size is just working\n  // memory whose values are not used in LUSolveLinearSystem\n  if (luFactorLinearSystem(A, tmp1Size, size, tmp2Size) === 0) {\n    return 0;\n  }\n\n  for (let j = 0; j < size; j++) {\n    for (let i = 0; i < size; i++) {\n      tmp2Size[i] = 0.0;\n    }\n    tmp2Size[j] = 1.0;\n\n    luSolveLinearSystem(A, tmp1Size, tmp2Size, size);\n\n    for (let i = 0; i < size; i++) {\n      AI[i][j] = tmp2Size[i];\n    }\n  }\n\n  return 1;\n}\n\nexport function estimateMatrixCondition(A, size) {\n  let minValue = +Number.MAX_VALUE;\n  let maxValue = -Number.MAX_VALUE;\n\n  // find the maximum value\n  for (let i = 0; i < size; i++) {\n    for (let j = i; j < size; j++) {\n      if (Math.abs(A[i][j]) > max) {\n        maxValue = Math.abs(A[i][j]);\n      }\n    }\n  }\n\n  // find the minimum diagonal value\n  for (let i = 0; i < size; i++) {\n    if (Math.abs(A[i][i]) < min) {\n      minValue = Math.abs(A[i][i]);\n    }\n  }\n\n  if (minValue === 0.0) {\n    return Number.MAX_VALUE;\n  }\n  return maxValue / minValue;\n}\n\nexport function jacobi(a_3x3, w, v) {\n  return jacobiN(a_3x3, 3, w, v);\n}\n\nexport function solveHomogeneousLeastSquares(numberOfSamples, xt, xOrder, mt) {\n  // check dimensional consistency\n  if (numberOfSamples < xOrder) {\n    vtkWarningMacro('Insufficient number of samples. Underdetermined.');\n    return 0;\n  }\n\n  let i;\n  let j;\n  let k;\n\n  // set up intermediate variables\n  // Allocate matrix to hold X times transpose of X\n  const XXt = createArray(xOrder); // size x by x\n  // Allocate the array of eigenvalues and eigenvectors\n  const eigenvals = createArray(xOrder);\n  const eigenvecs = createArray(xOrder);\n\n  // Clear the upper triangular region (and btw, allocate the eigenvecs as well)\n  for (i = 0; i < xOrder; i++) {\n    eigenvecs[i] = createArray(xOrder);\n    XXt[i] = createArray(xOrder);\n    for (j = 0; j < xOrder; j++) {\n      XXt[i][j] = 0.0;\n    }\n  }\n\n  // Calculate XXt upper half only, due to symmetry\n  for (k = 0; k < numberOfSamples; k++) {\n    for (i = 0; i < xOrder; i++) {\n      for (j = i; j < xOrder; j++) {\n        XXt[i][j] += xt[k][i] * xt[k][j];\n      }\n    }\n  }\n\n  // now fill in the lower half of the XXt matrix\n  for (i = 0; i < xOrder; i++) {\n    for (j = 0; j < i; j++) {\n      XXt[i][j] = XXt[j][i];\n    }\n  }\n\n  // Compute the eigenvectors and eigenvalues\n  jacobiN(XXt, xOrder, eigenvals, eigenvecs);\n\n  // Smallest eigenval is at the end of the list (xOrder-1), and solution is\n  // corresponding eigenvec.\n  for (i = 0; i < xOrder; i++) {\n    mt[i][0] = eigenvecs[i][xOrder - 1];\n  }\n\n  return 1;\n}\n\nexport function solveLeastSquares(\n  numberOfSamples,\n  xt,\n  xOrder,\n  yt,\n  yOrder,\n  mt,\n  checkHomogeneous = true\n) {\n  // check dimensional consistency\n  if (numberOfSamples < xOrder || numberOfSamples < yOrder) {\n    vtkWarningMacro('Insufficient number of samples. Underdetermined.');\n    return 0;\n  }\n\n  const homogenFlags = createArray(yOrder);\n  let allHomogeneous = 1;\n  let hmt;\n  let homogRC = 0;\n  let i;\n  let j;\n  let k;\n  let someHomogeneous = 0;\n\n  // Ok, first init some flags check and see if all the systems are homogeneous\n  if (checkHomogeneous) {\n    // If Y' is zero, it's a homogeneous system and can't be solved via\n    // the pseudoinverse method. Detect this case, warn the user, and\n    // invoke SolveHomogeneousLeastSquares instead. Note that it doesn't\n    // really make much sense for yOrder to be greater than one in this case,\n    // since that's just yOrder occurrences of a 0 vector on the RHS, but\n    // we allow it anyway. N\n\n    // Initialize homogeneous flags on a per-right-hand-side basis\n    for (j = 0; j < yOrder; j++) {\n      homogenFlags[j] = 1;\n    }\n    for (i = 0; i < numberOfSamples; i++) {\n      for (j = 0; j < yOrder; j++) {\n        if (Math.abs(yt[i][j]) > VTK_SMALL_NUMBER) {\n          allHomogeneous = 0;\n          homogenFlags[j] = 0;\n        }\n      }\n    }\n\n    // If we've got one system, and it's homogeneous, do it and bail out quickly.\n    if (allHomogeneous && yOrder === 1) {\n      vtkWarningMacro(\n        'Detected homogeneous system (Y=0), calling SolveHomogeneousLeastSquares()'\n      );\n      return solveHomogeneousLeastSquares(numberOfSamples, xt, xOrder, mt);\n    }\n\n    // Ok, we've got more than one system of equations.\n    // Figure out if we need to calculate the homogeneous equation solution for\n    // any of them.\n    if (allHomogeneous) {\n      someHomogeneous = 1;\n    } else {\n      for (j = 0; j < yOrder; j++) {\n        if (homogenFlags[j]) {\n          someHomogeneous = 1;\n        }\n      }\n    }\n  }\n\n  // If necessary, solve the homogeneous problem\n  if (someHomogeneous) {\n    // hmt is the homogeneous equation version of mt, the general solution.\n    hmt = createArray(xOrder);\n    for (j = 0; j < xOrder; j++) {\n      // Only allocate 1 here, not yOrder, because here we're going to solve\n      // just the one homogeneous equation subset of the entire problem\n      hmt[j] = [0];\n    }\n\n    // Ok, solve the homogeneous problem\n    homogRC = solveHomogeneousLeastSquares(numberOfSamples, xt, xOrder, hmt);\n  }\n\n  // set up intermediate variables\n  const XXt = createArray(xOrder); // size x by x\n  const XXtI = createArray(xOrder); // size x by x\n  const XYt = createArray(xOrder); // size x by y\n  for (i = 0; i < xOrder; i++) {\n    XXt[i] = createArray(xOrder);\n    XXtI[i] = createArray(xOrder);\n\n    for (j = 0; j < xOrder; j++) {\n      XXt[i][j] = 0.0;\n      XXtI[i][j] = 0.0;\n    }\n\n    XYt[i] = createArray(yOrder);\n    for (j = 0; j < yOrder; j++) {\n      XYt[i][j] = 0.0;\n    }\n  }\n\n  // first find the pseudoinverse matrix\n  for (k = 0; k < numberOfSamples; k++) {\n    for (i = 0; i < xOrder; i++) {\n      // first calculate the XXt matrix, only do the upper half (symmetrical)\n      for (j = i; j < xOrder; j++) {\n        XXt[i][j] += xt[k][i] * xt[k][j];\n      }\n\n      // now calculate the XYt matrix\n      for (j = 0; j < yOrder; j++) {\n        XYt[i][j] += xt[k][i] * yt[k][j];\n      }\n    }\n  }\n\n  // now fill in the lower half of the XXt matrix\n  for (i = 0; i < xOrder; i++) {\n    for (j = 0; j < i; j++) {\n      XXt[i][j] = XXt[j][i];\n    }\n  }\n\n  const successFlag = invertMatrix(XXt, XXtI, xOrder);\n\n  // next get the inverse of XXt\n  if (successFlag) {\n    for (i = 0; i < xOrder; i++) {\n      for (j = 0; j < yOrder; j++) {\n        mt[i][j] = 0.0;\n        for (k = 0; k < xOrder; k++) {\n          mt[i][j] += XXtI[i][k] * XYt[k][j];\n        }\n      }\n    }\n  }\n\n  // Fix up any of the solutions that correspond to the homogeneous equation\n  // problem.\n  if (someHomogeneous) {\n    for (j = 0; j < yOrder; j++) {\n      if (homogenFlags[j]) {\n        // Fix this one\n        for (i = 0; i < xOrder; i++) {\n          mt[i][j] = hmt[i][0];\n        }\n      }\n    }\n  }\n\n  if (someHomogeneous) {\n    return homogRC && successFlag;\n  }\n\n  return successFlag;\n}\n\nexport function hex2float(hexStr, outFloatArray = [0, 0.5, 1]) {\n  switch (hexStr.length) {\n    case 3: // abc => #aabbcc\n      outFloatArray[0] = (parseInt(hexStr[0], 16) * 17) / 255;\n      outFloatArray[1] = (parseInt(hexStr[1], 16) * 17) / 255;\n      outFloatArray[2] = (parseInt(hexStr[2], 16) * 17) / 255;\n      return outFloatArray;\n    case 4: // #abc => #aabbcc\n      outFloatArray[0] = (parseInt(hexStr[1], 16) * 17) / 255;\n      outFloatArray[1] = (parseInt(hexStr[2], 16) * 17) / 255;\n      outFloatArray[2] = (parseInt(hexStr[3], 16) * 17) / 255;\n      return outFloatArray;\n    case 6: // ab01df => #ab01df\n      outFloatArray[0] = parseInt(hexStr.substr(0, 2), 16) / 255;\n      outFloatArray[1] = parseInt(hexStr.substr(2, 2), 16) / 255;\n      outFloatArray[2] = parseInt(hexStr.substr(4, 2), 16) / 255;\n      return outFloatArray;\n    case 7: // #ab01df\n      outFloatArray[0] = parseInt(hexStr.substr(1, 2), 16) / 255;\n      outFloatArray[1] = parseInt(hexStr.substr(3, 2), 16) / 255;\n      outFloatArray[2] = parseInt(hexStr.substr(5, 2), 16) / 255;\n      return outFloatArray;\n    case 9: // #ab01df00\n      outFloatArray[0] = parseInt(hexStr.substr(1, 2), 16) / 255;\n      outFloatArray[1] = parseInt(hexStr.substr(3, 2), 16) / 255;\n      outFloatArray[2] = parseInt(hexStr.substr(5, 2), 16) / 255;\n      outFloatArray[3] = parseInt(hexStr.substr(7, 2), 16) / 255;\n      return outFloatArray;\n    default:\n      return outFloatArray;\n  }\n}\n\nexport function rgb2hsv(rgb, hsv) {\n  let h;\n  let s;\n  const [r, g, b] = rgb;\n  const onethird = 1.0 / 3.0;\n  const onesixth = 1.0 / 6.0;\n  const twothird = 2.0 / 3.0;\n\n  let cmax = r;\n  let cmin = r;\n\n  if (g > cmax) {\n    cmax = g;\n  } else if (g < cmin) {\n    cmin = g;\n  }\n  if (b > cmax) {\n    cmax = b;\n  } else if (b < cmin) {\n    cmin = b;\n  }\n  const v = cmax;\n\n  if (v > 0.0) {\n    s = (cmax - cmin) / cmax;\n  } else {\n    s = 0.0;\n  }\n  if (s > 0) {\n    if (r === cmax) {\n      h = (onesixth * (g - b)) / (cmax - cmin);\n    } else if (g === cmax) {\n      h = onethird + (onesixth * (b - r)) / (cmax - cmin);\n    } else {\n      h = twothird + (onesixth * (r - g)) / (cmax - cmin);\n    }\n    if (h < 0.0) {\n      h += 1.0;\n    }\n  } else {\n    h = 0.0;\n  }\n\n  // Set the values back to the array\n  hsv[0] = h;\n  hsv[1] = s;\n  hsv[2] = v;\n}\n\nexport function hsv2rgb(hsv, rgb) {\n  const [h, s, v] = hsv;\n  const onethird = 1.0 / 3.0;\n  const onesixth = 1.0 / 6.0;\n  const twothird = 2.0 / 3.0;\n  const fivesixth = 5.0 / 6.0;\n  let r;\n  let g;\n  let b;\n\n  // compute RGB from HSV\n  if (h > onesixth && h <= onethird) {\n    // green/red\n    g = 1.0;\n    r = (onethird - h) / onesixth;\n    b = 0.0;\n  } else if (h > onethird && h <= 0.5) {\n    // green/blue\n    g = 1.0;\n    b = (h - onethird) / onesixth;\n    r = 0.0;\n  } else if (h > 0.5 && h <= twothird) {\n    // blue/green\n    b = 1.0;\n    g = (twothird - h) / onesixth;\n    r = 0.0;\n  } else if (h > twothird && h <= fivesixth) {\n    // blue/red\n    b = 1.0;\n    r = (h - twothird) / onesixth;\n    g = 0.0;\n  } else if (h > fivesixth && h <= 1.0) {\n    // red/blue\n    r = 1.0;\n    b = (1.0 - h) / onesixth;\n    g = 0.0;\n  } else {\n    // red/green\n    r = 1.0;\n    g = h / onesixth;\n    b = 0.0;\n  }\n\n  // add Saturation to the equation.\n  r = s * r + (1.0 - s);\n  g = s * g + (1.0 - s);\n  b = s * b + (1.0 - s);\n\n  r *= v;\n  g *= v;\n  b *= v;\n\n  // Assign back to the array\n  rgb[0] = r;\n  rgb[1] = g;\n  rgb[2] = b;\n}\n\nexport function lab2xyz(lab, xyz) {\n  // LAB to XYZ\n  const [L, a, b] = lab;\n  let var_Y = (L + 16) / 116;\n  let var_X = a / 500 + var_Y;\n  let var_Z = var_Y - b / 200;\n\n  if (var_Y ** 3 > 0.008856) {\n    var_Y **= 3;\n  } else {\n    var_Y = (var_Y - 16.0 / 116.0) / 7.787;\n  }\n\n  if (var_X ** 3 > 0.008856) {\n    var_X **= 3;\n  } else {\n    var_X = (var_X - 16.0 / 116.0) / 7.787;\n  }\n\n  if (var_Z ** 3 > 0.008856) {\n    var_Z **= 3;\n  } else {\n    var_Z = (var_Z - 16.0 / 116.0) / 7.787;\n  }\n  const ref_X = 0.9505;\n  const ref_Y = 1.0;\n  const ref_Z = 1.089;\n  xyz[0] = ref_X * var_X; // ref_X = 0.9505  Observer= 2 deg Illuminant= D65\n  xyz[1] = ref_Y * var_Y; // ref_Y = 1.000\n  xyz[2] = ref_Z * var_Z; // ref_Z = 1.089\n}\n\nexport function xyz2lab(xyz, lab) {\n  const [x, y, z] = xyz;\n  const ref_X = 0.9505;\n  const ref_Y = 1.0;\n  const ref_Z = 1.089;\n  let var_X = x / ref_X; // ref_X = 0.9505  Observer= 2 deg, Illuminant= D65\n  let var_Y = y / ref_Y; // ref_Y = 1.000\n  let var_Z = z / ref_Z; // ref_Z = 1.089\n\n  if (var_X > 0.008856) var_X **= 1.0 / 3.0;\n  else var_X = 7.787 * var_X + 16.0 / 116.0;\n  if (var_Y > 0.008856) var_Y **= 1.0 / 3.0;\n  else var_Y = 7.787 * var_Y + 16.0 / 116.0;\n  if (var_Z > 0.008856) var_Z **= 1.0 / 3.0;\n  else var_Z = 7.787 * var_Z + 16.0 / 116.0;\n\n  lab[0] = 116 * var_Y - 16;\n  lab[1] = 500 * (var_X - var_Y);\n  lab[2] = 200 * (var_Y - var_Z);\n}\n\nexport function xyz2rgb(xyz, rgb) {\n  const [x, y, z] = xyz;\n  let r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  let g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  let b = x * 0.0557 + y * -0.204 + z * 1.057;\n\n  // The following performs a \"gamma correction\" specified by the sRGB color\n  // space.  sRGB is defined by a canonical definition of a display monitor and\n  // has been standardized by the International Electrotechnical Commission (IEC\n  // 61966-2-1).  The nonlinearity of the correction is designed to make the\n  // colors more perceptually uniform.  This color space has been adopted by\n  // several applications including Adobe Photoshop and Microsoft Windows color\n  // management.  OpenGL is agnostic on its RGB color space, but it is reasonable\n  // to assume it is close to this one.\n  if (r > 0.0031308) r = 1.055 * r ** (1 / 2.4) - 0.055;\n  else r *= 12.92;\n  if (g > 0.0031308) g = 1.055 * g ** (1 / 2.4) - 0.055;\n  else g *= 12.92;\n  if (b > 0.0031308) b = 1.055 * b ** (1 / 2.4) - 0.055;\n  else b *= 12.92;\n\n  // Clip colors. ideally we would do something that is perceptually closest\n  // (since we can see colors outside of the display gamut), but this seems to\n  // work well enough.\n  let maxVal = r;\n  if (maxVal < g) maxVal = g;\n  if (maxVal < b) maxVal = b;\n  if (maxVal > 1.0) {\n    r /= maxVal;\n    g /= maxVal;\n    b /= maxVal;\n  }\n  if (r < 0) r = 0;\n  if (g < 0) g = 0;\n  if (b < 0) b = 0;\n\n  // Push values back to array\n  rgb[0] = r;\n  rgb[1] = g;\n  rgb[2] = b;\n}\n\nexport function rgb2xyz(rgb, xyz) {\n  let [r, g, b] = rgb;\n  // The following performs a \"gamma correction\" specified by the sRGB color\n  // space.  sRGB is defined by a canonical definition of a display monitor and\n  // has been standardized by the International Electrotechnical Commission (IEC\n  // 61966-2-1).  The nonlinearity of the correction is designed to make the\n  // colors more perceptually uniform.  This color space has been adopted by\n  // several applications including Adobe Photoshop and Microsoft Windows color\n  // management.  OpenGL is agnostic on its RGB color space, but it is reasonable\n  // to assume it is close to this one.\n  if (r > 0.04045) r = ((r + 0.055) / 1.055) ** 2.4;\n  else r /= 12.92;\n  if (g > 0.04045) g = ((g + 0.055) / 1.055) ** 2.4;\n  else g /= 12.92;\n  if (b > 0.04045) b = ((b + 0.055) / 1.055) ** 2.4;\n  else b /= 12.92;\n\n  // Observer. = 2 deg, Illuminant = D65\n  xyz[0] = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  xyz[1] = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  xyz[2] = r * 0.0193 + g * 0.1192 + b * 0.9505;\n}\n\nexport function rgb2lab(rgb, lab) {\n  const xyz = [0, 0, 0];\n  rgb2xyz(rgb, xyz);\n  xyz2lab(xyz, lab);\n}\n\nexport function lab2rgb(lab, rgb) {\n  const xyz = [0, 0, 0];\n  lab2xyz(lab, xyz);\n  xyz2rgb(xyz, rgb);\n}\n\nexport function uninitializeBounds(bounds) {\n  bounds[0] = 1.0;\n  bounds[1] = -1.0;\n  bounds[2] = 1.0;\n  bounds[3] = -1.0;\n  bounds[4] = 1.0;\n  bounds[5] = -1.0;\n}\n\nexport function areBoundsInitialized(bounds) {\n  return !(bounds[1] - bounds[0] < 0.0);\n}\n\nexport function computeBoundsFromPoints(point1, point2, bounds) {\n  bounds[0] = Math.min(point1[0], point2[0]);\n  bounds[1] = Math.max(point1[0], point2[0]);\n  bounds[2] = Math.min(point1[1], point2[1]);\n  bounds[3] = Math.max(point1[1], point2[1]);\n  bounds[4] = Math.min(point1[2], point2[2]);\n  bounds[5] = Math.max(point1[2], point2[2]);\n}\n\nexport function clampValue(value, minValue, maxValue) {\n  if (value < minValue) {\n    return minValue;\n  }\n  if (value > maxValue) {\n    return maxValue;\n  }\n  return value;\n}\n\nexport function clampVector(vector, minVector, maxVector, out = []) {\n  out[0] = clampValue(vector[0], minVector[0], maxVector[0]);\n  out[1] = clampValue(vector[1], minVector[1], maxVector[1]);\n  out[2] = clampValue(vector[2], minVector[2], maxVector[2]);\n\n  return out;\n}\n\nexport function roundVector(vector, out = []) {\n  out[0] = Math.round(vector[0]);\n  out[1] = Math.round(vector[1]);\n  out[2] = Math.round(vector[2]);\n\n  return out;\n}\n\nexport function clampAndNormalizeValue(value, range) {\n  let result = 0;\n  if (range[0] !== range[1]) {\n    // clamp\n    if (value < range[0]) {\n      result = range[0];\n    } else if (value > range[1]) {\n      result = range[1];\n    } else {\n      result = value;\n    }\n    // normalize\n    result = (result - range[0]) / (range[1] - range[0]);\n  }\n\n  return result;\n}\n\nexport const getScalarTypeFittingRange = notImplemented(\n  'GetScalarTypeFittingRange'\n);\nexport const getAdjustedScalarRange = notImplemented('GetAdjustedScalarRange');\n\nexport function extentIsWithinOtherExtent(extent1, extent2) {\n  if (!extent1 || !extent2) {\n    return 0;\n  }\n\n  for (let i = 0; i < 6; i += 2) {\n    if (\n      extent1[i] < extent2[i] ||\n      extent1[i] > extent2[i + 1] ||\n      extent1[i + 1] < extent2[i] ||\n      extent1[i + 1] > extent2[i + 1]\n    ) {\n      return 0;\n    }\n  }\n\n  return 1;\n}\n\nexport function boundsIsWithinOtherBounds(bounds1_6, bounds2_6, delta_3) {\n  if (!bounds1_6 || !bounds2_6) {\n    return 0;\n  }\n  for (let i = 0; i < 6; i += 2) {\n    if (\n      bounds1_6[i] + delta_3[i / 2] < bounds2_6[i] ||\n      bounds1_6[i] - delta_3[i / 2] > bounds2_6[i + 1] ||\n      bounds1_6[i + 1] + delta_3[i / 2] < bounds2_6[i] ||\n      bounds1_6[i + 1] - delta_3[i / 2] > bounds2_6[i + 1]\n    ) {\n      return 0;\n    }\n  }\n  return 1;\n}\n\nexport function pointIsWithinBounds(point_3, bounds_6, delta_3) {\n  if (!point_3 || !bounds_6 || !delta_3) {\n    return 0;\n  }\n  for (let i = 0; i < 3; i++) {\n    if (\n      point_3[i] + delta_3[i] < bounds_6[2 * i] ||\n      point_3[i] - delta_3[i] > bounds_6[2 * i + 1]\n    ) {\n      return 0;\n    }\n  }\n  return 1;\n}\n\nexport function solve3PointCircle(p1, p2, p3, center) {\n  const v21 = createArray(3);\n  const v32 = createArray(3);\n  const v13 = createArray(3);\n  const v12 = createArray(3);\n  const v23 = createArray(3);\n  const v31 = createArray(3);\n\n  for (let i = 0; i < 3; ++i) {\n    v21[i] = p1[i] - p2[i];\n    v32[i] = p2[i] - p3[i];\n    v13[i] = p3[i] - p1[i];\n    v12[i] = -v21[i];\n    v23[i] = -v32[i];\n    v31[i] = -v13[i];\n  }\n\n  const norm12 = norm(v12);\n  const norm23 = norm(v23);\n  const norm13 = norm(v13);\n\n  const crossv21v32 = createArray(3);\n  cross(v21, v32, crossv21v32);\n  const normCross = norm(crossv21v32);\n\n  const radius = (norm12 * norm23 * norm13) / (2 * normCross);\n\n  const normCross22 = 2 * normCross * normCross;\n  const alpha = (norm23 * norm23 * dot(v21, v31)) / normCross22;\n  const beta = (norm13 * norm13 * dot(v12, v32)) / normCross22;\n  const gamma = (norm12 * norm12 * dot(v13, v23)) / normCross22;\n\n  for (let i = 0; i < 3; ++i) {\n    center[i] = alpha * p1[i] + beta * p2[i] + gamma * p3[i];\n  }\n  return radius;\n}\n\nexport const inf = Infinity;\nexport const negInf = -Infinity;\n\nexport const isInf = (value) => !Number.isFinite(value);\nexport const { isFinite, isNaN } = Number;\nexport const isNan = isNaN;\n\n// JavaScript - add-on ----------------------\n\nexport function createUninitializedBounds() {\n  return [].concat([\n    Number.MAX_VALUE,\n    -Number.MAX_VALUE, // X\n    Number.MAX_VALUE,\n    -Number.MAX_VALUE, // Y\n    Number.MAX_VALUE,\n    -Number.MAX_VALUE, // Z\n  ]);\n}\n\nexport function getMajorAxisIndex(vector) {\n  let maxValue = -1;\n  let axisIndex = -1;\n  for (let i = 0; i < vector.length; i++) {\n    const value = Math.abs(vector[i]);\n    if (value > maxValue) {\n      axisIndex = i;\n      maxValue = value;\n    }\n  }\n\n  return axisIndex;\n}\n\nexport function floatToHex2(value) {\n  const integer = Math.floor(value * 255);\n  if (integer > 15) {\n    return integer.toString(16);\n  }\n  return `0${integer.toString(16)}`;\n}\n\nexport function floatRGB2HexCode(rgbArray, prefix = '#') {\n  return `${prefix}${rgbArray.map(floatToHex2).join('')}`;\n}\n\nfunction floatToChar(f) {\n  return Math.round(f * 255);\n}\n\nexport function float2CssRGBA(rgbArray) {\n  if (rgbArray.length === 3) {\n    return `rgb(${rgbArray.map(floatToChar).join(', ')})`;\n  }\n  return `rgba(${floatToChar(rgbArray[0] || 0)}, ${floatToChar(\n    rgbArray[1] || 0\n  )}, ${floatToChar(rgbArray[2] || 0)}, ${rgbArray[3] || 0})`;\n}\n\n// ----------------------------------------------------------------------------\n// Only Static API\n// ----------------------------------------------------------------------------\n\nexport default {\n  Pi,\n  radiansFromDegrees,\n  degreesFromRadians,\n  round,\n  floor,\n  ceil,\n  ceilLog2,\n  min,\n  max,\n  arrayMin,\n  arrayMax,\n  arrayRange,\n  isPowerOfTwo,\n  nearestPowerOfTwo,\n  factorial,\n  binomial,\n  beginCombination,\n  nextCombination,\n  randomSeed,\n  getSeed,\n  random,\n  gaussian,\n  add,\n  subtract,\n  multiplyScalar,\n  multiplyScalar2D,\n  dot,\n  outer,\n  cross,\n  norm,\n  normalize,\n  perpendiculars,\n  projectVector,\n  projectVector2D,\n  distance2BetweenPoints,\n  angleBetweenVectors,\n  gaussianAmplitude,\n  gaussianWeight,\n  dot2D,\n  outer2D,\n  norm2D,\n  normalize2D,\n  determinant2x2,\n  LUFactor3x3,\n  LUSolve3x3,\n  linearSolve3x3,\n  multiply3x3_vect3,\n  multiply3x3_mat3,\n  multiplyMatrix,\n  transpose3x3,\n  invert3x3,\n  identity3x3,\n  determinant3x3,\n  quaternionToMatrix3x3,\n  areMatricesEqual,\n  matrix3x3ToQuaternion,\n  multiplyQuaternion,\n  orthogonalize3x3,\n  diagonalize3x3,\n  singularValueDecomposition3x3,\n  solveLinearSystem,\n  invertMatrix,\n  luFactorLinearSystem,\n  luSolveLinearSystem,\n  estimateMatrixCondition,\n  jacobi,\n  jacobiN,\n  solveHomogeneousLeastSquares,\n  solveLeastSquares,\n  hex2float,\n  rgb2hsv,\n  hsv2rgb,\n  lab2xyz,\n  xyz2lab,\n  xyz2rgb,\n  rgb2xyz,\n  rgb2lab,\n  lab2rgb,\n  uninitializeBounds,\n  areBoundsInitialized,\n  computeBoundsFromPoints,\n  clampValue,\n  clampVector,\n  clampAndNormalizeValue,\n  getScalarTypeFittingRange,\n  getAdjustedScalarRange,\n  extentIsWithinOtherExtent,\n  boundsIsWithinOtherBounds,\n  pointIsWithinBounds,\n  solve3PointCircle,\n  inf,\n  negInf,\n  isInf,\n  isNan: isNaN,\n  isNaN,\n  isFinite,\n\n  // JS add-on\n  createUninitializedBounds,\n  getMajorAxisIndex,\n  floatToHex2,\n  floatRGB2HexCode,\n  float2CssRGBA,\n};\n","import * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport macro from 'vtk.js/Sources/macro';\n\nconst PLANE_TOLERANCE = 1.0e-6;\nconst COINCIDE = 'coincide';\nconst DISJOINT = 'disjoint';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction evaluate(normal, origin, x) {\n  return (\n    normal[0] * (x[0] - origin[0]) +\n    normal[1] * (x[1] - origin[1]) +\n    normal[2] * (x[2] - origin[2])\n  );\n}\n\nfunction distanceToPlane(x, origin, normal) {\n  const distance =\n    normal[0] * (x[0] - origin[0]) +\n    normal[1] * (x[1] - origin[1]) +\n    normal[2] * (x[2] - origin[2]);\n\n  return Math.abs(distance);\n}\n\nfunction projectPoint(x, origin, normal, xproj) {\n  const xo = [];\n  vtkMath.subtract(x, origin, xo);\n\n  const t = vtkMath.dot(normal, xo);\n\n  xproj[0] = x[0] - t * normal[0];\n  xproj[1] = x[1] - t * normal[1];\n  xproj[2] = x[2] - t * normal[2];\n}\n\nfunction projectVector(v, normal, vproj) {\n  const t = vtkMath.dot(v, normal);\n\n  let n2 = vtkMath.dot(normal, normal);\n  if (n2 === 0) {\n    n2 = 1.0;\n  }\n\n  vproj[0] = v[0] - (t * normal[0]) / n2;\n  vproj[1] = v[1] - (t * normal[1]) / n2;\n  vproj[2] = v[2] - (t * normal[2]) / n2;\n}\n\nfunction generalizedProjectPoint(x, origin, normal, xproj) {\n  const xo = [];\n  vtkMath.subtract(x, origin, xo);\n\n  const t = vtkMath.dot(normal, xo);\n  const n2 = vtkMath.dot(normal, normal);\n\n  if (n2 !== 0) {\n    xproj[0] = x[0] - (t * normal[0]) / n2;\n    xproj[1] = x[1] - (t * normal[1]) / n2;\n    xproj[2] = x[2] - (t * normal[2]) / n2;\n  } else {\n    xproj[0] = x[0];\n    xproj[1] = x[1];\n    xproj[2] = x[2];\n  }\n}\n\nfunction intersectWithLine(p1, p2, origin, normal) {\n  const outObj = {\n    intersection: false,\n    betweenPoints: false,\n    t: Number.MAX_VALUE,\n    x: [],\n  };\n\n  const p21 = [];\n  const p1Origin = [];\n  // Compute line vector\n  vtkMath.subtract(p2, p1, p21);\n  vtkMath.subtract(origin, p1, p1Origin);\n\n  // Compute denominator.  If ~0, line and plane are parallel.\n  // const num = vtkMath.dot(normal, origin) - vtkMath.dot(normal, p1);\n  const num = vtkMath.dot(normal, p1Origin);\n  const den = vtkMath.dot(normal, p21);\n\n  // If denominator with respect to numerator is \"zero\", then the line and\n  // plane are considered parallel.\n  let fabsden;\n  let fabstolerance;\n\n  // Trying to avoid an expensive call to fabs()\n  if (den < 0.0) {\n    fabsden = -den;\n  } else {\n    fabsden = den;\n  }\n  if (num < 0.0) {\n    fabstolerance = -num * PLANE_TOLERANCE;\n  } else {\n    fabstolerance = num * PLANE_TOLERANCE;\n  }\n  if (fabsden <= fabstolerance) {\n    return outObj;\n  }\n\n  // Where on the line between p1 and p2 is the intersection\n  // If between 0 and 1, it is between the two points. If < 0 it's before p1, if > 1 it's after p2\n  outObj.t = num / den;\n\n  outObj.x[0] = p1[0] + outObj.t * p21[0];\n  outObj.x[1] = p1[1] + outObj.t * p21[1];\n  outObj.x[2] = p1[2] + outObj.t * p21[2];\n\n  outObj.intersection = true;\n  outObj.betweenPoints = outObj.t >= 0.0 && outObj.t <= 1.0;\n  return outObj;\n}\n\nfunction intersectWithPlane(\n  plane1Origin,\n  plane1Normal,\n  plane2Origin,\n  plane2Normal\n) {\n  const outObj = {\n    intersection: false,\n    l0: [],\n    l1: [],\n    error: null,\n  };\n\n  const cross = [];\n  vtkMath.cross(plane1Normal, plane2Normal, cross);\n  const absCross = cross.map((n) => Math.abs(n));\n\n  // test if the two planes are parallel\n  if (absCross[0] + absCross[1] + absCross[2] < PLANE_TOLERANCE) {\n    // test if disjoint or coincide\n    const v = [];\n    vtkMath.subtract(plane1Origin, plane2Origin, v);\n    if (vtkMath.dot(plane1Normal, v) === 0) {\n      outObj.error = COINCIDE;\n    } else {\n      outObj.error = DISJOINT;\n    }\n    return outObj;\n  }\n\n  // Plane1 and Plane2 intersect in a line\n  // first determine max abs coordinate of the cross product\n  let maxc;\n  if (absCross[0] > absCross[1] && absCross[0] > absCross[2]) {\n    maxc = 'x';\n  } else if (absCross[1] > absCross[2]) {\n    maxc = 'y';\n  } else {\n    maxc = 'z';\n  }\n\n  // To get a point on the intersect line, zero the max coord, and solve for the other two\n  const iP = []; // intersectionPoint\n  // the constants in the 2 plane equations\n  const d1 = -vtkMath.dot(plane1Normal, plane1Origin);\n  const d2 = -vtkMath.dot(plane2Normal, plane2Origin);\n\n  // eslint-disable-next-line default-case\n  switch (maxc) {\n    case 'x': // intersect with x=0\n      iP[0] = 0;\n      iP[1] = (d2 * plane1Normal[2] - d1 * plane2Normal[2]) / cross[0];\n      iP[2] = (d1 * plane2Normal[1] - d2 * plane1Normal[1]) / cross[0];\n      break;\n    case 'y': // intersect with y=0\n      iP[0] = (d1 * plane2Normal[2] - d2 * plane1Normal[2]) / cross[1];\n      iP[1] = 0;\n      iP[2] = (d2 * plane1Normal[0] - d1 * plane2Normal[0]) / cross[1];\n      break;\n    case 'z': // intersect with z=0\n      iP[0] = (d2 * plane1Normal[1] - d1 * plane2Normal[1]) / cross[2];\n      iP[1] = (d1 * plane2Normal[0] - d2 * plane1Normal[0]) / cross[2];\n      iP[2] = 0;\n      break;\n  }\n\n  outObj.l0 = iP;\n  vtkMath.add(iP, cross, outObj.l1);\n  outObj.intersection = true;\n\n  return outObj;\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nexport const STATIC = {\n  evaluate,\n  distanceToPlane,\n  projectPoint,\n  projectVector,\n  generalizedProjectPoint,\n  intersectWithLine,\n  intersectWithPlane,\n  DISJOINT,\n  COINCIDE,\n};\n\n// ----------------------------------------------------------------------------\n// vtkPlane methods\n// ----------------------------------------------------------------------------\n\nexport function vtkPlane(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPlane');\n\n  publicAPI.distanceToPlane = (x) =>\n    distanceToPlane(x, model.origin, model.normal);\n\n  publicAPI.projectPoint = (x, xproj) => {\n    projectPoint(x, model.origin, model.normal, xproj);\n  };\n\n  publicAPI.projectVector = (v, vproj) => {\n    projectVector(v, model.normal, vproj);\n  };\n\n  publicAPI.push = (distance) => {\n    if (distance === 0.0) {\n      return;\n    }\n    for (let i = 0; i < 3; i++) {\n      model.origin[i] += distance * model.normal[i];\n    }\n  };\n\n  publicAPI.generalizedProjectPoint = (x, xproj) => {\n    generalizedProjectPoint(x, model.origin, model.normal, xproj);\n  };\n\n  publicAPI.evaluateFunction = (x, y, z) => {\n    if (!Array.isArray(x)) {\n      return (\n        model.normal[0] * (x - model.origin[0]) +\n        model.normal[1] * (y - model.origin[1]) +\n        model.normal[2] * (z - model.origin[2])\n      );\n    }\n    return (\n      model.normal[0] * (x[0] - model.origin[0]) +\n      model.normal[1] * (x[1] - model.origin[1]) +\n      model.normal[2] * (x[2] - model.origin[2])\n    );\n  };\n\n  publicAPI.evaluateGradient = (xyz) => {\n    const retVal = [model.normal[0], model.normal[1], model.normal[2]];\n    return retVal;\n  };\n\n  publicAPI.intersectWithLine = (p1, p2) =>\n    intersectWithLine(p1, p2, model.origin, model.normal);\n\n  publicAPI.intersectWithPlane = (planeOrigin, planeNormal) =>\n    intersectWithPlane(planeOrigin, planeNormal, model.origin, model.normal);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  normal: [0.0, 0.0, 1.0],\n  origin: [0.0, 0.0, 0.0],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n\n  macro.setGetArray(publicAPI, model, ['normal', 'origin'], 3);\n\n  vtkPlane(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkPlane');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend }, STATIC);\n","import macro from 'vtk.js/Sources/macro';\nimport vtkPlane from 'vtk.js/Sources/Common/DataModel/Plane';\n\nconst INIT_BOUNDS = [\n  Number.MAX_VALUE,\n  -Number.MAX_VALUE, // X\n  Number.MAX_VALUE,\n  -Number.MAX_VALUE, // Y\n  Number.MAX_VALUE,\n  -Number.MAX_VALUE, // Z\n];\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction isValid(bounds) {\n  return (\n    bounds[0] <= bounds[1] && bounds[2] <= bounds[3] && bounds[4] <= bounds[5]\n  );\n}\n\nfunction getCenter(bounds) {\n  return [\n    0.5 * (bounds[0] + bounds[1]),\n    0.5 * (bounds[2] + bounds[3]),\n    0.5 * (bounds[4] + bounds[5]),\n  ];\n}\n\nfunction getLength(bounds, index) {\n  return bounds[index * 2 + 1] - bounds[index * 2];\n}\n\nfunction getLengths(bounds) {\n  return [getLength(bounds, 0), getLength(bounds, 1), getLength(bounds, 2)];\n}\n\nfunction getXRange(bounds) {\n  return bounds.slice(0, 2);\n}\n\nfunction getYRange(bounds) {\n  return bounds.slice(2, 4);\n}\n\nfunction getZRange(bounds) {\n  return bounds.slice(4, 6);\n}\n\nfunction getMaxLength(bounds) {\n  const l = getLengths(bounds);\n  if (l[0] > l[1]) {\n    if (l[0] > l[2]) {\n      return l[0];\n    }\n    return l[2];\n  }\n\n  if (l[1] > l[2]) {\n    return l[1];\n  }\n\n  return l[2];\n}\n\nfunction getDiagonalLength(bounds) {\n  if (isValid(bounds)) {\n    const l = getLengths(bounds);\n    return Math.sqrt(l[0] * l[0] + l[1] * l[1] + l[2] * l[2]);\n  }\n  return null;\n}\n\nfunction oppositeSign(a, b) {\n  return (a <= 0 && b >= 0) || (a >= 0 && b <= 0);\n}\n\nfunction getCorners(bounds, corners) {\n  let count = 0;\n  for (let ix = 0; ix < 2; ix++) {\n    for (let iy = 2; iy < 4; iy++) {\n      for (let iz = 4; iz < 6; iz++) {\n        corners[count] = [bounds[ix], bounds[iy], bounds[iz]];\n        count++;\n      }\n    }\n  }\n}\n\n// Computes the two corners with minimal and miximal coordinates\nfunction computeCornerPoints(point1, point2, bounds) {\n  point1[0] = bounds[0];\n  point1[1] = bounds[2];\n  point1[2] = bounds[4];\n\n  point2[0] = bounds[1];\n  point2[1] = bounds[3];\n  point2[2] = bounds[5];\n}\n\nfunction computeScale3(bounds, scale3 = []) {\n  const center = getCenter(bounds);\n  scale3[0] = bounds[1] - center[0];\n  scale3[1] = bounds[3] - center[1];\n  scale3[2] = bounds[5] - center[2];\n\n  return scale3;\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nexport const STATIC = {\n  isValid,\n  getCenter,\n  getLength,\n  getLengths,\n  getMaxLength,\n  getDiagonalLength,\n  getXRange,\n  getYRange,\n  getZRange,\n  getCorners,\n  computeCornerPoints,\n  computeScale3,\n  INIT_BOUNDS,\n};\n\n// ----------------------------------------------------------------------------\n// vtkBoundingBox methods\n// ----------------------------------------------------------------------------\n\nfunction vtkBoundingBox(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkBoundingBox');\n\n  publicAPI.clone = () => {\n    const bounds = [].concat(model.bounds);\n    /* eslint-disable no-use-before-define */\n    return newInstance({ bounds });\n    /* eslint-enable no-use-before-define */\n  };\n\n  publicAPI.equals = (other) => {\n    const a = model.bounds;\n    const b = other.getBounds();\n    return (\n      a[0] === b[0] &&\n      a[1] === b[1] &&\n      a[2] === b[2] &&\n      a[3] === b[3] &&\n      a[4] === b[4] &&\n      a[5] === b[5]\n    );\n  };\n\n  publicAPI.setMinPoint = (x, y, z) => {\n    const [xMin, xMax, yMin, yMax, zMin, zMax] = model.bounds;\n    model.bounds = [\n      x,\n      x > xMax ? x : xMax,\n      y,\n      y > yMax ? y : yMax,\n      z,\n      z > zMax ? z : zMax,\n    ];\n\n    return xMin !== x || yMin !== y || zMin !== z;\n  };\n\n  publicAPI.setMaxPoint = (x, y, z) => {\n    const [xMin, xMax, yMin, yMax, zMin, zMax] = model.bounds;\n    model.bounds = [\n      x < xMin ? x : xMin,\n      x,\n      y < yMin ? y : yMin,\n      y,\n      z < zMin ? z : zMin,\n      z,\n    ];\n\n    return xMax !== x || yMax !== y || zMax !== z;\n  };\n\n  publicAPI.addPoint = (...xyz) => {\n    model.bounds = model.bounds.map((value, index) => {\n      if (index % 2 === 0) {\n        const idx = index / 2;\n        return value < xyz[idx] ? value : xyz[idx];\n      }\n      const idx = (index - 1) / 2;\n      return value > xyz[idx] ? value : xyz[idx];\n    });\n  };\n\n  publicAPI.addBounds = (xMin, xMax, yMin, yMax, zMin, zMax) => {\n    const [_xMin, _xMax, _yMin, _yMax, _zMin, _zMax] = model.bounds;\n    if (zMax === undefined) {\n      model.bounds = [\n        Math.min(xMin[0], _xMin),\n        Math.max(xMin[1], _xMax),\n        Math.min(xMin[2], _yMin),\n        Math.max(xMin[3], _yMax),\n        Math.min(xMin[4], _zMin),\n        Math.max(xMin[5], _zMax),\n      ];\n    } else {\n      model.bounds = [\n        Math.min(xMin, _xMin),\n        Math.max(xMax, _xMax),\n        Math.min(yMin, _yMin),\n        Math.max(yMax, _yMax),\n        Math.min(zMin, _zMin),\n        Math.max(zMax, _zMax),\n      ];\n    }\n  };\n\n  publicAPI.addBox = (other) => {\n    publicAPI.addBounds(other.getBounds());\n  };\n\n  publicAPI.isValid = () => isValid(model.bounds);\n\n  publicAPI.intersect = (bbox) => {\n    if (!(publicAPI.isValid() && bbox.isValid())) {\n      return false;\n    }\n\n    const newBounds = [0, 0, 0, 0, 0, 0];\n    const bBounds = bbox.getBounds();\n    let intersects;\n    for (let i = 0; i < 3; i++) {\n      intersects = false;\n      if (\n        bBounds[i * 2] >= model.bounds[i * 2] &&\n        bBounds[i * 2] <= model.bounds[i * 2 + 1]\n      ) {\n        intersects = true;\n        newBounds[i * 2] = bBounds[i * 2];\n      } else if (\n        model.bounds[i * 2] >= bBounds[i * 2] &&\n        model.bounds[i * 2] <= bBounds[i * 2 + 1]\n      ) {\n        intersects = true;\n        newBounds[i * 2] = model.bounds[i * 2];\n      }\n\n      if (\n        bBounds[i * 2 + 1] >= model.bounds[i * 2] &&\n        bBounds[i * 2 + 1] <= model.bounds[i * 2 + 1]\n      ) {\n        intersects = true;\n        newBounds[i * 2 + 1] = bbox.MaxPnt[i];\n      } else if (\n        model.bounds[i * 2 + 1] >= bbox.MinPnt[i * 2] &&\n        model.bounds[i * 2 + 1] <= bbox.MaxPnt[i * 2 + 1]\n      ) {\n        intersects = true;\n        newBounds[i * 2 + 1] = model.bounds[i * 2 + 1];\n      }\n\n      if (!intersects) {\n        return false;\n      }\n    }\n\n    // OK they did intersect - set the box to be the result\n    model.bounds = newBounds;\n    return true;\n  };\n\n  publicAPI.intersects = (bbox) => {\n    if (!(publicAPI.isValid() && bbox.isValid())) {\n      return false;\n    }\n    const bBounds = bbox.getBounds();\n    /* eslint-disable no-continue */\n    for (let i = 0; i < 3; i++) {\n      if (\n        bBounds[i * 2] >= model.bounds[i * 2] &&\n        bBounds[i * 2] <= model.bounds[i * 2 + 1]\n      ) {\n        continue;\n      } else if (\n        model.bounds[i * 2] >= bBounds[i * 2] &&\n        model.bounds[i * 2] <= bBounds[i * 2 + 1]\n      ) {\n        continue;\n      }\n\n      if (\n        bBounds[i * 2 + 1] >= model.bounds[i * 2] &&\n        bBounds[i * 2 + 1] <= model.bounds[i * 2 + 1]\n      ) {\n        continue;\n      } else if (\n        model.bounds[i * 2 + 1] >= bbox.MinPnt[i * 2] &&\n        model.bounds[i * 2 + 1] <= bbox.MaxPnt[i * 2 + 1]\n      ) {\n        continue;\n      }\n      return false;\n    }\n    /* eslint-enable no-continue */\n\n    return true;\n  };\n\n  publicAPI.intersectPlane = (origin, normal) => {\n    // Index[0..2] represents the order of traversing the corners of a cube\n    // in (x,y,z), (y,x,z) and (z,x,y) ordering, respectively\n    const index = [\n      [0, 1, 2, 3, 4, 5, 6, 7],\n      [0, 1, 4, 5, 2, 3, 6, 7],\n      [0, 2, 4, 6, 1, 3, 5, 7],\n    ];\n\n    // stores the signed distance to a plane\n    const d = [0, 0, 0, 0, 0, 0, 0, 0];\n    let idx = 0;\n    for (let ix = 0; ix < 2; ix++) {\n      for (let iy = 2; iy < 4; iy++) {\n        for (let iz = 4; iz < 6; iz++) {\n          const x = [model.bounds[ix], model.bounds[iy], model.bounds[iz]];\n          d[idx++] = vtkPlane.evaluate(normal, origin, x);\n        }\n      }\n    }\n\n    let dir = 2;\n    while (dir--) {\n      // in each direction, we test if the vertices of two orthogonal faces\n      // are on either side of the plane\n      if (\n        oppositeSign(d[index[dir][0]], d[index[dir][4]]) &&\n        oppositeSign(d[index[dir][1]], d[index[dir][5]]) &&\n        oppositeSign(d[index[dir][2]], d[index[dir][6]]) &&\n        oppositeSign(d[index[dir][3]], d[index[dir][7]])\n      ) {\n        break;\n      }\n    }\n\n    if (dir < 0) {\n      return false;\n    }\n\n    const sign = Math.sign(normal[dir]);\n    const size = Math.abs(\n      (model.bounds[dir * 2 + 1] - model.bounds[dir * 2]) * normal[dir]\n    );\n    let t = sign > 0 ? 1 : 0;\n    /* eslint-disable no-continue */\n    for (let i = 0; i < 4; i++) {\n      if (size === 0) {\n        continue; // shouldn't happen\n      }\n      const ti = Math.abs(d[index[dir][i]]) / size;\n      if (sign > 0 && ti < t) {\n        t = ti;\n      }\n\n      if (sign < 0 && ti > t) {\n        t = ti;\n      }\n    }\n    /* eslint-enable no-continue */\n    const bound =\n      (1.0 - t) * model.bounds[dir * 2] + t * model.bounds[dir * 2 + 1];\n\n    if (sign > 0) {\n      model.bounds[dir * 2] = bound;\n    } else {\n      model.bounds[dir * 2 + 1] = bound;\n    }\n\n    return true;\n  };\n\n  publicAPI.containsPoint = (x, y, z) => {\n    if (x < model.bounds[0] || x > model.bounds[1]) {\n      return false;\n    }\n\n    if (y < model.bounds[2] || y > model.bounds[3]) {\n      return false;\n    }\n\n    if (z < model.bounds[4] || z > model.bounds[5]) {\n      return false;\n    }\n\n    return true;\n  };\n\n  publicAPI.getMinPoint = () => [\n    model.bounds[0],\n    model.bounds[2],\n    model.bounds[4],\n  ];\n  publicAPI.getMaxPoint = () => [\n    model.bounds[1],\n    model.bounds[3],\n    model.bounds[5],\n  ];\n  publicAPI.getBound = (index) => model.bound[index];\n\n  publicAPI.contains = (bbox) => {\n    // if either box is not valid or they don't intersect\n    if (!publicAPI.intersects(bbox)) {\n      return false;\n    }\n\n    if (!publicAPI.containsPoint(...bbox.getMinPoint())) {\n      return false;\n    }\n\n    if (!publicAPI.containsPoint(...bbox.getMaxPoint())) {\n      return 0;\n    }\n\n    return true;\n  };\n\n  publicAPI.getCenter = () => getCenter(model.bounds);\n  publicAPI.getLength = (index) => getLength(model.bounds, index);\n  publicAPI.getLengths = () => getLengths(model.bounds);\n  publicAPI.getMaxLength = () => getMaxLength(model.bounds);\n  publicAPI.getDiagonalLength = () => getDiagonalLength(model.bounds);\n\n  publicAPI.reset = () => publicAPI.setBounds([].concat(INIT_BOUNDS));\n\n  publicAPI.inflate = (delta) => {\n    model.bounds = model.bounds.map((value, index) => {\n      if (index % 2 === 0) {\n        return value - delta;\n      }\n      return value + delta;\n    });\n  };\n\n  publicAPI.getCorners = () => {\n    getCorners(model.bounds, model.corners);\n    return model.corners;\n  };\n\n  publicAPI.scale = (sx, sy, sz) => {\n    if (publicAPI.isValid()) {\n      const newBounds = [].concat(model.bounds);\n      if (sx >= 0.0) {\n        newBounds[0] *= sx;\n        newBounds[1] *= sx;\n      } else {\n        newBounds[0] = sx * model.bounds[1];\n        newBounds[1] = sx * model.bounds[0];\n      }\n\n      if (sy >= 0.0) {\n        newBounds[2] *= sy;\n        newBounds[3] *= sy;\n      } else {\n        newBounds[2] = sy * model.bounds[3];\n        newBounds[3] = sy * model.bounds[2];\n      }\n\n      if (sz >= 0.0) {\n        newBounds[4] *= sz;\n        newBounds[5] *= sz;\n      } else {\n        newBounds[4] = sz * model.bounds[5];\n        newBounds[5] = sz * model.bounds[4];\n      }\n\n      model.bounds = newBounds;\n      return true;\n    }\n    return false;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  type: 'vtkBoundingBox',\n  bounds: [].concat(INIT_BOUNDS),\n  corners: [],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['bounds']);\n  vtkBoundingBox(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkBoundingBox');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend }, STATIC);\n","export const DataTypeByteSize = {\n  Int8Array: 1,\n  Uint8Array: 1,\n  Uint8ClampedArray: 1,\n  Int16Array: 2,\n  Uint16Array: 2,\n  Int32Array: 4,\n  Uint32Array: 4,\n  Float32Array: 4,\n  Float64Array: 8,\n};\n\nexport const VtkDataTypes = {\n  VOID: '', // not sure to know what that shoud be\n  CHAR: 'Int8Array',\n  SIGNED_CHAR: 'Int8Array',\n  UNSIGNED_CHAR: 'Uint8Array',\n  SHORT: 'Int16Array',\n  UNSIGNED_SHORT: 'Uint16Array',\n  INT: 'Int32Array',\n  UNSIGNED_INT: 'Uint32Array',\n  FLOAT: 'Float32Array',\n  DOUBLE: 'Float64Array',\n};\n\nexport const DefaultDataType = VtkDataTypes.FLOAT;\n\nexport default {\n  DefaultDataType,\n  DataTypeByteSize,\n  VtkDataTypes,\n};\n","import Constants from 'vtk.js/Sources/Common/Core/DataArray/Constants';\nimport macro from 'vtk.js/Sources/macro';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\n\nconst { DefaultDataType } = Constants;\nconst TUPLE_HOLDER = [];\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction createRangeHelper() {\n  let min = Number.MAX_VALUE;\n  let max = -Number.MAX_VALUE;\n  let count = 0;\n  let sum = 0;\n\n  return {\n    add(value) {\n      if (min > value) {\n        min = value;\n      }\n      if (max < value) {\n        max = value;\n      }\n      count++;\n      sum += value;\n    },\n    get() {\n      return { min, max, count, sum, mean: sum / count };\n    },\n    getRange() {\n      return { min, max };\n    },\n  };\n}\n\nfunction computeRange(values, component = 0, numberOfComponents = 1) {\n  const helper = createRangeHelper();\n  const size = values.length;\n  let value = 0;\n\n  if (component < 0 && numberOfComponents > 1) {\n    // Compute magnitude\n    for (let i = 0; i < size; i += numberOfComponents) {\n      value = 0;\n      for (let j = 0; j < numberOfComponents; j++) {\n        value += values[i + j] * values[i + j];\n      }\n      value **= 0.5;\n      helper.add(value);\n    }\n    return helper.getRange();\n  }\n\n  const offset = component < 0 ? 0 : component;\n  for (let i = offset; i < size; i += numberOfComponents) {\n    helper.add(values[i]);\n  }\n\n  return helper.getRange();\n}\n\nfunction ensureRangeSize(rangeArray, size = 0) {\n  const ranges = rangeArray || [];\n  // Pad ranges with null value to get the\n  while (ranges.length <= size) {\n    ranges.push(null);\n  }\n  return ranges;\n}\n\nfunction getDataType(typedArray) {\n  // Expects toString() to return \"[object ...Array]\"\n  return Object.prototype.toString.call(typedArray).slice(8, -1);\n}\n\nfunction getMaxNorm(normArray) {\n  const numComps = normArray.getNumberOfComponents();\n  let maxNorm = 0.0;\n  for (let i = 0; i < normArray.getNumberOfTuples(); ++i) {\n    const norm = vtkMath.norm(normArray.getTuple(i), numComps);\n    if (norm > maxNorm) {\n      maxNorm = norm;\n    }\n  }\n  return maxNorm;\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nexport const STATIC = {\n  computeRange,\n  createRangeHelper,\n  getDataType,\n  getMaxNorm,\n};\n\n// ----------------------------------------------------------------------------\n// vtkDataArray methods\n// ----------------------------------------------------------------------------\n\nfunction vtkDataArray(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkDataArray');\n\n  function dataChange() {\n    model.ranges = null;\n    publicAPI.modified();\n  }\n\n  publicAPI.getElementComponentSize = () => model.values.BYTES_PER_ELEMENT;\n\n  // Description:\n  // Return the data component at the location specified by tupleIdx and\n  // compIdx.\n  publicAPI.getComponent = (tupleIdx, compIdx = 0) =>\n    model.values[tupleIdx * model.numberOfComponents + compIdx];\n\n  // Description:\n  // Set the data component at the location specified by tupleIdx and compIdx\n  // to value.\n  // Note that i is less than NumberOfTuples and j is less than\n  //  NumberOfComponents. Make sure enough memory has been allocated\n  // (use SetNumberOfTuples() and SetNumberOfComponents()).\n  publicAPI.setComponent = (tupleIdx, compIdx, value) => {\n    if (value !== model.values[tupleIdx * model.numberOfComponents + compIdx]) {\n      model.values[tupleIdx * model.numberOfComponents + compIdx] = value;\n      dataChange();\n    }\n  };\n\n  publicAPI.getData = () => model.values;\n\n  publicAPI.getRange = (componentIndex = -1) => {\n    const rangeIdx =\n      componentIndex < 0 ? model.numberOfComponents : componentIndex;\n    let range = null;\n\n    if (!model.ranges) {\n      model.ranges = ensureRangeSize(model.ranges, model.numberOfComponents);\n    }\n    range = model.ranges[rangeIdx];\n\n    if (range) {\n      model.rangeTuple[0] = range.min;\n      model.rangeTuple[1] = range.max;\n      return model.rangeTuple;\n    }\n\n    // Need to compute ranges...\n    range = computeRange(\n      model.values,\n      componentIndex,\n      model.numberOfComponents\n    );\n    model.ranges[rangeIdx] = range;\n    model.rangeTuple[0] = range.min;\n    model.rangeTuple[1] = range.max;\n    return model.rangeTuple;\n  };\n\n  publicAPI.setRange = (rangeValue, componentIndex) => {\n    if (!model.ranges) {\n      model.ranges = ensureRangeSize(model.ranges, model.numberOfComponents);\n    }\n    const range = { min: rangeValue.min, max: rangeValue.max };\n\n    model.ranges[componentIndex] = range;\n    model.rangeTuple[0] = range.min;\n    model.rangeTuple[1] = range.max;\n\n    return model.rangeTuple;\n  };\n\n  publicAPI.setTuple = (idx, tuple) => {\n    const offset = idx * model.numberOfComponents;\n    for (let i = 0; i < model.numberOfComponents; i++) {\n      model.values[offset + i] = tuple[i];\n    }\n  };\n\n  publicAPI.getTuple = (idx, tupleToFill = TUPLE_HOLDER) => {\n    const numberOfComponents = model.numberOfComponents || 1;\n    if (tupleToFill.length !== numberOfComponents) {\n      tupleToFill.length = numberOfComponents;\n    }\n    const offset = idx * numberOfComponents;\n    // Check most common component sizes first\n    // to avoid doing a for loop if possible\n    if (numberOfComponents === 1) {\n      tupleToFill[0] = model.values[offset];\n    } else if (numberOfComponents === 2) {\n      tupleToFill[0] = model.values[offset];\n      tupleToFill[1] = model.values[offset + 1];\n    } else if (numberOfComponents === 3) {\n      tupleToFill[0] = model.values[offset];\n      tupleToFill[1] = model.values[offset + 1];\n      tupleToFill[2] = model.values[offset + 2];\n    } else if (numberOfComponents === 4) {\n      tupleToFill[0] = model.values[offset];\n      tupleToFill[1] = model.values[offset + 1];\n      tupleToFill[2] = model.values[offset + 2];\n      tupleToFill[3] = model.values[offset + 3];\n    } else {\n      for (let i = 0; i < numberOfComponents; i++) {\n        tupleToFill[i] = model.values[offset + i];\n      }\n    }\n    return tupleToFill;\n  };\n\n  publicAPI.getTupleLocation = (idx = 1) => idx * model.numberOfComponents;\n  publicAPI.getNumberOfComponents = () => model.numberOfComponents;\n  publicAPI.getNumberOfValues = () => model.values.length;\n  publicAPI.getNumberOfTuples = () =>\n    model.values.length / model.numberOfComponents;\n  publicAPI.getDataType = () => model.dataType;\n  /* eslint-disable no-use-before-define */\n  publicAPI.newClone = () =>\n    newInstance({\n      empty: true,\n      name: model.name,\n      dataType: model.dataType,\n      numberOfComponents: model.numberOfComponents,\n    });\n  /* eslint-enable no-use-before-define */\n\n  publicAPI.getName = () => {\n    if (!model.name) {\n      publicAPI.modified();\n      model.name = `vtkDataArray${publicAPI.getMTime()}`;\n    }\n    return model.name;\n  };\n\n  publicAPI.setData = (typedArray, numberOfComponents) => {\n    model.values = typedArray;\n    model.size = typedArray.length;\n    model.dataType = getDataType(typedArray);\n    if (numberOfComponents) {\n      model.numberOfComponents = numberOfComponents;\n    }\n    if (model.size % model.numberOfComponents !== 0) {\n      model.numberOfComponents = 1;\n    }\n    dataChange();\n  };\n\n  // Override serialization support\n  publicAPI.getState = () => {\n    const jsonArchive = Object.assign({}, model, {\n      vtkClass: publicAPI.getClassName(),\n    });\n\n    // Convert typed array to regular array\n    jsonArchive.values = Array.from(jsonArchive.values);\n    delete jsonArchive.buffer;\n\n    // Clean any empty data\n    Object.keys(jsonArchive).forEach((keyName) => {\n      if (!jsonArchive[keyName]) {\n        delete jsonArchive[keyName];\n      }\n    });\n\n    // Sort resulting object by key name\n    const sortedObj = {};\n    Object.keys(jsonArchive)\n      .sort()\n      .forEach((name) => {\n        sortedObj[name] = jsonArchive[name];\n      });\n\n    // Remove mtime\n    if (sortedObj.mtime) {\n      delete sortedObj.mtime;\n    }\n\n    return sortedObj;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  name: '',\n  numberOfComponents: 1,\n  size: 0,\n  dataType: DefaultDataType,\n  rangeTuple: [0, 0],\n  // values: null,\n  // ranges: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  if (!model.empty && !model.values && !model.size) {\n    throw new TypeError(\n      'Cannot create vtkDataArray object without: size > 0, values'\n    );\n  }\n\n  if (!model.values) {\n    model.values = new window[model.dataType](model.size);\n  } else if (Array.isArray(model.values)) {\n    model.values = window[model.dataType].from(model.values);\n  }\n\n  if (model.values) {\n    model.size = model.values.length;\n    model.dataType = getDataType(model.values);\n  }\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.set(publicAPI, model, ['name', 'numberOfComponents']);\n\n  // Object specific methods\n  vtkDataArray(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkDataArray');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend }, STATIC, Constants);\n","import vtk from 'vtk.js/Sources/vtk';\nimport macro from 'vtk.js/Sources/macro';\nimport vtkDataArray from 'vtk.js/Sources/Common/Core/DataArray';\n\n// ----------------------------------------------------------------------------\n// vtkFieldData methods\n// ----------------------------------------------------------------------------\n\nfunction vtkFieldData(publicAPI, model) {\n  model.classHierarchy.push('vtkFieldData');\n  const superGetState = publicAPI.getState;\n\n  // Decode serialized data if any\n  if (model.arrays) {\n    model.arrays = model.arrays.map((item) => ({ data: vtk(item.data) }));\n  }\n\n  publicAPI.initialize = () => {\n    publicAPI.initializeFields();\n    publicAPI.copyAllOn();\n    publicAPI.clearFieldFlags();\n  };\n\n  publicAPI.initializeFields = () => {\n    model.arrays = [];\n    model.copyFieldFlags = {};\n    publicAPI.modified();\n  };\n\n  publicAPI.copyStructure = (other) => {\n    publicAPI.initializeFields();\n    model.copyFieldFlags = other.getCopyFieldFlags().map((x) => x); // Deep-copy\n    model.arrays = other.arrays().map((x) => ({ array: x })); // Deep-copy\n    // TODO: Copy array information objects (once we support information objects)\n  };\n\n  publicAPI.getNumberOfArrays = () => model.arrays.length;\n  publicAPI.getNumberOfActiveArrays = () => model.arrays.length;\n  publicAPI.addArray = (arr) => {\n    model.arrays = [].concat(model.arrays, { data: arr });\n    return model.arrays.length - 1;\n  };\n  publicAPI.removeAllArrays = () => {\n    model.arrays = [];\n  };\n  publicAPI.removeArray = (arrayName) => {\n    model.arrays = model.arrays.filter(\n      (entry) => arrayName !== entry.data.getName()\n    );\n  };\n  publicAPI.removeArrayByIndex = (arrayIdx) => {\n    model.arrays = model.arrays.filter((entry, idx) => idx !== arrayIdx);\n  };\n  publicAPI.getArrays = () => model.arrays.map((entry) => entry.data);\n  publicAPI.getArray = (arraySpec) =>\n    typeof arraySpec === 'number'\n      ? publicAPI.getArrayByIndex(arraySpec)\n      : publicAPI.getArrayByName(arraySpec);\n  publicAPI.getArrayByName = (arrayName) =>\n    model.arrays.reduce(\n      (a, b, i) => (b.data.getName() === arrayName ? b.data : a),\n      null\n    );\n  publicAPI.getArrayWithIndex = (arrayName) =>\n    model.arrays.reduce(\n      (a, b, i) =>\n        b.data && b.data.getName() === arrayName\n          ? { array: b.data, index: i }\n          : a,\n      { array: null, index: -1 }\n    );\n  publicAPI.getArrayByIndex = (idx) =>\n    idx >= 0 && idx < model.arrays.length ? model.arrays[idx].data : null;\n  publicAPI.hasArray = (arrayName) =>\n    publicAPI.getArrayWithIndex(arrayName).index >= 0;\n  publicAPI.getArrayName = (idx) => {\n    const arr = model.arrays[idx];\n    return arr ? arr.data.getName() : '';\n  };\n  publicAPI.getCopyFieldFlags = () => model.copyFieldFlags;\n  publicAPI.getFlag = (arrayName) => model.copyFieldFlags[arrayName];\n  publicAPI.passData = (other, fromId = -1, toId = -1) => {\n    other.getArrays().forEach((arr) => {\n      const copyFlag = publicAPI.getFlag(arr.getName());\n      if (\n        copyFlag !== false &&\n        !(model.doCopyAllOff && copyFlag !== true) &&\n        arr\n      ) {\n        let destArr = publicAPI.getArrayByName(arr.getName());\n        if (!destArr) {\n          if (fromId < 0 || fromId > arr.getNumberOfTuples()) {\n            publicAPI.addArray(arr);\n          } else {\n            const ncomps = arr.getNumberOfComponents();\n            let newSize = arr.getNumberOfValues();\n            const tId = toId > -1 ? toId : fromId;\n            if (newSize < tId * ncomps) {\n              newSize = (tId + 1) * ncomps;\n            }\n            destArr = vtkDataArray.newInstance({\n              name: arr.getName(),\n              dataType: arr.getDataType(),\n              numberOfComponents: arr.getNumberOfComponents(),\n              size: newSize,\n            });\n            destArr.setTuple(tId, arr.getTuple(fromId));\n            publicAPI.addArray(destArr);\n          }\n        } else if (\n          arr.getNumberOfComponents() === destArr.getNumberOfComponents()\n        ) {\n          if (fromId > -1 && fromId < arr.getNumberOfTuples()) {\n            const tId = toId > -1 ? toId : fromId;\n            destArr.setTuple(tId, arr.getTuple(fromId));\n          } else {\n            // if fromId and not provided, just copy all (or as much possible)\n            // of arr to destArr.\n            for (let i = 0; i < arr.getNumberOfTuples(); ++i) {\n              destArr.setTuple(i, arr.getTuple(i));\n            }\n          }\n        }\n      }\n    });\n  };\n  publicAPI.copyFieldOn = (arrayName) => {\n    model.copyFieldFlags[arrayName] = true;\n  };\n  publicAPI.copyFieldOff = (arrayName) => {\n    model.copyFieldFlags[arrayName] = false;\n  };\n  publicAPI.copyAllOn = () => {\n    if (!model.doCopyAllOn || model.doCopyAllOff) {\n      model.doCopyAllOn = true;\n      model.doCopyAllOff = false;\n      publicAPI.modified();\n    }\n  };\n  publicAPI.copyAllOff = () => {\n    if (model.doCopyAllOn || !model.doCopyAllOff) {\n      model.doCopyAllOn = false;\n      model.doCopyAllOff = true;\n      publicAPI.modified();\n    }\n  };\n  publicAPI.clearFieldFlags = () => {\n    model.copyFieldFlags = {};\n  };\n  publicAPI.deepCopy = (other) => {\n    model.arrays = other.getArrays().map((arr) => {\n      const arrNew = arr.newClone();\n      arrNew.deepCopy(arr);\n      return { data: arrNew };\n    });\n  };\n  publicAPI.copyFlags = (other) => other.getCopyFieldFlags().map((x) => x);\n  // TODO: publicAPI.squeeze = () => model.arrays.forEach(entry => entry.data.squeeze());\n  publicAPI.reset = () => model.arrays.forEach((entry) => entry.data.reset());\n  // TODO: getActualMemorySize\n  publicAPI.getMTime = () =>\n    model.arrays.reduce(\n      (a, b) => (b.data.getMTime() > a ? b.data.getMTime() : a),\n      model.mtime\n    );\n  // TODO: publicAPI.getField = (ids, other) => { copy ids from other into this model's arrays }\n  // TODO: publicAPI.getArrayContainingComponent = (component) => ...\n  publicAPI.getNumberOfComponents = () =>\n    model.arrays.reduce((a, b) => a + b.data.getNumberOfComponents(), 0);\n  publicAPI.getNumberOfTuples = () =>\n    model.arrays.length > 0 ? model.arrays[0].getNumberOfTuples() : 0;\n\n  publicAPI.getState = () => {\n    const result = superGetState();\n    result.arrays = model.arrays.map((item) => ({\n      data: item.data.getState(),\n    }));\n    return result;\n  };\n}\n\nconst DEFAULT_VALUES = {\n  arrays: [],\n  copyFieldFlags: [], // fields not to copy\n  doCopyAllOn: true,\n  doCopyAllOff: false,\n};\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  macro.obj(publicAPI, model);\n\n  vtkFieldData(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkFieldData');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","export const AttributeTypes = {\n  SCALARS: 0,\n  VECTORS: 1,\n  NORMALS: 2,\n  TCOORDS: 3,\n  TENSORS: 4,\n  GLOBALIDS: 5,\n  PEDIGREEIDS: 6,\n  EDGEFLAG: 7,\n  NUM_ATTRIBUTES: 8,\n};\n\nexport const AttributeLimitTypes = {\n  MAX: 0,\n  EXACT: 1,\n  NOLIMIT: 2,\n};\n\nexport const CellGhostTypes = {\n  DUPLICATECELL: 1, // the cell is present on multiple processors\n  HIGHCONNECTIVITYCELL: 2, // the cell has more neighbors than in a regular mesh\n  LOWCONNECTIVITYCELL: 4, // the cell has less neighbors than in a regular mesh\n  REFINEDCELL: 8, // other cells are present that refines it.\n  EXTERIORCELL: 16, // the cell is on the exterior of the data set\n  HIDDENCELL: 32, // the cell is needed to maintain connectivity, but the data values should be ignored.\n};\n\nexport const PointGhostTypes = {\n  DUPLICATEPOINT: 1, // the cell is present on multiple processors\n  HIDDENPOINT: 2, // the point is needed to maintain connectivity, but the data values should be ignored.\n};\n\nexport const AttributeCopyOperations = {\n  COPYTUPLE: 0,\n  INTERPOLATE: 1,\n  PASSDATA: 2,\n  ALLCOPY: 3, // all of the above\n};\n\nexport const ghostArrayName = 'vtkGhostType';\n\nexport const DesiredOutputPrecision = {\n  DEFAULT: 0, // use the point type that does not truncate any data\n  SINGLE: 1, // use Float32Array\n  DOUBLE: 2, // use Float64Array\n};\n\nexport default {\n  AttributeCopyOperations,\n  AttributeLimitTypes,\n  AttributeTypes,\n  CellGhostTypes,\n  DesiredOutputPrecision,\n  PointGhostTypes,\n  ghostArrayName,\n};\n","import macro from 'vtk.js/Sources/macro';\nimport vtkFieldData from 'vtk.js/Sources/Common/DataModel/DataSetAttributes/FieldData';\nimport Constants from 'vtk.js/Sources/Common/DataModel/DataSetAttributes/Constants';\nimport vtkDataArray from 'vtk.js/Sources/Common/Core/DataArray';\n\nconst { AttributeTypes, AttributeCopyOperations } = Constants;\nconst { vtkWarningMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// vtkDataSetAttributes methods\n// ----------------------------------------------------------------------------\n\nfunction vtkDataSetAttributes(publicAPI, model) {\n  const attrTypes = [\n    'Scalars',\n    'Vectors',\n    'Normals',\n    'TCoords',\n    'Tensors',\n    'GlobalIds',\n    'PedigreeIds',\n  ];\n\n  function cleanAttributeType(attType) {\n    // Given an integer or string, convert the result to one of the\n    // strings in the \"attrTypes\" array above or null (if\n    // no match is found)\n    let cleanAttType = attrTypes.find(\n      (ee) =>\n        AttributeTypes[ee.toUpperCase()] === attType ||\n        (typeof attType !== 'number' &&\n          ee.toLowerCase() === attType.toLowerCase())\n    );\n    if (typeof cleanAttType === 'undefined') {\n      cleanAttType = null;\n    }\n    return cleanAttType;\n  }\n\n  // Set our className\n  model.classHierarchy.push('vtkDataSetAttributes');\n\n  publicAPI.checkNumberOfComponents = (x) => true; // TODO\n\n  publicAPI.setAttribute = (arr, uncleanAttType) => {\n    const attType = cleanAttributeType(uncleanAttType);\n    if (\n      arr &&\n      attType.toUpperCase() === 'PEDIGREEIDS' &&\n      !arr.isA('vtkDataArray')\n    ) {\n      vtkWarningMacro(\n        `Cannot set attribute ${attType}. The attribute must be a vtkDataArray.`\n      );\n      return -1;\n    }\n    if (arr && !publicAPI.checkNumberOfComponents(arr, attType)) {\n      vtkWarningMacro(\n        `Cannot set attribute ${attType}. Incorrect number of components.`\n      );\n      return -1;\n    }\n    let currentAttribute = model[`active${attType}`];\n    if (currentAttribute >= 0 && currentAttribute < model.arrays.length) {\n      if (model.arrays[currentAttribute] === arr) {\n        return currentAttribute;\n      }\n      publicAPI.removeArrayByIndex(currentAttribute);\n    }\n\n    if (arr) {\n      currentAttribute = publicAPI.addArray(arr);\n      model[`active${attType}`] = currentAttribute;\n    } else {\n      model[`active${attType}`] = -1;\n    }\n    publicAPI.modified();\n    return model[`active${attType}`];\n  };\n\n  publicAPI.setActiveAttributeByName = (arrayName, attType) =>\n    publicAPI.setActiveAttributeByIndex(\n      publicAPI.getArrayWithIndex(arrayName).index,\n      attType\n    );\n\n  publicAPI.setActiveAttributeByIndex = (arrayIdx, uncleanAttType) => {\n    const attType = cleanAttributeType(uncleanAttType);\n    if (arrayIdx >= 0 && arrayIdx < model.arrays.length) {\n      if (attType.toUpperCase() !== 'PEDIGREEIDS') {\n        const arr = publicAPI.getArrayByIndex(arrayIdx);\n        if (!arr.isA('vtkDataArray')) {\n          vtkWarningMacro(\n            `Cannot set attribute ${attType}. Only vtkDataArray subclasses can be set as active attributes.`\n          );\n          return -1;\n        }\n        if (!publicAPI.checkNumberOfComponents(arr, attType)) {\n          vtkWarningMacro(\n            `Cannot set attribute ${attType}. Incorrect number of components.`\n          );\n          return -1;\n        }\n      }\n      model[`active${attType}`] = arrayIdx;\n      publicAPI.modified();\n      return arrayIdx;\n    }\n\n    if (arrayIdx === -1) {\n      model[`active${attType}`] = arrayIdx;\n      publicAPI.modified();\n    }\n\n    return -1;\n  };\n\n  publicAPI.getActiveAttribute = (attType) => {\n    // Given an integer enum value or a string (with random capitalization),\n    // find the matching string in attrTypes.\n    const cleanAttType = cleanAttributeType(attType);\n    return publicAPI[`get${cleanAttType}`]();\n  };\n\n  // Override to allow proper handling of active attributes\n  publicAPI.removeAllArrays = () => {\n    model.arrays = [];\n    attrTypes.forEach((attType) => {\n      model[`active${attType}`] = -1;\n    });\n  };\n\n  // Override to allow proper handling of active attributes\n  publicAPI.removeArray = (arrayName) => {\n    model.arrays = model.arrays.filter((entry, idx) => {\n      if (arrayName === entry.data.getName()) {\n        // Found the array to remove, but is it an active attribute?\n        attrTypes.forEach((attType) => {\n          if (idx === model[`active${attType}`]) {\n            model[`active${attType}`] = -1;\n          }\n        });\n        return false;\n      }\n      return true;\n    });\n  };\n\n  // Override to allow proper handling of active attributes\n  publicAPI.removeArrayByIndex = (arrayIdx) => {\n    model.arrays = model.arrays.filter((entry, idx) => idx !== arrayIdx);\n    attrTypes.forEach((attType) => {\n      if (arrayIdx === model[`active${attType}`]) {\n        model[`active${attType}`] = -1;\n      }\n    });\n  };\n\n  attrTypes.forEach((value) => {\n    const activeVal = `active${value}`;\n    publicAPI[`get${value}`] = () =>\n      publicAPI.getArrayByIndex(model[activeVal]);\n    publicAPI[`set${value}`] = (da) => publicAPI.setAttribute(da, value);\n    publicAPI[`setActive${value}`] = (arrayName) =>\n      publicAPI.setActiveAttributeByIndex(\n        publicAPI.getArrayWithIndex(arrayName).index,\n        value\n      );\n    publicAPI[`copy${value}Off`] = () => {\n      publicAPI.initialize();\n      const attType = value.toUpperCase();\n      model.copyAttributeFlags[AttributeCopyOperations.PASSDATA][\n        AttributeTypes[attType]\n      ] = false;\n    };\n  });\n\n  publicAPI.initialize = macro.chain(publicAPI.initialize, () => {\n    // Default to copying all attributes in every circumstance:\n    model.copyAttributeFlags = [];\n    Object.keys(AttributeCopyOperations)\n      .filter((op) => op !== 'ALLCOPY')\n      .forEach((attCopyOp) => {\n        model.copyAttributeFlags[\n          AttributeCopyOperations[attCopyOp]\n        ] = Object.keys(AttributeTypes)\n          .filter((ty) => ty !== 'NUM_ATTRIBUTES')\n          .reduce((a, b) => {\n            a[AttributeTypes[b]] = true;\n            return a;\n          }, []);\n      });\n    // Override some operations where we don't want to copy:\n    model.copyAttributeFlags[AttributeCopyOperations.COPYTUPLE][\n      AttributeTypes.GLOBALIDS\n    ] = false;\n    model.copyAttributeFlags[AttributeCopyOperations.INTERPOLATE][\n      AttributeTypes.GLOBALIDS\n    ] = false;\n    model.copyAttributeFlags[AttributeCopyOperations.COPYTUPLE][\n      AttributeTypes.PEDIGREEIDS\n    ] = false;\n  });\n\n  // Process dataArrays if any\n  if (model.dataArrays && Object.keys(model.dataArrays).length) {\n    Object.keys(model.dataArrays).forEach((name) => {\n      if (\n        !model.dataArrays[name].ref &&\n        model.dataArrays[name].type === 'vtkDataArray'\n      ) {\n        publicAPI.addArray(vtkDataArray.newInstance(model.dataArrays[name]));\n      }\n    });\n  }\n\n  const superShallowCopy = publicAPI.shallowCopy;\n  publicAPI.shallowCopy = (other, debug) => {\n    superShallowCopy(other, debug);\n    model.arrays = other.getArrays().map((arr) => {\n      const arrNew = arr.newClone();\n      arrNew.shallowCopy(arr, debug);\n      return { data: arrNew };\n    });\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  activeScalars: -1,\n  activeVectors: -1,\n  activeTensors: -1,\n  activeNormals: -1,\n  activeTCoords: -1,\n  activeGlobalIds: -1,\n  activePedigreeIds: -1,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  vtkFieldData.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, [\n    'activeScalars',\n    'activeNormals',\n    'activeTCoords',\n    'activeVectors',\n    'activeTensors',\n    'activeGlobalIds',\n    'activePedigreeIds',\n  ]);\n\n  if (!model.arrays) {\n    model.arrays = {};\n  }\n\n  // Object specific methods\n  vtkDataSetAttributes(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkDataSetAttributes');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend }, Constants);\n","// Specify how data arrays can be used by data objects\nexport const FieldDataTypes = {\n  UNIFORM: 0, // data that does not vary over points/cells/etc.\n  DATA_OBJECT_FIELD: 0, // to match VTK\n\n  COORDINATE: 1, // data that specifies the location of each point\n  POINT_DATA: 1, // to match VTK\n\n  POINT: 2, // data defined at each point, but that does not specify the point location\n  POINT_FIELD_DATA: 2, // to match VTK\n\n  CELL: 3, // data defined at each cell, but that does not specify the cell\n  CELL_FIELD_DATA: 3, // to match VTK\n\n  VERTEX: 4, // data defined at each graph vertex, but that does not specify the graph vertex\n  VERTEX_FIELD_DATA: 4, // to match VTK\n\n  EDGE: 5, // data defined at each graph edge, but that does not specify the graph edge\n  EDGE_FIELD_DATA: 5, // to match VTK\n\n  ROW: 6, // data specifying a table row\n  ROW_DATA: 6, // to match VTK\n};\n\nexport const FieldAssociations = {\n  FIELD_ASSOCIATION_POINTS: 0,\n  FIELD_ASSOCIATION_CELLS: 1,\n  FIELD_ASSOCIATION_NONE: 2,\n  FIELD_ASSOCIATION_POINTS_THEN_CELLS: 3,\n  FIELD_ASSOCIATION_VERTICES: 4,\n  FIELD_ASSOCIATION_EDGES: 5,\n  FIELD_ASSOCIATION_ROWS: 6,\n  NUMBER_OF_ASSOCIATIONS: 7,\n};\n\nexport default {\n  FieldDataTypes,\n  FieldAssociations,\n};\n","import macro from 'vtk.js/Sources/macro';\nimport vtk from 'vtk.js/Sources/vtk';\nimport vtkDataSetAttributes from 'vtk.js/Sources/Common/DataModel/DataSetAttributes';\nimport Constants from 'vtk.js/Sources/Common/DataModel/DataSet/Constants';\n\n// import vtkBoundingBox from '../BoundingBox';\n// import * as vtkMath from '../../Core/Math';\n//\n// function getBounds(dataset) {\n//   if (dataset.bounds) {\n//     return dataset.bounds;\n//   }\n//   if (dataset.type && dataset[dataset.type]) {\n//     const ds = dataset[dataset.type];\n//     if (ds.bounds) {\n//       return ds.bounds;\n//     }\n//     if (ds.Points && ds.Points.bounds) {\n//       return ds.Points.bounds;\n//     }\n\n//     if (ds.Points && ds.Points.values) {\n//       const array = ds.Points.values;\n//       const bbox = vtkBoundingBox.newInstance();\n//       const size = array.length;\n//       const delta = ds.Points.numberOfComponents ? ds.Points.numberOfComponents : 3;\n//       for (let idx = 0; idx < size; idx += delta) {\n//         bbox.addPoint(array[idx * delta], array[(idx * delta) + 1], array[(idx * delta) + 2]);\n//       }\n//       ds.Points.bounds = bbox.getBounds();\n//       return ds.Points.bounds;\n//     }\n//   }\n//   return vtkMath.createUninitializedBounds();\n// }\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nconst DATASET_FIELDS = ['pointData', 'cellData', 'fieldData'];\n\n// ----------------------------------------------------------------------------\n// vtkDataSet methods\n// ----------------------------------------------------------------------------\n\nfunction vtkDataSet(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkDataSet');\n\n  // Add dataset attributes\n  DATASET_FIELDS.forEach((fieldName) => {\n    if (!model[fieldName]) {\n      model[fieldName] = vtkDataSetAttributes.newInstance();\n    } else {\n      model[fieldName] = vtk(model[fieldName]);\n    }\n  });\n\n  const superShallowCopy = publicAPI.shallowCopy;\n  publicAPI.shallowCopy = (other, debug = false) => {\n    superShallowCopy(other, debug);\n    DATASET_FIELDS.forEach((fieldName) => {\n      model[fieldName] = vtkDataSetAttributes.newInstance();\n      model[fieldName].shallowCopy(other.getReferenceByName(fieldName));\n    });\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // pointData: null,\n  // cellData: null,\n  // fieldData: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, DATASET_FIELDS);\n\n  // Object specific methods\n  vtkDataSet(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkDataSet');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend }, Constants);\n","export const StructuredType = {\n  UNCHANGED: 0,\n  SINGLE_POINT: 1,\n  X_LINE: 2,\n  Y_LINE: 3,\n  Z_LINE: 4,\n  XY_PLANE: 5,\n  YZ_PLANE: 6,\n  XZ_PLANE: 7,\n  XYZ_GRID: 8,\n  EMPTY: 9,\n};\n\nexport default {\n  StructuredType,\n};\n","import Constants from 'vtk.js/Sources/Common/DataModel/StructuredData/Constants';\n\nconst { StructuredType } = Constants;\n\nexport function getDataDescriptionFromExtent(inExt) {\n  let dataDim = 0;\n  for (let i = 0; i < 3; ++i) {\n    if (inExt[i * 2] < inExt[i * 2 + 1]) {\n      dataDim++;\n    }\n  }\n\n  if (inExt[0] > inExt[1] || inExt[2] > inExt[3] || inExt[4] > inExt[5]) {\n    return StructuredType.EMPTY;\n  }\n\n  if (dataDim === 3) {\n    return StructuredType.XYZ_GRID;\n  }\n\n  if (dataDim === 2) {\n    if (inExt[0] === inExt[1]) {\n      return StructuredType.YZ_PLANE;\n    }\n\n    if (inExt[2] === inExt[3]) {\n      return StructuredType.XZ_PLANE;\n    }\n    return StructuredType.XY_PLANE;\n  }\n\n  if (dataDim === 1) {\n    if (inExt[0] < inExt[1]) {\n      return StructuredType.X_LINE;\n    }\n\n    if (inExt[2] < inExt[3]) {\n      return StructuredType.Y_LINE;\n    }\n\n    return StructuredType.Z_LINE;\n  }\n\n  return StructuredType.SINGLE_POINT;\n}\n\nexport default Object.assign({ getDataDescriptionFromExtent }, Constants);\n","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var tempA = fromValues(a[0], a[1], a[2]);\n  var tempB = fromValues(b[0], b[1], b[2]);\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n  var cosine = dot(tempA, tempB);\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n  var trace = mat[0] + mat[5] + mat[10];\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (mat[6] - mat[9]) / S;\n    out[1] = (mat[8] - mat[2]) / S;\n    out[2] = (mat[1] - mat[4]) / S;\n  } else if (mat[0] > mat[5] && mat[0] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n    out[3] = (mat[6] - mat[9]) / S;\n    out[0] = 0.25 * S;\n    out[1] = (mat[1] + mat[4]) / S;\n    out[2] = (mat[8] + mat[2]) / S;\n  } else if (mat[5] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n    out[3] = (mat[8] - mat[2]) / S;\n    out[0] = (mat[1] + mat[4]) / S;\n    out[1] = 0.25 * S;\n    out[2] = (mat[6] + mat[9]) / S;\n  } else {\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n    out[3] = (mat[1] - mat[4]) / S;\n    out[0] = (mat[8] + mat[2]) / S;\n    out[1] = (mat[6] + mat[9]) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n;\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n;\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import macro from 'vtk.js/Sources/macro';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport vtkBoundingBox from 'vtk.js/Sources/Common/DataModel/BoundingBox';\nimport vtkDataSet from 'vtk.js/Sources/Common/DataModel/DataSet';\nimport vtkStructuredData from 'vtk.js/Sources/Common/DataModel/StructuredData';\nimport { StructuredType } from 'vtk.js/Sources/Common/DataModel/StructuredData/Constants';\nimport { vec3, mat3, mat4 } from 'gl-matrix';\n\nconst { vtkErrorMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// vtkImageData methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageData(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageData');\n\n  publicAPI.setExtent = (...inExtent) => {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n\n    if (!inExtent || inExtent.length !== 6) {\n      return;\n    }\n\n    let changeDetected = false;\n    model.extent.forEach((item, index) => {\n      if (item !== inExtent[index]) {\n        if (changeDetected) {\n          return;\n        }\n        changeDetected = true;\n      }\n    });\n\n    if (changeDetected) {\n      model.extent = [].concat(inExtent);\n      model.dataDescription = vtkStructuredData.getDataDescriptionFromExtent(\n        model.extent\n      );\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.setDimensions = (...dims) => {\n    let i;\n    let j;\n    let k;\n\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n\n    if (dims.length === 1) {\n      const array = dims[0];\n      i = array[0];\n      j = array[1];\n      k = array[2];\n    } else if (dims.length === 3) {\n      i = dims[0];\n      j = dims[1];\n      k = dims[2];\n    } else {\n      vtkErrorMacro('Bad dimension specification');\n      return;\n    }\n\n    publicAPI.setExtent(0, i - 1, 0, j - 1, 0, k - 1);\n  };\n\n  publicAPI.getDimensions = () => [\n    model.extent[1] - model.extent[0] + 1,\n    model.extent[3] - model.extent[2] + 1,\n    model.extent[5] - model.extent[4] + 1,\n  ];\n\n  publicAPI.getNumberOfCells = () => {\n    const dims = publicAPI.getDimensions();\n    let nCells = 1;\n\n    for (let i = 0; i < 3; i++) {\n      if (dims[i] === 0) {\n        return 0;\n      }\n      if (dims[i] > 1) {\n        nCells *= dims[i] - 1;\n      }\n    }\n\n    return nCells;\n  };\n\n  publicAPI.getNumberOfPoints = () => {\n    const dims = publicAPI.getDimensions();\n    return dims[0] * dims[1] * dims[2];\n  };\n\n  publicAPI.getPoint = (index) => {\n    const dims = publicAPI.getDimensions();\n    const ijk = vec3.fromValues(0, 0, 0);\n    const coords = [0, 0, 0];\n\n    if (dims[0] === 0 || dims[1] === 0 || dims[2] === 0) {\n      vtkErrorMacro('Requesting a point from an empty image.');\n      return null;\n    }\n\n    switch (model.dataDescription) {\n      case StructuredType.EMPTY:\n        return null;\n\n      case StructuredType.SINGLE_POINT:\n        break;\n\n      case StructuredType.X_LINE:\n        ijk[0] = index;\n        break;\n\n      case StructuredType.Y_LINE:\n        ijk[1] = index;\n        break;\n\n      case StructuredType.Z_LINE:\n        ijk[2] = index;\n        break;\n\n      case StructuredType.XY_PLANE:\n        ijk[0] = index % dims[0];\n        ijk[1] = index / dims[0];\n        break;\n\n      case StructuredType.YZ_PLANE:\n        ijk[1] = index % dims[1];\n        ijk[2] = index / dims[1];\n        break;\n\n      case StructuredType.XZ_PLANE:\n        ijk[0] = index % dims[0];\n        ijk[2] = index / dims[0];\n        break;\n\n      case StructuredType.XYZ_GRID:\n        ijk[0] = index % dims[0];\n        ijk[1] = (index / dims[0]) % dims[1];\n        ijk[2] = index / (dims[0] * dims[1]);\n        break;\n\n      default:\n        vtkErrorMacro('Invalid dataDescription');\n        break;\n    }\n\n    const vout = vec3.create();\n    publicAPI.indexToWorldVec3(ijk, vout);\n    vec3.copy(coords, vout);\n    return coords;\n  };\n\n  // vtkCell *GetCell(vtkIdType cellId) VTK_OVERRIDE;\n  // void GetCell(vtkIdType cellId, vtkGenericCell *cell) VTK_OVERRIDE;\n  // void GetCellBounds(vtkIdType cellId, double bounds[6]) VTK_OVERRIDE;\n  // virtual vtkIdType FindPoint(double x, double y, double z)\n  // {\n  //   return this->vtkDataSet::FindPoint(x, y, z);\n  // }\n  // vtkIdType FindPoint(double x[3]) VTK_OVERRIDE;\n  // vtkIdType FindCell(\n  //   double x[3], vtkCell *cell, vtkIdType cellId, double tol2,\n  //   int& subId, double pcoords[3], double *weights) VTK_OVERRIDE;\n  // vtkIdType FindCell(\n  //   double x[3], vtkCell *cell, vtkGenericCell *gencell,\n  //   vtkIdType cellId, double tol2, int& subId,\n  //   double pcoords[3], double *weights) VTK_OVERRIDE;\n  // vtkCell *FindAndGetCell(double x[3], vtkCell *cell, vtkIdType cellId,\n  //                                 double tol2, int& subId, double pcoords[3],\n  //                                 double *weights) VTK_OVERRIDE;\n  // int GetCellType(vtkIdType cellId) VTK_OVERRIDE;\n  // void GetCellPoints(vtkIdType cellId, vtkIdList *ptIds) VTK_OVERRIDE\n  //   {vtkStructuredData::GetCellPoints(cellId,ptIds,this->DataDescription,\n  //                                     this->GetDimensions());}\n  // void GetPointCells(vtkIdType ptId, vtkIdList *cellIds) VTK_OVERRIDE\n  //   {vtkStructuredData::GetPointCells(ptId,cellIds,this->GetDimensions());}\n  // void ComputeBounds() VTK_OVERRIDE;\n  // int GetMaxCellSize() VTK_OVERRIDE {return 8;}; //voxel is the largest\n\n  publicAPI.getBounds = () => publicAPI.extentToBounds(model.extent);\n\n  publicAPI.extentToBounds = (ex) => {\n    // prettier-ignore\n    const corners = [\n      ex[0], ex[2], ex[4],\n      ex[1], ex[2], ex[4],\n      ex[0], ex[3], ex[4],\n      ex[1], ex[3], ex[4],\n      ex[0], ex[2], ex[5],\n      ex[1], ex[2], ex[5],\n      ex[0], ex[3], ex[5],\n      ex[1], ex[3], ex[5]];\n\n    const idx = vec3.fromValues(corners[0], corners[1], corners[2]);\n    const vout = vec3.create();\n    publicAPI.indexToWorldVec3(idx, vout);\n    const bounds = [vout[0], vout[0], vout[1], vout[1], vout[2], vout[2]];\n    for (let i = 3; i < 24; i += 3) {\n      vec3.set(idx, corners[i], corners[i + 1], corners[i + 2]);\n      publicAPI.indexToWorldVec3(idx, vout);\n      if (vout[0] < bounds[0]) {\n        bounds[0] = vout[0];\n      }\n      if (vout[1] < bounds[2]) {\n        bounds[2] = vout[1];\n      }\n      if (vout[2] < bounds[4]) {\n        bounds[4] = vout[2];\n      }\n      if (vout[0] > bounds[1]) {\n        bounds[1] = vout[0];\n      }\n      if (vout[1] > bounds[3]) {\n        bounds[3] = vout[1];\n      }\n      if (vout[2] > bounds[5]) {\n        bounds[5] = vout[2];\n      }\n    }\n\n    return bounds;\n  };\n\n  publicAPI.computeTransforms = () => {\n    const trans = vec3.fromValues(\n      model.origin[0],\n      model.origin[1],\n      model.origin[2]\n    );\n    mat4.fromTranslation(model.indexToWorld, trans);\n\n    model.indexToWorld[0] = model.direction[0];\n    model.indexToWorld[1] = model.direction[1];\n    model.indexToWorld[2] = model.direction[2];\n\n    model.indexToWorld[4] = model.direction[3];\n    model.indexToWorld[5] = model.direction[4];\n    model.indexToWorld[6] = model.direction[5];\n\n    model.indexToWorld[8] = model.direction[6];\n    model.indexToWorld[9] = model.direction[7];\n    model.indexToWorld[10] = model.direction[8];\n\n    const scale = vec3.fromValues(\n      model.spacing[0],\n      model.spacing[1],\n      model.spacing[2]\n    );\n    mat4.scale(model.indexToWorld, model.indexToWorld, scale);\n\n    mat4.invert(model.worldToIndex, model.indexToWorld);\n  };\n\n  //\n  // The direction matrix is a 3x3 basis for the I, J, K axes\n  // of the image. The rows of the matrix correspond to the\n  // axes directions in world coordinates. Direction must\n  // form an orthonormal basis, results are undefined if\n  // it is not.\n  //\n  publicAPI.setDirection = (...args) => {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return false;\n    }\n\n    let array = args;\n    // allow an array passed as a single arg.\n    if (array.length === 1 && Array.isArray(array[0])) {\n      array = array[0];\n    }\n\n    if (array.length !== 9) {\n      throw new RangeError('Invalid number of values for array setter');\n    }\n    let changeDetected = false;\n    model.direction.forEach((item, index) => {\n      if (item !== array[index]) {\n        if (changeDetected) {\n          return;\n        }\n        changeDetected = true;\n      }\n    });\n\n    if (changeDetected) {\n      for (let i = 0; i < 9; ++i) {\n        model.direction[i] = array[i];\n      }\n      publicAPI.modified();\n    }\n    return true;\n  };\n\n  // this is the fast version, requires vec3 arguments\n  publicAPI.indexToWorldVec3 = (vin, vout) => {\n    vec3.transformMat4(vout, vin, model.indexToWorld);\n  };\n\n  publicAPI.indexToWorldBounds = (bin, bout = []) => {\n    const in1 = [0, 0, 0];\n    const in2 = [0, 0, 0];\n    vtkBoundingBox.computeCornerPoints(in1, in2, bin);\n\n    const out1 = [0, 0, 0];\n    const out2 = [0, 0, 0];\n    vec3.transformMat4(out1, in1, model.indexToWorld);\n    vec3.transformMat4(out2, in2, model.indexToWorld);\n\n    vtkMath.computeBoundsFromPoints(out1, out2, bout);\n\n    return bout;\n  };\n\n  // slow version for generic arrays\n  publicAPI.indexToWorld = (ain, aout) => {\n    const vin = vec3.fromValues(ain[0], ain[1], ain[2]);\n    const vout = vec3.create();\n    vec3.transformMat4(vout, vin, model.indexToWorld);\n    vec3.copy(aout, vout);\n  };\n\n  // this is the fast version, requires vec3 arguments\n  publicAPI.worldToIndexVec3 = (vin, vout) => {\n    vec3.transformMat4(vout, vin, model.worldToIndex);\n  };\n\n  publicAPI.worldToIndexBounds = (bin, bout = []) => {\n    const in1 = [0, 0, 0];\n    const in2 = [0, 0, 0];\n    vtkBoundingBox.computeCornerPoints(in1, in2, bin);\n\n    const out1 = [0, 0, 0];\n    const out2 = [0, 0, 0];\n    vec3.transformMat4(out1, in1, model.worldToIndex);\n    vec3.transformMat4(out2, in2, model.worldToIndex);\n\n    vtkMath.computeBoundsFromPoints(out1, out2, bout);\n\n    return bout;\n  };\n\n  // slow version for generic arrays\n  publicAPI.worldToIndex = (ain, aout) => {\n    const vin = vec3.fromValues(ain[0], ain[1], ain[2]);\n    const vout = vec3.create();\n    vec3.transformMat4(vout, vin, model.worldToIndex);\n    vec3.copy(aout, vout);\n  };\n\n  // Make sure the transform is correct\n  publicAPI.onModified(publicAPI.computeTransforms);\n  publicAPI.computeTransforms();\n\n  publicAPI.getCenter = () => {\n    const bounds = publicAPI.getBounds();\n    const center = [];\n\n    for (let i = 0; i < 3; i++) {\n      center[i] = (bounds[2 * i + 1] + bounds[2 * i]) / 2;\n    }\n\n    return center;\n  };\n\n  publicAPI.computeHistogram = (worldBounds, voxelFunc = null) => {\n    const bounds = [0, 0, 0, 0, 0, 0];\n    publicAPI.worldToIndexBounds(worldBounds, bounds);\n\n    const point1 = [0, 0, 0];\n    const point2 = [0, 0, 0];\n    vtkBoundingBox.computeCornerPoints(point1, point2, bounds);\n\n    vtkMath.roundVector(point1, point1);\n    vtkMath.roundVector(point2, point2);\n\n    const dimensions = publicAPI.getDimensions();\n\n    vtkMath.clampVector(\n      point1,\n      [0, 0, 0],\n      [dimensions[0] - 1, dimensions[1] - 1, dimensions[2] - 1],\n      point1\n    );\n    vtkMath.clampVector(\n      point2,\n      [0, 0, 0],\n      [dimensions[0] - 1, dimensions[1] - 1, dimensions[2] - 1],\n      point2\n    );\n\n    const yStride = dimensions[0];\n    const zStride = dimensions[0] * dimensions[1];\n\n    const pixels = publicAPI\n      .getPointData()\n      .getScalars()\n      .getData();\n\n    let maximum = -Infinity;\n    let minimum = Infinity;\n    let sumOfSquares = 0;\n    let isum = 0;\n    let inum = 0;\n\n    for (let z = point1[2]; z <= point2[2]; z++) {\n      for (let y = point1[1]; y <= point2[1]; y++) {\n        let index = point1[0] + y * yStride + z * zStride;\n        for (let x = point1[0]; x <= point2[0]; x++) {\n          if (!voxelFunc || voxelFunc([x, y, z], bounds)) {\n            const pixel = pixels[index];\n\n            if (pixel > maximum) maximum = pixel;\n            if (pixel < minimum) minimum = pixel;\n            sumOfSquares += pixel * pixel;\n            isum += pixel;\n            inum += 1;\n          }\n\n          ++index;\n        }\n      }\n    }\n\n    const average = inum > 0 ? isum / inum : 0;\n    const variance = sumOfSquares - average * average;\n    const sigma = Math.sqrt(variance);\n\n    return {\n      minimum,\n      maximum,\n      average,\n      variance,\n      sigma,\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  direction: null, // a mat3\n  indexToWorld: null, // a mat4\n  worldToIndex: null, // a mat4\n  spacing: [1.0, 1.0, 1.0],\n  origin: [0.0, 0.0, 0.0],\n  extent: [0, -1, 0, -1, 0, -1],\n  dataDescription: StructuredType.EMPTY,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkDataSet.extend(publicAPI, model, initialValues);\n\n  if (!model.direction) {\n    model.direction = mat3.create();\n  } else if (Array.isArray(model.direction)) {\n    const dvals = model.direction.slice(0);\n    model.direction = mat3.create();\n    for (let i = 0; i < 9; ++i) {\n      model.direction[i] = dvals[i];\n    }\n  }\n\n  model.indexToWorld = new Float64Array(16);\n  model.worldToIndex = new Float64Array(16);\n\n  // Set/Get methods\n  macro.get(publicAPI, model, ['direction', 'indexToWorld', 'worldToIndex']);\n  macro.setGetArray(publicAPI, model, ['origin', 'spacing'], 3);\n  macro.getArray(publicAPI, model, ['extent'], 6);\n\n  // Object specific methods\n  vtkImageData(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkImageData');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import macro from 'vtk.js/Sources/macro';\nimport vtkImageData from 'vtk.js/Sources/Common/DataModel/ImageData';\nimport vtkDataArray from 'vtk.js/Sources/Common/Core/DataArray';\n\nconst { vtkErrorMacro } = macro;\n\n// see itk.js/PixelTypes.js\nconst ITKPixelTypes = {\n  Unknown: 0,\n  Scalar: 1,\n  RGB: 2,\n  RGBA: 3,\n  Offset: 4,\n  Vector: 5,\n  Point: 6,\n  CovariantVector: 7,\n  SymmetricSecondRankTensor: 8,\n  DiffusionTensor3D: 9,\n  Complex: 10,\n  FixedArray: 11,\n  Array: 12,\n  Matrix: 13,\n  VariableLengthVector: 14,\n  VariableSizeMatrix: 15,\n};\n\n/**\n * Converts an itk.js image to a vtk.js image.\n *\n * Requires an itk.js image as input.\n */\nfunction convertItkToVtkImage(itkImage, options = {}) {\n  const vtkImage = {\n    origin: [0, 0, 0],\n    spacing: [1, 1, 1],\n  };\n\n  const dimensions = [1, 1, 1];\n  const direction = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n  for (let idx = 0; idx < itkImage.imageType.dimension; ++idx) {\n    vtkImage.origin[idx] = itkImage.origin[idx];\n    vtkImage.spacing[idx] = itkImage.spacing[idx];\n    dimensions[idx] = itkImage.size[idx];\n    for (let col = 0; col < itkImage.imageType.dimension; ++col) {\n      // ITK (and VTKMath) use a row-major index axis, but the direction\n      // matrix on the vtkImageData is a webGL matrix, which uses a\n      // column-major data layout. Transpose the direction matrix from\n      // itkImage when instantiating that vtkImageData direction matrix.\n      direction[col + idx * 3] =\n        itkImage.direction.data[idx + col * itkImage.imageType.dimension];\n    }\n  }\n\n  // Create VTK Image Data\n  const imageData = vtkImageData.newInstance(vtkImage);\n\n  // Create VTK point data -- the data associated with the pixels / voxels\n  const pointData = vtkDataArray.newInstance({\n    name: options.scalarArrayName || 'Scalars',\n    values: itkImage.data,\n    numberOfComponents: itkImage.imageType.components,\n  });\n\n  imageData.setDirection(direction);\n  imageData.setDimensions(...dimensions);\n  // Always associate multi-component pixel types with vtk.js point data\n  // scalars to facilitate multi-component volume rendering\n  imageData.getPointData().setScalars(pointData);\n\n  // Associate the point data that are 3D vectors / tensors\n  // Refer to itk-js/src/PixelTypes.js for numerical values\n  switch (itkImage.imageType.pixelType) {\n    case ITKPixelTypes.Scalar:\n      break;\n    case ITKPixelTypes.RGB:\n      break;\n    case ITKPixelTypes.RGBA:\n      break;\n    case ITKPixelTypes.Offset:\n      break;\n    case ITKPixelTypes.Vector:\n      if (\n        itkImage.imageType.dimension === 3 &&\n        itkImage.imageType.components === 3\n      ) {\n        imageData.getPointData().setVectors(pointData);\n      }\n      break;\n    case ITKPixelTypes.Point:\n      break;\n    case ITKPixelTypes.CovariantVector:\n      if (\n        itkImage.imageType.dimension === 3 &&\n        itkImage.imageType.components === 3\n      ) {\n        imageData.getPointData().setVectors(pointData);\n      }\n      break;\n    case ITKPixelTypes.SymmetricSecondRankTensor:\n      if (\n        itkImage.imageType.dimension === 3 &&\n        itkImage.imageType.components === 6\n      ) {\n        imageData.getPointData().setTensors(pointData);\n      }\n      break;\n    case ITKPixelTypes.DiffusionTensor3D:\n      if (\n        itkImage.imageType.dimension === 3 &&\n        itkImage.imageType.components === 6\n      ) {\n        imageData.getPointData().setTensors(pointData);\n      }\n      break;\n    case ITKPixelTypes.Complex:\n      break;\n    case ITKPixelTypes.FixedArray:\n      break;\n    case ITKPixelTypes.Array:\n      break;\n    case ITKPixelTypes.Matrix:\n      break;\n    case ITKPixelTypes.VariableLengthVector:\n      break;\n    case ITKPixelTypes.VariableSizeMatrix:\n      break;\n    default:\n      vtkErrorMacro(\n        `Cannot handle unexpected ITK.js pixel type ${\n          itkImage.imageType.pixelType\n        }`\n      );\n      return null;\n  }\n\n  return imageData;\n}\n\nconst vtkArrayTypeToItkComponentType = new Map([\n  ['Uint8Array', 'uint8_t'],\n  ['Int8Array', 'int8_t'],\n  ['Uint16Array', 'uint16_t'],\n  ['Int16Array', 'int16_t'],\n  ['Uint32Array', 'uint32_t'],\n  ['Int32Array', 'int32_t'],\n  ['Float32Array', 'float'],\n  ['Float64Array', 'double'],\n]);\n\n/**\n * Converts a vtk.js image to an itk.js image.\n *\n * Requires a vtk.js image as input.\n */\nfunction convertVtkToItkImage(vtkImage, copyData = false) {\n  const itkImage = {\n    imageType: {\n      dimension: 3,\n      pixelType: ITKPixelTypes.Scalar,\n      componentType: '',\n      components: 1,\n    },\n    name: 'name',\n    origin: vtkImage.getOrigin(),\n    spacing: vtkImage.getSpacing(),\n    direction: {\n      data: [1, 0, 0, 0, 1, 0, 0, 0, 1],\n    },\n    size: vtkImage.getDimensions(),\n  };\n\n  const direction = vtkImage.getDirection();\n\n  const dimension = itkImage.size.length;\n  itkImage.imageType.dimension = dimension;\n  itkImage.direction.rows = dimension;\n  itkImage.direction.columns = dimension;\n\n  // Transpose the direction matrix from column-major to row-major\n  for (let idx = 0; idx < dimension; ++idx) {\n    for (let idy = 0; idy < dimension; ++idy) {\n      itkImage.direction.data[idx + idy * dimension] =\n        direction[idy + idx * dimension];\n    }\n  }\n\n  const pointData = vtkImage.getPointData();\n\n  let vtkArray;\n  if (pointData.getTensors() !== null) {\n    itkImage.imageType.pixelType = ITKPixelTypes.DiffusionTensor3D;\n    vtkArray = pointData.getTensors();\n  } else if (pointData.getVectors() != null) {\n    itkImage.imageType.pixelType = ITKPixelTypes.Vector;\n    vtkArray = pointData.getVectors();\n  } else {\n    vtkArray = pointData.getScalars();\n  }\n\n  itkImage.imageType.componentType = vtkArrayTypeToItkComponentType.get(\n    vtkArray.getDataType()\n  );\n\n  if (copyData) {\n    // Copy the data array\n    itkImage.data = vtkArray.getData().slice(0);\n  } else {\n    itkImage.data = vtkArray.getData();\n  }\n\n  return itkImage;\n}\n\nexport default {\n  convertItkToVtkImage,\n  convertVtkToItkImage,\n};\n","export const Wrap = {\n  CLAMP_TO_EDGE: 0,\n  REPEAT: 1,\n  MIRRORED_REPEAT: 2,\n};\n\nexport const Filter = {\n  NEAREST: 0,\n  LINEAR: 1,\n  NEAREST_MIPMAP_NEAREST: 2,\n  NEAREST_MIPMAP_LINEAR: 3,\n  LINEAR_MIPMAP_NEAREST: 4,\n  LINEAR_MIPMAP_LINEAR: 5,\n};\n\nexport default {\n  Wrap,\n  Filter,\n};\n","import macro from 'vtk.js/Sources/macro';\n\nconst { vtkErrorMacro } = macro;\n\nconst PASS_TYPES = ['Build', 'Render'];\n\n// ----------------------------------------------------------------------------\n// vtkViewNode methods\n// ----------------------------------------------------------------------------\n\nfunction vtkViewNode(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkViewNode');\n\n  // Builds myself.\n  publicAPI.build = (prepass) => {};\n\n  // Renders myself\n  publicAPI.render = (prepass) => {};\n\n  publicAPI.traverse = (renderPass) => {\n    // we can choose to do special\n    // traversal here based on pass\n    const passTraversal = renderPass.getTraverseOperation();\n    const fn = publicAPI[passTraversal];\n    if (fn) {\n      fn(renderPass);\n      return;\n    }\n\n    // default traversal\n    publicAPI.apply(renderPass, true);\n\n    for (let index = 0; index < model.children.length; index++) {\n      model.children[index].traverse(renderPass);\n    }\n\n    publicAPI.apply(renderPass, false);\n  };\n\n  publicAPI.apply = (renderPass, prepass) => {\n    const customRenderPass = publicAPI[renderPass.getOperation()];\n    if (customRenderPass) {\n      customRenderPass(prepass, renderPass);\n    }\n  };\n\n  publicAPI.getViewNodeFor = (dataObject) => {\n    if (model.renderable === dataObject) {\n      return publicAPI;\n    }\n\n    for (let index = 0; index < model.children.length; ++index) {\n      const child = model.children[index];\n      const vn = child.getViewNodeFor(dataObject);\n      if (vn) {\n        return vn;\n      }\n    }\n    return undefined;\n  };\n\n  publicAPI.getFirstAncestorOfType = (type) => {\n    if (!model.parent) {\n      return null;\n    }\n    if (model.parent.isA(type)) {\n      return model.parent;\n    }\n    return model.parent.getFirstAncestorOfType(type);\n  };\n\n  publicAPI.addMissingNode = (dobj) => {\n    if (!dobj) {\n      return;\n    }\n    const result = model.renderableChildMap.get(dobj);\n    // if found just mark as visited\n    if (result !== undefined) {\n      result.setVisited(true);\n    } else {\n      // otherwise create a node\n      const newNode = publicAPI.createViewNode(dobj);\n      if (newNode) {\n        newNode.setParent(publicAPI);\n        newNode.setVisited(true);\n        model.renderableChildMap.set(dobj, newNode);\n        model.children.push(newNode);\n      }\n    }\n  };\n\n  publicAPI.addMissingNodes = (dataObjs) => {\n    if (!dataObjs || !dataObjs.length) {\n      return;\n    }\n\n    for (let index = 0; index < dataObjs.length; ++index) {\n      const dobj = dataObjs[index];\n      const result = model.renderableChildMap.get(dobj);\n      // if found just mark as visited\n      if (result !== undefined) {\n        result.setVisited(true);\n      } else {\n        // otherwise create a node\n        const newNode = publicAPI.createViewNode(dobj);\n        if (newNode) {\n          newNode.setParent(publicAPI);\n          newNode.setVisited(true);\n          model.renderableChildMap.set(dobj, newNode);\n          model.children.push(newNode);\n        }\n      }\n    }\n  };\n\n  publicAPI.prepareNodes = () => {\n    for (let index = 0; index < model.children.length; ++index) {\n      model.children[index].setVisited(false);\n    }\n  };\n\n  publicAPI.setVisited = (val) => {\n    model.visited = val;\n  };\n\n  publicAPI.removeUnusedNodes = () => {\n    let deleted = null;\n    for (let index = 0; index < model.children.length; ++index) {\n      const child = model.children[index];\n      const visited = child.getVisited();\n      if (!visited) {\n        const renderable = child.getRenderable();\n        if (renderable) {\n          model.renderableChildMap.delete(renderable);\n        }\n        if (!deleted) {\n          deleted = [];\n        }\n        deleted.push(child);\n      } else {\n        child.setVisited(false);\n      }\n    }\n\n    if (deleted) {\n      // slow does alloc but not as common\n      model.children = model.children.filter((el) => !deleted.includes(el));\n    }\n  };\n\n  publicAPI.createViewNode = (dataObj) => {\n    if (!model.myFactory) {\n      vtkErrorMacro('Cannot create view nodes without my own factory');\n      return null;\n    }\n    const ret = model.myFactory.createNode(dataObj);\n    if (ret) {\n      ret.setRenderable(dataObj);\n    }\n    return ret;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  parent: null,\n  renderable: null,\n  myFactory: null,\n  children: [],\n  visited: false,\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.event(publicAPI, model, 'event');\n\n  model.renderableChildMap = new Map();\n\n  macro.get(publicAPI, model, ['visited']);\n  macro.setGet(publicAPI, model, ['parent', 'renderable', 'myFactory']);\n  macro.getArray(publicAPI, model, ['children']);\n\n  // Object methods\n  vtkViewNode(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkViewNode');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend, PASS_TYPES };\n","import Constants from 'vtk.js/Sources/Rendering/OpenGL/Texture/Constants';\nimport macro from 'vtk.js/Sources/macro';\nimport vtkDataArray from 'vtk.js/Sources/Common/Core/DataArray';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport vtkViewNode from 'vtk.js/Sources/Rendering/SceneGraph/ViewNode';\n\nconst { Wrap, Filter } = Constants;\nconst { VtkDataTypes } = vtkDataArray;\nconst { vtkDebugMacro, vtkErrorMacro, vtkWarningMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLTexture methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLTexture(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLTexture');\n  // Renders myself\n  publicAPI.render = (renWin = null) => {\n    if (renWin) {\n      model.openGLRenderWindow = renWin;\n    } else {\n      model.openGLRenderer = publicAPI.getFirstAncestorOfType(\n        'vtkOpenGLRenderer'\n      );\n      // sync renderable properties\n      model.openGLRenderWindow = model.openGLRenderer.getParent();\n    }\n    model.context = model.openGLRenderWindow.getContext();\n    if (model.renderable.getInterpolate()) {\n      if (model.generateMipmap) {\n        publicAPI.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);\n      } else {\n        publicAPI.setMinificationFilter(Filter.LINEAR);\n      }\n      publicAPI.setMagnificationFilter(Filter.LINEAR);\n    } else {\n      publicAPI.setMinificationFilter(Filter.NEAREST);\n      publicAPI.setMagnificationFilter(Filter.NEAREST);\n    }\n    if (model.renderable.getRepeat()) {\n      publicAPI.setWrapR(Wrap.REPEAT);\n      publicAPI.setWrapS(Wrap.REPEAT);\n      publicAPI.setWrapT(Wrap.REPEAT);\n    }\n    // clear image if input data is set\n    if (model.renderable.getInputData()) {\n      model.renderable.setImage(null);\n    }\n    // create the texture if it is not done already\n    if (\n      !model.handle ||\n      model.renderable.getMTime() > model.textureBuildTime.getMTime()\n    ) {\n      // if we have an Image\n      if (model.renderable.getImage() !== null) {\n        if (model.renderable.getInterpolate()) {\n          model.generateMipmap = true;\n          publicAPI.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);\n        }\n        // Have an Image which may not be complete\n        if (model.renderable.getImage() && model.renderable.getImageLoaded()) {\n          publicAPI.create2DFromImage(model.renderable.getImage());\n          publicAPI.activate();\n          publicAPI.sendParameters();\n          model.textureBuildTime.modified();\n        }\n      }\n      // if we have Inputdata\n      const input = model.renderable.getInputData(0);\n      if (input && input.getPointData().getScalars()) {\n        const ext = input.getExtent();\n        const inScalars = input.getPointData().getScalars();\n\n        // do we have a cube map? Six inputs\n        const data = [];\n        for (let i = 0; i < model.renderable.getNumberOfInputPorts(); ++i) {\n          const indata = model.renderable.getInputData(i);\n          const scalars = indata\n            ? indata\n                .getPointData()\n                .getScalars()\n                .getData()\n            : null;\n          if (scalars) {\n            data.push(scalars);\n          }\n        }\n        if (\n          model.renderable.getInterpolate() &&\n          inScalars.getNumberOfComponents() === 4\n        ) {\n          model.generateMipmap = true;\n          publicAPI.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);\n        }\n        if (data.length % 6 === 0) {\n          publicAPI.createCubeFromRaw(\n            ext[1] - ext[0] + 1,\n            ext[3] - ext[2] + 1,\n            inScalars.getNumberOfComponents(),\n            inScalars.getDataType(),\n            data\n          );\n        } else {\n          publicAPI.create2DFromRaw(\n            ext[1] - ext[0] + 1,\n            ext[3] - ext[2] + 1,\n            inScalars.getNumberOfComponents(),\n            inScalars.getDataType(),\n            inScalars.getData()\n          );\n        }\n        publicAPI.activate();\n        publicAPI.sendParameters();\n        model.textureBuildTime.modified();\n      }\n    }\n    if (model.handle) {\n      publicAPI.activate();\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.destroyTexture = () => {\n    // deactivate it first\n    publicAPI.deactivate();\n\n    if (model.context && model.handle) {\n      model.context.deleteTexture(model.handle);\n    }\n    model.handle = 0;\n    model.numberOfDimensions = 0;\n    model.target = 0;\n    model.components = 0;\n    model.width = 0;\n    model.height = 0;\n    model.depth = 0;\n    publicAPI.resetFormatAndType();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.createTexture = () => {\n    // reuse the existing handle if we have one\n    if (!model.handle) {\n      model.handle = model.context.createTexture();\n\n      if (model.target) {\n        model.context.bindTexture(model.target, model.handle);\n\n        // See: http://www.openmodel.context..org/wiki/Common_Mistakes#Creating_a_complete_texture\n        // turn off mip map filter or set the base and max level correctly. here\n        // both are done.\n        model.context.texParameteri(\n          model.target,\n          model.context.TEXTURE_MIN_FILTER,\n          publicAPI.getOpenGLFilterMode(model.minificationFilter)\n        );\n        model.context.texParameteri(\n          model.target,\n          model.context.TEXTURE_MAG_FILTER,\n          publicAPI.getOpenGLFilterMode(model.magnificationFilter)\n        );\n\n        model.context.texParameteri(\n          model.target,\n          model.context.TEXTURE_WRAP_S,\n          publicAPI.getOpenGLWrapMode(model.wrapS)\n        );\n        model.context.texParameteri(\n          model.target,\n          model.context.TEXTURE_WRAP_T,\n          publicAPI.getOpenGLWrapMode(model.wrapT)\n        );\n        if (model.openGLRenderWindow.getWebgl2()) {\n          model.context.texParameteri(\n            model.target,\n            model.context.TEXTURE_WRAP_R,\n            publicAPI.getOpenGLWrapMode(model.wrapR)\n          );\n        }\n\n        model.context.bindTexture(model.target, null);\n      }\n    }\n  };\n\n  //---------------------------------------------------------------------------\n  publicAPI.getTextureUnit = () => {\n    if (model.openGLRenderWindow) {\n      return model.openGLRenderWindow.getTextureUnitForTexture(publicAPI);\n    }\n    return -1;\n  };\n\n  //---------------------------------------------------------------------------\n  publicAPI.activate = () => {\n    // activate a free texture unit for this texture\n    model.openGLRenderWindow.activateTexture(publicAPI);\n    publicAPI.bind();\n  };\n\n  //---------------------------------------------------------------------------\n  publicAPI.deactivate = () => {\n    if (model.openGLRenderWindow) {\n      model.openGLRenderWindow.deactivateTexture(publicAPI);\n    }\n  };\n\n  //---------------------------------------------------------------------------\n  publicAPI.releaseGraphicsResources = (rwin) => {\n    if (rwin && model.handle) {\n      rwin.activateTexture(publicAPI);\n      rwin.deactivateTexture(publicAPI);\n      model.context.deleteTexture(model.handle);\n      model.handle = 0;\n      model.numberOfDimensions = 0;\n      model.target = 0;\n      model.internalFormat = 0;\n      model.format = 0;\n      model.openGLDataType = 0;\n      model.components = 0;\n      model.width = 0;\n      model.height = 0;\n      model.depth = 0;\n    }\n    if (model.shaderProgram) {\n      model.shaderProgram.releaseGraphicsResources(rwin);\n      model.shaderProgram = null;\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.bind = () => {\n    model.context.bindTexture(model.target, model.handle);\n    if (\n      model.autoParameters &&\n      publicAPI.getMTime() > model.sendParametersTime.getMTime()\n    ) {\n      publicAPI.sendParameters();\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.isBound = () => {\n    let result = false;\n    if (model.context && model.handle) {\n      let target = 0;\n      switch (model.target) {\n        case model.context.TEXTURE_2D:\n          target = model.context.TEXTURE_BINDING_2D;\n          break;\n        default:\n          vtkWarningMacro('impossible case');\n          break;\n      }\n      const oid = model.context.getIntegerv(target);\n      result = oid === model.handle;\n    }\n    return result;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.sendParameters = () => {\n    model.context.texParameteri(\n      model.target,\n      model.context.TEXTURE_WRAP_S,\n      publicAPI.getOpenGLWrapMode(model.wrapS)\n    );\n    model.context.texParameteri(\n      model.target,\n      model.context.TEXTURE_WRAP_T,\n      publicAPI.getOpenGLWrapMode(model.wrapT)\n    );\n    if (model.openGLRenderWindow.getWebgl2()) {\n      model.context.texParameteri(\n        model.target,\n        model.context.TEXTURE_WRAP_R,\n        publicAPI.getOpenGLWrapMode(model.wrapR)\n      );\n    }\n\n    model.context.texParameteri(\n      model.target,\n      model.context.TEXTURE_MIN_FILTER,\n      publicAPI.getOpenGLFilterMode(model.minificationFilter)\n    );\n\n    model.context.texParameteri(\n      model.target,\n      model.context.TEXTURE_MAG_FILTER,\n      publicAPI.getOpenGLFilterMode(model.magnificationFilter)\n    );\n\n    if (model.openGLRenderWindow.getWebgl2()) {\n      model.context.texParameteri(\n        model.target,\n        model.context.TEXTURE_BASE_LEVEL,\n        model.baseLevel\n      );\n\n      model.context.texParameteri(\n        model.target,\n        model.context.TEXTURE_MAX_LEVEL,\n        model.maxLevel\n      );\n    }\n\n    // model.context.texParameterf(model.target, model.context.TEXTURE_MIN_LOD, model.minLOD);\n    // model.context.texParameterf(model.target, model.context.TEXTURE_MAX_LOD, model.maxLOD);\n\n    model.sendParametersTime.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getInternalFormat = (vtktype, numComps) => {\n    if (model.internalFormat) {\n      return model.internalFormat;\n    }\n\n    model.internalFormat = publicAPI.getDefaultInternalFormat(\n      vtktype,\n      numComps\n    );\n\n    if (!model.internalFormat) {\n      vtkDebugMacro(\n        `Unable to find suitable internal format for T=${vtktype} NC= ${numComps}`\n      );\n    }\n\n    return model.internalFormat;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getDefaultInternalFormat = (vtktype, numComps) => {\n    let result = 0;\n\n    // try default next\n    result = model.openGLRenderWindow.getDefaultTextureInternalFormat(\n      vtktype,\n      numComps,\n      false\n    );\n    if (result) {\n      return result;\n    }\n\n    // try floating point\n    result = this.openGLRenderWindow.getDefaultTextureInternalFormat(\n      vtktype,\n      numComps,\n      true\n    );\n\n    if (!result) {\n      vtkDebugMacro('Unsupported internal texture type!');\n      vtkDebugMacro(\n        `Unable to find suitable internal format for T=${vtktype} NC= ${numComps}`\n      );\n    }\n\n    return result;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.setInternalFormat = (iFormat) => {\n    if (iFormat !== model.context.InternalFormat) {\n      model.internalFormat = iFormat;\n      publicAPI.modified();\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getFormat = (vtktype, numComps) => {\n    if (!model.format) {\n      model.format = publicAPI.getDefaultFormat(vtktype, numComps);\n    }\n    return model.format;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getDefaultFormat = (vtktype, numComps) => {\n    if (model.openGLRenderWindow.getWebgl2()) {\n      switch (numComps) {\n        case 1:\n          return model.context.RED;\n        case 2:\n          return model.context.RG;\n        case 3:\n          return model.context.RGB;\n        case 4:\n          return model.context.RGBA;\n        default:\n          return model.context.RGB;\n      }\n    } else {\n      // webgl1\n      switch (numComps) {\n        case 1:\n          return model.context.LUMINANCE;\n        case 2:\n          return model.context.LUMINANCE_ALPHA;\n        case 3:\n          return model.context.RGB;\n        case 4:\n          return model.context.RGBA;\n        default:\n          return model.context.RGB;\n      }\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.resetFormatAndType = () => {\n    model.format = 0;\n    model.internalFormat = 0;\n    model.openGLDataType = 0;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getDefaultDataType = (vtkScalarType) => {\n    // DON'T DEAL with VTK_CHAR as this is platform dependent.\n    if (model.openGLRenderWindow.getWebgl2()) {\n      switch (vtkScalarType) {\n        // case VtkDataTypes.SIGNED_CHAR:\n        //   return model.context.BYTE;\n        case VtkDataTypes.UNSIGNED_CHAR:\n          return model.context.UNSIGNED_BYTE;\n        // case VtkDataTypes.SHORT:\n        //   return model.context.SHORT;\n        // case VtkDataTypes.UNSIGNED_SHORT:\n        //   return model.context.UNSIGNED_SHORT;\n        // case VtkDataTypes.INT:\n        //   return model.context.INT;\n        // case VtkDataTypes.UNSIGNED_INT:\n        //   return model.context.UNSIGNED_INT;\n        case VtkDataTypes.FLOAT:\n        case VtkDataTypes.VOID: // used for depth component textures.\n        default:\n          return model.context.FLOAT;\n      }\n    }\n\n    switch (vtkScalarType) {\n      // case VtkDataTypes.SIGNED_CHAR:\n      //   return model.context.BYTE;\n      case VtkDataTypes.UNSIGNED_CHAR:\n        return model.context.UNSIGNED_BYTE;\n      // case VtkDataTypes.SHORT:\n      //   return model.context.SHORT;\n      // case VtkDataTypes.UNSIGNED_SHORT:\n      //   return model.context.UNSIGNED_SHORT;\n      // case VtkDataTypes.INT:\n      //   return model.context.INT;\n      // case VtkDataTypes.UNSIGNED_INT:\n      //   return model.context.UNSIGNED_INT;\n      case VtkDataTypes.FLOAT:\n      case VtkDataTypes.VOID: // used for depth component textures.\n      default:\n        if (\n          model.context.getExtension('OES_texture_float') &&\n          model.context.getExtension('OES_texture_float_linear')\n        ) {\n          return model.context.FLOAT;\n        }\n        return model.context.UNSIGNED_BYTE;\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getOpenGLDataType = (vtkScalarType) => {\n    if (!model.openGLDataType) {\n      model.openGLDataType = publicAPI.getDefaultDataType(vtkScalarType);\n    }\n\n    return model.openGLDataType;\n  };\n\n  publicAPI.getShiftAndScale = () => {\n    let shift = 0.0;\n    let scale = 1.0;\n\n    // for all float type internal formats\n    switch (model.openGLDataType) {\n      case model.context.BYTE:\n        scale = 127.5;\n        shift = scale - 128.0;\n        break;\n      case model.context.UNSIGNED_BYTE:\n        scale = 255.0;\n        shift = 0.0;\n        break;\n      case model.context.SHORT:\n        scale = 32767.5;\n        shift = scale - 32768.0;\n        break;\n      case model.context.UNSIGNED_SHORT:\n        scale = 65536.0;\n        shift = 0.0;\n        break;\n      case model.context.INT:\n        scale = 2147483647.5;\n        shift = scale - 2147483648.0;\n        break;\n      case model.context.UNSIGNED_INT:\n        scale = 4294967295.0;\n        shift = 0.0;\n        break;\n      case model.context.FLOAT:\n      default:\n        break;\n    }\n    return { shift, scale };\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getOpenGLFilterMode = (emode) => {\n    switch (emode) {\n      case Filter.NEAREST:\n        return model.context.NEAREST;\n      case Filter.LINEAR:\n        return model.context.LINEAR;\n      case Filter.NEAREST_MIPMAP_NEAREST:\n        return model.context.NEAREST_MIPMAP_NEAREST;\n      case Filter.NEAREST_MIPMAP_LINEAR:\n        return model.context.NEAREST_MIPMAP_LINEAR;\n      case Filter.LINEAR_MIPMAP_NEAREST:\n        return model.context.LINEAR_MIPMAP_NEAREST;\n      case Filter.LINEAR_MIPMAP_LINEAR:\n        return model.context.LINEAR_MIPMAP_LINEAR;\n      default:\n        return model.context.NEAREST;\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getOpenGLWrapMode = (vtktype) => {\n    switch (vtktype) {\n      case Wrap.CLAMP_TO_EDGE:\n        return model.context.CLAMP_TO_EDGE;\n      case Wrap.REPEAT:\n        return model.context.REPEAT;\n      case Wrap.MIRRORED_REPEAT:\n        return model.context.MIRRORED_REPEAT;\n      default:\n        return model.context.CLAMP_TO_EDGE;\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  function updateArrayDataType(dataType, data) {\n    const pixData = [];\n    // if the opengl data type is float\n    // then the data array must be float\n    if (\n      dataType !== VtkDataTypes.FLOAT &&\n      model.openGLDataType === model.context.FLOAT\n    ) {\n      const pixCount = model.width * model.height * model.components;\n      for (let idx = 0; idx < data.length; idx++) {\n        const newArray = new Float32Array(pixCount);\n        for (let i = 0; i < pixCount; i++) {\n          newArray[i] = data[idx][i];\n        }\n        pixData.push(newArray);\n      }\n    }\n\n    // if the opengl data type is ubyte\n    // then the data array must be u8, we currently simply truncate the data\n    if (\n      dataType !== VtkDataTypes.UNSIGNED_CHAR &&\n      model.openGLDataType === model.context.UNSIGNED_BYTE\n    ) {\n      const pixCount = model.width * model.height * model.components;\n      for (let idx = 0; idx < data.length; idx++) {\n        const newArray = new Uint8Array(pixCount);\n        for (let i = 0; i < pixCount; i++) {\n          newArray[i] = data[idx][i];\n        }\n        pixData.push(newArray);\n      }\n    }\n\n    // The output has to be filled\n    if (pixData.length === 0) {\n      for (let i = 0; i < data.length; i++) {\n        pixData.push(data[i]);\n      }\n    }\n\n    return pixData;\n  }\n\n  //----------------------------------------------------------------------------\n  function scaleTextureToHighestPowerOfTwo(data) {\n    if (model.openGLRenderWindow.getWebgl2()) {\n      // No need if webGL2\n      return data;\n    }\n    const pixData = [];\n    const width = model.width;\n    const height = model.height;\n    const numComps = model.components;\n    if (\n      data &&\n      (!vtkMath.isPowerOfTwo(width) || !vtkMath.isPowerOfTwo(height))\n    ) {\n      // Scale up the texture to the next highest power of two dimensions.\n      const newWidth = vtkMath.nearestPowerOfTwo(width);\n      const newHeight = vtkMath.nearestPowerOfTwo(height);\n      const pixCount = newWidth * newHeight * model.components;\n      for (let idx = 0; idx < data.length; idx++) {\n        if (data[idx] !== null) {\n          let newArray = null;\n          switch (model.openGLDataType) {\n            case model.context.FLOAT:\n              newArray = new Float32Array(pixCount);\n              break;\n            default:\n            case model.context.UNSIGNED_BYTE:\n              newArray = new Uint8Array(pixCount);\n              break;\n          }\n          const jFactor = height / newHeight;\n          const iFactor = width / newWidth;\n          for (let j = 0; j < newHeight; j++) {\n            const joff = j * newWidth * numComps;\n            const jidx = j * jFactor;\n            let jlow = Math.floor(jidx);\n            let jhi = Math.ceil(jidx);\n            if (jhi >= height) {\n              jhi = height - 1;\n            }\n            const jmix = jidx - jlow;\n            const jmix1 = 1.0 - jmix;\n            jlow = jlow * width * numComps;\n            jhi = jhi * width * numComps;\n            for (let i = 0; i < newWidth; i++) {\n              const ioff = i * numComps;\n              const iidx = i * iFactor;\n              let ilow = Math.floor(iidx);\n              let ihi = Math.ceil(iidx);\n              if (ihi >= width) {\n                ihi = width - 1;\n              }\n              const imix = iidx - ilow;\n              ilow *= numComps;\n              ihi *= numComps;\n              for (let c = 0; c < numComps; c++) {\n                newArray[joff + ioff + c] =\n                  data[idx][jlow + ilow + c] * jmix1 * (1.0 - imix) +\n                  data[idx][jlow + ihi + c] * jmix1 * imix +\n                  data[idx][jhi + ilow + c] * jmix * (1.0 - imix) +\n                  data[idx][jhi + ihi + c] * jmix * imix;\n              }\n            }\n          }\n          pixData.push(newArray);\n          model.width = newWidth;\n          model.height = newHeight;\n        } else {\n          pixData.push(null);\n        }\n      }\n    }\n\n    // The output has to be filled\n    if (pixData.length === 0) {\n      for (let i = 0; i < data.length; i++) {\n        pixData.push(data[i]);\n      }\n    }\n\n    return pixData;\n  }\n\n  //----------------------------------------------------------------------------\n  publicAPI.create2DFromRaw = (width, height, numComps, dataType, data) => {\n    // Now determine the texture parameters using the arguments.\n    publicAPI.getOpenGLDataType(dataType);\n    publicAPI.getInternalFormat(dataType, numComps);\n    publicAPI.getFormat(dataType, numComps);\n\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\n      vtkErrorMacro('Failed to determine texture parameters.');\n      return false;\n    }\n\n    model.target = model.context.TEXTURE_2D;\n    model.components = numComps;\n    model.width = width;\n    model.height = height;\n    model.depth = 1;\n    model.numberOfDimensions = 2;\n    model.openGLRenderWindow.activateTexture(publicAPI);\n    publicAPI.createTexture();\n    publicAPI.bind();\n\n    // Create an array of texture with one texture\n    const dataArray = [data];\n    const pixData = updateArrayDataType(dataType, dataArray);\n    const scaledData = scaleTextureToHighestPowerOfTwo(pixData);\n\n    // Source texture data from the PBO.\n    // model.context.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);\n\n    model.context.texImage2D(\n      model.target,\n      0,\n      model.internalFormat,\n      model.width,\n      model.height,\n      0,\n      model.format,\n      model.openGLDataType,\n      scaledData[0]\n    );\n\n    if (model.generateMipmap) {\n      model.context.generateMipmap(model.target);\n    }\n\n    publicAPI.deactivate();\n    return true;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.createCubeFromRaw = (width, height, numComps, dataType, data) => {\n    // Now determine the texture parameters using the arguments.\n    publicAPI.getOpenGLDataType(dataType);\n    publicAPI.getInternalFormat(dataType, numComps);\n    publicAPI.getFormat(dataType, numComps);\n\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\n      vtkErrorMacro('Failed to determine texture parameters.');\n      return false;\n    }\n\n    model.target = model.context.TEXTURE_CUBE_MAP;\n    model.components = numComps;\n    model.width = width;\n    model.height = height;\n    model.depth = 1;\n    model.numberOfDimensions = 2;\n    model.openGLRenderWindow.activateTexture(publicAPI);\n    model.maxLevel = data.length / 6 - 1;\n    publicAPI.createTexture();\n    publicAPI.bind();\n\n    const pixData = updateArrayDataType(dataType, data);\n    const scaledData = scaleTextureToHighestPowerOfTwo(pixData);\n\n    // invert the data because opengl is messed up with cube maps\n    // and uses the old renderman standard with Y going down\n    // even though it is completely at odds with OpenGL standards\n    const invertedData = [];\n    let widthLevel = model.width;\n    let heightLevel = model.height;\n    for (let i = 0; i < scaledData.length; i++) {\n      if (i % 6 === 0 && i !== 0) {\n        widthLevel /= 2;\n        heightLevel /= 2;\n      }\n      invertedData[i] = new window[dataType](\n        heightLevel * widthLevel * model.components\n      );\n      for (let y = 0; y < heightLevel; ++y) {\n        const row1 = y * widthLevel * model.components;\n        const row2 = (heightLevel - y - 1) * widthLevel * model.components;\n        invertedData[i].set(\n          scaledData[i].slice(row2, row2 + widthLevel * model.components),\n          row1\n        );\n      }\n    }\n\n    // Source texture data from the PBO.\n    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);\n\n    // We get the 6 images\n    for (let i = 0; i < 6; i++) {\n      // For each mipmap level\n      let j = 0;\n      let w = model.width;\n      let h = model.height;\n      while (w >= 1 && h >= 1) {\n        // In webgl 1, all levels need to be defined. So if the latest level size is\n        // 8x8, we have to add 3 more null textures (4x4, 2x2, 1x1)\n        // In webgl 2, the attribtue maxLevel will be use.\n        let tempData = null;\n        if (j <= model.maxLevel) {\n          tempData = invertedData[6 * j + i];\n        }\n        model.context.texImage2D(\n          model.context.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n          j,\n          model.internalFormat,\n          w,\n          h,\n          0,\n          model.format,\n          model.openGLDataType,\n          tempData\n        );\n        j++;\n        w /= 2;\n        h /= 2;\n      }\n    }\n\n    // generateMipmap must not be called here because we manually upload all levels\n    // if it is called, all levels will be overwritten\n\n    publicAPI.deactivate();\n    return true;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.createDepthFromRaw = (width, height, dataType, data) => {\n    // Now determine the texture parameters using the arguments.\n    publicAPI.getOpenGLDataType(dataType);\n    model.format = model.context.DEPTH_COMPONENT;\n    model.internalFormat = model.context.DEPTH_COMPONENT;\n\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\n      vtkErrorMacro('Failed to determine texture parameters.');\n      return false;\n    }\n\n    model.target = model.context.TEXTURE_2D;\n    model.components = 1;\n    model.width = width;\n    model.height = height;\n    model.depth = 1;\n    model.numberOfDimensions = 2;\n    model.openGLRenderWindow.activateTexture(publicAPI);\n    publicAPI.createTexture();\n    publicAPI.bind();\n\n    // Source texture data from the PBO.\n    // model.context.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);\n\n    model.context.texImage2D(\n      model.target,\n      0,\n      model.internalFormat,\n      model.width,\n      model.height,\n      0,\n      model.format,\n      model.openGLDataType,\n      data\n    );\n\n    if (model.generateMipmap) {\n      model.context.generateMipmap(model.target);\n    }\n\n    publicAPI.deactivate();\n    return true;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.create2DFromImage = (image) => {\n    // Now determine the texture parameters using the arguments.\n    publicAPI.getOpenGLDataType(VtkDataTypes.UNSIGNED_CHAR);\n    publicAPI.getInternalFormat(VtkDataTypes.UNSIGNED_CHAR, 4);\n    publicAPI.getFormat(VtkDataTypes.UNSIGNED_CHAR, 4);\n\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\n      vtkErrorMacro('Failed to determine texture parameters.');\n      return false;\n    }\n\n    model.target = model.context.TEXTURE_2D;\n    model.components = 4;\n    model.width = image.width;\n    model.height = image.height;\n    model.depth = 1;\n    model.numberOfDimensions = 2;\n    model.openGLRenderWindow.activateTexture(publicAPI);\n    publicAPI.createTexture();\n    publicAPI.bind();\n\n    // Source texture data from the PBO.\n    // model.context.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);\n\n    // Scale up the texture to the next highest power of two dimensions (if needed) and flip y.\n    const needNearestPowerOfTwo =\n      !vtkMath.isPowerOfTwo(image.width) || !vtkMath.isPowerOfTwo(image.height);\n    const canvas = document.createElement('canvas');\n    canvas.width = needNearestPowerOfTwo\n      ? vtkMath.nearestPowerOfTwo(image.width)\n      : image.width;\n    canvas.height = needNearestPowerOfTwo\n      ? vtkMath.nearestPowerOfTwo(image.height)\n      : image.height;\n    const ctx = canvas.getContext('2d');\n    ctx.translate(0, canvas.height);\n    ctx.scale(1, -1);\n    ctx.drawImage(\n      image,\n      0,\n      0,\n      image.width,\n      image.height,\n      0,\n      0,\n      canvas.width,\n      canvas.height\n    );\n    // In Chrome 69 on Windows and Ubuntu, there is a bug that prevents some\n    // canvases from working properly with webGL textures.  By getting any\n    // image data from the canvas, this works around the bug.  See\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=896307\n    if (navigator.userAgent.indexOf('Chrome/69') >= 0) {\n      ctx.getImageData(0, 0, 1, 1);\n    }\n    const safeImage = canvas;\n\n    model.context.texImage2D(\n      model.target,\n      0,\n      model.internalFormat,\n      model.format,\n      model.openGLDataType,\n      safeImage\n    );\n\n    if (model.generateMipmap) {\n      model.context.generateMipmap(model.target);\n    }\n\n    publicAPI.deactivate();\n    return true;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.create3DFromRaw = (\n    width,\n    height,\n    depth,\n    numComps,\n    dataType,\n    data\n  ) => {\n    // Now determine the texture parameters using the arguments.\n    publicAPI.getOpenGLDataType(dataType);\n    publicAPI.getInternalFormat(dataType, numComps);\n    publicAPI.getFormat(dataType, numComps);\n\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\n      vtkErrorMacro('Failed to determine texture parameters.');\n      return false;\n    }\n\n    model.target = model.context.TEXTURE_3D;\n    model.components = numComps;\n    model.width = width;\n    model.height = height;\n    model.depth = depth;\n    model.numberOfDimensions = 3;\n    model.openGLRenderWindow.activateTexture(publicAPI);\n    publicAPI.createTexture();\n    publicAPI.bind();\n\n    // Source texture data from the PBO.\n    // model.context.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    // model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);\n\n    model.context.texImage3D(\n      model.target,\n      0,\n      model.internalFormat,\n      model.width,\n      model.height,\n      model.depth,\n      0,\n      model.format,\n      model.openGLDataType,\n      data\n    );\n\n    if (model.generateMipmap) {\n      model.context.generateMipmap(model.target);\n    }\n\n    publicAPI.deactivate();\n    return true;\n  };\n\n  function computeScaleOffsets(numComps, numPixelsIn, data) {\n    // compute min and max values per component\n    const min = [];\n    const max = [];\n    for (let c = 0; c < numComps; ++c) {\n      min[c] = data[c];\n      max[c] = data[c];\n    }\n    let count = 0;\n    for (let i = 0; i < numPixelsIn; ++i) {\n      for (let c = 0; c < numComps; ++c) {\n        if (data[count] < min[c]) {\n          min[c] = data[count];\n        }\n        if (data[count] > max[c]) {\n          max[c] = data[count];\n        }\n        count++;\n      }\n    }\n    const offset = [];\n    const scale = [];\n    for (let c = 0; c < numComps; ++c) {\n      if (min[c] === max[c]) {\n        max[c] = min[c] + 1.0;\n      }\n      offset[c] = min[c];\n      scale[c] = max[c] - min[c];\n    }\n    return { scale, offset };\n  }\n\n  //----------------------------------------------------------------------------\n  // This method simulates a 3D texture using 2D\n  publicAPI.create3DFilterableFromRaw = (\n    width,\n    height,\n    depth,\n    numComps,\n    dataType,\n    data\n  ) => {\n    const numPixelsIn = width * height * depth;\n\n    // initialize offset/scale\n    const offset = [];\n    const scale = [];\n    for (let c = 0; c < numComps; ++c) {\n      offset[c] = 0.0;\n      scale[c] = 1.0;\n    }\n\n    // store the information, we will need it later\n    // offset and scale are the offset and scale required to get\n    // the texture value back to data values ala\n    // data = texture * scale + offset\n    // and texture = (data - offset)/scale\n    model.volumeInfo = { scale, offset, width, height, depth };\n\n    // WebGL2 path, we have 3d textures etc\n    if (model.openGLRenderWindow.getWebgl2()) {\n      if (dataType === VtkDataTypes.FLOAT) {\n        return publicAPI.create3DFromRaw(\n          width,\n          height,\n          depth,\n          numComps,\n          dataType,\n          data\n        );\n      }\n      if (dataType === VtkDataTypes.UNSIGNED_CHAR) {\n        for (let c = 0; c < numComps; ++c) {\n          model.volumeInfo.scale[c] = 255.0;\n        }\n        return publicAPI.create3DFromRaw(\n          width,\n          height,\n          depth,\n          numComps,\n          dataType,\n          data\n        );\n      }\n      // otherwise convert to float\n      const newArray = new Float32Array(numPixelsIn * numComps);\n      // compute min and max values\n      const res = computeScaleOffsets(numComps, numPixelsIn, data);\n      model.volumeInfo.offset = res.offset;\n      model.volumeInfo.scale = res.scale;\n      let count = 0;\n      for (let i = 0; i < numPixelsIn; ++i) {\n        for (let nc = 0; nc < numComps; ++nc) {\n          newArray[count] =\n            (data[count] - model.volumeInfo.offset[nc]) /\n            model.volumeInfo.scale[nc];\n          count++;\n        }\n      }\n      return publicAPI.create3DFromRaw(\n        width,\n        height,\n        depth,\n        numComps,\n        VtkDataTypes.FLOAT,\n        newArray\n      );\n    }\n\n    // not webgl2, deal with webgl1, no 3d textures\n    // and maybe no float textures\n\n    // compute min and max values\n    const res = computeScaleOffsets(numComps, numPixelsIn, data);\n\n    let volCopyData = (outArray, outIdx, inValue, smin, smax) => {\n      outArray[outIdx] = inValue;\n    };\n    let dataTypeToUse = VtkDataTypes.UNSIGNED_CHAR;\n    // unsigned char gets used as is\n    if (dataType === VtkDataTypes.UNSIGNED_CHAR) {\n      for (let c = 0; c < numComps; ++c) {\n        res.offset[c] = 0.0;\n        res.scale[c] = 255.0;\n      }\n    } else if (\n      model.context.getExtension('OES_texture_float') &&\n      model.context.getExtension('OES_texture_float_linear')\n    ) {\n      // use float textures scaled to 0.0 to 1.0\n      dataTypeToUse = VtkDataTypes.FLOAT;\n      volCopyData = (outArray, outIdx, inValue, soffset, sscale) => {\n        outArray[outIdx] = (inValue - soffset) / sscale;\n      };\n    } else {\n      // worst case, scale data to uchar\n      dataTypeToUse = VtkDataTypes.UNSIGNED_CHAR;\n      volCopyData = (outArray, outIdx, inValue, soffset, sscale) => {\n        outArray[outIdx] = (255.0 * (inValue - soffset)) / sscale;\n      };\n    }\n\n    // Now determine the texture parameters using the arguments.\n    publicAPI.getOpenGLDataType(dataTypeToUse);\n    publicAPI.getInternalFormat(dataTypeToUse, numComps);\n    publicAPI.getFormat(dataTypeToUse, numComps);\n\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\n      vtkErrorMacro('Failed to determine texture parameters.');\n      return false;\n    }\n\n    // have to pack this 3D texture into pot 2D texture\n    model.target = model.context.TEXTURE_2D;\n    model.components = numComps;\n    model.depth = 1;\n    model.numberOfDimensions = 2;\n\n    // MAX_TEXTURE_SIZE gives the max dimensions that can be supported by the GPU,\n    // but it doesn't mean it will fit in memory. If we have to use a float data type\n    // or 4 components, there are good chances that the texture size will blow up\n    // and could not fit in the GPU memory. Use a smaller texture size in that case,\n    // which will force a downsampling of the dataset.\n    // That problem does not occur when using webGL2 since we can pack the data in\n    // denser textures based on our data type.\n    // TODO: try to fit in the biggest supported texture, catch the gl error if it\n    // does not fix (OUT_OF_MEMORY), then attempt with smaller texture\n    let maxTexDim = model.context.getParameter(model.context.MAX_TEXTURE_SIZE);\n    if (\n      maxTexDim > 4096 &&\n      (dataTypeToUse === VtkDataTypes.FLOAT || numComps >= 3)\n    ) {\n      maxTexDim = 4096;\n    }\n\n    // compute estimate for XY subsample\n    let xstride = 1;\n    let ystride = 1;\n    if (numPixelsIn > maxTexDim * maxTexDim) {\n      xstride = Math.ceil(Math.sqrt(numPixelsIn / (maxTexDim * maxTexDim)));\n      ystride = xstride;\n    }\n    let targetWidth = Math.sqrt(numPixelsIn) / xstride;\n    targetWidth = vtkMath.nearestPowerOfTwo(targetWidth);\n    // determine X reps\n    const xreps = Math.floor((targetWidth * xstride) / width);\n    const yreps = Math.ceil(depth / xreps);\n    const targetHeight = vtkMath.nearestPowerOfTwo((height * yreps) / ystride);\n\n    model.width = targetWidth;\n    model.height = targetHeight;\n    model.openGLRenderWindow.activateTexture(publicAPI);\n    publicAPI.createTexture();\n    publicAPI.bind();\n\n    // store the information, we will need it later\n    model.volumeInfo.xreps = xreps;\n    model.volumeInfo.yreps = yreps;\n    model.volumeInfo.xstride = xstride;\n    model.volumeInfo.ystride = ystride;\n    model.volumeInfo.offset = res.offset;\n    model.volumeInfo.scale = res.scale;\n\n    // OK stuff the data into the 2d TEXTURE\n\n    // first allocate the new texture\n    let newArray;\n    const pixCount = targetWidth * targetHeight * numComps;\n    if (dataTypeToUse === VtkDataTypes.FLOAT) {\n      newArray = new Float32Array(pixCount);\n    } else {\n      newArray = new Uint8Array(pixCount);\n    }\n\n    // then stuff the data into it, nothing fancy right now\n    // for stride\n    let outIdx = 0;\n\n    for (let yRep = 0; yRep < yreps; yRep++) {\n      const xrepsThisRow = Math.min(xreps, depth - yRep * xreps);\n      const outXContIncr =\n        model.width - xrepsThisRow * Math.floor(width / xstride);\n      for (let inY = 0; inY < height; inY += ystride) {\n        for (let xRep = 0; xRep < xrepsThisRow; xRep++) {\n          const inOffset =\n            numComps * ((yRep * xreps + xRep) * width * height + inY * width);\n          for (let inX = 0; inX < width; inX += xstride) {\n            // copy value\n            for (let nc = 0; nc < numComps; nc++) {\n              volCopyData(\n                newArray,\n                outIdx,\n                data[inOffset + inX * numComps + nc],\n                res.offset[nc],\n                res.scale[nc]\n              );\n              outIdx++;\n            }\n          }\n        }\n        outIdx += outXContIncr * numComps;\n      }\n    }\n\n    // Source texture data from the PBO.\n    // model.context.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);\n\n    model.context.texImage2D(\n      model.target,\n      0,\n      model.internalFormat,\n      model.width,\n      model.height,\n      0,\n      model.format,\n      model.openGLDataType,\n      newArray\n    );\n\n    publicAPI.deactivate();\n    return true;\n  };\n\n  publicAPI.setOpenGLRenderWindow = (rw) => {\n    if (model.openGLRenderWindow === rw) {\n      return;\n    }\n    publicAPI.releaseGraphicsResources();\n    model.openGLRenderWindow = rw;\n    model.context = null;\n    if (rw) {\n      model.context = model.openGLRenderWindow.getContext();\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getMaximumTextureSize = (ctx) => {\n    if (ctx && ctx.isCurrent()) {\n      return ctx.getIntegerv(ctx.MAX_TEXTURE_SIZE);\n    }\n\n    return -1;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  openGLRenderWindow: null,\n  context: null,\n  handle: 0,\n  sendParametersTime: null,\n  textureBuildTime: null,\n  numberOfDimensions: 0,\n  target: 0,\n  format: 0,\n  openGLDataType: 0,\n  components: 0,\n  width: 0,\n  height: 0,\n  depth: 0,\n  autoParameters: true,\n  wrapS: Wrap.CLAMP_TO_EDGE,\n  wrapT: Wrap.CLAMP_TO_EDGE,\n  wrapR: Wrap.CLAMP_TO_EDGE,\n  minificationFilter: Filter.NEAREST,\n  magnificationFilter: Filter.NEAREST,\n  minLOD: -1000.0,\n  maxLOD: 1000.0,\n  baseLevel: 0,\n  maxLevel: 1000,\n  generateMipmap: false,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  model.sendParametersTime = {};\n  macro.obj(model.sendParametersTime, { mtime: 0 });\n\n  model.textureBuildTime = {};\n  macro.obj(model.textureBuildTime, { mtime: 0 });\n\n  // Build VTK API\n  macro.set(publicAPI, model, ['format', 'openGLDataType']);\n\n  macro.setGet(publicAPI, model, [\n    'keyMatrixTime',\n    'minificationFilter',\n    'magnificationFilter',\n    'wrapS',\n    'wrapT',\n    'wrapR',\n    'generateMipmap',\n  ]);\n\n  macro.get(publicAPI, model, [\n    'width',\n    'height',\n    'volumeInfo',\n    'components',\n    'handle',\n    'target',\n  ]);\n\n  // Object methods\n  vtkOpenGLTexture(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkOpenGLTexture');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend }, Constants);\n","import * as macro from 'vtk.js/Sources/macro';\nimport vtkOpenGLTexture from 'vtk.js/Sources/Rendering/OpenGL/Texture';\nimport { VtkDataTypes } from 'vtk.js/Sources/Common/Core/DataArray/Constants';\nimport { Filter } from 'vtk.js/Sources/Rendering/OpenGL/Texture/Constants';\n\n// ----------------------------------------------------------------------------\n// vtkFramebuffer methods\n// ----------------------------------------------------------------------------\nfunction vtkFramebuffer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkFramebuffer');\n\n  publicAPI.getBothMode = () => model.context.FRAMEBUFFER;\n  // publicAPI.getDrawMode = () => model.context.DRAW_FRAMEBUFFER;\n  // publicAPI.getReadMode = () => model.context.READ_FRAMEBUFFER;\n\n  publicAPI.saveCurrentBindingsAndBuffers = (modeIn) => {\n    const mode =\n      typeof modeIn !== 'undefined' ? modeIn : publicAPI.getBothMode();\n    publicAPI.saveCurrentBindings(mode);\n    publicAPI.saveCurrentBuffers(mode);\n  };\n\n  publicAPI.saveCurrentBindings = (modeIn) => {\n    const gl = model.context;\n    model.previousDrawBinding = gl.getParameter(\n      model.context.FRAMEBUFFER_BINDING\n    );\n    model.previousActiveFramebuffer = model.openGLRenderWindow.getActiveFramebuffer();\n  };\n\n  publicAPI.saveCurrentBuffers = (modeIn) => {\n    // noop on webgl 1\n  };\n\n  publicAPI.restorePreviousBindingsAndBuffers = (modeIn) => {\n    const mode =\n      typeof modeIn !== 'undefined' ? modeIn : publicAPI.getBothMode();\n    publicAPI.restorePreviousBindings(mode);\n    publicAPI.restorePreviousBuffers(mode);\n  };\n\n  publicAPI.restorePreviousBindings = (modeIn) => {\n    const gl = model.context;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, model.previousDrawBinding);\n    model.openGLRenderWindow.setActiveFramebuffer(\n      model.previousActiveFramebuffer\n    );\n  };\n\n  publicAPI.restorePreviousBuffers = (modeIn) => {\n    // currently a noop on webgl1\n  };\n\n  publicAPI.bind = () => {\n    model.context.bindFramebuffer(\n      model.context.FRAMEBUFFER,\n      model.glFramebuffer\n    );\n    if (model.colorTexture) {\n      model.colorTexture.bind();\n    }\n    model.openGLRenderWindow.setActiveFramebuffer(publicAPI);\n  };\n\n  publicAPI.create = (width, height) => {\n    model.glFramebuffer = model.context.createFramebuffer();\n    model.glFramebuffer.width = width;\n    model.glFramebuffer.height = height;\n  };\n\n  publicAPI.setColorBuffer = (texture, mode) => {\n    const gl = model.context;\n    model.colorTexture = texture;\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      texture.getHandle(),\n      0\n    );\n  };\n\n  // publicAPI.setDepthBuffer = (texture, mode) => {\n  //   const gl = model.context;\n  //   gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, texture.getHandle(), 0);\n  // };\n\n  publicAPI.getGLFramebuffer = () => model.glFramebuffer;\n\n  publicAPI.setOpenGLRenderWindow = (rw) => {\n    if (model.openGLRenderWindow === rw) {\n      return;\n    }\n    publicAPI.releaseGraphicsResources();\n    model.openGLRenderWindow = rw;\n    model.context = null;\n    if (rw) {\n      model.context = model.openGLRenderWindow.getContext();\n    }\n  };\n\n  publicAPI.releaseGraphicsResources = () => {\n    if (model.glFramebuffer) {\n      model.context.deleteFramebuffer(model.glFramebuffer);\n    }\n    if (model.depthTexture) {\n      model.depthTexture.releaseGraphicsResources();\n    }\n    if (model.colorTexture) {\n      model.colorTexture.releaseGraphicsResources();\n    }\n  };\n\n  publicAPI.getSize = () => {\n    const size = [0, 0];\n    if (model.glFramebuffer !== null) {\n      size[0] = model.glFramebuffer.width;\n      size[1] = model.glFramebuffer.height;\n    }\n    return size;\n  };\n\n  publicAPI.populateFramebuffer = () => {\n    publicAPI.bind();\n    const gl = model.context;\n\n    const texture = vtkOpenGLTexture.newInstance();\n    texture.setOpenGLRenderWindow(model.openGLRenderWindow);\n    texture.setMinificationFilter(Filter.LINEAR);\n    texture.setMagnificationFilter(Filter.LINEAR);\n    texture.create2DFromRaw(\n      model.glFramebuffer.width,\n      model.glFramebuffer.height,\n      4,\n      VtkDataTypes.UNSIGNED_CHAR,\n      null\n    );\n    publicAPI.setColorBuffer(texture);\n\n    // for now do not count of having a depth buffer texture\n    // as they are not standard webgl 1\n    model.depthTexture = gl.createRenderbuffer();\n    gl.bindRenderbuffer(gl.RENDERBUFFER, model.depthTexture);\n    gl.renderbufferStorage(\n      gl.RENDERBUFFER,\n      gl.DEPTH_COMPONENT16,\n      model.glFramebuffer.width,\n      model.glFramebuffer.height\n    );\n    gl.framebufferRenderbuffer(\n      gl.FRAMEBUFFER,\n      gl.DEPTH_ATTACHMENT,\n      gl.RENDERBUFFER,\n      model.depthTexture\n    );\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\nconst DEFAULT_VALUES = {\n  openGLRenderWindow: null,\n  glFramebuffer: null,\n  colorTexture: null,\n  depthTexture: null,\n  previousDrawBinding: 0,\n  previousReadBinding: 0,\n  previousDrawBuffer: 0,\n  previousReadBuffer: 0,\n  previousActiveFramebuffer: null,\n};\n\n// ----------------------------------------------------------------------------\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n\n  macro.setGet(publicAPI, model, ['colorTexture']);\n\n  // For more macro methods, see \"Sources/macro.js\"\n  // Object specific methods\n  vtkFramebuffer(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\nexport const newInstance = macro.newInstance(extend, 'vtkFramebuffer');\n\n// ----------------------------------------------------------------------------\nexport default Object.assign({ newInstance, extend });\n","import macro from 'vtk.js/Sources/macro';\n\n// ----------------------------------------------------------------------------\n\nfunction vtkRenderPass(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderPass');\n\n  publicAPI.getOperation = () => model.currentOperation;\n\n  publicAPI.setCurrentOperation = (val) => {\n    model.currentOperation = val;\n    model.currentTraverseOperation = `traverse${macro.capitalize(\n      model.currentOperation\n    )}`;\n  };\n\n  publicAPI.getTraverseOperation = () => model.currentTraverseOperation;\n\n  // by default this class will traverse all of its\n  // preDelegateOperations, then call its delegate render passes\n  // the traverse all of its postDelegateOperations\n  // any of those three arrays can be empty\n  publicAPI.traverse = (viewNode, parent = null) => {\n    if (model.deleted) {\n      return;\n    }\n\n    // we just render our delegates in order\n    model.currentParent = parent;\n\n    model.preDelegateOperations.forEach((val) => {\n      publicAPI.setCurrentOperation(val);\n      viewNode.traverse(publicAPI);\n    });\n    model.delegates.forEach((val) => {\n      val.traverse(viewNode, publicAPI);\n    });\n    model.postDelegateOperations.forEach((val) => {\n      publicAPI.setCurrentOperation(val);\n      viewNode.traverse(publicAPI);\n    });\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  delegates: [],\n  currentOperation: null,\n  preDelegateOperations: [],\n  postDelegateOperations: [],\n  currentParent: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['currentOperation']);\n  macro.setGet(publicAPI, model, [\n    'delegates',\n    'currentParent',\n    'preDelegateOperations',\n    'postDelegateOperations',\n  ]);\n\n  // Object methods\n  vtkRenderPass(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkRenderPass');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import macro from 'vtk.js/Sources/macro';\nimport vtkOpenGLFramebuffer from 'vtk.js/Sources/Rendering/OpenGL/Framebuffer';\nimport vtkRenderPass from 'vtk.js/Sources/Rendering/SceneGraph/RenderPass';\n\n// ----------------------------------------------------------------------------\n\nfunction vtkForwardPass(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkForwardPass');\n\n  // this pass implements a forward rendering pipeline\n  // if both volumes and opaque geometry are present\n  // it will mix the two together by capturing a zbuffer\n  // first\n  publicAPI.traverse = (viewNode, parent = null) => {\n    if (model.deleted) {\n      return;\n    }\n\n    // we just render our delegates in order\n    model.currentParent = parent;\n\n    // build\n    publicAPI.setCurrentOperation('buildPass');\n    viewNode.traverse(publicAPI);\n\n    const numlayers = viewNode.getRenderable().getNumberOfLayers();\n\n    // iterate over renderers\n    const renderers = viewNode.getChildren();\n    for (let i = 0; i < numlayers; i++) {\n      for (let index = 0; index < renderers.length; index++) {\n        const renNode = renderers[index];\n        const ren = viewNode.getRenderable().getRenderers()[index];\n        if (ren.getLayer() === i) {\n          // check for both opaque and volume actors\n          model.opaqueActorCount = 0;\n          model.translucentActorCount = 0;\n          model.volumeCount = 0;\n          publicAPI.setCurrentOperation('queryPass');\n\n          renNode.traverse(publicAPI);\n\n          // do we need to capture a zbuffer?\n          if (\n            (model.opaqueActorCount > 0 && model.volumeCount > 0) ||\n            model.depthRequested\n          ) {\n            const size = viewNode.getFramebufferSize();\n            // make sure the framebuffer is setup\n            if (model.framebuffer === null) {\n              model.framebuffer = vtkOpenGLFramebuffer.newInstance();\n            }\n            model.framebuffer.setOpenGLRenderWindow(viewNode);\n            model.framebuffer.saveCurrentBindingsAndBuffers();\n            const fbSize = model.framebuffer.getSize();\n            if (\n              fbSize === null ||\n              fbSize[0] !== size[0] ||\n              fbSize[1] !== size[1]\n            ) {\n              model.framebuffer.create(size[0], size[1]);\n              model.framebuffer.populateFramebuffer();\n            }\n            model.framebuffer.bind();\n            publicAPI.setCurrentOperation('opaqueZBufferPass');\n            renNode.traverse(publicAPI);\n            model.framebuffer.restorePreviousBindingsAndBuffers();\n          }\n\n          publicAPI.setCurrentOperation('cameraPass');\n          renNode.traverse(publicAPI);\n          if (model.opaqueActorCount > 0) {\n            publicAPI.setCurrentOperation('opaquePass');\n            renNode.traverse(publicAPI);\n          }\n          if (model.translucentActorCount > 0) {\n            publicAPI.setCurrentOperation('translucentPass');\n            renNode.traverse(publicAPI);\n          }\n          if (model.volumeCount > 0) {\n            publicAPI.setCurrentOperation('volumePass');\n            renNode.traverse(publicAPI);\n          }\n        }\n      }\n    }\n  };\n\n  publicAPI.getZBufferTexture = () => {\n    if (model.framebuffer) {\n      return model.framebuffer.getColorTexture();\n    }\n    return null;\n  };\n\n  publicAPI.incrementOpaqueActorCount = () => model.opaqueActorCount++;\n  publicAPI.incrementTranslucentActorCount = () =>\n    model.translucentActorCount++;\n  publicAPI.incrementVolumeCount = () => model.volumeCount++;\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  opaqueActorCount: 0,\n  translucentActorCount: 0,\n  volumeCount: 0,\n  framebuffer: null,\n  depthRequested: false,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  vtkRenderPass.extend(publicAPI, model, initialValues);\n\n  macro.get(publicAPI, model, ['framebuffer']);\n  macro.setGet(publicAPI, model, ['depthRequested']);\n\n  // Object methods\n  vtkForwardPass(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkForwardPass');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import macro from 'vtk.js/Sources/macro';\nimport vtkViewNode from 'vtk.js/Sources/Rendering/SceneGraph/ViewNode';\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLActor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkGenericWidgetRepresentation(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkGenericWidgetRepresentation');\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  // Object methods\n  vtkGenericWidgetRepresentation(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import { mat3, mat4 } from 'gl-matrix';\n\nimport macro from 'vtk.js/Sources/macro';\nimport vtkViewNode from 'vtk.js/Sources/Rendering/SceneGraph/ViewNode';\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLActor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLActor(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLActor');\n\n  // Builds myself.\n  publicAPI.buildPass = (prepass) => {\n    if (prepass) {\n      model.openGLRenderWindow = publicAPI.getFirstAncestorOfType(\n        'vtkOpenGLRenderWindow'\n      );\n      model.openGLRenderer = publicAPI.getFirstAncestorOfType(\n        'vtkOpenGLRenderer'\n      );\n      model.context = model.openGLRenderWindow.getContext();\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNodes(model.renderable.getTextures());\n      publicAPI.addMissingNode(model.renderable.getMapper());\n      publicAPI.removeUnusedNodes();\n\n      // we store textures and mapper\n      model.ogltextures = null;\n      model.activeTextures = null;\n      for (let index = 0; index < model.children.length; index++) {\n        const child = model.children[index];\n        if (child.isA('vtkOpenGLTexture')) {\n          if (!model.ogltextures) {\n            model.ogltextures = [];\n          }\n          model.ogltextures.push(child);\n        } else {\n          model.oglmapper = child;\n        }\n      }\n    }\n  };\n\n  publicAPI.traverseOpaqueZBufferPass = (renderPass) => {\n    publicAPI.traverseOpaquePass(renderPass);\n  };\n\n  // we draw textures, then mapper, then post pass textures\n  publicAPI.traverseOpaquePass = (renderPass) => {\n    if (\n      !model.renderable ||\n      !model.renderable.getVisibility() ||\n      !model.renderable.getIsOpaque() ||\n      (model.openGLRenderer.getSelector() && !model.renderable.getPickable())\n    ) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n\n    model.oglmapper.traverse(renderPass);\n\n    publicAPI.apply(renderPass, false);\n  };\n\n  // we draw textures, then mapper, then post pass textures\n  publicAPI.traverseTranslucentPass = (renderPass) => {\n    if (\n      !model.renderable ||\n      !model.renderable.getVisibility() ||\n      model.renderable.getIsOpaque() ||\n      (model.openGLRenderer.getSelector() && !model.renderable.getPickable())\n    ) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n\n    model.oglmapper.traverse(renderPass);\n\n    publicAPI.apply(renderPass, false);\n  };\n\n  publicAPI.activateTextures = () => {\n    // always traverse textures first, then mapper\n    if (!model.ogltextures) {\n      return;\n    }\n\n    model.activeTextures = [];\n    for (let index = 0; index < model.ogltextures.length; index++) {\n      const child = model.ogltextures[index];\n      child.render();\n      if (child.getHandle()) {\n        model.activeTextures.push(child);\n      }\n    }\n  };\n\n  publicAPI.queryPass = (prepass, renderPass) => {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n      if (model.renderable.getIsOpaque()) {\n        renderPass.incrementOpaqueActorCount();\n      } else {\n        renderPass.incrementTranslucentActorCount();\n      }\n    }\n  };\n\n  publicAPI.opaqueZBufferPass = (prepass, renderPass) =>\n    publicAPI.opaquePass(prepass, renderPass);\n\n  publicAPI.opaquePass = (prepass, renderPass) => {\n    if (prepass) {\n      model.openGLRenderWindow.enableDepthMask();\n      publicAPI.activateTextures();\n    } else if (model.activeTextures) {\n      for (let index = 0; index < model.activeTextures.length; index++) {\n        model.activeTextures[index].deactivate();\n      }\n    }\n  };\n\n  // Renders myself\n  publicAPI.translucentPass = (prepass, renderPass) => {\n    if (prepass) {\n      model.openGLRenderWindow.disableDepthMask();\n      publicAPI.activateTextures();\n    } else if (model.activeTextures) {\n      for (let index = 0; index < model.activeTextures.length; index++) {\n        model.activeTextures[index].deactivate();\n      }\n    }\n  };\n\n  publicAPI.getKeyMatrices = () => {\n    // has the actor changed?\n    if (model.renderable.getMTime() > model.keyMatrixTime.getMTime()) {\n      model.renderable.computeMatrix();\n      mat4.copy(model.keyMatrices.mcwc, model.renderable.getMatrix());\n      mat4.transpose(model.keyMatrices.mcwc, model.keyMatrices.mcwc);\n\n      if (model.renderable.getIsIdentity()) {\n        mat3.identity(model.keyMatrices.normalMatrix);\n      } else {\n        mat3.fromMat4(model.keyMatrices.normalMatrix, model.keyMatrices.mcwc);\n        mat3.invert(\n          model.keyMatrices.normalMatrix,\n          model.keyMatrices.normalMatrix\n        );\n        mat3.transpose(\n          model.keyMatrices.normalMatrix,\n          model.keyMatrices.normalMatrix\n        );\n      }\n      model.keyMatrixTime.modified();\n    }\n\n    return model.keyMatrices;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n  keyMatrixTime: null,\n  keyMatrices: null,\n  activeTextures: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  model.keyMatrixTime = {};\n  macro.obj(model.keyMatrixTime, { mtime: 0 });\n  model.keyMatrices = {\n    normalMatrix: mat3.create(),\n    mcwc: mat4.create(),\n  };\n\n  // Build VTK API\n  macro.setGet(publicAPI, model, ['context']);\n\n  macro.get(publicAPI, model, ['activeTextures']);\n\n  // Object methods\n  vtkOpenGLActor(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import * as macro from '../../../macro';\nimport vtkViewNode from '../../SceneGraph/ViewNode';\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLActor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLActor2D(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLActor2D');\n\n  // Builds myself.\n  publicAPI.buildPass = (prepass) => {\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n      model.openGLRenderer = publicAPI.getFirstAncestorOfType(\n        'vtkOpenGLRenderer'\n      );\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNodes(model.renderable.getTextures());\n      publicAPI.addMissingNode(model.renderable.getMapper());\n      publicAPI.removeUnusedNodes();\n    }\n  };\n\n  // we draw textures, then mapper, then post pass textures\n  publicAPI.traverseOpaquePass = (renderPass) => {\n    if (\n      !model.renderable ||\n      !model.renderable.getVisibility() ||\n      !model.renderable.getIsOpaque() ||\n      (model.openGLRenderer.getSelector() && !model.renderable.getPickable())\n    ) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n    model.children.forEach((child) => {\n      if (!child.isA('vtkOpenGLTexture')) {\n        child.traverse(renderPass);\n      }\n    });\n    publicAPI.apply(renderPass, false);\n  };\n\n  // we draw textures, then mapper, then post pass textures\n  publicAPI.traverseTranslucentPass = (renderPass) => {\n    if (\n      !model.renderable ||\n      !model.renderable.getVisibility() ||\n      model.renderable.getIsOpaque() ||\n      (model.openGLRenderer.getSelector() && !model.renderable.getPickable())\n    ) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n    model.children.forEach((child) => {\n      if (!child.isA('vtkOpenGLTexture')) {\n        child.traverse(renderPass);\n      }\n    });\n    publicAPI.apply(renderPass, false);\n  };\n\n  publicAPI.activateTextures = () => {\n    // always traverse textures first, then mapper\n    model.activeTextures = [];\n    model.children.forEach((child) => {\n      if (child.isA('vtkOpenGLTexture')) {\n        child.render();\n        if (child.getHandle()) {\n          model.activeTextures.push(child);\n        }\n      }\n    });\n  };\n\n  // Renders myself\n  publicAPI.opaquePass = (prepass, renderPass) => {\n    if (prepass) {\n      model.context = publicAPI\n        .getFirstAncestorOfType('vtkOpenGLRenderWindow')\n        .getContext();\n      model.context.depthMask(true);\n      publicAPI.activateTextures();\n    } else {\n      // deactivate textures\n      model.activeTextures.forEach((child) => {\n        child.deactivate();\n      });\n    }\n  };\n\n  // Renders myself\n  publicAPI.translucentPass = (prepass, renderPass) => {\n    if (prepass) {\n      model.context = publicAPI\n        .getFirstAncestorOfType('vtkOpenGLRenderWindow')\n        .getContext();\n      model.context.depthMask(false);\n      publicAPI.activateTextures();\n    } else {\n      // deactivate textures\n      model.activeTextures.forEach((child) => {\n        child.deactivate();\n      });\n      model.context.depthMask(true);\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n  activeTextures: [],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  // Build VTK API\n  macro.setGet(publicAPI, model, ['context']);\n\n  macro.get(publicAPI, model, ['activeTextures']);\n\n  // Object methods\n  vtkOpenGLActor2D(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import { mat3, mat4 } from 'gl-matrix';\n\nimport * as macro from '../../../macro';\nimport vtkViewNode from '../../SceneGraph/ViewNode';\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLCamera methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLCamera(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLCamera');\n\n  publicAPI.buildPass = (prepass) => {\n    if (prepass) {\n      model.openGLRenderer = publicAPI.getFirstAncestorOfType(\n        'vtkOpenGLRenderer'\n      );\n      model.openGLRenderWindow = model.openGLRenderer.getParent();\n      model.context = model.openGLRenderWindow.getContext();\n    }\n  };\n\n  // Renders myself\n  publicAPI.opaquePass = (prepass) => {\n    if (prepass) {\n      const tsize = model.openGLRenderer.getTiledSizeAndOrigin();\n      model.context.viewport(\n        tsize.lowerLeftU,\n        tsize.lowerLeftV,\n        tsize.usize,\n        tsize.vsize\n      );\n      model.context.scissor(\n        tsize.lowerLeftU,\n        tsize.lowerLeftV,\n        tsize.usize,\n        tsize.vsize\n      );\n    }\n  };\n  publicAPI.translucentPass = publicAPI.opaquePass;\n  publicAPI.opaqueZBufferPass = publicAPI.opaquePass;\n  publicAPI.volumePass = publicAPI.opaquePass;\n\n  publicAPI.getKeyMatrices = (ren) => {\n    // has the camera changed?\n    if (\n      ren !== model.lastRenderer ||\n      model.openGLRenderWindow.getMTime() > model.keyMatrixTime.getMTime() ||\n      publicAPI.getMTime() > model.keyMatrixTime.getMTime() ||\n      ren.getMTime() > model.keyMatrixTime.getMTime() ||\n      model.renderable.getMTime() > model.keyMatrixTime.getMTime()\n    ) {\n      mat4.copy(model.keyMatrices.wcvc, model.renderable.getViewMatrix());\n\n      mat3.fromMat4(model.keyMatrices.normalMatrix, model.keyMatrices.wcvc);\n      mat3.invert(\n        model.keyMatrices.normalMatrix,\n        model.keyMatrices.normalMatrix\n      );\n      mat4.transpose(model.keyMatrices.wcvc, model.keyMatrices.wcvc);\n\n      const aspectRatio = model.openGLRenderer.getAspectRatio();\n\n      mat4.copy(\n        model.keyMatrices.vcdc,\n        model.renderable.getProjectionMatrix(aspectRatio, -1, 1)\n      );\n      mat4.transpose(model.keyMatrices.vcdc, model.keyMatrices.vcdc);\n\n      mat4.multiply(\n        model.keyMatrices.wcdc,\n        model.keyMatrices.vcdc,\n        model.keyMatrices.wcvc\n      );\n\n      model.keyMatrixTime.modified();\n      model.lastRenderer = ren;\n    }\n\n    return model.keyMatrices;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n  lastRenderer: null,\n  keyMatrixTime: null,\n  keyMatrices: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  model.keyMatrixTime = {};\n  macro.obj(model.keyMatrixTime);\n\n  model.keyMatrices = {\n    normalMatrix: mat3.create(),\n    vcdc: mat4.create(),\n    wcvc: mat4.create(),\n    wcdc: mat4.create(),\n  };\n\n  // Build VTK API\n  macro.setGet(publicAPI, model, ['context', 'keyMatrixTime']);\n\n  // Object methods\n  vtkOpenGLCamera(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","export const ObjectType = {\n  ARRAY_BUFFER: 0,\n  ELEMENT_ARRAY_BUFFER: 1,\n  TEXTURE_BUFFER: 2,\n};\n\nexport default {\n  ObjectType,\n};\n","import macro from 'vtk.js/Sources/macro';\nimport Constants from 'vtk.js/Sources/Rendering/OpenGL/BufferObject/Constants';\n\nconst { ObjectType } = Constants;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nexport const STATIC = {};\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLBufferObject methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLBufferObject(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLBufferObject');\n\n  // Class-specific private functions\n  function convertType(type) {\n    switch (type) {\n      case ObjectType.ELEMENT_ARRAY_BUFFER:\n        return model.context.ELEMENT_ARRAY_BUFFER;\n      case ObjectType.TEXTURE_BUFFER:\n        if ('TEXTURE_BUFFER' in model.context) {\n          return model.context.TEXTURE_BUFFER;\n        }\n      /* eslint-disable no-fallthrough */\n      // Intentional fallthrough in case there is no TEXTURE_BUFFER in WebGL\n      default:\n      /* eslint-enable no-fallthrough */\n      case ObjectType.ARRAY_BUFFER:\n        return model.context.ARRAY_BUFFER;\n    }\n  }\n\n  let internalType = null;\n  let internalHandle = null;\n  let dirty = true;\n  let error = '';\n\n  // Public API methods\n  publicAPI.getType = () => internalType;\n\n  publicAPI.setType = (value) => {\n    internalType = value;\n  };\n\n  publicAPI.getHandle = () => internalHandle;\n  publicAPI.isReady = () => dirty === false;\n\n  publicAPI.generateBuffer = (type) => {\n    const objectTypeGL = convertType(type);\n    if (internalHandle === null) {\n      internalHandle = model.context.createBuffer();\n      internalType = type;\n    }\n    return convertType(internalType) === objectTypeGL;\n  };\n\n  publicAPI.upload = (data, type) => {\n    // buffer, size, type\n    const alreadyGenerated = publicAPI.generateBuffer(type);\n    if (!alreadyGenerated) {\n      error = 'Trying to upload array buffer to incompatible buffer.';\n      return false;\n    }\n    model.context.bindBuffer(convertType(internalType), internalHandle);\n    model.context.bufferData(\n      convertType(internalType),\n      data,\n      model.context.STATIC_DRAW\n    );\n    dirty = false;\n    return true;\n  };\n\n  publicAPI.bind = () => {\n    if (!internalHandle) {\n      return false;\n    }\n    model.context.bindBuffer(convertType(internalType), internalHandle);\n    return true;\n  };\n\n  publicAPI.release = () => {\n    if (!internalHandle) {\n      return false;\n    }\n    model.context.bindBuffer(convertType(internalType), null);\n    return true;\n  };\n\n  publicAPI.releaseGraphicsResources = () => {\n    if (internalHandle !== null) {\n      model.context.bindBuffer(convertType(internalType), null);\n      model.context.deleteBuffer(internalHandle);\n      internalHandle = null;\n    }\n  };\n\n  publicAPI.setOpenGLRenderWindow = (rw) => {\n    if (model.openGLRenderWindow === rw) {\n      return;\n    }\n    publicAPI.releaseGraphicsResources();\n    model.openGLRenderWindow = rw;\n    model.context = null;\n    if (rw) {\n      model.context = model.openGLRenderWindow.getContext();\n    }\n  };\n\n  publicAPI.getError = () => error;\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  objectType: ObjectType.ARRAY_BUFFER,\n  openGLRenderWindow: null,\n  context: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n\n  macro.get(publicAPI, model, ['openGLRenderWindow']);\n\n  vtkOpenGLBufferObject(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend }, STATIC, Constants);\n","export const PassTypes = {\n  MIN_KNOWN_PASS: 0,\n  ACTOR_PASS: 0,\n  COMPOSITE_INDEX_PASS: 1,\n  ID_LOW24: 2,\n  MAX_KNOWN_PASS: 2,\n};\n\nexport default {\n  PassTypes,\n};\n","/**\n * The (primary) property that describes the content of a selection\n * node's data. Other auxiliary description properties follow.\n * GLOBALIDS means that the selection list contains values from the\n * vtkDataSetAttribute array of the same name.\n * PEDIGREEIDS means that the selection list contains values from the\n * vtkDataSetAttribute array of the same name.\n * VALUES means the the selection list contains values from an\n * arbitrary attribute array (ignores any globalids attribute)\n * INDICES means that the selection list contains indexes into the\n * cell or point arrays.\n * FRUSTUM means the set of points and cells inside a frustum\n * LOCATIONS means the set of points and cells near a set of positions\n * THRESHOLDS means the points and cells with values within a set of ranges\n * getContentType() returns -1 if the content type is not set.\n */\n\n// Specify how data arrays can be used by data objects\nexport const SelectionContent = {\n  GLOBALIDS: 0,\n  PEDIGREEIDS: 1,\n  VALUES: 2,\n  INDICES: 3,\n  FRUSTUM: 4,\n  LOCATIONS: 5,\n  THRESHOLDS: 6,\n  BLOCKS: 7,\n  QUERY: 8,\n};\n\nexport const SelectionField = {\n  CELL: 0,\n  POINT: 1,\n  FIELD: 2,\n  VERTEX: 3,\n  EDGE: 4,\n  ROW: 5,\n};\n\nexport default {\n  SelectionContent,\n  SelectionField,\n};\n","import macro from 'vtk.js/Sources/macro';\nimport Constants from 'vtk.js/Sources/Common/DataModel/SelectionNode/Constants';\n\n// ----------------------------------------------------------------------------\n// vtkSelectionNode methods\n// ----------------------------------------------------------------------------\n\nfunction vtkSelectionNode(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkSelectionNode');\n\n  publicAPI.getBounds = () => model.points.getBounds();\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  contentType: -1,\n  fieldType: -1,\n  properties: null,\n  selectionList: [],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  macro.obj(publicAPI, model);\n  model.properties = {};\n  macro.setGet(publicAPI, model, [\n    'contentType',\n    'fieldType',\n    'properties',\n    'selectionList',\n  ]);\n\n  // Object specific methods\n  vtkSelectionNode(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkSelectionNode');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend }, Constants);\n","import macro from 'vtk.js/Sources/macro';\nimport Constants from 'vtk.js/Sources/Rendering/OpenGL/HardwareSelector/Constants';\nimport vtkOpenGLFramebuffer from 'vtk.js/Sources/Rendering/OpenGL/Framebuffer';\nimport vtkSelectionNode from 'vtk.js/Sources/Common/DataModel/SelectionNode';\nimport vtkDataSet from 'vtk.js/Sources/Common/DataModel/DataSet';\n\nconst { PassTypes } = Constants;\nconst { SelectionContent, SelectionField } = vtkSelectionNode;\nconst { FieldAssociations } = vtkDataSet;\nconst { vtkErrorMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLHardwareSelector methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLHardwareSelector(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLHardwareSelector');\n\n  //----------------------------------------------------------------------------\n  publicAPI.releasePixBuffers = () => {\n    model.pixBuffer = [];\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.beginSelection = () => {\n    model.openGLRenderer = model.openGLRenderWindow.getViewNodeFor(\n      model.renderer\n    );\n    model.maxAttributeId = 0;\n\n    const size = model.openGLRenderWindow.getSize();\n    if (!model.framebuffer) {\n      model.framebuffer = vtkOpenGLFramebuffer.newInstance();\n      model.framebuffer.setOpenGLRenderWindow(model.openGLRenderWindow);\n      model.framebuffer.saveCurrentBindingsAndBuffers();\n      model.framebuffer.create(size[0], size[1]);\n      // this calls model.framebuffer.bind()\n      model.framebuffer.populateFramebuffer();\n    } else {\n      model.framebuffer.setOpenGLRenderWindow(model.openGLRenderWindow);\n      model.framebuffer.saveCurrentBindingsAndBuffers();\n      const fbSize = model.framebuffer.getSize();\n      if (fbSize[0] !== size[0] || fbSize[1] !== size[1]) {\n        model.framebuffer.create(size[0], size[1]);\n        // this calls model.framebuffer.bind()\n        model.framebuffer.populateFramebuffer();\n      } else {\n        model.framebuffer.bind();\n      }\n    }\n\n    model.openGLRenderer.clear();\n    model.openGLRenderer.setSelector(publicAPI);\n    model.hitProps = {};\n    model.props = [];\n    publicAPI.releasePixBuffers();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.endSelection = () => {\n    model.hitProps = {};\n    model.openGLRenderer.setSelector(null);\n    model.framebuffer.restorePreviousBindingsAndBuffers();\n  };\n\n  publicAPI.preCapturePass = () => {};\n\n  publicAPI.postCapturePass = () => {};\n\n  //----------------------------------------------------------------------------\n  publicAPI.select = () => {\n    let sel = null;\n    if (publicAPI.captureBuffers()) {\n      sel = publicAPI.generateSelection(\n        model.area[0],\n        model.area[1],\n        model.area[2],\n        model.area[3]\n      );\n      publicAPI.releasePixBuffers();\n    }\n    return sel;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.captureBuffers = () => {\n    if (!model.renderer || !model.openGLRenderWindow) {\n      vtkErrorMacro('Renderer and view must be set before calling Select.');\n      return false;\n    }\n\n    model.openGLRenderer = model.openGLRenderWindow.getViewNodeFor(\n      model.renderer\n    );\n\n    // int rgba[4];\n    // rwin.getColorBufferSizes(rgba);\n    // if (rgba[0] < 8 || rgba[1] < 8 || rgba[2] < 8) {\n    //   vtkErrorMacro(\"Color buffer depth must be atleast 8 bit. \"\n    //     \"Currently: \" << rgba[0] << \", \" << rgba[1] << \", \" <<rgba[2]);\n    //   return false;\n    // }\n    publicAPI.invokeEvent({ type: 'StartEvent' });\n\n    // Initialize renderer for selection.\n    // change the renderer's background to black, which will indicate a miss\n    model.originalBackground = model.renderer.getBackgroundByReference();\n    model.renderer.setBackground(0.0, 0.0, 0.0);\n\n    publicAPI.beginSelection();\n    for (\n      model.currentPass = PassTypes.MIN_KNOWN_PASS;\n      model.currentPass <= PassTypes.COMPOSITE_INDEX_PASS;\n      model.currentPass++\n    ) {\n      if (publicAPI.passRequired(model.currentPass)) {\n        publicAPI.preCapturePass(model.currentPass);\n        model.openGLRenderWindow.traverseAllPasses();\n        publicAPI.postCapturePass(model.currentPass);\n\n        publicAPI.savePixelBuffer(model.currentPass);\n      }\n    }\n    publicAPI.endSelection();\n\n    // restore original background\n    model.renderer.setBackground(model.originalBackground);\n    publicAPI.invokeEvent({ type: 'EndEvent' });\n\n    // restore image, not needed?\n    // model.openGLRenderWindow.traverseAllPasses();\n    return true;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.passRequired = (pass) => true;\n\n  //----------------------------------------------------------------------------\n  publicAPI.savePixelBuffer = (passNo) => {\n    model.pixBuffer[passNo] = model.openGLRenderWindow.getPixelData(\n      model.area[0],\n      model.area[1],\n      model.area[2],\n      model.area[3]\n    );\n    if (passNo === PassTypes.ACTOR_PASS) {\n      publicAPI.buildPropHitList(model.pixBuffer[passNo]);\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.buildPropHitList = (pixelbuffer) => {\n    for (let yy = 0; yy <= model.area[3] - model.area[1]; yy++) {\n      for (let xx = 0; xx <= model.area[2] - model.area[0]; xx++) {\n        let val = publicAPI.convert(xx, yy, pixelbuffer);\n        if (val > 0) {\n          val--;\n          if (!(val in model.hitProps)) {\n            model.hitProps[val] = true;\n          }\n        }\n      }\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.renderProp = (prop) => {\n    if (model.currentPass === PassTypes.ACTOR_PASS) {\n      publicAPI.setPropColorValueFromInt(model.props.length + model.idOffset);\n      model.props.push(prop);\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.renderCompositeIndex = (index) => {\n    if (model.currentPass === PassTypes.COMPOSITE_INDEX_PASS) {\n      publicAPI.setPropColorValueFromInt(index + model.idOffset);\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  // TODO: make inline\n  publicAPI.renderAttributeId = (attribid) => {\n    if (attribid < 0) {\n      // negative attribid is valid. It happens when rendering higher order\n      // elements where new points are added for rendering smooth surfaces.\n      return;\n    }\n\n    model.maxAttributeId =\n      attribid > model.maxAttributeId ? attribid : model.maxAttributeId;\n\n    // if (model.currentPass < PassTypes.ID_LOW24) {\n    //   return; // useless...\n    // }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getPropFromID = (id) => {\n    if (id >= 0 && id < model.props.length) {\n      return model.props[id];\n    }\n    return null;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.passTypeToString = (type) => macro.enumToString(PassTypes, type);\n\n  //----------------------------------------------------------------------------\n  publicAPI.isPropHit = (id) => Boolean(model.hitProps[id]);\n\n  publicAPI.convert = (xx, yy, pb) => {\n    if (!pb) {\n      return 0;\n    }\n    const offset = (yy * (model.area[2] - model.area[0] + 1) + xx) * 4;\n    const rgb = [];\n    rgb[0] = pb[offset];\n    rgb[1] = pb[offset + 1];\n    rgb[2] = pb[offset + 2];\n    let val = rgb[2];\n    val *= 256;\n    val += rgb[1];\n    val *= 256;\n    val += rgb[0];\n    return val;\n  };\n\n  publicAPI.setPropColorValueFromInt = (val) => {\n    model.propColorValue[0] = (val % 256) / 255.0;\n    model.propColorValue[1] = (Math.floor(val / 256) % 256) / 255.0;\n    model.propColorValue[2] = (Math.floor(val / 65536) % 256) / 255.0;\n  };\n\n  // info has\n  //   valid\n  //   propId\n  //   prop\n  //   compositeID\n  //   attributeID\n\n  //----------------------------------------------------------------------------\n  publicAPI.getPixelInformation = (\n    inDisplayPosition,\n    maxDistance,\n    outSelectedPosition\n  ) => {\n    // Base case\n    const maxDist = maxDistance < 0 ? 0 : maxDistance;\n    if (maxDist === 0) {\n      outSelectedPosition[0] = inDisplayPosition[0];\n      outSelectedPosition[1] = inDisplayPosition[1];\n      if (\n        inDisplayPosition[0] < model.area[0] ||\n        inDisplayPosition[0] > model.area[2] ||\n        inDisplayPosition[1] < model.area[1] ||\n        inDisplayPosition[1] > model.area[3]\n      ) {\n        return null;\n      }\n\n      // offset inDisplayPosition based on the lower-left-corner of the Area.\n      const displayPosition = [\n        inDisplayPosition[0] - model.area[0],\n        inDisplayPosition[1] - model.area[1],\n      ];\n\n      const actorid = publicAPI.convert(\n        displayPosition[0],\n        displayPosition[1],\n        model.pixBuffer[PassTypes.ACTOR_PASS]\n      );\n      if (actorid <= 0) {\n        // the pixel did not hit any actor.\n        return null;\n      }\n\n      const info = {};\n      info.valid = true;\n\n      info.propID = actorid - model.idOffset;\n      info.prop = publicAPI.getPropFromID(info.propID);\n\n      let compositeID = publicAPI.convert(\n        displayPosition[0],\n        displayPosition[1],\n        model.pixBuffer[PassTypes.COMPOSITE_INDEX_PASS]\n      );\n      if (compositeID < 0 || compositeID > 0xffffff) {\n        compositeID = 0;\n      }\n      info.compositeID = compositeID - model.idOffset;\n\n      // const low24 = publicAPI.convert(\n      //   displayPosition[0], displayPosition[1], model.pixBuffer[PassTypes.ID_LOW24]);\n\n      // // id 0 is reserved for nothing present.\n      // info.attributeID = low24 - model.idOffset;\n      // if (info.attributeID < 0) {\n      //   // the pixel did not hit any cell.\n      //   return null;\n      // }\n      return info;\n    }\n\n    // Iterate over successively growing boxes.\n    // They recursively call the base case to handle single pixels.\n    const dispPos = [inDisplayPosition[0], inDisplayPosition[1]];\n    const curPos = [0, 0];\n    let info = publicAPI.getPixelInformation(\n      inDisplayPosition,\n      0,\n      outSelectedPosition\n    );\n    if (info && info.valid) {\n      return info;\n    }\n    for (let dist = 1; dist < maxDist; ++dist) {\n      // Vertical sides of box.\n      for (\n        let y = dispPos[1] > dist ? dispPos[1] - dist : 0;\n        y <= dispPos[1] + dist;\n        ++y\n      ) {\n        curPos[1] = y;\n        if (dispPos[0] >= dist) {\n          curPos[0] = dispPos[0] - dist;\n          info = publicAPI.getPixelInformation(curPos, 0, outSelectedPosition);\n          if (info && info.valid) {\n            return info;\n          }\n        }\n        curPos[0] = dispPos[0] + dist;\n        info = publicAPI.getPixelInformation(curPos, 0, outSelectedPosition);\n        if (info && info.valid) {\n          return info;\n        }\n      }\n      // Horizontal sides of box.\n      for (\n        let x = dispPos[0] >= dist ? dispPos[0] - (dist - 1) : 0;\n        x <= dispPos[0] + (dist - 1);\n        ++x\n      ) {\n        curPos[0] = x;\n        if (dispPos[1] >= dist) {\n          curPos[1] = dispPos[1] - dist;\n          info = publicAPI.getPixelInformation(curPos, 0, outSelectedPosition);\n          if (info && info.valid) {\n            return info;\n          }\n        }\n        curPos[1] = dispPos[1] + dist;\n        info = publicAPI.getPixelInformation(curPos, 0, outSelectedPosition);\n        if (info && info.valid) {\n          return info;\n        }\n      }\n    }\n\n    // nothing hit.\n    outSelectedPosition[0] = inDisplayPosition[0];\n    outSelectedPosition[1] = inDisplayPosition[1];\n    return null;\n  };\n\n  //-----------------------------------------------------------------------------\n  publicAPI.convertSelection = (fieldassociation, dataMap) => {\n    const sel = [];\n\n    let count = 0;\n    dataMap.forEach((value, key) => {\n      const child = vtkSelectionNode.newInstance();\n      child.setContentType(SelectionContent.INDICES);\n      switch (fieldassociation) {\n        case FieldAssociations.FIELD_ASSOCIATION_CELLS:\n          child.setFieldType(SelectionField.CELL);\n          break;\n        case FieldAssociations.FIELD_ASSOCIATION_POINTS:\n          child.setFieldType(SelectionField.POINT);\n          break;\n        default:\n          vtkErrorMacro('Unknown field association');\n      }\n      child.getProperties().propID = value.info.propID;\n      child.getProperties().prop = value.info.prop;\n      child.getProperties().compositeID = value.info.compositeID;\n      child.getProperties().pixelCount = value.pixelCount;\n\n      child.setSelectionList(value.attributeIDs);\n      sel[count] = child;\n      count++;\n    });\n\n    return sel;\n  };\n\n  publicAPI.getInfoHash = (info) => `${info.propID} ${info.compositeID}`;\n\n  //----------------------------------------------------------------------------\n  publicAPI.generateSelection = (fx1, fy1, fx2, fy2) => {\n    const x1 = Math.floor(fx1);\n    const y1 = Math.floor(fy1);\n    const x2 = Math.floor(fx2);\n    const y2 = Math.floor(fy2);\n\n    const dataMap = new Map();\n\n    const outSelectedPosition = [0, 0];\n\n    for (let yy = y1; yy <= y2; yy++) {\n      for (let xx = x1; xx <= x2; xx++) {\n        const pos = [xx, yy];\n        const info = publicAPI.getPixelInformation(pos, 0, outSelectedPosition);\n        if (info && info.valid) {\n          const hash = publicAPI.getInfoHash(info);\n          if (!dataMap.has(hash)) {\n            dataMap.set(hash, {\n              info,\n              pixelCount: 1,\n              attributeIDs: [info.attributeID],\n            });\n          } else {\n            dataMap.get(hash).pixelCount++;\n            if (\n              dataMap.get(hash).attributeIDs.indexOf(info.attributeID) === -1\n            ) {\n              dataMap.get(hash).attributeIDs.push(info.attributeID);\n            }\n          }\n        }\n      }\n    }\n    return publicAPI.convertSelection(model.fieldAssociation, dataMap);\n  };\n\n  //----------------------------------------------------------------------------\n\n  publicAPI.attach = (w, r) => {\n    model.openGLRenderWindow = w;\n    model.renderer = r;\n  };\n\n  //----------------------------------------------------------------------------\n\n  // override\n  const superSetArea = publicAPI.setArea;\n  publicAPI.setArea = (...args) => {\n    if (superSetArea(...args)) {\n      model.area[0] = Math.floor(model.area[0]);\n      model.area[1] = Math.floor(model.area[1]);\n      model.area[2] = Math.floor(model.area[2]);\n      model.area[3] = Math.floor(model.area[3]);\n      return true;\n    }\n    return false;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  fieldAssociation: FieldAssociations.FIELD_ASSOCIATION_CELLS,\n  renderer: null,\n  area: null,\n  openGLRenderWindow: null,\n  openGLRenderer: null,\n  currentPass: -1,\n  propColorValue: null,\n  props: null,\n  idOffset: 1,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n\n  model.area = [0, 0, 0, 0];\n  model.propColorValue = [0, 0, 0];\n  model.props = [];\n\n  macro.setGet(publicAPI, model, [\n    'fieldAssociation',\n    'renderer',\n    'currentPass',\n  ]);\n\n  macro.setGetArray(publicAPI, model, ['area'], 4);\n  macro.setGetArray(publicAPI, model, ['propColorValue'], 3);\n  macro.event(publicAPI, model, 'event');\n\n  // Object methods\n  vtkOpenGLHardwareSelector(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(\n  extend,\n  'vtkOpenGLHardwareSelector'\n);\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend }, Constants);\n","export const Shading = {\n  FLAT: 0,\n  GOURAUD: 1,\n  PHONG: 2,\n};\n\nexport const Representation = {\n  POINTS: 0,\n  WIREFRAME: 1,\n  SURFACE: 2,\n};\n\nexport const Interpolation = Shading;\n\nexport default {\n  Shading,\n  Representation,\n  Interpolation,\n};\n","import macro from 'vtk.js/Sources/macro';\nimport Constants from 'vtk.js/Sources/Rendering/Core/Property/Constants';\n\nconst { Representation, Interpolation } = Constants;\n\nfunction notImplemented(method) {\n  return () => macro.vtkErrorMacro(`vtkProperty::${method} - NOT IMPLEMENTED`);\n}\n\n// ----------------------------------------------------------------------------\n// vtkProperty methods\n// ----------------------------------------------------------------------------\n\nfunction vtkProperty(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkProperty');\n\n  publicAPI.setColor = (r, g, b) => {\n    if (model.color[0] !== r || model.color[1] !== g || model.color[2] !== b) {\n      model.color[0] = r;\n      model.color[1] = g;\n      model.color[2] = b;\n      publicAPI.modified();\n    }\n\n    publicAPI.setDiffuseColor(model.color);\n    publicAPI.setAmbientColor(model.color);\n    publicAPI.setSpecularColor(model.color);\n  };\n\n  publicAPI.computeCompositeColor = notImplemented('ComputeCompositeColor');\n  publicAPI.getColor = () => {\n    // Inline computeCompositeColor\n    let norm = 0.0;\n    if (model.ambient + model.diffuse + model.specular > 0) {\n      norm = 1.0 / (model.ambient + model.diffuse + model.specular);\n    }\n\n    for (let i = 0; i < 3; i++) {\n      model.color[i] =\n        norm *\n        (model.ambient * model.ambientColor[i] +\n          model.diffuse * model.diffuseColor[i] +\n          model.specular * model.specularColor[i]);\n    }\n\n    return [].concat(model.color);\n  };\n\n  publicAPI.addShaderVariable = notImplemented('AddShaderVariable');\n\n  publicAPI.setInterpolationToFlat = () =>\n    publicAPI.setInterpolation(Interpolation.FLAT);\n  publicAPI.setInterpolationToGouraud = () =>\n    publicAPI.setInterpolation(Interpolation.GOURAUD);\n  publicAPI.setInterpolationToPhong = () =>\n    publicAPI.setInterpolation(Interpolation.PHONG);\n  publicAPI.getInterpolationAsString = () =>\n    macro.enumToString(Interpolation, model.interpolation);\n\n  publicAPI.setRepresentationToWireframe = () =>\n    publicAPI.setRepresentation(Representation.WIREFRAME);\n  publicAPI.setRepresentationToSurface = () =>\n    publicAPI.setRepresentation(Representation.SURFACE);\n  publicAPI.setRepresentationToPoints = () =>\n    publicAPI.setRepresentation(Representation.POINTS);\n  publicAPI.getRepresentationAsString = () =>\n    macro.enumToString(Representation, model.representation);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  color: [1, 1, 1],\n  ambientColor: [1, 1, 1],\n  diffuseColor: [1, 1, 1],\n  specularColor: [1, 1, 1],\n  edgeColor: [0, 0, 0],\n\n  ambient: 0,\n  diffuse: 1,\n  specular: 0,\n  specularPower: 1,\n  opacity: 1,\n  interpolation: Interpolation.GOURAUD,\n  representation: Representation.SURFACE,\n  edgeVisibility: false,\n  backfaceCulling: false,\n  frontfaceCulling: false,\n  pointSize: 1,\n  lineWidth: 1,\n  lighting: true,\n\n  shading: false,\n  materialName: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n\n  macro.setGet(publicAPI, model, [\n    'lighting',\n    'interpolation',\n    'ambient',\n    'diffuse',\n    'specular',\n    'specularPower',\n    'opacity',\n    'edgeVisibility',\n    'lineWidth',\n    'pointSize',\n    'backfaceCulling',\n    'frontfaceCulling',\n    'representation',\n  ]);\n  macro.setGetArray(\n    publicAPI,\n    model,\n    ['ambientColor', 'specularColor', 'diffuseColor', 'edgeColor'],\n    3\n  );\n\n  // Object methods\n  vtkProperty(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkProperty');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend }, Constants);\n","import * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {vec4} result the receiving vector\r\n * @param {vec4} U the first vector\r\n * @param {vec4} V the second vector\r\n * @param {vec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n;\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport var length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import { mat4, quat, vec3 } from 'gl-matrix';\n\nimport macro from 'vtk.js/Sources/macro';\nimport vtkBufferObject from 'vtk.js/Sources/Rendering/OpenGL/BufferObject';\nimport { ObjectType } from 'vtk.js/Sources/Rendering/OpenGL/BufferObject/Constants';\nimport { Representation } from 'vtk.js/Sources/Rendering/Core/Property/Constants';\n\nconst { vtkDebugMacro, vtkErrorMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// Static functions\n// ----------------------------------------------------------------------------\n\nfunction computeInverseShiftAndScaleMatrix(coordShift, coordScale) {\n  const inverseScale = vec3.create();\n  vec3.inverse(inverseScale, coordScale);\n\n  const matrix = mat4.create();\n  mat4.fromRotationTranslationScale(\n    matrix,\n    quat.create(),\n    coordShift,\n    inverseScale\n  );\n\n  return matrix;\n}\n\nfunction shouldApplyCoordShiftAndScale(coordShift, coordScale) {\n  if (coordShift === null || coordScale === null) {\n    return false;\n  }\n\n  return !(\n    vec3.exactEquals(coordShift, [0, 0, 0]) &&\n    vec3.exactEquals(coordScale, [1, 1, 1])\n  );\n}\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLCellArrayBufferObject methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLCellArrayBufferObject(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLCellArrayBufferObject');\n\n  publicAPI.setType(ObjectType.ARRAY_BUFFER);\n\n  publicAPI.createVBO = (cellArray, inRep, outRep, options) => {\n    if (!cellArray.getData() || !cellArray.getData().length) {\n      model.elementCount = 0;\n      return 0;\n    }\n\n    // Figure out how big each block will be, currently 6 or 7 floats.\n    model.blockSize = 3;\n    model.vertexOffset = 0;\n    model.normalOffset = 0;\n    model.tCoordOffset = 0;\n    model.tCoordComponents = 0;\n    model.colorComponents = 0;\n    model.colorOffset = 0;\n    model.customData = [];\n\n    const pointData = options.points.getData();\n    let normalData = null;\n    let tcoordData = null;\n    let colorData = null;\n\n    const colorComponents = options.colors\n      ? options.colors.getNumberOfComponents()\n      : 0;\n    const textureComponents = options.tcoords\n      ? options.tcoords.getNumberOfComponents()\n      : 0;\n\n    // the values of 4 below are because floats are 4 bytes\n\n    if (options.normals) {\n      model.normalOffset = 4 * model.blockSize;\n      model.blockSize += 3;\n      normalData = options.normals.getData();\n    }\n\n    if (options.customAttributes) {\n      options.customAttributes.forEach((a) => {\n        if (a) {\n          model.customData.push({\n            data: a.getData(),\n            offset: 4 * model.blockSize,\n            components: a.getNumberOfComponents(),\n            name: a.getName(),\n          });\n          model.blockSize += a.getNumberOfComponents();\n        }\n      });\n    }\n\n    if (options.tcoords) {\n      model.tCoordOffset = 4 * model.blockSize;\n      model.tCoordComponents = textureComponents;\n      model.blockSize += textureComponents;\n      tcoordData = options.tcoords.getData();\n    }\n\n    if (options.colors) {\n      model.colorComponents = options.colors.getNumberOfComponents();\n      model.colorOffset = 0;\n      colorData = options.colors.getData();\n      if (!model.colorBO) {\n        model.colorBO = vtkBufferObject.newInstance();\n      }\n      model.colorBO.setOpenGLRenderWindow(model.openGLRenderWindow);\n    } else {\n      model.colorBO = null;\n    }\n    model.stride = 4 * model.blockSize;\n\n    let pointIdx = 0;\n    let normalIdx = 0;\n    let tcoordIdx = 0;\n    let colorIdx = 0;\n    let custIdx = 0;\n    let cellCount = 0;\n    let addAPoint;\n\n    const cellBuilders = {\n      // easy, every input point becomes an output point\n      anythingToPoints(numPoints, cellPts, offset) {\n        for (let i = 0; i < numPoints; ++i) {\n          addAPoint(cellPts[offset + i]);\n        }\n      },\n      linesToWireframe(numPoints, cellPts, offset) {\n        // for lines we add a bunch of segments\n        for (let i = 0; i < numPoints - 1; ++i) {\n          addAPoint(cellPts[offset + i]);\n          addAPoint(cellPts[offset + i + 1]);\n        }\n      },\n      polysToWireframe(numPoints, cellPts, offset) {\n        // for polys we add a bunch of segments and close it\n        for (let i = 0; i < numPoints; ++i) {\n          addAPoint(cellPts[offset + i]);\n          addAPoint(cellPts[offset + ((i + 1) % numPoints)]);\n        }\n      },\n      stripsToWireframe(numPoints, cellPts, offset) {\n        // for strips we add a bunch of segments and close it\n        for (let i = 0; i < numPoints - 1; ++i) {\n          addAPoint(cellPts[offset + i]);\n          addAPoint(cellPts[offset + i + 1]);\n        }\n        for (let i = 0; i < numPoints - 2; i++) {\n          addAPoint(cellPts[offset + i]);\n          addAPoint(cellPts[offset + i + 2]);\n        }\n      },\n      polysToSurface(npts, cellPts, offset) {\n        if (npts < 3) {\n          // ignore degenerate triangles\n          vtkDebugMacro('skipping degenerate triangle');\n        } else {\n          for (let i = 0; i < npts - 2; i++) {\n            addAPoint(cellPts[offset + 0]);\n            addAPoint(cellPts[offset + i + 1]);\n            addAPoint(cellPts[offset + i + 2]);\n          }\n        }\n      },\n      stripsToSurface(npts, cellPts, offset) {\n        for (let i = 0; i < npts - 2; i++) {\n          addAPoint(cellPts[offset + i]);\n          addAPoint(cellPts[offset + i + 1 + (i % 2)]);\n          addAPoint(cellPts[offset + i + 1 + ((i + 1) % 2)]);\n        }\n      },\n    };\n\n    const cellCounters = {\n      // easy, every input point becomes an output point\n      anythingToPoints(numPoints, cellPts) {\n        return numPoints;\n      },\n      linesToWireframe(numPoints, cellPts) {\n        return (numPoints - 1) * 2;\n      },\n      polysToWireframe(numPoints, cellPts) {\n        return numPoints * 2;\n      },\n      stripsToWireframe(numPoints, cellPts) {\n        return numPoints * 4 - 6;\n      },\n      polysToSurface(npts, cellPts) {\n        if (npts < 3) {\n          return 0;\n        }\n        return (npts - 2) * 3;\n      },\n      stripsToSurface(npts, cellPts, offset) {\n        return (npts - 2) * 3;\n      },\n    };\n\n    let func = null;\n    let countFunc = null;\n    if (outRep === Representation.POINTS || inRep === 'verts') {\n      func = cellBuilders.anythingToPoints;\n      countFunc = cellCounters.anythingToPoints;\n    } else if (outRep === Representation.WIREFRAME || inRep === 'lines') {\n      func = cellBuilders[`${inRep}ToWireframe`];\n      countFunc = cellCounters[`${inRep}ToWireframe`];\n    } else {\n      func = cellBuilders[`${inRep}ToSurface`];\n      countFunc = cellCounters[`${inRep}ToSurface`];\n    }\n\n    const array = cellArray.getData();\n    const size = array.length;\n    let caboCount = 0;\n    for (let index = 0; index < size; ) {\n      caboCount += countFunc(array[index], array);\n      index += array[index] + 1;\n    }\n\n    let packedUCVBO = null;\n    const packedVBO = new Float32Array(caboCount * model.blockSize);\n    if (colorData) {\n      packedUCVBO = new Uint8Array(caboCount * 4);\n    }\n    let vboidx = 0;\n    let ucidx = 0;\n\n    // Find out if shift scale should be used\n    // Compute squares of diagonal size and distance from the origin\n    let diagSq = 0.0;\n    let distSq = 0.0;\n    for (let i = 0; i < 3; ++i) {\n      const range = options.points.getRange(i);\n\n      const delta = range[1] - range[0];\n      diagSq += delta * delta;\n\n      const distShift = 0.5 * (range[1] + range[0]);\n      distSq += distShift * distShift;\n    }\n\n    const useShiftAndScale =\n      diagSq > 0 &&\n      (Math.abs(distSq) / diagSq > 1.0e6 || // If data is far from the origin relative to its size\n      Math.abs(Math.log10(diagSq)) > 3.0 || // If the size is huge when not far from the origin\n        (diagSq === 0 && distSq > 1.0e6)); // If data is a point, but far from the origin\n\n    if (useShiftAndScale) {\n      // Compute shift and scale vectors\n      const coordShift = vec3.create();\n      const coordScale = vec3.create();\n      for (let i = 0; i < 3; ++i) {\n        const range = options.points.getRange(i);\n        const delta = range[1] - range[0];\n\n        coordShift[i] = 0.5 * (range[1] + range[0]);\n        coordScale[i] = delta > 0 ? 1.0 / delta : 1.0;\n      }\n      publicAPI.setCoordShiftAndScale(coordShift, coordScale);\n    } else if (model.coordShiftAndScaleEnabled === true) {\n      // Make sure to reset\n      publicAPI.setCoordShiftAndScale(null, null);\n    }\n\n    addAPoint = function addAPointFunc(i) {\n      // Vertices\n      pointIdx = i * 3;\n\n      if (!model.coordShiftAndScaleEnabled) {\n        packedVBO[vboidx++] = pointData[pointIdx++];\n        packedVBO[vboidx++] = pointData[pointIdx++];\n        packedVBO[vboidx++] = pointData[pointIdx++];\n      } else {\n        // Apply shift and scale\n        packedVBO[vboidx++] =\n          (pointData[pointIdx++] - model.coordShift[0]) * model.coordScale[0];\n        packedVBO[vboidx++] =\n          (pointData[pointIdx++] - model.coordShift[1]) * model.coordScale[1];\n        packedVBO[vboidx++] =\n          (pointData[pointIdx++] - model.coordShift[2]) * model.coordScale[2];\n      }\n\n      if (normalData !== null) {\n        if (options.haveCellNormals) {\n          normalIdx = (cellCount + options.cellOffset) * 3;\n        } else {\n          normalIdx = i * 3;\n        }\n        packedVBO[vboidx++] = normalData[normalIdx++];\n        packedVBO[vboidx++] = normalData[normalIdx++];\n        packedVBO[vboidx++] = normalData[normalIdx++];\n      }\n\n      model.customData.forEach((attr) => {\n        custIdx = i * attr.components;\n        for (let j = 0; j < attr.components; ++j) {\n          packedVBO[vboidx++] = attr.data[custIdx++];\n        }\n      });\n\n      if (tcoordData !== null) {\n        tcoordIdx = i * textureComponents;\n        for (let j = 0; j < textureComponents; ++j) {\n          packedVBO[vboidx++] = tcoordData[tcoordIdx++];\n        }\n      }\n\n      if (colorData !== null) {\n        if (options.haveCellScalars) {\n          colorIdx = (cellCount + options.cellOffset) * colorComponents;\n        } else {\n          colorIdx = i * colorComponents;\n        }\n        packedUCVBO[ucidx++] = colorData[colorIdx++];\n        packedUCVBO[ucidx++] = colorData[colorIdx++];\n        packedUCVBO[ucidx++] = colorData[colorIdx++];\n        packedUCVBO[ucidx++] =\n          colorComponents === 4 ? colorData[colorIdx++] : 255;\n      }\n    };\n\n    for (let index = 0; index < size; ) {\n      func(array[index], array, index + 1);\n      index += array[index] + 1;\n      cellCount++;\n    }\n    model.elementCount = caboCount;\n    publicAPI.upload(packedVBO, ObjectType.ARRAY_BUFFER);\n    if (model.colorBO) {\n      model.colorBOStride = 4;\n      model.colorBO.upload(packedUCVBO, ObjectType.ARRAY_BUFFER);\n    }\n    return cellCount;\n  };\n\n  publicAPI.setCoordShiftAndScale = (coordShift, coordScale) => {\n    if (\n      coordShift !== null &&\n      (coordShift.constructor !== Float32Array || coordShift.length !== 3)\n    ) {\n      vtkErrorMacro('Wrong type for coordShift, expected vec3 or null');\n      return;\n    }\n\n    if (\n      coordScale !== null &&\n      (coordScale.constructor !== Float32Array || coordScale.length !== 3)\n    ) {\n      vtkErrorMacro('Wrong type for coordScale, expected vec3 or null');\n      return;\n    }\n\n    if (\n      model.coordShift === null ||\n      coordShift === null ||\n      !vec3.equals(coordShift, model.coordShift)\n    ) {\n      model.coordShift = coordShift;\n    }\n\n    if (\n      model.coordScale === null ||\n      coordScale === null ||\n      !vec3.equals(coordScale, model.coordScale)\n    ) {\n      model.coordScale = coordScale;\n    }\n\n    model.coordShiftAndScaleEnabled = shouldApplyCoordShiftAndScale(\n      model.coordShift,\n      model.coordScale\n    );\n\n    if (model.coordShiftAndScaleEnabled) {\n      model.inverseShiftAndScaleMatrix = computeInverseShiftAndScaleMatrix(\n        model.coordShift,\n        model.coordScale\n      );\n    } else {\n      model.inverseShiftAndScaleMatrix = null;\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  elementCount: 0,\n  stride: 0,\n  colorBOStride: 0,\n  vertexOffset: 0,\n  normalOffset: 0,\n  tCoordOffset: 0,\n  tCoordComponents: 0,\n  colorOffset: 0,\n  colorComponents: 0,\n  tcoordBO: null,\n  customData: [],\n  coordShift: null,\n  coordScale: null,\n  coordShiftAndScaleEnabled: false,\n  inverseShiftAndScaleMatrix: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkBufferObject.extend(publicAPI, model, initialValues);\n\n  macro.setGet(publicAPI, model, [\n    'colorBO',\n    'elementCount',\n    'stride',\n    'colorBOStride',\n    'vertexOffset',\n    'normalOffset',\n    'tCoordOffset',\n    'tCoordComponents',\n    'colorOffset',\n    'colorComponents',\n    'customData',\n  ]);\n\n  macro.get(publicAPI, model, [\n    'coordShift',\n    'coordScale',\n    'coordShiftAndScaleEnabled',\n    'inverseShiftAndScaleMatrix',\n  ]);\n\n  // Object specific methods\n  vtkOpenGLCellArrayBufferObject(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import macro from 'vtk.js/Sources/macro';\n\nconst { vtkErrorMacro } = macro;\n\n// export const SHADER_TYPES = ['Vertex', 'Fragment', 'Geometry', 'Unknown'];\n\n// ----------------------------------------------------------------------------\n// vtkShader methods\n// ----------------------------------------------------------------------------\n\nfunction vtkShader(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkShader');\n\n  publicAPI.compile = () => {\n    let stype = model.context.VERTEX_SHADER;\n\n    if (\n      !model.source ||\n      !model.source.length ||\n      model.shaderType === 'Unknown'\n    ) {\n      return false;\n    }\n\n    // Ensure we delete the previous shader if necessary.\n    if (model.handle !== 0) {\n      model.context.deleteShader(model.handle);\n      model.handle = 0;\n    }\n\n    switch (model.shaderType) {\n      // case vtkShader::Geometry:\n      //   type = GL_GEOMETRY_SHADER;\n      //   break;\n      case 'Fragment':\n        stype = model.context.FRAGMENT_SHADER;\n        break;\n      case 'Vertex':\n      default:\n        stype = model.context.VERTEX_SHADER;\n        break;\n    }\n\n    model.handle = model.context.createShader(stype);\n    model.context.shaderSource(model.handle, model.source);\n    model.context.compileShader(model.handle);\n    const isCompiled = model.context.getShaderParameter(\n      model.handle,\n      model.context.COMPILE_STATUS\n    );\n    if (!isCompiled) {\n      const lastError = model.context.getShaderInfoLog(model.handle);\n      vtkErrorMacro(`Error compiling shader '${model.source}': ${lastError}`);\n      model.context.deleteShader(model.handle);\n      model.handle = 0;\n      return false;\n    }\n\n    // The shader compiled, store its handle and return success.\n    return true;\n  };\n\n  publicAPI.cleanup = () => {\n    if (model.shaderType === 'Unknown' || model.handle === 0) {\n      return;\n    }\n\n    model.context.deleteShader(model.handle);\n    model.handle = 0;\n    model.dirty = true;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  shaderType: 'Unknown',\n  source: '',\n  error: '',\n  handle: 0,\n  dirty: false,\n  context: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, [\n    'shaderType',\n    'source',\n    'error',\n    'handle',\n    'context',\n  ]);\n\n  // Object methods\n  vtkShader(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkShader');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import macro from 'vtk.js/Sources/macro';\nimport vtkShader from 'vtk.js/Sources/Rendering/OpenGL/Shader';\n\nconst { vtkErrorMacro } = macro;\n\n// perform in place string substitutions, indicate if a substitution was done\n// this is useful for building up shader strings which typically involve\n// lots of string substitutions. Return true if a substitution was done.\nfunction substitute(source, search, replace, all = true) {\n  const replaceStr = Array.isArray(replace) ? replace.join('\\n') : replace;\n  let replaced = false;\n  if (source.search(search) !== -1) {\n    replaced = true;\n  }\n  let gflag = '';\n  if (all) {\n    gflag = 'g';\n  }\n  const regex = new RegExp(search, gflag);\n  const resultstr = source.replace(regex, replaceStr);\n  return { replace: replaced, result: resultstr };\n}\n\n// ----------------------------------------------------------------------------\n// vtkShaderProgram methods\n// ----------------------------------------------------------------------------\n\nfunction vtkShaderProgram(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkShaderProgram');\n\n  publicAPI.compileShader = () => {\n    if (!model.vertexShader.compile()) {\n      vtkErrorMacro(\n        model.vertexShader\n          .getSource()\n          .split('\\n')\n          .map((line, index) => `${index}: ${line}`)\n          .join('\\n')\n      );\n      vtkErrorMacro(model.vertexShader.getError());\n      return 0;\n    }\n    if (!model.fragmentShader.compile()) {\n      vtkErrorMacro(\n        model.fragmentShader\n          .getSource()\n          .split('\\n')\n          .map((line, index) => `${index}: ${line}`)\n          .join('\\n')\n      );\n      vtkErrorMacro(model.fragmentShader.getError());\n      return 0;\n    }\n    // skip geometry for now\n    if (!publicAPI.attachShader(model.vertexShader)) {\n      vtkErrorMacro(model.error);\n      return 0;\n    }\n    if (!publicAPI.attachShader(model.fragmentShader)) {\n      vtkErrorMacro(model.error);\n      return 0;\n    }\n\n    if (!publicAPI.link()) {\n      vtkErrorMacro(`Links failed: ${model.error}`);\n      return 0;\n    }\n\n    publicAPI.setCompiled(true);\n    return 1;\n  };\n\n  publicAPI.cleanup = () => {\n    if (model.shaderType === 'Unknown' || model.handle === 0) {\n      return;\n    }\n\n    model.context.deleteShader(model.handle);\n    model.handle = 0;\n  };\n\n  publicAPI.bind = () => {\n    if (!model.linked && !model.link()) {\n      return false;\n    }\n\n    model.context.useProgram(model.handle);\n    publicAPI.setBound(true);\n    return true;\n  };\n\n  publicAPI.isBound = () => !!model.bound;\n\n  publicAPI.release = () => {\n    model.context.useProgram(null);\n    publicAPI.setBound(false);\n  };\n\n  publicAPI.setContext = (ctx) => {\n    model.vertexShader.setContext(ctx);\n    model.fragmentShader.setContext(ctx);\n    model.geometryShader.setContext(ctx);\n  };\n\n  publicAPI.link = () => {\n    if (model.inked) {\n      return true;\n    }\n\n    if (model.handle === 0) {\n      model.error =\n        'Program has not been initialized, and/or does not have shaders.';\n      return false;\n    }\n\n    // clear out the list of uniforms used\n    model.uniformLocs = {};\n\n    model.context.linkProgram(model.handle);\n    const isCompiled = model.context.getProgramParameter(\n      model.handle,\n      model.context.LINK_STATUS\n    );\n    if (!isCompiled) {\n      const lastError = model.context.getProgramInfoLog(model.handle);\n      vtkErrorMacro(`Error linking shader ${lastError}`);\n      model.handle = 0;\n      return false;\n    }\n\n    publicAPI.setLinked(true);\n    model.attributeLocs = {};\n    return true;\n  };\n\n  publicAPI.setUniformMatrix = (name, v) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    model.context.uniformMatrix4fv(location, false, v);\n    return true;\n  };\n\n  publicAPI.setUniformMatrix3x3 = (name, v) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    model.context.uniformMatrix3fv(location, false, v);\n    return true;\n  };\n\n  publicAPI.setUniformf = (name, v) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    model.context.uniform1f(location, v);\n    return true;\n  };\n\n  publicAPI.setUniformfv = (name, v) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    model.context.uniform1fv(location, v);\n    return true;\n  };\n\n  publicAPI.setUniformi = (name, v) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    model.context.uniform1i(location, v);\n    return true;\n  };\n\n  publicAPI.setUniformiv = (name, v) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    model.context.uniform1iv(location, v);\n    return true;\n  };\n\n  publicAPI.setUniform2f = (name, v1, v2) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    if (v2 === undefined) {\n      throw new RangeError('Invalid number of values for array');\n    }\n    model.context.uniform2f(location, v1, v2);\n    return true;\n  };\n\n  publicAPI.setUniform2fv = (name, v) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    model.context.uniform2fv(location, v);\n    return true;\n  };\n\n  publicAPI.setUniform2i = (name, v1, v2) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    if (v2 === undefined) {\n      throw new RangeError('Invalid number of values for array');\n    }\n    model.context.uniform2i(location, v1, v2);\n    return true;\n  };\n\n  publicAPI.setUniform2iv = (name, v) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    model.context.uniform2iv(location, v);\n    return true;\n  };\n\n  publicAPI.setUniform3f = (name, a1, a2, a3) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    if (a3 === undefined) {\n      throw new RangeError('Invalid number of values for array');\n    }\n    model.context.uniform3f(location, a1, a2, a3);\n    return true;\n  };\n\n  publicAPI.setUniform3fArray = (name, a) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    if (!Array.isArray(a) || a.length !== 3) {\n      throw new RangeError('Invalid number of values for array');\n    }\n    model.context.uniform3f(location, a[0], a[1], a[2]);\n    return true;\n  };\n\n  publicAPI.setUniform3fv = (name, v) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    model.context.uniform3fv(location, v);\n    return true;\n  };\n\n  publicAPI.setUniform3i = (name, ...args) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    let array = args;\n    // allow an array passed as a single argument\n    if (array.length === 1 && Array.isArray(array[0])) {\n      array = array[0];\n    }\n    if (array.length !== 3) {\n      throw new RangeError('Invalid number of values for array');\n    }\n    model.context.uniform3i(location, array[0], array[1], array[2]);\n    return true;\n  };\n\n  publicAPI.setUniform3iv = (name, v) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    model.context.uniform3iv(location, v);\n    return true;\n  };\n\n  publicAPI.setUniform4f = (name, ...args) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    let array = args;\n    // allow an array passed as a single argument\n    if (array.length === 1 && Array.isArray(array[0])) {\n      array = array[0];\n    }\n    if (array.length !== 4) {\n      throw new RangeError('Invalid number of values for array');\n    }\n    model.context.uniform4f(location, array[0], array[1], array[2], array[3]);\n    return true;\n  };\n\n  publicAPI.setUniform4fv = (name, v) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    model.context.uniform4fv(location, v);\n    return true;\n  };\n\n  publicAPI.setUniform4i = (name, ...args) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    let array = args;\n    // allow an array passed as a single argument\n    if (array.length === 1 && Array.isArray(array[0])) {\n      array = array[0];\n    }\n    if (array.length !== 4) {\n      throw new RangeError('Invalid number of values for array');\n    }\n    model.context.uniform4i(location, array[0], array[1], array[2], array[3]);\n    return true;\n  };\n\n  publicAPI.setUniform4iv = (name, v) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    model.context.uniform4iv(location, v);\n    return true;\n  };\n\n  publicAPI.setUniform4fv = (name, count, v) => {\n    const location = publicAPI.findUniform(name);\n    if (location === -1) {\n      model.error = `Could not set uniform ${name} . No such uniform.`;\n      return false;\n    }\n    model.context.uniform4fv(location, v);\n    return true;\n  };\n\n  publicAPI.findUniform = (name) => {\n    if (!name || !model.linked) {\n      return -1;\n    }\n\n    // see if we have cached the result\n    let loc = model.uniformLocs[name];\n    if (loc !== undefined) {\n      return loc;\n    }\n\n    loc = model.context.getUniformLocation(model.handle, name);\n    if (loc === null) {\n      model.error = `Uniform ${name} not found in current shader program.`;\n      model.uniformLocs[name] = -1;\n      return -1;\n    }\n\n    model.uniformLocs[name] = loc;\n    return loc;\n  };\n\n  publicAPI.isUniformUsed = (name) => {\n    if (!name) {\n      return false;\n    }\n\n    // see if we have cached the result\n    let loc = model.uniformLocs[name];\n    if (loc !== undefined) {\n      return loc !== null;\n    }\n\n    if (!model.linked) {\n      vtkErrorMacro(\n        'attempt to find uniform when the shader program is not linked'\n      );\n      return false;\n    }\n\n    loc = model.context.getUniformLocation(model.handle, name);\n    model.uniformLocs[name] = loc;\n\n    if (loc === null) {\n      return false;\n    }\n\n    return true;\n  };\n\n  publicAPI.isAttributeUsed = (name) => {\n    if (!name) {\n      return false;\n    }\n\n    // see if we have cached the result\n    let loc = Object.keys(model.attributeLocs).indexOf(name);\n    if (loc !== -1) {\n      return true;\n    }\n\n    if (!model.linked) {\n      vtkErrorMacro(\n        'attempt to find uniform when the shader program is not linked'\n      );\n      return false;\n    }\n\n    loc = model.context.getAttribLocation(model.handle, name);\n    if (loc === -1) {\n      return false;\n    }\n    model.attributeLocs[name] = loc;\n\n    return true;\n  };\n\n  publicAPI.attachShader = (shader) => {\n    if (shader.getHandle() === 0) {\n      model.error = 'Shader object was not initialized, cannot attach it.';\n      return false;\n    }\n    if (shader.getShaderType() === 'Unknown') {\n      model.error = 'Shader object is of type Unknown and cannot be used.';\n      return false;\n    }\n\n    if (model.handle === 0) {\n      const thandle = model.context.createProgram();\n      if (thandle === 0) {\n        model.error = 'Could not create shader program.';\n        return false;\n      }\n      model.handle = thandle;\n      model.linked = false;\n    }\n\n    if (shader.getShaderType() === 'Vertex') {\n      if (model.vertexShaderHandle !== 0) {\n        model.comntext.detachShader(model.handle, model.vertexShaderHandle);\n      }\n      model.vertexShaderHandle = shader.getHandle();\n    }\n    if (shader.getShaderType() === 'Fragment') {\n      if (model.fragmentShaderHandle !== 0) {\n        model.context.detachShader(model.handle, model.fragmentShaderHandle);\n      }\n      model.fragmentShaderHandle = shader.getHandle();\n    }\n\n    model.context.attachShader(model.handle, shader.getHandle());\n    publicAPI.setLinked(false);\n    return true;\n  };\n\n  publicAPI.detachShader = (shader) => {\n    if (shader.getHandle() === 0) {\n      model.error = 'shader object was not initialized, cannot attach it.';\n      return false;\n    }\n    if (shader.getShaderType() === 'Unknown') {\n      model.error = 'Shader object is of type Unknown and cannot be used.';\n      return false;\n    }\n    if (model.handle === 0) {\n      model.errror = 'This shader prorgram has not been initialized yet.';\n    }\n\n    switch (shader.getShaderType()) {\n      case 'Vertex':\n        if (model.vertexShaderHandle !== shader.getHandle()) {\n          model.error = 'The supplied shader was not attached to this program.';\n          return false;\n        }\n        model.context.detachShader(model.handle, shader.getHandle());\n        model.vertexShaderHandle = 0;\n        model.linked = false;\n        return true;\n      case 'Fragment':\n        if (model.fragmentShaderHandle !== shader.getHandle()) {\n          model.error = 'The supplied shader was not attached to this program.';\n          return false;\n        }\n        model.context.detachShader(model.handle, shader.getHandle());\n        model.fragmentShaderHandle = 0;\n        model.linked = false;\n        return true;\n      default:\n        return false;\n    }\n  };\n\n  publicAPI.setContext = (ctx) => {\n    model.context = ctx;\n    model.vertexShader.setContext(ctx);\n    model.fragmentShader.setContext(ctx);\n    model.geometryShader.setContext(ctx);\n  };\n\n  publicAPI.setLastCameraMTime = (mtime) => {\n    model.lastCameraMTime = mtime;\n  };\n\n  // publicAPI.enableAttributeArray = (name) => {\n  //   const location = publicAPI.findAttributeArray(name);\n  //   if (location === -1) {\n  //     model.error = `Could not enable attribute ${name} No such attribute.`;\n  //     return false;\n  //   }\n  //   model.context.enableVertexAttribArray(location);\n  //   return true;\n  // };\n\n  // publicAPI.disableAttributeArray = (name) => {\n  //   const location = publicAPI.findAttributeArray(name);\n  //   if (location === -1) {\n  //     model.error = `Could not enable attribute ${name} No such attribute.`;\n  //     return false;\n  //   }\n  //   model.context.disableVertexAttribArray(location);\n  //   return true;\n  // };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  vertexShaderHandle: 0,\n  fragmentShaderHandle: 0,\n  geometryShaderHandle: 0,\n  vertexShader: null,\n  fragmentShader: null,\n  geometryShader: null,\n\n  linked: false,\n  bound: false,\n  compiled: false,\n  error: '',\n  handle: 0,\n  numberOfOutputs: 0,\n  attributesLocs: null,\n  uniformLocs: null,\n  md5Hash: 0,\n  context: null,\n  lastCameraMTime: null,\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Instanciate internal objects\n  model.attributesLocs = {};\n  model.uniformLocs = {};\n  model.vertexShader = vtkShader.newInstance();\n  model.vertexShader.setShaderType('Vertex');\n  model.fragmentShader = vtkShader.newInstance();\n  model.fragmentShader.setShaderType('Fragment');\n  model.geometryShader = vtkShader.newInstance();\n  model.geometryShader.setShaderType('Geometry');\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['lastCameraMTime']);\n  macro.setGet(publicAPI, model, [\n    'error',\n    'handle',\n    'compiled',\n    'bound',\n    'md5Hash',\n    'vertexShader',\n    'fragmentShader',\n    'geometryShader',\n    'linked',\n  ]);\n\n  // Object methods\n  vtkShaderProgram(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkShaderProgram');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend, substitute };\n","import macro from 'vtk.js/Sources/macro';\nimport { ObjectType } from 'vtk.js/Sources/Rendering/OpenGL/BufferObject/Constants';\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLVertexArrayObject methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLVertexArrayObject(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLVertexArrayObject');\n\n  // Public API methods\n  publicAPI.exposedMethod = () => {\n    // This is a publicly exposed method of this object\n  };\n\n  publicAPI.initialize = () => {\n    model.instancingExtension = null;\n    if (!model.openGLRenderWindow.getWebgl2()) {\n      model.instancingExtension = model.context.getExtension(\n        'ANGLE_instanced_arrays'\n      );\n    }\n    if (\n      !model.forceEmulation &&\n      model.openGLRenderWindow &&\n      model.openGLRenderWindow.getWebgl2()\n    ) {\n      model.extension = null;\n      model.supported = true;\n      model.handleVAO = model.context.createVertexArray();\n    } else {\n      model.extension = model.context.getExtension('OES_vertex_array_object');\n      // Start setting up VAO\n      if (!model.forceEmulation && model.extension) {\n        model.supported = true;\n        model.handleVAO = model.extension.createVertexArrayOES();\n      } else {\n        model.supported = false;\n      }\n    }\n  };\n\n  publicAPI.isReady = () =>\n    // We either probed and allocated a VAO, or are falling back as the current\n    // hardware does not support VAOs.\n    model.handleVAO !== 0 || model.supported === false;\n\n  publicAPI.bind = () => {\n    // Either simply bind the VAO, or emulate behavior by binding all attributes.\n    if (!publicAPI.isReady()) {\n      publicAPI.initialize();\n    }\n    if (publicAPI.isReady() && model.supported) {\n      if (model.extension) {\n        model.extension.bindVertexArrayOES(model.handleVAO);\n      } else {\n        model.context.bindVertexArray(model.handleVAO);\n      }\n    } else if (publicAPI.isReady()) {\n      const gl = model.context;\n      for (let ibuff = 0; ibuff < model.buffers.length; ++ibuff) {\n        const buff = model.buffers[ibuff];\n        model.context.bindBuffer(gl.ARRAY_BUFFER, buff.buffer);\n        for (let iatt = 0; iatt < buff.attributes.length; ++iatt) {\n          const attrIt = buff.attributes[iatt];\n          const matrixCount = attrIt.isMatrix ? attrIt.size : 1;\n          for (let i = 0; i < matrixCount; ++i) {\n            gl.enableVertexAttribArray(attrIt.index + i);\n            gl.vertexAttribPointer(\n              attrIt.index + i,\n              attrIt.size,\n              attrIt.type,\n              attrIt.normalize,\n              attrIt.stride,\n              attrIt.offset + (attrIt.stride * i) / attrIt.size\n            );\n            if (attrIt.divisor > 0) {\n              if (model.instancingExtension) {\n                model.instancingExtension.vertexAttribDivisorANGLE(\n                  attrIt.index + i,\n                  1\n                );\n              } else {\n                gl.vertexAttribDivisor(attrIt.index + i, 1);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  publicAPI.release = () => {\n    // Either simply release the VAO, or emulate behavior by releasing all attributes.\n    if (publicAPI.isReady() && model.supported) {\n      if (model.extension) {\n        model.extension.bindVertexArrayOES(null);\n      } else {\n        model.context.bindVertexArray(null);\n      }\n    } else if (publicAPI.isReady()) {\n      const gl = model.context;\n      for (let ibuff = 0; ibuff < model.buffers.length; ++ibuff) {\n        const buff = model.buffers[ibuff];\n        model.context.bindBuffer(gl.ARRAY_BUFFER, buff.buffer);\n        for (let iatt = 0; iatt < buff.attributes.length; ++iatt) {\n          const attrIt = buff.attributes[iatt];\n          const matrixCount = attrIt.isMatrix ? attrIt.size : 1;\n          for (let i = 0; i < matrixCount; ++i) {\n            gl.enableVertexAttribArray(attrIt.index + i);\n            gl.vertexAttribPointer(\n              attrIt.index + i,\n              attrIt.size,\n              attrIt.type,\n              attrIt.normalize,\n              attrIt.stride,\n              attrIt.offset + (attrIt.stride * i) / attrIt.size\n            );\n            if (attrIt.divisor > 0) {\n              if (model.instancingExtension) {\n                model.instancingExtension.vertexAttribDivisorANGLE(\n                  attrIt.index + i,\n                  0\n                );\n              } else {\n                gl.vertexAttribDivisor(attrIt.index + i, 0);\n              }\n            }\n            gl.disableVertexAttribArray(attrIt.index + i);\n          }\n        }\n      }\n    }\n  };\n\n  publicAPI.shaderProgramChanged = () => {\n    publicAPI.release();\n    if (model.handleVAO) {\n      if (model.extension) {\n        model.extension.deleteVertexArrayOES(model.handleVAO);\n      } else {\n        model.context.deleteVertexArray(model.handleVAO);\n      }\n    }\n    model.handleVAO = 0;\n    model.handleProgram = 0;\n  };\n\n  publicAPI.releaseGraphicsResources = () => {\n    publicAPI.shaderProgramChanged();\n    if (model.handleVAO) {\n      if (model.extension) {\n        model.extension.deleteVertexArrayOES(model.handleVAO);\n      } else {\n        model.context.deleteVertexArray(model.handleVAO);\n      }\n    }\n    model.handleVAO = 0;\n    model.supported = true;\n    model.handleProgram = 0;\n  };\n\n  publicAPI.addAttributeArray = (\n    program,\n    buffer,\n    name,\n    offset,\n    stride,\n    elementType,\n    elementTupleSize,\n    normalize\n  ) =>\n    publicAPI.addAttributeArrayWithDivisor(\n      program,\n      buffer,\n      name,\n      offset,\n      stride,\n      elementType,\n      elementTupleSize,\n      normalize,\n      0,\n      false\n    );\n\n  publicAPI.addAttributeArrayWithDivisor = (\n    program,\n    buffer,\n    name,\n    offset,\n    stride,\n    elementType,\n    elementTupleSize,\n    normalize,\n    divisor,\n    isMatrix\n  ) => {\n    if (!program) {\n      return false;\n    }\n\n    // Check the program is bound, and the buffer is valid.\n    if (\n      !program.isBound() ||\n      buffer.getHandle() === 0 ||\n      buffer.getType() !== ObjectType.ARRAY_BUFFER\n    ) {\n      return false;\n    }\n\n    // Perform initalization if necessary, ensure program matches VAOs.\n    if (model.handleProgram === 0) {\n      model.handleProgram = program.getHandle();\n    }\n    if (!publicAPI.isReady()) {\n      publicAPI.initialize();\n    }\n    if (!publicAPI.isReady() || model.handleProgram !== program.getHandle()) {\n      return false;\n    }\n\n    const gl = model.context;\n\n    const attribs = {};\n    attribs.name = name;\n    attribs.index = gl.getAttribLocation(model.handleProgram, name);\n    attribs.offset = offset;\n    attribs.stride = stride;\n    attribs.type = elementType;\n    attribs.size = elementTupleSize;\n    attribs.normalize = normalize;\n    attribs.isMatrix = isMatrix;\n    attribs.divisor = divisor;\n\n    if (attribs.Index === -1) {\n      return false;\n    }\n\n    // Always make the call as even the first use wants the attrib pointer setting\n    // up when we are emulating.\n    buffer.bind();\n    gl.enableVertexAttribArray(attribs.index);\n    gl.vertexAttribPointer(\n      attribs.index,\n      attribs.size,\n      attribs.type,\n      attribs.normalize,\n      attribs.stride,\n      attribs.offset\n    );\n\n    if (divisor > 0) {\n      if (model.instancingExtension) {\n        model.instancingExtension.vertexAttribDivisorANGLE(attribs.index, 1);\n      } else {\n        gl.vertexAttribDivisor(attribs.index, 1);\n      }\n    }\n\n    attribs.buffer = buffer.getHandle();\n\n    // If vertex array objects are not supported then build up our list.\n    if (!model.supported) {\n      // find the buffer\n      let buffFound = false;\n      for (let ibuff = 0; ibuff < model.buffers.length; ++ibuff) {\n        const buff = model.buffers[ibuff];\n        if (buff.buffer === attribs.buffer) {\n          buffFound = true;\n          let found = false;\n          for (let iatt = 0; iatt < buff.attributes.length; ++iatt) {\n            const attrIt = buff.attributes[iatt];\n            if (attrIt.name === name) {\n              found = true;\n              buff.attributes[iatt] = attribs;\n            }\n          }\n          if (!found) {\n            buff.attributes.push(attribs);\n          }\n        }\n      }\n      if (!buffFound) {\n        model.buffers.push({ buffer: attribs.buffer, attributes: [attribs] });\n      }\n    }\n    return true;\n  };\n\n  publicAPI.addAttributeMatrixWithDivisor = (\n    program,\n    buffer,\n    name,\n    offset,\n    stride,\n    elementType,\n    elementTupleSize,\n    normalize,\n    divisor\n  ) => {\n    // bind the first row of values\n    const result = publicAPI.addAttributeArrayWithDivisor(\n      program,\n      buffer,\n      name,\n      offset,\n      stride,\n      elementType,\n      elementTupleSize,\n      normalize,\n      divisor,\n      true\n    );\n\n    if (!result) {\n      return result;\n    }\n\n    const gl = model.context;\n\n    const index = gl.getAttribLocation(model.handleProgram, name);\n\n    for (let i = 1; i < elementTupleSize; i++) {\n      gl.enableVertexAttribArray(index + i);\n      gl.vertexAttribPointer(\n        index + i,\n        elementTupleSize,\n        elementType,\n        normalize,\n        stride,\n        offset + (stride * i) / elementTupleSize\n      );\n      if (divisor > 0) {\n        if (model.instancingExtension) {\n          model.instancingExtension.vertexAttribDivisorANGLE(index + i, 1);\n        } else {\n          gl.vertexAttribDivisor(index + i, 1);\n        }\n      }\n    }\n\n    return true;\n  };\n\n  publicAPI.removeAttributeArray = (name) => {\n    if (!publicAPI.isReady() || model.handleProgram === 0) {\n      return false;\n    }\n\n    // If we don't have real VAOs find the entry and remove it too.\n    if (!model.supported) {\n      for (let ibuff = 0; ibuff < model.buffers.length; ++ibuff) {\n        const buff = model.buffers[ibuff];\n        for (let iatt = 0; iatt < buff.attributes.length; ++iatt) {\n          const attrIt = buff.attributes[iatt];\n          if (attrIt.name === name) {\n            buff.attributes.splice(iatt, 1);\n            if (!buff.attributes.length) {\n              model.buffers.splice(ibuff, 1);\n            }\n            return true;\n          }\n        }\n      }\n    }\n\n    return true;\n  };\n\n  publicAPI.setOpenGLRenderWindow = (rw) => {\n    if (model.openGLRenderWindow === rw) {\n      return;\n    }\n    publicAPI.releaseGraphicsResources();\n    model.openGLRenderWindow = rw;\n    model.context = null;\n    if (rw) {\n      model.context = model.openGLRenderWindow.getContext();\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  forceEmulation: false,\n  handleVAO: 0,\n  handleProgram: 0,\n  supported: true,\n  buffers: null,\n  context: null,\n  openGLRenderWindow: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Internal objects initialization\n  model.buffers = [];\n\n  // Object methods\n  macro.obj(publicAPI, model);\n\n  // Create get-only macros\n  macro.get(publicAPI, model, ['supported']);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['forceEmulation']);\n\n  // For more macro methods, see \"Sources/macro.js\"\n\n  // Object specific methods\n  vtkOpenGLVertexArrayObject(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(\n  extend,\n  'vtkOpenGLVertexArrayObject'\n);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import macro from 'vtk.js/Sources/macro';\nimport vtkCellArrayBufferObject from 'vtk.js/Sources/Rendering/OpenGL/CellArrayBufferObject';\nimport vtkShaderProgram from 'vtk.js/Sources/Rendering/OpenGL/ShaderProgram';\nimport vtkVertexArrayObject from 'vtk.js/Sources/Rendering/OpenGL/VertexArrayObject';\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLHelper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLHelper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLHelper');\n\n  publicAPI.setOpenGLRenderWindow = (win) => {\n    model.program.setContext(win.getContext());\n    model.VAO.setOpenGLRenderWindow(win);\n    model.CABO.setOpenGLRenderWindow(win);\n  };\n\n  publicAPI.releaseGraphicsResources = (oglwin) => {\n    model.VAO.releaseGraphicsResources();\n    model.CABO.releaseGraphicsResources();\n    model.CABO.setElementCount(0);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  program: null,\n  shaderSourceTime: null,\n  VAO: null,\n  attributeUpdateTime: null,\n  CABO: null,\n  primitiveType: 0,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n\n  model.shaderSourceTime = {};\n  macro.obj(model.shaderSourceTime);\n\n  model.attributeUpdateTime = {};\n  macro.obj(model.attributeUpdateTime);\n\n  macro.setGet(publicAPI, model, [\n    'program',\n    'shaderSourceTime',\n    'VAO',\n    'attributeUpdateTime',\n    'CABO',\n    'primitiveType',\n  ]);\n\n  model.program = vtkShaderProgram.newInstance();\n  model.VAO = vtkVertexArrayObject.newInstance();\n  model.CABO = vtkCellArrayBufferObject.newInstance();\n\n  // Object methods\n  vtkOpenGLHelper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import macro from 'vtk.js/Sources/macro';\n\n// ----------------------------------------------------------------------------\n// vtkAbstractMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkAbstractMapper(publicAPI, model) {\n  publicAPI.update = () => {\n    publicAPI.getInputData();\n  };\n\n  publicAPI.addClippingPlane = (plane) => {\n    if (plane.getClassName() !== 'vtkPlane') {\n      return;\n    }\n    model.clippingPlanes.push(plane);\n  };\n\n  publicAPI.getNumberOfClippingPlanes = () => model.clippingPlanes.length;\n\n  publicAPI.removeAllClippingPlanes = () => {\n    model.clippingPlanes.length = 0;\n  };\n\n  publicAPI.removeClippingPlane = (i) => {\n    if (i < 0 || i >= 6) {\n      return;\n    }\n    model.clippingPlanes.splice(i, 1);\n  };\n\n  publicAPI.getClippingPlanes = () => model.clippingPlanes;\n\n  publicAPI.setClippingPlanes = (planes) => {\n    if (!planes) {\n      return;\n    }\n    if (!Array.isArray(planes)) {\n      publicAPI.addClippingPlane(planes);\n    } else {\n      const nbPlanes = planes.length;\n      for (let i = 0; i < nbPlanes && i < 6; i++) {\n        publicAPI.addClippingPlane(planes[i]);\n      }\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  clippingPlanes: [],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.algo(publicAPI, model, 1, 0);\n\n  if (!model.clippingPlanes) {\n    model.clippingPlanes = [];\n  }\n\n  vtkAbstractMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\nexport default { extend };\n","import macro from 'vtk.js/Sources/macro';\n\nimport vtkAbstractMapper from 'vtk.js/Sources/Rendering/Core/AbstractMapper';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\n// ----------------------------------------------------------------------------\n// vtkAbstractMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkAbstractMapper3D(publicAPI, model) {\n  publicAPI.getBounds = () => 0;\n\n  publicAPI.getBounds = (bounds) => {\n    publicAPI.getBounds();\n    for (let i = 0; i < 6; i++) {\n      bounds[i] = model.bounds[i];\n    }\n  };\n\n  publicAPI.getCenter = () => {\n    publicAPI.getBounds();\n    for (let i = 0; i < 3; i++) {\n      model.center[i] = (model.bounds[2 * i + 1] + model.bounds[2 * i]) / 2.0;\n    }\n    return model.center.slice();\n  };\n\n  publicAPI.getLength = () => {\n    let diff = 0.0;\n    let l = 0.0;\n    publicAPI.getBounds();\n    for (let i = 0; i < 3; i++) {\n      diff = model.bounds[2 * i + 1] - model.bounds[2 * i];\n      l += diff * diff;\n    }\n\n    return Math.sqrt(l);\n  };\n\n  publicAPI.getClippingPlaneInDataCoords = (propMatrix, i, hnormal) => {\n    const clipPlanes = model.clippingPlanes;\n    const mat = propMatrix;\n\n    if (clipPlanes) {\n      const n = clipPlanes.length;\n      if (i >= 0 && i < n) {\n        // Get the plane\n        const plane = clipPlanes[i];\n        const normal = plane.getNormal();\n        const origin = plane.getOrigin();\n\n        // Compute the plane equation\n        const v1 = normal[0];\n        const v2 = normal[1];\n        const v3 = normal[2];\n        const v4 = -(v1 * origin[0] + v2 * origin[1] + v3 * origin[2]);\n\n        // Transform normal from world to data coords\n        hnormal[0] = v1 * mat[0] + v2 * mat[4] + v3 * mat[8] + v4 * mat[12];\n        hnormal[1] = v1 * mat[1] + v2 * mat[5] + v3 * mat[9] + v4 * mat[13];\n        hnormal[2] = v1 * mat[2] + v2 * mat[6] + v3 * mat[10] + v4 * mat[14];\n        hnormal[3] = v1 * mat[3] + v2 * mat[7] + v3 * mat[11] + v4 * mat[15];\n\n        return;\n      }\n    }\n    macro.vtkErrorMacro(`Clipping plane index ${i} is out of range.`);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  bounds: [1, -1, 1, -1, 1, -1],\n  center: [0, 0, 0],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  // Inheritance\n  vtkAbstractMapper.extend(publicAPI, model, initialValues);\n\n  if (!model.bounds) {\n    vtkMath.uninitializeBounds(model.bounds);\n  }\n\n  if (!model.center) {\n    model.center = [0.0, 0.0, 0.0];\n  }\n\n  vtkAbstractMapper3D(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport default { extend };\n","export const VectorMode = {\n  MAGNITUDE: 0,\n  COMPONENT: 1,\n  RGBCOLORS: 2,\n};\n\nexport const ScalarMappingTarget = {\n  LUMINANCE: 1,\n  LUMINANCE_ALPHA: 2,\n  RGB: 3,\n  RGBA: 4,\n};\n\nexport default {\n  VectorMode,\n  ScalarMappingTarget,\n};\n","export const ColorMode = {\n  DEFAULT: 0,\n  MAP_SCALARS: 1,\n  DIRECT_SCALARS: 2,\n};\n\nexport const ScalarMode = {\n  DEFAULT: 0,\n  USE_POINT_DATA: 1,\n  USE_CELL_DATA: 2,\n  USE_POINT_FIELD_DATA: 3,\n  USE_CELL_FIELD_DATA: 4,\n  USE_FIELD_DATA: 5,\n};\n\nexport const GetArray = {\n  BY_ID: 0,\n  BY_NAME: 1,\n};\n\nexport default {\n  ColorMode,\n  GetArray,\n  ScalarMode,\n};\n","import macro from 'vtk.js/Sources/macro';\nimport vtkDataArray from 'vtk.js/Sources/Common/Core/DataArray';\nimport Constants from 'vtk.js/Sources/Common/Core/ScalarsToColors/Constants';\nimport vtkMapper from 'vtk.js/Sources/Rendering/Core/Mapper/Constants'; // Need to go inside Constants otherwise dependency loop\n\nconst { ScalarMappingTarget, VectorMode } = Constants;\nconst { VtkDataTypes } = vtkDataArray;\nconst { ColorMode } = vtkMapper;\nconst { vtkErrorMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n// Add module-level functions or api that you want to expose statically via\n// the next section...\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nfunction intColorToUChar(c) {\n  return c;\n}\nfunction floatColorToUChar(c) {\n  return Math.floor(c * 255.0 + 0.5);\n}\n\n// ----------------------------------------------------------------------------\n// vtkScalarsToColors methods\n// ----------------------------------------------------------------------------\n\nfunction vtkScalarsToColors(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkScalarsToColors');\n\n  publicAPI.setVectorModeToMagnitude = () =>\n    publicAPI.setVectorMode(VectorMode.MAGNITUDE);\n  publicAPI.setVectorModeToComponent = () =>\n    publicAPI.setVectorMode(VectorMode.COMPONENT);\n  publicAPI.setVectorModeToRGBColors = () =>\n    publicAPI.setVectorMode(VectorMode.RGBCOLORS);\n\n  publicAPI.build = () => {};\n\n  publicAPI.isOpaque = () => true;\n\n  //----------------------------------------------------------------------------\n  publicAPI.setAnnotations = (values, annotations) => {\n    if ((values && !annotations) || (!values && annotations)) {\n      return;\n    }\n\n    if (\n      values &&\n      annotations &&\n      values.getNumberOfTuples() !== annotations.getNumberOfTuples()\n    ) {\n      vtkErrorMacro(\n        'Values and annotations do not have the same number of tuples so ignoring'\n      );\n      return;\n    }\n\n    model.annotationArray = [];\n\n    if (annotations && values) {\n      const num = annotations.getNumberOfTuples();\n      for (let i = 0; i < num; i++) {\n        model.annotationArray.push({\n          value: values[i],\n          annotation: annotations[i],\n        });\n      }\n    }\n\n    publicAPI.updateAnnotatedValueMap();\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.setAnnotation = (value, annotation) => {\n    let i = publicAPI.checkForAnnotatedValue(value);\n    let modified = false;\n    if (i >= 0) {\n      if (model.annotationArray[i].annotation !== annotation) {\n        model.annotationArray[i].annotation = annotation;\n        modified = true;\n      }\n    } else {\n      model.annotationArray.push({ value, annotation });\n      i = model.annotationArray.length - 1;\n      modified = true;\n    }\n    if (modified) {\n      publicAPI.updateAnnotatedValueMap();\n      publicAPI.modified();\n    }\n    return i;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getNumberOfAnnotatedValues = () => model.annotationArray.length;\n\n  //----------------------------------------------------------------------------\n  publicAPI.getAnnotatedValue = (idx) => {\n    if (idx < 0 || idx >= model.annotationArray.length) {\n      return null;\n    }\n    return model.annotationArray[idx].value;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getAnnotation = (idx) => {\n    if (model.annotationArray[idx] === undefined) {\n      return null;\n    }\n    return model.annotationArray[idx].annotation;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getAnnotatedValueIndex = (val) =>\n    model.annotationArray.length ? publicAPI.checkForAnnotatedValue(val) : -1;\n\n  //----------------------------------------------------------------------------\n  publicAPI.removeAnnotation = (value) => {\n    const i = publicAPI.checkForAnnotatedValue(value);\n    const needToRemove = i >= 0;\n    if (needToRemove) {\n      model.annotationArray.splice(i, 1);\n      publicAPI.updateAnnotatedValueMap();\n      publicAPI.modified();\n    }\n    return needToRemove;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.resetAnnotations = () => {\n    model.annotationArray = [];\n    model.annotatedValueMap = [];\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getAnnotationColor = (val, rgba) => {\n    if (model.indexedLookup) {\n      const i = publicAPI.getAnnotatedValueIndex(val);\n      publicAPI.getIndexedColor(i, rgba);\n    } else {\n      publicAPI.getColor(parseFloat(val), rgba);\n      rgba[3] = 1.0;\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.checkForAnnotatedValue = (value) =>\n    publicAPI.getAnnotatedValueIndexInternal(value);\n\n  //----------------------------------------------------------------------------\n  // An unsafe version of vtkScalarsToColors::CheckForAnnotatedValue for\n  // internal use (no pointer checks performed)\n  publicAPI.getAnnotatedValueIndexInternal = (value) => {\n    if (model.annotatedValueMap[value] !== undefined) {\n      const na = model.annotationArray.length;\n      return model.annotatedValueMap[value] % na;\n    }\n    return -1;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getIndexedColor = (val, rgba) => {\n    rgba[0] = 0.0;\n    rgba[1] = 0.0;\n    rgba[2] = 0.0;\n    rgba[3] = 0.0;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.updateAnnotatedValueMap = () => {\n    model.annotatedValueMap = [];\n\n    const na = model.annotationArray.length;\n    for (let i = 0; i < na; ++i) {\n      model.annotatedValueMap[model.annotationArray[i].value] = i;\n    }\n  };\n\n  // Description:\n  // Internal methods that map a data array into a 4-component,\n  // unsigned char RGBA array. The color mode determines the behavior\n  // of mapping. If ColorMode.DEFAULT is set, then unsigned char\n  // data arrays are treated as colors (and converted to RGBA if\n  // necessary); If ColorMode.DIRECT_SCALARS is set, then all arrays\n  // are treated as colors (integer types are clamped in the range 0-255,\n  // floating point arrays are clamped in the range 0.0-1.0. Note 'char' does\n  // not have enough values to represent a color so mapping this type is\n  // considered an error);\n  // otherwise, the data is mapped through this instance\n  // of ScalarsToColors. The component argument is used for data\n  // arrays with more than one component; it indicates which component\n  // to use to do the blending.  When the component argument is -1,\n  // then the this object uses its own selected technique to change a\n  // vector into a scalar to map.\n  publicAPI.mapScalars = (scalars, colorMode, componentIn) => {\n    const numberOfComponents = scalars.getNumberOfComponents();\n\n    let newColors = null;\n\n    // map scalars through lookup table only if needed\n    if (\n      (colorMode === ColorMode.DEFAULT &&\n        scalars.getDataType() === VtkDataTypes.UNSIGNED_CHAR) ||\n      (colorMode === ColorMode.DIRECT_SCALARS && scalars)\n    ) {\n      newColors = publicAPI.convertToRGBA(\n        scalars,\n        numberOfComponents,\n        scalars.getNumberOfTuples()\n      );\n    } else {\n      const newscalars = {\n        type: 'vtkDataArray',\n        name: 'temp',\n        numberOfComponents: 4,\n        dataType: VtkDataTypes.UNSIGNED_CHAR,\n      };\n\n      const s = new window[newscalars.dataType](\n        4 * scalars.getNumberOfTuples()\n      );\n      newscalars.values = s;\n      newscalars.size = s.length;\n      newColors = vtkDataArray.newInstance(newscalars);\n\n      let component = componentIn;\n\n      // If mapper did not specify a component, use the VectorMode\n      if (component < 0 && numberOfComponents > 1) {\n        publicAPI.mapVectorsThroughTable(\n          scalars,\n          newColors,\n          ScalarMappingTarget.RGBA,\n          -1,\n          -1\n        );\n      } else {\n        if (component < 0) {\n          component = 0;\n        }\n        if (component >= numberOfComponents) {\n          component = numberOfComponents - 1;\n        }\n\n        // Map the scalars to colors\n        publicAPI.mapScalarsThroughTable(\n          scalars,\n          newColors,\n          ScalarMappingTarget.RGBA,\n          component\n        );\n      }\n    }\n\n    return newColors;\n  };\n\n  publicAPI.mapVectorsToMagnitude = (input, output, compsToUse) => {\n    const length = input.getNumberOfTuples();\n    const inIncr = input.getNumberOfComponents();\n\n    const outputV = output.getData();\n    const inputV = input.getData();\n\n    for (let i = 0; i < length; i++) {\n      let sum = 0.0;\n      for (let j = 0; j < compsToUse; j++) {\n        sum += inputV[i * inIncr + j] * inputV[i * inIncr + j];\n      }\n      outputV[i] = Math.sqrt(sum);\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  // Map a set of vector values through the table\n  publicAPI.mapVectorsThroughTable = (\n    input,\n    output,\n    outputFormat,\n    vectorComponentIn,\n    vectorSizeIn\n  ) => {\n    let vectorMode = publicAPI.getVectorMode();\n    let vectorSize = vectorSizeIn;\n    let vectorComponent = vectorComponentIn;\n    const inComponents = input.getNumberOfComponents();\n\n    if (vectorMode === VectorMode.COMPONENT) {\n      // make sure vectorComponent is within allowed range\n      if (vectorComponent === -1) {\n        // if set to -1, use default value provided by table\n        vectorComponent = publicAPI.getVectorComponent();\n      }\n      if (vectorComponent < 0) {\n        vectorComponent = 0;\n      }\n      if (vectorComponent >= inComponents) {\n        vectorComponent = inComponents - 1;\n      }\n    } else {\n      // make sure vectorSize is within allowed range\n      if (vectorSize === -1) {\n        // if set to -1, use default value provided by table\n        vectorSize = publicAPI.getVectorSize();\n      }\n      if (vectorSize <= 0) {\n        vectorComponent = 0;\n        vectorSize = inComponents;\n      } else {\n        if (vectorComponent < 0) {\n          vectorComponent = 0;\n        }\n        if (vectorComponent >= inComponents) {\n          vectorComponent = inComponents - 1;\n        }\n        if (vectorComponent + vectorSize > inComponents) {\n          vectorSize = inComponents - vectorComponent;\n        }\n      }\n\n      if (\n        vectorMode === VectorMode.MAGNITUDE &&\n        (inComponents === 1 || vectorSize === 1)\n      ) {\n        vectorMode = VectorMode.COMPONENT;\n      }\n    }\n\n    // increment input pointer to the first component to map\n    let inputOffset = 0;\n    if (vectorComponent > 0) {\n      inputOffset = vectorComponent;\n    }\n\n    // map according to the current vector mode\n    switch (vectorMode) {\n      case VectorMode.COMPONENT: {\n        publicAPI.mapScalarsThroughTable(\n          input,\n          output,\n          outputFormat,\n          inputOffset\n        );\n        break;\n      }\n\n      default:\n      case VectorMode.MAGNITUDE: {\n        const magValues = vtkDataArray.newInstance({\n          numberOfComponents: 1,\n          values: new Float32Array(input.getNumberOfTuples()),\n        });\n\n        publicAPI.mapVectorsToMagnitude(input, magValues, vectorSize);\n        publicAPI.mapScalarsThroughTable(magValues, output, outputFormat, 0);\n        break;\n      }\n\n      case VectorMode.RGBCOLORS: {\n        // publicAPI.mapColorsToColors(\n        //   input, output, inComponents, vectorSize,\n        //   outputFormat);\n        break;\n      }\n    }\n  };\n\n  publicAPI.luminanceToRGBA = (newColors, colors, alpha, convtFun) => {\n    const a = convtFun(alpha);\n\n    const values = colors.getData();\n    const newValues = newColors.getData();\n    const size = values.length;\n    const component = 0;\n    const tuple = 1;\n\n    let count = 0;\n    for (let i = component; i < size; i += tuple) {\n      const l = convtFun(values[i]);\n      newValues[count * 4] = l;\n      newValues[count * 4 + 1] = l;\n      newValues[count * 4 + 2] = l;\n      newValues[count * 4 + 3] = a;\n      count++;\n    }\n  };\n\n  publicAPI.luminanceAlphaToRGBA = (newColors, colors, alpha, convtFun) => {\n    const values = colors.getData();\n    const newValues = newColors.getData();\n    const size = values.length;\n    const component = 0;\n    const tuple = 2;\n\n    let count = 0;\n    for (let i = component; i < size; i += tuple) {\n      const l = convtFun(values[i]);\n      newValues[count] = l;\n      newValues[count + 1] = l;\n      newValues[count + 2] = l;\n      newValues[count + 3] = convtFun(values[i + 1]) * alpha;\n      count += 4;\n    }\n  };\n\n  publicAPI.rGBToRGBA = (newColors, colors, alpha, convtFun) => {\n    const a = floatColorToUChar(alpha);\n\n    const values = colors.getData();\n    const newValues = newColors.getData();\n    const size = values.length;\n    const component = 0;\n    const tuple = 3;\n\n    let count = 0;\n    for (let i = component; i < size; i += tuple) {\n      newValues[count * 4] = convtFun(values[i]);\n      newValues[count * 4 + 1] = convtFun(values[i + 1]);\n      newValues[count * 4 + 2] = convtFun(values[i + 2]);\n      newValues[count * 4 + 3] = a;\n      count++;\n    }\n  };\n\n  publicAPI.rGBAToRGBA = (newColors, colors, alpha, convtFun) => {\n    const values = colors.getData();\n    const newValues = newColors.getData();\n    const size = values.length;\n    const component = 0;\n    const tuple = 4;\n\n    let count = 0;\n    for (let i = component; i < size; i += tuple) {\n      newValues[count * 4] = convtFun(values[i]);\n      newValues[count * 4 + 1] = convtFun(values[i + 1]);\n      newValues[count * 4 + 2] = convtFun(values[i + 2]);\n      newValues[count * 4 + 3] = convtFun(values[i + 3]) * alpha;\n      count++;\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.convertToRGBA = (colors, numComp, numTuples) => {\n    let { alpha } = model;\n    if (\n      numComp === 4 &&\n      alpha >= 1.0 &&\n      colors.getDataType() === VtkDataTypes.UNSIGNED_CHAR\n    ) {\n      return colors;\n    }\n\n    const newColors = vtkDataArray.newInstance({\n      numberOfComponents: 4,\n      empty: true,\n      size: 4 * numTuples,\n      dataType: VtkDataTypes.UNSIGNED_CHAR,\n    });\n\n    if (numTuples <= 0) {\n      return newColors;\n    }\n\n    alpha = alpha > 0 ? alpha : 0;\n    alpha = alpha < 1 ? alpha : 1;\n\n    let convtFun = intColorToUChar;\n    if (\n      colors.getDataType() === VtkDataTypes.FLOAT ||\n      colors.getDataType() === VtkDataTypes.DOUBLE\n    ) {\n      convtFun = floatColorToUChar;\n    }\n\n    switch (numComp) {\n      case 1:\n        publicAPI.luminanceToRGBA(newColors, colors, alpha, convtFun);\n        break;\n\n      case 2:\n        publicAPI.luminanceAlphaToRGBA(newColors, colors, convtFun);\n        break;\n\n      case 3:\n        publicAPI.rGBToRGBA(newColors, colors, alpha, convtFun);\n        break;\n\n      case 4:\n        publicAPI.rGBAToRGBA(newColors, colors, alpha, convtFun);\n        break;\n\n      default:\n        vtkErrorMacro('Cannot convert colors');\n        return null;\n    }\n\n    return newColors;\n  };\n\n  publicAPI.usingLogScale = () => false;\n\n  publicAPI.getNumberOfAvailableColors = () => 256 * 256 * 256;\n\n  publicAPI.setRange = (min, max) => publicAPI.setMappingRange(min, max);\n  publicAPI.getRange = (min, max) => publicAPI.getMappingRange();\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  alpha: 1.0,\n  vectorComponent: 0,\n  vectorSize: -1,\n  vectorMode: VectorMode.COMPONENT,\n  mappingRange: null,\n  annotationArray: null,\n  annotatedValueMap: null,\n  indexedLookup: false,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n\n  model.mappingRange = [0, 255];\n  model.annotationArray = [];\n  model.annotatedValueMap = [];\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, [\n    'vectorSize',\n    'vectorComponent',\n    'vectorMode',\n    'alpha',\n    'indexedLookup',\n  ]);\n\n  // Create set macros for array (needs to know size)\n  macro.setArray(publicAPI, model, ['mappingRange'], 2);\n\n  // Create get macros for array\n  macro.getArray(publicAPI, model, ['mappingRange']);\n\n  // For more macro methods, see \"Sources/macro.js\"\n\n  // Object specific methods\n  vtkScalarsToColors(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkScalarsToColors');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend }, Constants);\n","import macro from 'vtk.js/Sources/macro';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport vtkScalarsToColors from 'vtk.js/Sources/Common/Core/ScalarsToColors';\nimport { ScalarMappingTarget } from 'vtk.js/Sources/Common/Core/ScalarsToColors/Constants';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n// Add module-level functions or api that you want to expose statically via\n// the next section...\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nconst BELOW_RANGE_COLOR_INDEX = 0;\nconst ABOVE_RANGE_COLOR_INDEX = 1;\nconst NAN_COLOR_INDEX = 2;\n\n// ----------------------------------------------------------------------------\n// vtkMyClass methods\n// ----------------------------------------------------------------------------\n\nfunction vtkLookupTable(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkLookupTable');\n\n  //----------------------------------------------------------------------------\n  // Description:\n  // Return true if all of the values defining the mapping have an opacity\n  // equal to 1. Default implementation return true.\n  publicAPI.isOpaque = () => {\n    if (model.opaqueFlagBuildTime.getMTime() < publicAPI.getMTime()) {\n      let opaque = true;\n      if (model.nanColor[3] < 1.0) {\n        opaque = 0;\n      }\n      if (model.useBelowRangeColor && model.belowRangeColor[3] < 1.0) {\n        opaque = 0;\n      }\n      if (model.useAboveRangeColor && model.aboveRangeColor[3] < 1.0) {\n        opaque = 0;\n      }\n      for (let i = 3; i < model.table.length && opaque; i += 4) {\n        if (model.table[i] < 255) {\n          opaque = false;\n        }\n      }\n      model.opaqueFlag = opaque;\n      model.opaqueFlagBuildTime.modified();\n    }\n\n    return model.opaqueFlag;\n  };\n\n  publicAPI.usingLogScale = () => false;\n\n  //----------------------------------------------------------------------------\n  publicAPI.getNumberOfAvailableColors = () => model.table.length;\n\n  //----------------------------------------------------------------------------\n  // Apply shift/scale to the scalar value v and return the index.\n  publicAPI.linearIndexLookup = (v, p) => {\n    let dIndex = 0;\n\n    if (v < p.range[0]) {\n      dIndex = p.maxIndex + BELOW_RANGE_COLOR_INDEX + 1.5;\n    } else if (v > p.range[1]) {\n      dIndex = p.maxIndex + ABOVE_RANGE_COLOR_INDEX + 1.5;\n    } else {\n      dIndex = (v + p.shift) * p.scale;\n\n      // This conditional is needed because when v is very close to\n      // p.Range[1], it may map above p.MaxIndex in the linear mapping\n      // above.\n      dIndex = dIndex < p.maxIndex ? dIndex : p.maxIndex;\n    }\n\n    return Math.floor(dIndex);\n  };\n\n  publicAPI.linearLookup = (v, table, p) => {\n    let index = 0;\n    if (vtkMath.isNan(v)) {\n      index = Math.floor(p.maxIndex + 1.5 + NAN_COLOR_INDEX);\n    } else {\n      index = publicAPI.linearIndexLookup(v, p);\n    }\n    return [\n      table[4 * index],\n      table[4 * index + 1],\n      table[4 * index + 2],\n      table[4 * index + 3],\n    ];\n  };\n\n  publicAPI.indexedLookupFunction = (v, table, p) => {\n    const index = publicAPI.getAnnotatedValueIndexInternal(v);\n    return [\n      table[4 * index],\n      table[4 * index + 1],\n      table[4 * index + 2],\n      table[4 * index + 3],\n    ];\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.lookupShiftAndScale = (range, p) => {\n    p.shift = -range[0];\n    p.scale = Number.MAX_VALUE;\n    if (range[1] > range[0]) {\n      p.scale = (p.maxIndex + 1) / (range[1] - range[0]);\n    }\n  };\n\n  // Public API methods\n  publicAPI.mapScalarsThroughTable = (\n    input,\n    output,\n    outFormat,\n    inputOffset\n  ) => {\n    let lookupFunc = publicAPI.linearLookup;\n    if (model.indexedLookup) {\n      lookupFunc = publicAPI.indexedLookupFunction;\n    }\n\n    const trange = publicAPI.getMappingRange();\n\n    const p = {\n      maxIndex: publicAPI.getNumberOfColors() - 1,\n      range: trange,\n      shift: 0.0,\n      scale: 0.0,\n    };\n    publicAPI.lookupShiftAndScale(trange, p);\n\n    const alpha = publicAPI.getAlpha();\n    const length = input.getNumberOfTuples();\n    const inIncr = input.getNumberOfComponents();\n\n    const outputV = output.getData();\n    const inputV = input.getData();\n\n    if (alpha >= 1.0) {\n      if (outFormat === ScalarMappingTarget.RGBA) {\n        for (let i = 0; i < length; i++) {\n          const cptr = lookupFunc(\n            inputV[i * inIncr + inputOffset],\n            model.table,\n            p\n          );\n          outputV[i * 4] = cptr[0];\n          outputV[i * 4 + 1] = cptr[1];\n          outputV[i * 4 + 2] = cptr[2];\n          outputV[i * 4 + 3] = cptr[3];\n        }\n      }\n    } else {\n      /* eslint-disable no-lonely-if */\n      if (outFormat === ScalarMappingTarget.RGBA) {\n        for (let i = 0; i < length; i++) {\n          const cptr = lookupFunc(\n            inputV[i * inIncr + inputOffset],\n            model.table,\n            p\n          );\n          outputV[i * 4] = cptr[0];\n          outputV[i * 4 + 1] = cptr[1];\n          outputV[i * 4 + 2] = cptr[2];\n          outputV[i * 4 + 3] = Math.floor(cptr[3] * alpha + 0.5);\n        }\n      }\n    } // alpha blending\n  };\n\n  publicAPI.forceBuild = () => {\n    let hinc = 0.0;\n    let sinc = 0.0;\n    let vinc = 0.0;\n    let ainc = 0.0;\n\n    const maxIndex = model.numberOfColors - 1;\n\n    if (maxIndex) {\n      hinc = (model.hueRange[1] - model.hueRange[0]) / maxIndex;\n      sinc = (model.saturationRange[1] - model.saturationRange[0]) / maxIndex;\n      vinc = (model.valueRange[1] - model.valueRange[0]) / maxIndex;\n      ainc = (model.alphaRange[1] - model.alphaRange[0]) / maxIndex;\n    }\n\n    const hsv = [];\n    const rgba = [];\n    for (let i = 0; i <= maxIndex; i++) {\n      hsv[0] = model.hueRange[0] + i * hinc;\n      hsv[1] = model.saturationRange[0] + i * sinc;\n      hsv[2] = model.valueRange[0] + i * vinc;\n\n      vtkMath.hsv2rgb(hsv, rgba);\n      rgba[3] = model.alphaRange[0] + i * ainc;\n\n      //  case VTK_RAMP_LINEAR:\n      model.table[i * 4] = rgba[0] * 255.0 + 0.5;\n      model.table[i * 4 + 1] = rgba[1] * 255.0 + 0.5;\n      model.table[i * 4 + 2] = rgba[2] * 255.0 + 0.5;\n      model.table[i * 4 + 3] = rgba[3] * 255.0 + 0.5;\n    }\n\n    publicAPI.buildSpecialColors();\n\n    model.buildTime.modified();\n  };\n\n  publicAPI.buildSpecialColors = () => {\n    // Add \"special\" colors (NaN, below range, above range) to table here.\n    const { numberOfColors } = model;\n\n    const tptr = model.table;\n    let base = (model.numberOfColors + BELOW_RANGE_COLOR_INDEX) * 4;\n\n    // Below range color\n    if (model.useBelowRangeColor || numberOfColors === 0) {\n      tptr[base] = model.belowRangeColor[0] * 255.0 + 0.5;\n      tptr[base + 1] = model.belowRangeColor[1] * 255.0 + 0.5;\n      tptr[base + 2] = model.belowRangeColor[2] * 255.0 + 0.5;\n      tptr[base + 3] = model.belowRangeColor[3] * 255.0 + 0.5;\n    } else {\n      // Duplicate the first color in the table.\n      tptr[base] = tptr[0];\n      tptr[base + 1] = tptr[1];\n      tptr[base + 2] = tptr[2];\n      tptr[base + 3] = tptr[3];\n    }\n\n    // Above range color\n    base = (model.numberOfColors + ABOVE_RANGE_COLOR_INDEX) * 4;\n    if (model.useAboveRangeColor || numberOfColors === 0) {\n      tptr[base] = model.aboveRangeColor[0] * 255.0 + 0.5;\n      tptr[base + 1] = model.aboveRangeColor[1] * 255.0 + 0.5;\n      tptr[base + 2] = model.aboveRangeColor[2] * 255.0 + 0.5;\n      tptr[base + 3] = model.aboveRangeColor[3] * 255.0 + 0.5;\n    } else {\n      // Duplicate the last color in the table.\n      tptr[base] = tptr[4 * (numberOfColors - 1) + 0];\n      tptr[base + 1] = tptr[4 * (numberOfColors - 1) + 1];\n      tptr[base + 2] = tptr[4 * (numberOfColors - 1) + 2];\n      tptr[base + 3] = tptr[4 * (numberOfColors - 1) + 3];\n    }\n\n    // Always use NanColor\n    base = (model.numberOfColors + NAN_COLOR_INDEX) * 4;\n    tptr[base] = model.nanColor[0] * 255.0 + 0.5;\n    tptr[base + 1] = model.nanColor[1] * 255.0 + 0.5;\n    tptr[base + 2] = model.nanColor[2] * 255.0 + 0.5;\n    tptr[base + 3] = model.nanColor[3] * 255.0 + 0.5;\n  };\n\n  publicAPI.build = () => {\n    if (\n      model.table.length < 1 ||\n      publicAPI.getMTime() > model.buildTime.getMTime()\n    ) {\n      publicAPI.forceBuild();\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  numberOfColors: 256,\n  // table: null,\n\n  hueRange: [0.0, 0.66667],\n  saturationRange: [1.0, 1.0],\n  valueRange: [1.0, 1.0],\n  alphaRange: [1.0, 1.0],\n\n  nanColor: [0.5, 0.0, 0.0, 1.0],\n  belowRangeColor: [0.0, 0.0, 0.0, 1.0],\n  aboveRangeColor: [1.0, 1.0, 1.0, 1.0],\n  useAboveRangeColor: false,\n  useBelowRangeColor: false,\n\n  alpha: 1.0,\n  // buildTime: null,\n  // opaqueFlagBuildTime: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkScalarsToColors.extend(publicAPI, model, initialValues);\n\n  // Internal objects initialization\n  if (!model.table) {\n    model.table = [];\n  }\n\n  model.buildTime = {};\n  macro.obj(model.buildTime);\n\n  model.opaqueFlagBuildTime = {};\n  macro.obj(model.opaqueFlagBuildTime, { mtime: 0 });\n\n  // Create get-only macros\n  macro.get(publicAPI, model, ['buildTime']);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, [\n    'numberOfColors',\n    'useAboveRangeColor',\n    'useBelowRangeColor',\n  ]);\n\n  // Create set macros for array (needs to know size)\n  macro.setArray(\n    publicAPI,\n    model,\n    ['alphaRange', 'hueRange', 'saturationRange', 'valueRange'],\n    2\n  );\n\n  macro.setArray(\n    publicAPI,\n    model,\n    ['nanColor', 'belowRangeColor', 'aboveRangeColor'],\n    4\n  );\n\n  // Create get macros for array\n  macro.getArray(publicAPI, model, [\n    'hueRange',\n    'saturationRange',\n    'valueRange',\n    'alphaRange',\n    'nanColor',\n    'belowRangeColor',\n    'aboveRangeColor',\n  ]);\n\n  // For more macro methods, see \"Sources/macro.js\"\n\n  // Object specific methods\n  vtkLookupTable(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkLookupTable');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend });\n","export function addCoincidentTopologyMethods(publicAPI, model, nameList) {\n  nameList.forEach((item) => {\n    publicAPI[`get${item.method}`] = () => model[item.key];\n    publicAPI[`set${item.method}`] = (factor, unit) => {\n      model[item.key] = { factor, unit };\n    };\n  });\n}\n\nexport const CATEGORIES = ['Polygon', 'Line', 'Point'];\n\nexport default {\n  addCoincidentTopologyMethods,\n  CATEGORIES,\n};\n","let resolveCoincidentTopologyPolygonOffsetFaces = 1;\nlet resolveCoincidentTopology = 0;\n\nexport const RESOLVE_COINCIDENT_TOPOLOGY_MODE = [\n  'VTK_RESOLVE_OFF',\n  'VTK_RESOLVE_POLYGON_OFFSET',\n];\n\nexport function getResolveCoincidentTopologyPolygonOffsetFaces() {\n  return resolveCoincidentTopologyPolygonOffsetFaces;\n}\n\nexport function setResolveCoincidentTopologyPolygonOffsetFaces(value) {\n  resolveCoincidentTopologyPolygonOffsetFaces = value;\n}\n\nexport function getResolveCoincidentTopology() {\n  return resolveCoincidentTopology;\n}\n\nexport function setResolveCoincidentTopology(mode = 0) {\n  resolveCoincidentTopology = mode;\n}\n\nexport function setResolveCoincidentTopologyToDefault() {\n  setResolveCoincidentTopology(0); // VTK_RESOLVE_OFF\n}\n\nexport function setResolveCoincidentTopologyToOff() {\n  setResolveCoincidentTopology(0); // VTK_RESOLVE_OFF\n}\n\nexport function setResolveCoincidentTopologyToPolygonOffset() {\n  setResolveCoincidentTopology(1); // VTK_RESOLVE_POLYGON_OFFSET\n}\n\nexport function getResolveCoincidentTopologyAsString() {\n  return RESOLVE_COINCIDENT_TOPOLOGY_MODE[resolveCoincidentTopology];\n}\n\nexport default {\n  getResolveCoincidentTopologyAsString,\n  getResolveCoincidentTopologyPolygonOffsetFaces,\n  getResolveCoincidentTopology,\n  setResolveCoincidentTopology,\n  setResolveCoincidentTopologyPolygonOffsetFaces,\n  setResolveCoincidentTopologyToDefault,\n  setResolveCoincidentTopologyToOff,\n  setResolveCoincidentTopologyToPolygonOffset,\n};\n","import macro from 'vtk.js/Sources/macro';\nimport vtkAbstractMapper3D from 'vtk.js/Sources/Rendering/Core/AbstractMapper3D';\nimport vtkDataArray from 'vtk.js/Sources/Common/Core/DataArray';\nimport vtkImageData from 'vtk.js/Sources/Common/DataModel/ImageData';\nimport vtkLookupTable from 'vtk.js/Sources/Common/Core/LookupTable';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport vtkScalarsToColors from 'vtk.js/Sources/Common/Core/ScalarsToColors/Constants'; // Need to go inside Constants otherwise dependency loop\n\nimport CoincidentTopologyHelper from 'vtk.js/Sources/Rendering/Core/Mapper/CoincidentTopologyHelper';\nimport otherStaticMethods from 'vtk.js/Sources/Rendering/Core/Mapper/Static';\nimport Constants from 'vtk.js/Sources/Rendering/Core/Mapper/Constants';\n\nconst { ColorMode, ScalarMode, GetArray } = Constants;\nconst { VectorMode } = vtkScalarsToColors;\nconst { VtkDataTypes } = vtkDataArray;\n\n// ----------------------------------------------------------------------------\n\nfunction notImplemented(method) {\n  return () => macro.vtkErrorMacro(`vtkMapper::${method} - NOT IMPLEMENTED`);\n}\n\n// CoincidentTopology static methods ------------------------------------------\n/* eslint-disable arrow-body-style */\n\nconst staticOffsetModel = {\n  Polygon: { factor: 2, offset: 0 },\n  Line: { factor: 1, offset: -1 },\n  Point: { factor: 0, offset: -2 },\n};\nconst staticOffsetAPI = {};\n\nCoincidentTopologyHelper.addCoincidentTopologyMethods(\n  staticOffsetAPI,\n  staticOffsetModel,\n  CoincidentTopologyHelper.CATEGORIES.map((key) => ({\n    key,\n    method: `ResolveCoincidentTopology${key}OffsetParameters`,\n  }))\n);\n\n// ----------------------------------------------------------------------------\n// vtkMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkMapper');\n\n  publicAPI.getBounds = () => {\n    const input = publicAPI.getInputData();\n    if (!input) {\n      model.bounds = vtkMath.createUninitializedBounds();\n    } else {\n      if (!model.static) {\n        publicAPI.update();\n      }\n      model.bounds = input.getBounds();\n    }\n    return model.bounds;\n  };\n\n  publicAPI.setForceCompileOnly = (v) => {\n    model.forceCompileOnly = v;\n    // make sure we do NOT call modified()\n  };\n\n  publicAPI.createDefaultLookupTable = () => {\n    model.lookupTable = vtkLookupTable.newInstance();\n  };\n\n  publicAPI.getColorModeAsString = () =>\n    macro.enumToString(ColorMode, model.colorMode);\n\n  publicAPI.setColorModeToDefault = () => publicAPI.setColorMode(0);\n  publicAPI.setColorModeToMapScalars = () => publicAPI.setColorMode(1);\n  publicAPI.setColorModeToDirectScalars = () => publicAPI.setColorMode(2);\n\n  publicAPI.getScalarModeAsString = () =>\n    macro.enumToString(ScalarMode, model.scalarMode);\n\n  publicAPI.setScalarModeToDefault = () => publicAPI.setScalarMode(0);\n  publicAPI.setScalarModeToUsePointData = () => publicAPI.setScalarMode(1);\n  publicAPI.setScalarModeToUseCellData = () => publicAPI.setScalarMode(2);\n  publicAPI.setScalarModeToUsePointFieldData = () => publicAPI.setScalarMode(3);\n  publicAPI.setScalarModeToUseCellFieldData = () => publicAPI.setScalarMode(4);\n  publicAPI.setScalarModeToUseFieldData = () => publicAPI.setScalarMode(5);\n\n  // Add Static methods to our instance\n  Object.keys(otherStaticMethods).forEach((methodName) => {\n    publicAPI[methodName] = otherStaticMethods[methodName];\n  });\n  Object.keys(staticOffsetAPI).forEach((methodName) => {\n    publicAPI[methodName] = staticOffsetAPI[methodName];\n  });\n\n  // Relative metods\n  /* eslint-disable arrow-body-style */\n  model.topologyOffset = {\n    Polygon: { factor: 0, offset: 0 },\n    Line: { factor: 0, offset: 0 },\n    Point: { factor: 0, offset: 0 },\n  };\n  CoincidentTopologyHelper.addCoincidentTopologyMethods(\n    publicAPI,\n    model.topologyOffset,\n    CoincidentTopologyHelper.CATEGORIES.map((key) => ({\n      key,\n      method: `RelativeCoincidentTopology${key}OffsetParameters`,\n    }))\n  );\n  /* eslint-enable arrow-body-style */\n\n  publicAPI.getCoincidentTopologyPolygonOffsetParameters = () => {\n    const globalValue = staticOffsetAPI.getResolveCoincidentTopologyPolygonOffsetParameters();\n    const localValue = publicAPI.getRelativeCoincidentTopologyPolygonOffsetParameters();\n    return {\n      factor: globalValue.factor + localValue.factor,\n      offset: globalValue.offset + localValue.offset,\n    };\n  };\n\n  publicAPI.getCoincidentTopologyLineOffsetParameters = () => {\n    const globalValue = staticOffsetAPI.getResolveCoincidentTopologyLineOffsetParameters();\n    const localValue = publicAPI.getRelativeCoincidentTopologyLineOffsetParameters();\n    return {\n      factor: globalValue.factor + localValue.factor,\n      offset: globalValue.offset + localValue.offset,\n    };\n  };\n\n  publicAPI.getCoincidentTopologyPointOffsetParameter = () => {\n    const globalValue = staticOffsetAPI.getResolveCoincidentTopologyPointOffsetParameters();\n    const localValue = publicAPI.getRelativeCoincidentTopologyPointOffsetParameters();\n    return {\n      factor: globalValue.factor + localValue.factor,\n      offset: globalValue.offset + localValue.offset,\n    };\n  };\n\n  publicAPI.getAbstractScalars = (\n    input,\n    scalarMode,\n    arrayAccessMode,\n    arrayId,\n    arrayName\n  ) => {\n    // make sure we have an input\n    if (!input || !model.scalarVisibility) {\n      return { scalars: null, cellFLag: false };\n    }\n\n    let scalars = null;\n    let cellFlag = false;\n\n    // get and scalar data according to scalar mode\n    if (scalarMode === ScalarMode.DEFAULT) {\n      scalars = input.getPointData().getScalars();\n      if (!scalars) {\n        scalars = input.getCellData().getScalars();\n        cellFlag = true;\n      }\n    } else if (scalarMode === ScalarMode.USE_POINT_DATA) {\n      scalars = input.getPointData().getScalars();\n    } else if (scalarMode === ScalarMode.USE_CELL_DATA) {\n      scalars = input.getCellData().getScalars();\n      cellFlag = true;\n    } else if (scalarMode === ScalarMode.USE_POINT_FIELD_DATA) {\n      const pd = input.getPointData();\n      if (arrayAccessMode === GetArray.BY_ID) {\n        scalars = pd.getArrayByIndex(arrayId);\n      } else {\n        scalars = pd.getArrayByName(arrayName);\n      }\n    } else if (scalarMode === ScalarMode.USE_CELL_FIELD_DATA) {\n      const cd = input.getCellData();\n      cellFlag = true;\n      if (arrayAccessMode === GetArray.BY_ID) {\n        scalars = cd.getArrayByIndex(arrayId);\n      } else {\n        scalars = cd.getArrayByName(arrayName);\n      }\n    } else if (scalarMode === ScalarMode.USE_FIELD_DATA) {\n      const fd = input.getFieldData();\n      if (arrayAccessMode === GetArray.BY_ID) {\n        scalars = fd.getArrayByIndex(arrayId);\n      } else {\n        scalars = fd.getArrayByName(arrayName);\n      }\n    }\n\n    return { scalars, cellFlag };\n  };\n\n  publicAPI.mapScalars = (input, alpha) => {\n    const scalars = publicAPI.getAbstractScalars(\n      input,\n      model.scalarMode,\n      model.arrayAccessMode,\n      model.arrayId,\n      model.colorByArrayName\n    ).scalars;\n\n    if (!scalars) {\n      model.colorCoordinates = null;\n      model.colorTextureMap = null;\n      model.colorMapColors = null;\n      return;\n    }\n\n    if (!model.useLookupTableScalarRange) {\n      publicAPI\n        .getLookupTable()\n        .setRange(model.scalarRange[0], model.scalarRange[1]);\n    }\n\n    // Decide betweeen texture color or vertex color.\n    // Cell data always uses vertex color.\n    // Only point data can use both texture and vertex coloring.\n    if (publicAPI.canUseTextureMapForColoring(input)) {\n      publicAPI.mapScalarsToTexture(scalars, alpha);\n      return;\n    }\n\n    model.colorCoordinates = null;\n    model.colorTextureMap = null;\n\n    const lut = publicAPI.getLookupTable();\n    if (lut) {\n      // Ensure that the lookup table is built\n      lut.build();\n      model.colorMapColors = lut.mapScalars(scalars, model.colorMode, -1);\n    }\n  };\n\n  //-----------------------------------------------------------------------------\n  publicAPI.scalarToTextureCoordinate = (\n    scalarValue, // Input scalar\n    rangeMin, // range[0]\n    invRangeWidth\n  ) => {\n    // 1/(range[1]-range[0])\n    let texCoordS = 0.5; // Scalar value is arbitrary when NaN\n    let texCoordT = 1.0; // 1.0 in t coordinate means NaN\n    if (!vtkMath.isNan(scalarValue)) {\n      // 0.0 in t coordinate means not NaN.  So why am I setting it to 0.49?\n      // Because when you are mapping scalars and you have a NaN adjacent to\n      // anything else, the interpolation everywhere should be NaN.  Thus, I\n      // want the NaN color everywhere except right on the non-NaN neighbors.\n      // To simulate this, I set the t coord for the real numbers close to\n      // the threshold so that the interpolation almost immediately looks up\n      // the NaN value.\n      texCoordT = 0.49;\n\n      texCoordS = (scalarValue - rangeMin) * invRangeWidth;\n\n      // Some implementations apparently don't handle relatively large\n      // numbers (compared to the range [0.0, 1.0]) very well. In fact,\n      // values above 1122.0f appear to cause texture wrap-around on\n      // some systems even when edge clamping is enabled. Why 1122.0f? I\n      // don't know. For safety, we'll clamp at +/- 1000. This will\n      // result in incorrect images when the texture value should be\n      // above or below 1000, but I don't have a better solution.\n      if (texCoordS > 1000.0) {\n        texCoordS = 1000.0;\n      } else if (texCoordS < -1000.0) {\n        texCoordS = -1000.0;\n      }\n    }\n    return { texCoordS, texCoordT };\n  };\n\n  //-----------------------------------------------------------------------------\n  publicAPI.createColorTextureCoordinates = (\n    input,\n    output,\n    numScalars,\n    numComps,\n    component,\n    range,\n    tableRange,\n    tableNumberOfColors,\n    useLogScale\n  ) => {\n    // We have to change the range used for computing texture\n    // coordinates slightly to accomodate the special above- and\n    // below-range colors that are the first and last texels,\n    // respectively.\n    const scalarTexelWidth = (range[1] - range[0]) / tableNumberOfColors;\n\n    const paddedRange = [];\n    paddedRange[0] = range[0] - scalarTexelWidth;\n    paddedRange[1] = range[1] + scalarTexelWidth;\n    const invRangeWidth = 1.0 / (paddedRange[1] - paddedRange[0]);\n\n    const outputV = output.getData();\n    const inputV = input.getData();\n\n    let count = 0;\n    let outputCount = 0;\n    if (component < 0 || component >= numComps) {\n      for (let scalarIdx = 0; scalarIdx < numScalars; ++scalarIdx) {\n        let sum = 0;\n        for (let compIdx = 0; compIdx < numComps; ++compIdx) {\n          sum += inputV[count] * inputV[count];\n          count++;\n        }\n        let magnitude = Math.sqrt(sum);\n        if (useLogScale) {\n          magnitude = vtkLookupTable.applyLogScale(\n            magnitude,\n            tableRange,\n            range\n          );\n        }\n        const outputs = publicAPI.scalarToTextureCoordinate(\n          magnitude,\n          paddedRange[0],\n          invRangeWidth\n        );\n        outputV[outputCount] = outputs.texCoordS;\n        outputV[outputCount + 1] = outputs.texCoordT;\n        outputCount += 2;\n      }\n    } else {\n      count += component;\n      for (let scalarIdx = 0; scalarIdx < numScalars; ++scalarIdx) {\n        let inputValue = inputV[count];\n        if (useLogScale) {\n          inputValue = vtkLookupTable.applyLogScale(\n            inputValue,\n            tableRange,\n            range\n          );\n        }\n        const outputs = publicAPI.scalarToTextureCoordinate(\n          inputValue,\n          paddedRange[0],\n          invRangeWidth\n        );\n        outputV[outputCount] = outputs.texCoordS;\n        outputV[outputCount + 1] = outputs.texCoordT;\n        outputCount += 2;\n        count += numComps;\n      }\n    }\n  };\n\n  publicAPI.mapScalarsToTexture = (scalars, alpha) => {\n    const range = model.lookupTable.getRange();\n    const useLogScale = model.lookupTable.usingLogScale();\n    if (useLogScale) {\n      // convert range to log.\n      vtkLookupTable.getLogRange(range, range);\n    }\n\n    const origAlpha = model.lookupTable.getAlpha();\n\n    // Get rid of vertex color array.  Only texture or vertex coloring\n    // can be active at one time.  The existence of the array is the\n    // signal to use that technique.\n    model.colorMapColors = null;\n\n    // If the lookup table has changed, then recreate the color texture map.\n    // Set a new lookup table changes this->MTime.\n    if (\n      model.colorTextureMap == null ||\n      publicAPI.getMTime() > model.colorTextureMap.getMTime() ||\n      model.lookupTable.getMTime() > model.colorTextureMap.getMTime() ||\n      model.lookupTable.getAlpha() !== alpha\n    ) {\n      model.lookupTable.setAlpha(alpha);\n      model.colorTextureMap = null;\n\n      // Get the texture map from the lookup table.\n      // Create a dummy ramp of scalars.\n      // In the future, we could extend vtkScalarsToColors.\n      model.lookupTable.build();\n      let numberOfColors = model.lookupTable.getNumberOfAvailableColors();\n      if (numberOfColors > 4094) {\n        numberOfColors = 4094;\n      }\n      numberOfColors += 2;\n      const k = (range[1] - range[0]) / (numberOfColors - 1 - 2);\n\n      const newArray = new Float64Array(numberOfColors * 2);\n\n      for (let i = 0; i < numberOfColors; ++i) {\n        newArray[i] = range[0] + i * k - k; // minus k to start at below range color\n        if (useLogScale) {\n          newArray[i] = 10.0 ** newArray[i];\n        }\n      }\n      // Dimension on NaN.\n      for (let i = 0; i < numberOfColors; ++i) {\n        newArray[i + numberOfColors] = NaN;\n      }\n\n      model.colorTextureMap = vtkImageData.newInstance();\n      model.colorTextureMap.setExtent(0, numberOfColors - 1, 0, 1, 0, 0);\n\n      const tmp = vtkDataArray.newInstance({\n        numberOfComponents: 1,\n        values: newArray,\n      });\n\n      model.colorTextureMap\n        .getPointData()\n        .setScalars(model.lookupTable.mapScalars(tmp, model.colorMode, 0));\n      model.lookupTable.setAlpha(origAlpha);\n    }\n\n    // Create new coordinates if necessary.\n    // Need to compare lookup table incase the range has changed.\n    if (\n      !model.colorCoordinates ||\n      publicAPI.getMTime() > model.colorCoordinates.getMTime() ||\n      publicAPI.getInputData(0).getMTime() >\n        model.colorCoordinates.getMTime() ||\n      model.lookupTable.getMTime() > model.colorCoordinates.getMTime()\n    ) {\n      // Get rid of old colors\n      model.colorCoordinates = null;\n\n      // Now create the color texture coordinates.\n      const numComps = scalars.getNumberOfComponents();\n      const num = scalars.getNumberOfTuples();\n\n      // const fArray = new FloatArray(num * 2);\n      model.colorCoordinates = vtkDataArray.newInstance({\n        numberOfComponents: 2,\n        values: new Float32Array(num * 2),\n      });\n\n      let scalarComponent = model.lookupTable.getVectorComponent();\n      // Although I like the feature of applying magnitude to single component\n      // scalars, it is not how the old MapScalars for vertex coloring works.\n      if (\n        model.lookupTable.getVectorMode() === VectorMode.MAGNITUDE &&\n        scalars.getNumberOfComponents() > 1\n      ) {\n        scalarComponent = -1;\n      }\n\n      publicAPI.createColorTextureCoordinates(\n        scalars,\n        model.colorCoordinates,\n        num,\n        numComps,\n        scalarComponent,\n        range,\n        model.lookupTable.getRange(),\n        model.colorTextureMap\n          .getPointData()\n          .getScalars()\n          .getNumberOfTuples() /\n          2 -\n          2,\n        useLogScale\n      );\n    }\n  };\n\n  publicAPI.getIsOpaque = () => {\n    const lut = publicAPI.getLookupTable();\n    if (lut) {\n      // Ensure that the lookup table is built\n      lut.build();\n      return lut.isOpaque();\n    }\n    return true;\n  };\n\n  publicAPI.canUseTextureMapForColoring = (input) => {\n    if (!model.interpolateScalarsBeforeMapping) {\n      return false; // user doesn't want us to use texture maps at all.\n    }\n\n    // index color does not use textures\n    if (model.lookupTable && model.lookupTable.getIndexedLookup()) {\n      return false;\n    }\n\n    const gasResult = publicAPI.getAbstractScalars(\n      input,\n      model.scalarMode,\n      model.arrayAccessMode,\n      model.arrayId,\n      model.colorByArrayName\n    );\n    const scalars = gasResult.scalars;\n\n    if (!scalars) {\n      // no scalars on this dataset, we don't care if texture is used at all.\n      return false;\n    }\n\n    if (gasResult.cellFlag) {\n      return false; // cell data colors, don't use textures.\n    }\n\n    if (\n      (model.colorMode === ColorMode.DEFAULT &&\n        scalars.getDataType() === VtkDataTypes.UNSIGNED_CHAR) ||\n      model.colorMode === ColorMode.DIRECT_SCALARS\n    ) {\n      // Don't use texture is direct coloring using RGB unsigned chars is\n      // requested.\n      return false;\n    }\n\n    return true;\n  };\n\n  publicAPI.clearColorArrays = () => {\n    model.colorMapColors = null;\n    model.colorCoordinates = null;\n    model.colorTextureMap = null;\n  };\n\n  publicAPI.getLookupTable = () => {\n    if (!model.lookupTable) {\n      publicAPI.createDefaultLookupTable();\n    }\n    return model.lookupTable;\n  };\n\n  publicAPI.getMTime = () => {\n    let mt = model.mtime;\n    if (model.lookupTable !== null) {\n      const time = model.lookupTable.getMTime();\n      mt = time > mt ? time : mt;\n    }\n    return mt;\n  };\n\n  publicAPI.getPrimitiveCount = () => {\n    const input = publicAPI.getInputData();\n    const pcount = {\n      points: input.getPoints().getNumberOfValues() / 3,\n      verts:\n        input.getVerts().getNumberOfValues() -\n        input.getVerts().getNumberOfCells(),\n      lines:\n        input.getLines().getNumberOfValues() -\n        2 * input.getLines().getNumberOfCells(),\n      triangles:\n        input.getPolys().getNumberOfValues() -\n        3 * input.getLines().getNumberOfCells(),\n    };\n    return pcount;\n  };\n\n  publicAPI.acquireInvertibleLookupTable = notImplemented(\n    'AcquireInvertibleLookupTable'\n  );\n  publicAPI.valueToColor = notImplemented('ValueToColor');\n  publicAPI.colorToValue = notImplemented('ColorToValue');\n  publicAPI.useInvertibleColorFor = notImplemented('UseInvertibleColorFor');\n  publicAPI.clearInvertibleColor = notImplemented('ClearInvertibleColor');\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  colorMapColors: null, // Same as this->Colors\n\n  static: false,\n  lookupTable: null,\n\n  scalarVisibility: true,\n  scalarRange: [0, 1],\n  useLookupTableScalarRange: false,\n\n  colorMode: 0,\n  scalarMode: 0,\n  arrayAccessMode: 1, // By_NAME\n\n  renderTime: 0,\n\n  colorByArrayName: null,\n\n  fieldDataTupleId: -1,\n\n  interpolateScalarsBeforeMapping: false,\n  colorCoordinates: null,\n  colorTextureMap: null,\n\n  forceCompileOnly: 0,\n\n  useInvertibleColors: false,\n  invertibleScalars: null,\n  resolveCoincidentTopology: false,\n\n  viewSpecificProperties: null,\n\n  customShaderAttributes: [],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkAbstractMapper3D.extend(publicAPI, model, initialValues);\n\n  macro.get(publicAPI, model, [\n    'colorCoordinates',\n    'colorMapColors',\n    'colorTextureMap',\n  ]);\n  macro.setGet(publicAPI, model, [\n    'colorByArrayName',\n    'arrayAccessMode',\n    'colorMode',\n    'fieldDataTupleId',\n    'interpolateScalarsBeforeMapping',\n    'lookupTable',\n    'renderTime',\n    'resolveCoincidentTopology',\n    'scalarMode',\n    'scalarVisibility',\n    'static',\n    'useLookupTableScalarRange',\n    'viewSpecificProperties',\n    'customShaderAttributes', // point data array names that will be transfered to the VBO\n  ]);\n  macro.setGetArray(publicAPI, model, ['scalarRange'], 2);\n\n  if (!model.viewSpecificProperties) {\n    model.viewSpecificProperties = {};\n  }\n\n  // Object methods\n  vtkMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkMapper');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign(\n  { newInstance, extend },\n  staticOffsetAPI,\n  otherStaticMethods,\n  Constants\n);\n","import { mat3, mat4, vec3 } from 'gl-matrix';\n\nimport macro from 'vtk.js/Sources/macro';\nimport vtkHelper from 'vtk.js/Sources/Rendering/OpenGL/Helper';\nimport vtkMapper from 'vtk.js/Sources/Rendering/Core/Mapper';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport vtkOpenGLTexture from 'vtk.js/Sources/Rendering/OpenGL/Texture';\nimport vtkProperty from 'vtk.js/Sources/Rendering/Core/Property';\nimport vtkShaderProgram from 'vtk.js/Sources/Rendering/OpenGL/ShaderProgram';\nimport vtkViewNode from 'vtk.js/Sources/Rendering/SceneGraph/ViewNode';\nimport vtkPolyDataVS from 'vtk.js/Sources/Rendering/OpenGL/glsl/vtkPolyDataVS.glsl';\nimport vtkPolyDataFS from 'vtk.js/Sources/Rendering/OpenGL/glsl/vtkPolyDataFS.glsl';\n\n/* eslint-disable no-lonely-if */\n\nconst primTypes = {\n  Start: 0,\n  Points: 0,\n  Lines: 1,\n  Tris: 2,\n  TriStrips: 3,\n  TrisEdges: 4,\n  TriStripsEdges: 5,\n  End: 6,\n};\n\nconst { Representation, Shading } = vtkProperty;\nconst { ScalarMode } = vtkMapper;\nconst { Filter, Wrap } = vtkOpenGLTexture;\nconst { vtkErrorMacro } = macro;\nconst StartEvent = { type: 'StartEvent' };\nconst EndEvent = { type: 'EndEvent' };\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLPolyDataMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLPolyDataMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLPolyDataMapper');\n\n  publicAPI.buildPass = (prepass) => {\n    if (prepass) {\n      model.openGLActor = publicAPI.getFirstAncestorOfType('vtkOpenGLActor');\n      model.openGLRenderer = model.openGLActor.getFirstAncestorOfType(\n        'vtkOpenGLRenderer'\n      );\n      model.openGLRenderWindow = model.openGLRenderer.getParent();\n      model.openGLCamera = model.openGLRenderer.getViewNodeFor(\n        model.openGLRenderer.getRenderable().getActiveCamera()\n      );\n    }\n  };\n\n  // Renders myself\n  publicAPI.translucentPass = (prepass) => {\n    if (prepass) {\n      publicAPI.render();\n    }\n  };\n\n  publicAPI.opaqueZBufferPass = (prepass) => {\n    if (prepass) {\n      model.haveSeenDepthRequest = true;\n      model.renderDepth = true;\n      publicAPI.render();\n      model.renderDepth = false;\n    }\n  };\n\n  publicAPI.opaquePass = (prepass) => {\n    if (prepass) {\n      publicAPI.render();\n    }\n  };\n\n  publicAPI.render = () => {\n    const ctx = model.openGLRenderWindow.getContext();\n    if (model.context !== ctx) {\n      model.context = ctx;\n      for (let i = primTypes.Start; i < primTypes.End; i++) {\n        model.primitives[i].setOpenGLRenderWindow(model.openGLRenderWindow);\n      }\n    }\n    const actor = model.openGLActor.getRenderable();\n    const ren = model.openGLRenderer.getRenderable();\n    publicAPI.renderPiece(ren, actor);\n  };\n\n  publicAPI.buildShaders = (shaders, ren, actor) => {\n    publicAPI.getShaderTemplate(shaders, ren, actor);\n\n    // user specified pre replacements\n    const openGLSpec = model.renderable.getViewSpecificProperties().OpenGL;\n    let shaderReplacements = null;\n    if (openGLSpec) {\n      shaderReplacements = openGLSpec.ShaderReplacements;\n    }\n\n    if (shaderReplacements) {\n      for (let i = 0; i < shaderReplacements.length; i++) {\n        const currReplacement = shaderReplacements[i];\n        if (currReplacement.replaceFirst) {\n          const shaderType = currReplacement.shaderType;\n          const ssrc = shaders[shaderType];\n          const substituteRes = vtkShaderProgram.substitute(\n            ssrc,\n            currReplacement.originalValue,\n            currReplacement.replacementValue,\n            currReplacement.replaceAll\n          );\n          shaders[shaderType] = substituteRes.result;\n        }\n      }\n    }\n\n    publicAPI.replaceShaderValues(shaders, ren, actor);\n\n    // user specified post replacements\n    if (shaderReplacements) {\n      for (let i = 0; i < shaderReplacements.length; i++) {\n        const currReplacement = shaderReplacements[i];\n        if (!currReplacement.replaceFirst) {\n          const shaderType = currReplacement.shaderType;\n          const ssrc = shaders[shaderType];\n          const substituteRes = vtkShaderProgram.substitute(\n            ssrc,\n            currReplacement.originalValue,\n            currReplacement.replacementValue,\n            currReplacement.replaceAll\n          );\n          shaders[shaderType] = substituteRes.result;\n        }\n      }\n    }\n  };\n\n  publicAPI.getShaderTemplate = (shaders, ren, actor) => {\n    const openGLSpecProp = model.renderable.getViewSpecificProperties().OpenGL;\n\n    let vertexShaderCode = vtkPolyDataVS;\n    if (openGLSpecProp) {\n      const vertexSpecProp = openGLSpecProp.VertexShaderCode;\n      if (vertexSpecProp !== undefined && vertexSpecProp !== '') {\n        vertexShaderCode = vertexSpecProp;\n      }\n    }\n    shaders.Vertex = vertexShaderCode;\n\n    let fragmentShaderCode = vtkPolyDataFS;\n    if (openGLSpecProp) {\n      const fragmentSpecProp = openGLSpecProp.FragmentShaderCode;\n      if (fragmentSpecProp !== undefined && fragmentSpecProp !== '') {\n        fragmentShaderCode = fragmentSpecProp;\n      }\n    }\n    shaders.Fragment = fragmentShaderCode;\n\n    let geometryShaderCode = '';\n    if (openGLSpecProp) {\n      const geometrySpecProp = openGLSpecProp.GeometryShaderCode;\n      if (geometrySpecProp !== undefined) {\n        geometryShaderCode = geometrySpecProp;\n      }\n    }\n    shaders.Geometry = geometryShaderCode;\n  };\n\n  publicAPI.replaceShaderColor = (shaders, ren, actor) => {\n    let VSSource = shaders.Vertex;\n    let GSSource = shaders.Geometry;\n    let FSSource = shaders.Fragment;\n\n    const lastLightComplexity = model.lastBoundBO.getReferenceByName(\n      'lastLightComplexity'\n    );\n\n    // create the material/color property declarations, and VS implementation\n    // these are always defined\n    let colorDec = [\n      'uniform float ambient;',\n      'uniform float diffuse;',\n      'uniform float specular;',\n      'uniform float opacityUniform; // the fragment opacity',\n      'uniform vec3 ambientColorUniform;',\n      'uniform vec3 diffuseColorUniform;',\n    ];\n    // add more for specular\n    if (lastLightComplexity) {\n      colorDec = colorDec.concat([\n        'uniform vec3 specularColorUniform;',\n        'uniform float specularPowerUniform;',\n      ]);\n    }\n\n    // now handle the more complex fragment shader implementation\n    // the following are always defined variables.  We start\n    // by assiging a default value from the uniform\n    let colorImpl = [\n      'vec3 ambientColor;',\n      '  vec3 diffuseColor;',\n      '  float opacity;',\n    ];\n    if (lastLightComplexity) {\n      colorImpl = colorImpl.concat([\n        '  vec3 specularColor;',\n        '  float specularPower;',\n      ]);\n    }\n    colorImpl = colorImpl.concat([\n      '  ambientColor = ambientColorUniform;',\n      '  diffuseColor = diffuseColorUniform;',\n      '  opacity = opacityUniform;',\n    ]);\n    if (lastLightComplexity) {\n      colorImpl = colorImpl.concat([\n        '  specularColor = specularColorUniform;',\n        '  specularPower = specularPowerUniform;',\n      ]);\n    }\n\n    // add scalar vertex coloring\n    if (\n      model.lastBoundBO.getCABO().getColorComponents() !== 0 &&\n      !model.drawingEdges\n    ) {\n      colorDec = colorDec.concat(['varying vec4 vertexColorVSOutput;']);\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Color::Dec', [\n        'attribute vec4 scalarColor;',\n        'varying vec4 vertexColorVSOutput;',\n      ]).result;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Color::Impl', [\n        'vertexColorVSOutput =  scalarColor;',\n      ]).result;\n      GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::Color::Dec', [\n        'in vec4 vertexColorVSOutput[];',\n        'out vec4 vertexColorGSOutput;',\n      ]).result;\n      GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::Color::Impl', [\n        'vertexColorGSOutput = vertexColorVSOutput[i];',\n      ]).result;\n    }\n\n    if (\n      model.lastBoundBO.getCABO().getColorComponents() !== 0 &&\n      !model.drawingEdges\n    ) {\n      FSSource = vtkShaderProgram.substitute(\n        FSSource,\n        '//VTK::Color::Impl',\n        colorImpl.concat([\n          '  diffuseColor = vertexColorVSOutput.rgb;',\n          '  ambientColor = vertexColorVSOutput.rgb;',\n          '  opacity = opacity*vertexColorVSOutput.a;',\n        ])\n      ).result;\n    } else {\n      if (\n        model.renderable.getInterpolateScalarsBeforeMapping() &&\n        model.renderable.getColorCoordinates() &&\n        !model.drawingEdges\n      ) {\n        FSSource = vtkShaderProgram.substitute(\n          FSSource,\n          '//VTK::Color::Impl',\n          colorImpl.concat([\n            '  vec4 texColor = texture2D(texture1, tcoordVCVSOutput.st);',\n            '  diffuseColor = texColor.rgb;',\n            '  ambientColor = texColor.rgb;',\n            '  opacity = opacity*texColor.a;',\n          ])\n        ).result;\n      } else {\n        FSSource = vtkShaderProgram.substitute(\n          FSSource,\n          '//VTK::Color::Impl',\n          colorImpl\n        ).result;\n      }\n    }\n\n    FSSource = vtkShaderProgram.substitute(\n      FSSource,\n      '//VTK::Color::Dec',\n      colorDec\n    ).result;\n\n    shaders.Vertex = VSSource;\n    shaders.Geometry = GSSource;\n    shaders.Fragment = FSSource;\n  };\n\n  publicAPI.replaceShaderLight = (shaders, ren, actor) => {\n    let FSSource = shaders.Fragment;\n\n    // check for shadow maps\n    const shadowFactor = '';\n\n    const lastLightComplexity = model.lastBoundBO.getReferenceByName(\n      'lastLightComplexity'\n    );\n\n    const lastLightCount = model.lastBoundBO.getReferenceByName(\n      'lastLightCount'\n    );\n\n    let sstring = [];\n\n    switch (lastLightComplexity) {\n      case 0: // no lighting or RENDER_VALUES\n        FSSource = vtkShaderProgram.substitute(\n          FSSource,\n          '//VTK::Light::Impl',\n          [\n            '  gl_FragData[0] = vec4(ambientColor * ambient + diffuseColor * diffuse, opacity);',\n            '  //VTK::Light::Impl',\n          ],\n          false\n        ).result;\n        break;\n\n      case 1: // headlight\n        FSSource = vtkShaderProgram.substitute(\n          FSSource,\n          '//VTK::Light::Impl',\n          [\n            '  float df = max(0.0, normalVCVSOutput.z);',\n            '  float sf = pow(df, specularPower);',\n            '  vec3 diffuseL = df * diffuseColor;',\n            '  vec3 specularL = sf * specularColor;',\n            '  gl_FragData[0] = vec4(ambientColor * ambient + diffuseL * diffuse + specularL * specular, opacity);',\n            '  //VTK::Light::Impl',\n          ],\n          false\n        ).result;\n        break;\n\n      case 2: // light kit\n        for (let lc = 0; lc < lastLightCount; ++lc) {\n          sstring = sstring.concat([\n            `uniform vec3 lightColor${lc};`,\n            `uniform vec3 lightDirectionVC${lc}; // normalized`,\n            `uniform vec3 lightHalfAngleVC${lc}; // normalized`,\n          ]);\n        }\n        FSSource = vtkShaderProgram.substitute(\n          FSSource,\n          '//VTK::Light::Dec',\n          sstring\n        ).result;\n\n        sstring = [\n          'vec3 diffuseL = vec3(0,0,0);',\n          '  vec3 specularL = vec3(0,0,0);',\n          '  float df;',\n        ];\n        for (let lc = 0; lc < lastLightCount; ++lc) {\n          sstring = sstring.concat([\n            `  df = max(0.0, dot(normalVCVSOutput, -lightDirectionVC${lc}));`,\n            `  diffuseL += ((df${shadowFactor}) * lightColor${lc});`,\n            `  if (dot(normalVCVSOutput, lightDirectionVC${lc}) < 0.0)`,\n            '    {',\n            `    float sf = pow( max(0.0, dot(lightHalfAngleVC${lc},normalVCVSOutput)), specularPower);`,\n            `    specularL += ((sf${shadowFactor}) * lightColor${lc});`,\n            '    }',\n          ]);\n        }\n        sstring = sstring.concat([\n          '  diffuseL = diffuseL * diffuseColor;',\n          '  specularL = specularL * specularColor;',\n          '  gl_FragData[0] = vec4(ambientColor * ambient + diffuseL * diffuse + specularL * specular, opacity);',\n          '  //VTK::Light::Impl',\n        ]);\n        FSSource = vtkShaderProgram.substitute(\n          FSSource,\n          '//VTK::Light::Impl',\n          sstring,\n          false\n        ).result;\n        break;\n\n      case 3: // positional\n        for (let lc = 0; lc < lastLightCount; ++lc) {\n          sstring = sstring.concat([\n            `uniform vec3 lightColor${lc};`,\n            `uniform vec3 lightDirectionVC${lc}; // normalized`,\n            `uniform vec3 lightHalfAngleVC${lc}; // normalized`,\n            `uniform vec3 lightPositionVC${lc};`,\n            `uniform vec3 lightAttenuation${lc};`,\n            `uniform float lightConeAngle${lc};`,\n            `uniform float lightExponent${lc};`,\n            `uniform int lightPositional${lc};`,\n          ]);\n        }\n        FSSource = vtkShaderProgram.substitute(\n          FSSource,\n          '//VTK::Light::Dec',\n          sstring\n        ).result;\n\n        sstring = [\n          'vec3 diffuseL = vec3(0,0,0);',\n          '  vec3 specularL = vec3(0,0,0);',\n          '  vec3 vertLightDirectionVC;',\n          '  float attenuation;',\n          '  float df;',\n        ];\n        for (let lc = 0; lc < lastLightCount; ++lc) {\n          sstring = sstring.concat([\n            '  attenuation = 1.0;',\n            `  if (lightPositional${lc} == 0)`,\n            '    {',\n            `      vertLightDirectionVC = lightDirectionVC${lc};`,\n            '    }',\n            '  else',\n            '    {',\n            `    vertLightDirectionVC = vertexVC.xyz - lightPositionVC${lc};`,\n            '    float distanceVC = length(vertLightDirectionVC);',\n            '    vertLightDirectionVC = normalize(vertLightDirectionVC);',\n            '    attenuation = 1.0 /',\n            `      (lightAttenuation${lc}.x`,\n            `       + lightAttenuation${lc}.y * distanceVC`,\n            `       + lightAttenuation${lc}.z * distanceVC * distanceVC);`,\n            '    // per OpenGL standard cone angle is 90 or less for a spot light',\n            `    if (lightConeAngle${lc} <= 90.0)`,\n            '      {',\n            `      float coneDot = dot(vertLightDirectionVC, lightDirectionVC${lc});`,\n            '      // if inside the cone',\n            `      if (coneDot >= cos(radians(lightConeAngle${lc})))`,\n            '        {',\n            `        attenuation = attenuation * pow(coneDot, lightExponent${lc});`,\n            '        }',\n            '      else',\n            '        {',\n            '        attenuation = 0.0;',\n            '        }',\n            '      }',\n            '    }',\n            '    df = max(0.0, attenuation*dot(normalVCVSOutput, -vertLightDirectionVC));',\n            `    diffuseL += ((df${shadowFactor}) * lightColor${lc});`,\n            '    if (dot(normalVCVSOutput, vertLightDirectionVC) < 0.0)',\n            '      {',\n            `      float sf = attenuation*pow( max(0.0, dot(lightHalfAngleVC${lc},normalVCVSOutput)), specularPower);`,\n            `    specularL += ((sf${shadowFactor}) * lightColor${lc});`,\n            '    }',\n          ]);\n        }\n        sstring = sstring.concat([\n          '  diffuseL = diffuseL * diffuseColor;',\n          '  specularL = specularL * specularColor;',\n          '  gl_FragData[0] = vec4(ambientColor * ambient + diffuseL * diffuse + specularL * specular, opacity);',\n          '  //VTK::Light::Impl',\n        ]);\n        FSSource = vtkShaderProgram.substitute(\n          FSSource,\n          '//VTK::Light::Impl',\n          sstring,\n          false\n        ).result;\n        break;\n      default:\n        vtkErrorMacro('bad light complexity');\n    }\n\n    shaders.Fragment = FSSource;\n  };\n\n  publicAPI.replaceShaderNormal = (shaders, ren, actor) => {\n    const lastLightComplexity = model.lastBoundBO.getReferenceByName(\n      'lastLightComplexity'\n    );\n\n    if (lastLightComplexity > 0) {\n      let VSSource = shaders.Vertex;\n      let GSSource = shaders.Geometry;\n      let FSSource = shaders.Fragment;\n\n      if (model.lastBoundBO.getCABO().getNormalOffset()) {\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Normal::Dec', [\n          'attribute vec3 normalMC;',\n          'uniform mat3 normalMatrix;',\n          'varying vec3 normalVCVSOutput;',\n        ]).result;\n        VSSource = vtkShaderProgram.substitute(\n          VSSource,\n          '//VTK::Normal::Impl',\n          ['normalVCVSOutput = normalMatrix * normalMC;']\n        ).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::Normal::Dec', [\n          'in vec3 normalVCVSOutput[];',\n          'out vec3 normalVCGSOutput;',\n        ]).result;\n        GSSource = vtkShaderProgram.substitute(\n          GSSource,\n          '//VTK::Normal::Impl',\n          ['normalVCGSOutput = normalVCVSOutput[i];']\n        ).result;\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Normal::Dec', [\n          'varying vec3 normalVCVSOutput;',\n        ]).result;\n        FSSource = vtkShaderProgram.substitute(\n          FSSource,\n          '//VTK::Normal::Impl',\n          [\n            'vec3 normalVCVSOutput = normalize(normalVCVSOutput);',\n            //  if (!gl_FrontFacing) does not work in intel hd4000 mac\n            //  if (int(gl_FrontFacing) == 0) does not work on mesa\n            '  if (gl_FrontFacing == false) { normalVCVSOutput = -normalVCVSOutput; }',\n          ]\n        ).result;\n      } else {\n        if (model.haveCellNormals) {\n          FSSource = vtkShaderProgram.substitute(\n            FSSource,\n            '//VTK::Normal::Dec',\n            ['uniform mat3 normalMatrix;', 'uniform samplerBuffer textureN;']\n          ).result;\n          FSSource = vtkShaderProgram.substitute(\n            FSSource,\n            '//VTK::Normal::Impl',\n            [\n              'vec3 normalVCVSOutput = normalize(normalMatrix *',\n              '    texelFetchBuffer(textureN, gl_PrimitiveID + PrimitiveIDOffset).xyz);',\n              '  if (gl_FrontFacing == false) { normalVCVSOutput = -normalVCVSOutput; }',\n            ]\n          ).result;\n        } else {\n          if (\n            publicAPI.getOpenGLMode(\n              actor.getProperty().getRepresentation(),\n              model.lastBoundBO.getPrimitiveType()\n            ) === model.context.LINES\n          ) {\n            // generate a normal for lines, it will be perpendicular to the line\n            // and maximally aligned with the camera view direction\n            // no clue if this is the best way to do this.\n            // the code below has been optimized a bit so what follows is\n            // an explanation of the basic approach. Compute the gradient of the line\n            // with respect to x and y, the the larger of the two\n            // cross that with the camera view direction. That gives a vector\n            // orthogonal to the camera view and the line. Note that the line and the camera\n            // view are probably not orthogonal. Which is why when we cross result that with\n            // the line gradient again we get a reasonable normal. It will be othogonal to\n            // the line (which is a plane but maximally aligned with the camera view.\n            FSSource = vtkShaderProgram.substitute(\n              FSSource,\n              '//VTK::UniformFlow::Impl',\n              [\n                '  vec3 fdx = vec3(dFdx(vertexVC.x),dFdx(vertexVC.y),dFdx(vertexVC.z));',\n                '  vec3 fdy = vec3(dFdy(vertexVC.x),dFdy(vertexVC.y),dFdy(vertexVC.z));',\n                '  //VTK::UniformFlow::Impl',\n              ] // For further replacements\n            ).result;\n            FSSource = vtkShaderProgram.substitute(\n              FSSource,\n              '//VTK::Normal::Impl',\n              [\n                'vec3 normalVCVSOutput;',\n                '  fdx = normalize(fdx);',\n                '  fdy = normalize(fdy);',\n                '  if (abs(fdx.x) > 0.0)',\n                '    { normalVCVSOutput = normalize(cross(vec3(fdx.y, -fdx.x, 0.0), fdx)); }',\n                '  else { normalVCVSOutput = normalize(cross(vec3(fdy.y, -fdy.x, 0.0), fdy));}',\n              ]\n            ).result;\n          } else {\n            FSSource = vtkShaderProgram.substitute(\n              FSSource,\n              '//VTK::Normal::Dec',\n              ['uniform int cameraParallel;']\n            ).result;\n\n            FSSource = vtkShaderProgram.substitute(\n              FSSource,\n              '//VTK::UniformFlow::Impl',\n              [\n                // '  vec3 fdx = vec3(dFdx(vertexVC.x),dFdx(vertexVC.y),dFdx(vertexVC.z));',\n                // '  vec3 fdy = vec3(dFdy(vertexVC.x),dFdy(vertexVC.y),dFdy(vertexVC.z));',\n                '  vec3 fdx = dFdx(vertexVC.xyz);',\n                '  vec3 fdy = dFdy(vertexVC.xyz);',\n                '  //VTK::UniformFlow::Impl',\n              ] // For further replacements\n            ).result;\n            FSSource = vtkShaderProgram.substitute(\n              FSSource,\n              '//VTK::Normal::Impl',\n              [\n                '  fdx = normalize(fdx);',\n                '  fdy = normalize(fdy);',\n                '  vec3 normalVCVSOutput = normalize(cross(fdx,fdy));',\n                // the code below is faster, but does not work on some devices\n                // 'vec3 normalVC = normalize(cross(dFdx(vertexVC.xyz), dFdy(vertexVC.xyz)));',\n                '  if (cameraParallel == 1 && normalVCVSOutput.z < 0.0) { normalVCVSOutput = -1.0*normalVCVSOutput; }',\n                '  if (cameraParallel == 0 && dot(normalVCVSOutput,vertexVC.xyz) > 0.0) { normalVCVSOutput = -1.0*normalVCVSOutput; }',\n              ]\n            ).result;\n          }\n        }\n      }\n      shaders.Vertex = VSSource;\n      shaders.Geometry = GSSource;\n      shaders.Fragment = FSSource;\n    }\n  };\n\n  publicAPI.replaceShaderPositionVC = (shaders, ren, actor) => {\n    let VSSource = shaders.Vertex;\n    let GSSource = shaders.Geometry;\n    let FSSource = shaders.Fragment;\n\n    // for points make sure to add in the point size\n    if (\n      actor.getProperty().getRepresentation() === Representation.POINTS ||\n      model.lastBoundBO.getPrimitiveType() === primTypes.Points\n    ) {\n      VSSource = vtkShaderProgram.substitute(\n        VSSource,\n        '//VTK::PositionVC::Impl',\n        [\n          '//VTK::PositionVC::Impl',\n          `  gl_PointSize = ${actor.getProperty().getPointSize()}.0;`,\n        ],\n        false\n      ).result;\n    }\n\n    // do we need the vertex in the shader in View Coordinates\n    const lastLightComplexity = model.lastBoundBO.getReferenceByName(\n      'lastLightComplexity'\n    );\n    if (lastLightComplexity > 0) {\n      VSSource = vtkShaderProgram.substitute(\n        VSSource,\n        '//VTK::PositionVC::Dec',\n        ['varying vec4 vertexVCVSOutput;']\n      ).result;\n      VSSource = vtkShaderProgram.substitute(\n        VSSource,\n        '//VTK::PositionVC::Impl',\n        [\n          'vertexVCVSOutput = MCVCMatrix * vertexMC;',\n          '  gl_Position = MCDCMatrix * vertexMC;',\n        ]\n      ).result;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Camera::Dec', [\n        'uniform mat4 MCDCMatrix;',\n        'uniform mat4 MCVCMatrix;',\n      ]).result;\n      GSSource = vtkShaderProgram.substitute(\n        GSSource,\n        '//VTK::PositionVC::Dec',\n        ['in vec4 vertexVCVSOutput[];', 'out vec4 vertexVCGSOutput;']\n      ).result;\n      GSSource = vtkShaderProgram.substitute(\n        GSSource,\n        '//VTK::PositionVC::Impl',\n        ['vertexVCGSOutput = vertexVCVSOutput[i];']\n      ).result;\n      FSSource = vtkShaderProgram.substitute(\n        FSSource,\n        '//VTK::PositionVC::Dec',\n        ['varying vec4 vertexVCVSOutput;']\n      ).result;\n      FSSource = vtkShaderProgram.substitute(\n        FSSource,\n        '//VTK::PositionVC::Impl',\n        ['vec4 vertexVC = vertexVCVSOutput;']\n      ).result;\n    } else {\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Camera::Dec', [\n        'uniform mat4 MCDCMatrix;',\n      ]).result;\n      VSSource = vtkShaderProgram.substitute(\n        VSSource,\n        '//VTK::PositionVC::Impl',\n        ['  gl_Position = MCDCMatrix * vertexMC;']\n      ).result;\n    }\n    shaders.Vertex = VSSource;\n    shaders.Geometry = GSSource;\n    shaders.Fragment = FSSource;\n  };\n\n  publicAPI.replaceShaderTCoord = (shaders, ren, actor) => {\n    if (model.lastBoundBO.getCABO().getTCoordOffset()) {\n      let VSSource = shaders.Vertex;\n      let GSSource = shaders.Geometry;\n      let FSSource = shaders.Fragment;\n\n      if (model.drawingEdges) {\n        return;\n      }\n\n      VSSource = vtkShaderProgram.substitute(\n        VSSource,\n        '//VTK::TCoord::Impl',\n        'tcoordVCVSOutput = tcoordMC;'\n      ).result;\n\n      // we only handle the first texture by default\n      // additional textures are activated and we set the uniform\n      // for the texture unit they are assigned to, but you have to\n      // add in the shader code to do something with them\n      const tus = model.openGLActor.getActiveTextures();\n      let tNumComp = 2;\n      let tcdim = 2;\n      if (tus && tus.length > 0) {\n        tNumComp = tus[0].getComponents();\n        if (tus[0].getTarget() === model.context.TEXTURE_CUBE_MAP) {\n          tcdim = 3;\n        }\n      }\n      if (model.renderable.getColorTextureMap()) {\n        tNumComp = model.renderable\n          .getColorTextureMap()\n          .getPointData()\n          .getScalars()\n          .getNumberOfComponents();\n        tcdim = 2;\n      }\n\n      if (tcdim === 2) {\n        VSSource = vtkShaderProgram.substitute(\n          VSSource,\n          '//VTK::TCoord::Dec',\n          'attribute vec2 tcoordMC; varying vec2 tcoordVCVSOutput;'\n        ).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::TCoord::Dec', [\n          'in vec2 tcoordVCVSOutput[];',\n          'out vec2 tcoordVCGSOutput;',\n        ]).result;\n        GSSource = vtkShaderProgram.substitute(\n          GSSource,\n          '//VTK::TCoord::Impl',\n          'tcoordVCGSOutput = tcoordVCVSOutput[i];'\n        ).result;\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Dec', [\n          'varying vec2 tcoordVCVSOutput;',\n          'uniform sampler2D texture1;',\n        ]).result;\n        if (tus && tus.length >= 1) {\n          switch (tNumComp) {\n            case 1:\n              FSSource = vtkShaderProgram.substitute(\n                FSSource,\n                '//VTK::TCoord::Impl',\n                [\n                  'vec4 tcolor = texture2D(texture1, tcoordVCVSOutput);',\n                  'gl_FragData[0] = clamp(gl_FragData[0],0.0,1.0)*',\n                  '  vec4(tcolor.r,tcolor.r,tcolor.r,1.0);',\n                ]\n              ).result;\n              break;\n            case 2:\n              FSSource = vtkShaderProgram.substitute(\n                FSSource,\n                '//VTK::TCoord::Impl',\n                [\n                  'vec4 tcolor = texture2D(texture1, tcoordVCVSOutput);',\n                  'gl_FragData[0] = clamp(gl_FragData[0],0.0,1.0)*',\n                  '  vec4(tcolor.r,tcolor.r,tcolor.r,tcolor.g);',\n                ]\n              ).result;\n              break;\n            default:\n              FSSource = vtkShaderProgram.substitute(\n                FSSource,\n                '//VTK::TCoord::Impl',\n                'gl_FragData[0] = clamp(gl_FragData[0],0.0,1.0)*texture2D(texture1, tcoordVCVSOutput.st);'\n              ).result;\n          }\n        }\n      } else {\n        VSSource = vtkShaderProgram.substitute(\n          VSSource,\n          '//VTK::TCoord::Dec',\n          'attribute vec3 tcoordMC; varying vec3 tcoordVCVSOutput;'\n        ).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::TCoord::Dec', [\n          'in vec3 tcoordVCVSOutput[];',\n          'out vec3 tcoordVCGSOutput;',\n        ]).result;\n        GSSource = vtkShaderProgram.substitute(\n          GSSource,\n          '//VTK::TCoord::Impl',\n          'tcoordVCGSOutput = tcoordVCVSOutput[i];'\n        ).result;\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Dec', [\n          'varying vec3 tcoordVCVSOutput;',\n          'uniform samplerCube texture1;',\n        ]).result;\n        switch (tNumComp) {\n          case 1:\n            FSSource = vtkShaderProgram.substitute(\n              FSSource,\n              '//VTK::TCoord::Impl',\n              [\n                'vec4 tcolor = textureCube(texture1, tcoordVCVSOutput);',\n                'gl_FragData[0] = clamp(gl_FragData[0],0.0,1.0)*',\n                '  vec4(tcolor.r,tcolor.r,tcolor.r,1.0);',\n              ]\n            ).result;\n            break;\n          case 2:\n            FSSource = vtkShaderProgram.substitute(\n              FSSource,\n              '//VTK::TCoord::Impl',\n              [\n                'vec4 tcolor = textureCube(texture1, tcoordVCVSOutput);',\n                'gl_FragData[0] = clamp(gl_FragData[0],0.0,1.0)*',\n                '  vec4(tcolor.r,tcolor.r,tcolor.r,tcolor.g);',\n              ]\n            ).result;\n            break;\n          default:\n            FSSource = vtkShaderProgram.substitute(\n              FSSource,\n              '//VTK::TCoord::Impl',\n              'gl_FragData[0] = clamp(gl_FragData[0],0.0,1.0)*textureCube(texture1, tcoordVCVSOutput);'\n            ).result;\n        }\n      }\n      shaders.Vertex = VSSource;\n      shaders.Geometry = GSSource;\n      shaders.Fragment = FSSource;\n    }\n  };\n\n  publicAPI.replaceShaderClip = (shaders, ren, actor) => {\n    let VSSource = shaders.Vertex;\n    let FSSource = shaders.Fragment;\n\n    if (model.renderable.getNumberOfClippingPlanes()) {\n      let numClipPlanes = model.renderable.getNumberOfClippingPlanes();\n      if (numClipPlanes > 6) {\n        macro.vtkErrorMacro('OpenGL has a limit of 6 clipping planes');\n        numClipPlanes = 6;\n      }\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Clip::Dec', [\n        'uniform int numClipPlanes;',\n        'uniform vec4 clipPlanes[6];',\n        'varying float clipDistancesVSOutput[6];',\n      ]).result;\n\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Clip::Impl', [\n        'for (int planeNum = 0; planeNum < 6; planeNum++)',\n        '    {',\n        '    if (planeNum >= numClipPlanes)',\n        '        {',\n        '        break;',\n        '        }',\n        '    clipDistancesVSOutput[planeNum] = dot(clipPlanes[planeNum], vertexMC);',\n        '    }',\n      ]).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Clip::Dec', [\n        'uniform int numClipPlanes;',\n        'varying float clipDistancesVSOutput[6];',\n      ]).result;\n\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Clip::Impl', [\n        'for (int planeNum = 0; planeNum < 6; planeNum++)',\n        '    {',\n        '    if (planeNum >= numClipPlanes)',\n        '        {',\n        '        break;',\n        '        }',\n        '    if (clipDistancesVSOutput[planeNum] < 0.0) discard;',\n        '    }',\n      ]).result;\n    }\n    shaders.Vertex = VSSource;\n    shaders.Fragment = FSSource;\n  };\n\n  publicAPI.getCoincidentParameters = (ren, actor) => {\n    // 1. ResolveCoincidentTopology is On and non zero for this primitive\n    // type\n    let cp = null;\n    const prop = actor.getProperty();\n    if (\n      model.renderable.getResolveCoincidentTopology() ||\n      (prop.getEdgeVisibility() &&\n        prop.getRepresentation() === Representation.SURFACE)\n    ) {\n      const primType = model.lastBoundBO.getPrimitiveType();\n      if (\n        primType === primTypes.Points ||\n        prop.getRepresentation() === Representation.POINTS\n      ) {\n        cp = model.renderable.getCoincidentTopologyPointOffsetParameter();\n      } else if (\n        primType === primTypes.Lines ||\n        prop.getRepresentation() === Representation.WIREFRAME\n      ) {\n        cp = model.renderable.getCoincidentTopologyLineOffsetParameters();\n      } else if (\n        primType === primTypes.Tris ||\n        primType === primTypes.TriStrips\n      ) {\n        cp = model.renderable.getCoincidentTopologyPolygonOffsetParameters();\n      }\n      if (\n        primType === primTypes.TrisEdges ||\n        primType === primTypes.TriStripsEdges\n      ) {\n        cp = model.renderable.getCoincidentTopologyPolygonOffsetParameters();\n        cp.factor /= 2.0;\n        cp.offset /= 2.0;\n      }\n    }\n\n    // hardware picking always offset due to saved zbuffer\n    // This gets you above the saved surface depth buffer.\n    // vtkHardwareSelector* selector = ren->GetSelector();\n    // if (selector &&\n    //     selector->GetFieldAssociation() == vtkDataObject::FIELD_ASSOCIATION_POINTS)\n    // {\n    //   offset -= 2.0;\n    //   return;\n    // }\n    return cp;\n  };\n\n  publicAPI.replaceShaderCoincidentOffset = (shaders, ren, actor) => {\n    const cp = publicAPI.getCoincidentParameters(ren, actor);\n\n    // if we need an offset handle it here\n    // The value of .000016 is suitable for depth buffers\n    // of at least 16 bit depth. We do not query the depth\n    // right now because we would need some mechanism to\n    // cache the result taking into account FBO changes etc.\n    if (cp && (cp.factor !== 0.0 || cp.offset !== 0.0)) {\n      let FSSource = shaders.Fragment;\n\n      FSSource = vtkShaderProgram.substitute(\n        FSSource,\n        '//VTK::Coincident::Dec',\n        ['uniform float cfactor;', 'uniform float coffset;']\n      ).result;\n\n      if (model.context.getExtension('EXT_frag_depth')) {\n        if (cp.factor !== 0.0) {\n          FSSource = vtkShaderProgram.substitute(\n            FSSource,\n            '//VTK::UniformFlow::Impl',\n            [\n              'float cscale = length(vec2(dFdx(gl_FragCoord.z),dFdy(gl_FragCoord.z)));',\n              '//VTK::UniformFlow::Impl',\n            ],\n            false\n          ).result;\n          FSSource = vtkShaderProgram.substitute(\n            FSSource,\n            '//VTK::Depth::Impl',\n            'gl_FragDepthEXT = gl_FragCoord.z + cfactor*cscale + 0.000016*coffset;'\n          ).result;\n        } else {\n          FSSource = vtkShaderProgram.substitute(\n            FSSource,\n            '//VTK::Depth::Impl',\n            'gl_FragDepthEXT = gl_FragCoord.z + 0.000016*coffset;'\n          ).result;\n        }\n      }\n      if (model.openGLRenderWindow.getWebgl2()) {\n        if (cp.factor !== 0.0) {\n          FSSource = vtkShaderProgram.substitute(\n            FSSource,\n            '//VTK::UniformFlow::Impl',\n            [\n              'float cscale = length(vec2(dFdx(gl_FragCoord.z),dFdy(gl_FragCoord.z)));',\n              '//VTK::UniformFlow::Impl',\n            ],\n            false\n          ).result;\n          FSSource = vtkShaderProgram.substitute(\n            FSSource,\n            '//VTK::Depth::Impl',\n            'gl_FragDepth = gl_FragCoord.z + cfactor*cscale + 0.000016*coffset;'\n          ).result;\n        } else {\n          FSSource = vtkShaderProgram.substitute(\n            FSSource,\n            '//VTK::Depth::Impl',\n            'gl_FragDepth = gl_FragCoord.z + 0.000016*coffset;'\n          ).result;\n        }\n      }\n      shaders.Fragment = FSSource;\n    }\n  };\n\n  publicAPI.replaceShaderPicking = (shaders, ren, actor) => {\n    let FSSource = shaders.Fragment;\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Picking::Dec', [\n      'uniform vec3 mapperIndex;',\n      'uniform int picking;',\n    ]).result;\n    FSSource = vtkShaderProgram.substitute(\n      FSSource,\n      '//VTK::Picking::Impl',\n      '  gl_FragData[0] = picking != 0 ? vec4(mapperIndex,1.0) : gl_FragData[0];'\n    ).result;\n    shaders.Fragment = FSSource;\n  };\n\n  publicAPI.replaceShaderValues = (shaders, ren, actor) => {\n    publicAPI.replaceShaderColor(shaders, ren, actor);\n    publicAPI.replaceShaderNormal(shaders, ren, actor);\n    publicAPI.replaceShaderLight(shaders, ren, actor);\n    publicAPI.replaceShaderTCoord(shaders, ren, actor);\n    publicAPI.replaceShaderPicking(shaders, ren, actor);\n    publicAPI.replaceShaderClip(shaders, ren, actor);\n    publicAPI.replaceShaderCoincidentOffset(shaders, ren, actor);\n    publicAPI.replaceShaderPositionVC(shaders, ren, actor);\n\n    if (model.haveSeenDepthRequest) {\n      let FSSource = shaders.Fragment;\n      FSSource = vtkShaderProgram.substitute(\n        FSSource,\n        '//VTK::ZBuffer::Dec',\n        'uniform int depthRequest;'\n      ).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ZBuffer::Impl', [\n        'if (depthRequest == 1) {',\n        'float iz = floor(gl_FragCoord.z*65535.0 + 0.1);',\n        'float rf = floor(iz/256.0)/255.0;',\n        'float gf = mod(iz,256.0)/255.0;',\n        'gl_FragData[0] = vec4(rf, gf, 0.0, 1.0); }',\n      ]).result;\n      shaders.Fragment = FSSource;\n    }\n  };\n\n  publicAPI.getNeedToRebuildShaders = (cellBO, ren, actor) => {\n    let lightComplexity = 0;\n    let numberOfLights = 0;\n\n    const primType = cellBO.getPrimitiveType();\n    const poly = model.currentInput;\n\n    // different algo from C++ as of 5/2019\n    let needLighting = false;\n    const pointNormals = poly.getPointData().getNormals();\n    const cellNormals = poly.getCellData().getNormals();\n    const flat = actor.getProperty().getInterpolation() === Shading.FLAT;\n    const representation = actor.getProperty().getRepresentation();\n    const mode = publicAPI.getOpenGLMode(representation, primType);\n    // 1) all surfaces need lighting\n    if (mode === model.context.TRIANGLES) {\n      needLighting = true;\n      // 2) all cell normals without point normals need lighting\n    } else if (cellNormals && !pointNormals) {\n      needLighting = true;\n      // 3) Phong + pointNormals need lighting\n    } else if (!flat && pointNormals) {\n      needLighting = true;\n      // 4) Phong Lines need lighting\n    } else if (!flat && mode === model.context.LINES) {\n      needLighting = true;\n    }\n    // 5) everthing else is unlit\n\n    // do we need lighting?\n    if (actor.getProperty().getLighting() && needLighting) {\n      // consider the lighting complexity to determine which case applies\n      // simple headlight, Light Kit, the whole feature set of VTK\n      lightComplexity = 0;\n      const lights = ren.getLightsByReference();\n      for (let index = 0; index < lights.length; ++index) {\n        const light = lights[index];\n        const status = light.getSwitch();\n        if (status > 0) {\n          numberOfLights++;\n          if (lightComplexity === 0) {\n            lightComplexity = 1;\n          }\n        }\n\n        if (\n          lightComplexity === 1 &&\n          (numberOfLights > 1 ||\n            light.getIntensity() !== 1.0 ||\n            !light.lightTypeIsHeadLight())\n        ) {\n          lightComplexity = 2;\n        }\n        if (lightComplexity < 3 && light.getPositional()) {\n          lightComplexity = 3;\n        }\n      }\n    }\n\n    let needRebuild = false;\n    const lastLightComplexity = model.lastBoundBO.getReferenceByName(\n      'lastLightComplexity'\n    );\n    const lastLightCount = model.lastBoundBO.getReferenceByName(\n      'lastLightCount'\n    );\n    if (\n      lastLightComplexity !== lightComplexity ||\n      lastLightCount !== numberOfLights\n    ) {\n      model.lastBoundBO.set({ lastLightComplexity: lightComplexity }, true);\n      model.lastBoundBO.set({ lastLightCount: numberOfLights }, true);\n      needRebuild = true;\n    }\n\n    // has something changed that would require us to recreate the shader?\n    // candidates are\n    // property modified (representation interpolation and lighting)\n    // input modified\n    // light complexity changed\n    if (\n      model.lastHaveSeenDepthRequest !== model.haveSeenDepthRequest ||\n      cellBO.getProgram() === 0 ||\n      cellBO.getShaderSourceTime().getMTime() < publicAPI.getMTime() ||\n      cellBO.getShaderSourceTime().getMTime() < actor.getMTime() ||\n      cellBO.getShaderSourceTime().getMTime() < model.renderable.getMTime() ||\n      cellBO.getShaderSourceTime().getMTime() < model.currentInput.getMTime() ||\n      needRebuild\n    ) {\n      model.lastHaveSeenDepthRequest = model.haveSeenDepthRequest;\n      return true;\n    }\n\n    return false;\n  };\n\n  publicAPI.updateShaders = (cellBO, ren, actor) => {\n    model.lastBoundBO = cellBO;\n\n    // has something changed that would require us to recreate the shader?\n    if (publicAPI.getNeedToRebuildShaders(cellBO, ren, actor)) {\n      const shaders = { Vertex: null, Fragment: null, Geometry: null };\n      publicAPI.buildShaders(shaders, ren, actor);\n\n      // compile and bind the program if needed\n      const newShader = model.openGLRenderWindow\n        .getShaderCache()\n        .readyShaderProgramArray(\n          shaders.Vertex,\n          shaders.Fragment,\n          shaders.Geometry\n        );\n\n      // if the shader changed reinitialize the VAO\n      if (newShader !== cellBO.getProgram()) {\n        cellBO.setProgram(newShader);\n        // reset the VAO as the shader has changed\n        cellBO.getVAO().releaseGraphicsResources();\n      }\n\n      cellBO.getShaderSourceTime().modified();\n    } else {\n      model.openGLRenderWindow\n        .getShaderCache()\n        .readyShaderProgram(cellBO.getProgram());\n    }\n\n    cellBO.getVAO().bind();\n\n    publicAPI.setMapperShaderParameters(cellBO, ren, actor);\n    publicAPI.setPropertyShaderParameters(cellBO, ren, actor);\n    publicAPI.setCameraShaderParameters(cellBO, ren, actor);\n    publicAPI.setLightingShaderParameters(cellBO, ren, actor);\n\n    const listCallbacks = model.renderable.getViewSpecificProperties()\n      .ShadersCallbacks;\n    if (listCallbacks) {\n      listCallbacks.forEach((object) => {\n        object.callback(object.userData, cellBO, ren, actor);\n      });\n    }\n  };\n\n  publicAPI.setMapperShaderParameters = (cellBO, ren, actor) => {\n    // Now to update the VAO too, if necessary.\n    if (cellBO.getProgram().isUniformUsed('PrimitiveIDOffset')) {\n      cellBO\n        .getProgram()\n        .setUniformi('PrimitiveIDOffset', model.primitiveIDOffset);\n    }\n\n    if (\n      cellBO.getCABO().getElementCount() &&\n      (model.VBOBuildTime.getMTime() >\n        cellBO.getAttributeUpdateTime().getMTime() ||\n        cellBO.getShaderSourceTime().getMTime() >\n          cellBO.getAttributeUpdateTime().getMTime())\n    ) {\n      const lastLightComplexity = model.lastBoundBO.getReferenceByName(\n        'lastLightComplexity'\n      );\n\n      if (cellBO.getProgram().isAttributeUsed('vertexMC')) {\n        if (\n          !cellBO\n            .getVAO()\n            .addAttributeArray(\n              cellBO.getProgram(),\n              cellBO.getCABO(),\n              'vertexMC',\n              cellBO.getCABO().getVertexOffset(),\n              cellBO.getCABO().getStride(),\n              model.context.FLOAT,\n              3,\n              false\n            )\n        ) {\n          vtkErrorMacro('Error setting vertexMC in shader VAO.');\n        }\n      }\n      if (\n        cellBO.getProgram().isAttributeUsed('normalMC') &&\n        cellBO.getCABO().getNormalOffset() &&\n        lastLightComplexity > 0\n      ) {\n        if (\n          !cellBO\n            .getVAO()\n            .addAttributeArray(\n              cellBO.getProgram(),\n              cellBO.getCABO(),\n              'normalMC',\n              cellBO.getCABO().getNormalOffset(),\n              cellBO.getCABO().getStride(),\n              model.context.FLOAT,\n              3,\n              false\n            )\n        ) {\n          vtkErrorMacro('Error setting normalMC in shader VAO.');\n        }\n      } else {\n        cellBO.getVAO().removeAttributeArray('normalMC');\n      }\n\n      model.renderable.getCustomShaderAttributes().forEach((attrName, idx) => {\n        if (cellBO.getProgram().isAttributeUsed(`${attrName}MC`)) {\n          if (\n            !cellBO\n              .getVAO()\n              .addAttributeArray(\n                cellBO.getProgram(),\n                cellBO.getCABO(),\n                `${attrName}MC`,\n                cellBO.getCABO().getCustomData()[idx].offset,\n                cellBO.getCABO().getStride(),\n                model.context.FLOAT,\n                cellBO.getCABO().getCustomData()[idx].components,\n                false\n              )\n          ) {\n            vtkErrorMacro(`Error setting ${attrName}MC in shader VAO.`);\n          }\n        }\n      });\n\n      if (\n        cellBO.getProgram().isAttributeUsed('tcoordMC') &&\n        cellBO.getCABO().getTCoordOffset()\n      ) {\n        if (\n          !cellBO\n            .getVAO()\n            .addAttributeArray(\n              cellBO.getProgram(),\n              cellBO.getCABO(),\n              'tcoordMC',\n              cellBO.getCABO().getTCoordOffset(),\n              cellBO.getCABO().getStride(),\n              model.context.FLOAT,\n              cellBO.getCABO().getTCoordComponents(),\n              false\n            )\n        ) {\n          vtkErrorMacro('Error setting tcoordMC in shader VAO.');\n        }\n      } else {\n        cellBO.getVAO().removeAttributeArray('tcoordMC');\n      }\n      if (\n        cellBO.getProgram().isAttributeUsed('scalarColor') &&\n        cellBO.getCABO().getColorComponents()\n      ) {\n        if (\n          !cellBO\n            .getVAO()\n            .addAttributeArray(\n              cellBO.getProgram(),\n              cellBO.getCABO().getColorBO(),\n              'scalarColor',\n              cellBO.getCABO().getColorOffset(),\n              cellBO.getCABO().getColorBOStride(),\n              model.context.UNSIGNED_BYTE,\n              4,\n              true\n            )\n        ) {\n          vtkErrorMacro('Error setting scalarColor in shader VAO.');\n        }\n      } else {\n        cellBO.getVAO().removeAttributeArray('scalarColor');\n      }\n\n      cellBO.getAttributeUpdateTime().modified();\n    }\n\n    if (model.renderable.getNumberOfClippingPlanes()) {\n      // add all the clipping planes\n      let numClipPlanes = model.renderable.getNumberOfClippingPlanes();\n      if (numClipPlanes > 6) {\n        macro.vtkErrorMacro('OpenGL has a limit of 6 clipping planes');\n        numClipPlanes = 6;\n      }\n      const planeEquations = [];\n      for (let i = 0; i < numClipPlanes; i++) {\n        const planeEquation = [];\n        model.renderable.getClippingPlaneInDataCoords(\n          actor.getMatrix(),\n          i,\n          planeEquation\n        );\n\n        for (let j = 0; j < 4; j++) {\n          planeEquations.push(planeEquation[j]);\n        }\n      }\n      cellBO.getProgram().setUniformi('numClipPlanes', numClipPlanes);\n      cellBO.getProgram().setUniform4fv('clipPlanes', 6, planeEquations);\n    }\n\n    if (\n      model.internalColorTexture &&\n      cellBO.getProgram().isUniformUsed('texture1')\n    ) {\n      cellBO\n        .getProgram()\n        .setUniformi('texture1', model.internalColorTexture.getTextureUnit());\n    }\n    const tus = model.openGLActor.getActiveTextures();\n    if (tus) {\n      for (let index = 0; index < tus.length; ++index) {\n        const tex = tus[index];\n        const texUnit = tex.getTextureUnit();\n        const tname = `texture${texUnit + 1}`;\n        if (cellBO.getProgram().isUniformUsed(tname)) {\n          cellBO.getProgram().setUniformi(tname, texUnit);\n        }\n      }\n    }\n\n    // handle depth requests\n    if (model.haveSeenDepthRequest) {\n      cellBO\n        .getProgram()\n        .setUniformi('depthRequest', model.renderDepth ? 1 : 0);\n    }\n\n    // handle coincident\n    if (cellBO.getProgram().isUniformUsed('coffset')) {\n      const cp = publicAPI.getCoincidentParameters(ren, actor);\n      cellBO.getProgram().setUniformf('coffset', cp.offset);\n      // cfactor isn't always used when coffset is.\n      if (cellBO.getProgram().isUniformUsed('cfactor')) {\n        cellBO.getProgram().setUniformf('cfactor', cp.factor);\n      }\n    }\n\n    const selector = model.openGLRenderer.getSelector();\n    cellBO\n      .getProgram()\n      .setUniform3fArray(\n        'mapperIndex',\n        selector ? selector.getPropColorValue() : [0.0, 0.0, 0.0]\n      );\n    cellBO\n      .getProgram()\n      .setUniformi('picking', selector ? selector.getCurrentPass() + 1 : 0);\n  };\n\n  publicAPI.setLightingShaderParameters = (cellBO, ren, actor) => {\n    // for unlit and headlight there are no lighting parameters\n    const lastLightComplexity = model.lastBoundBO.getReferenceByName(\n      'lastLightComplexity'\n    );\n    if (lastLightComplexity < 2) {\n      return;\n    }\n\n    const program = cellBO.getProgram();\n\n    // bind some light settings\n    let numberOfLights = 0;\n\n    const lights = ren.getLightsByReference();\n    for (let index = 0; index < lights.length; ++index) {\n      const light = lights[index];\n      const status = light.getSwitch();\n      if (status > 0.0) {\n        const dColor = light.getColorByReference();\n        const intensity = light.getIntensity();\n        model.lightColor[0] = dColor[0] * intensity;\n        model.lightColor[1] = dColor[1] * intensity;\n        model.lightColor[2] = dColor[2] * intensity;\n        // get required info from light\n        const ld = light.getDirection();\n        const transform = ren.getActiveCamera().getViewMatrix();\n\n        const newLightDirection = [...ld];\n        if (light.lightTypeIsSceneLight()) {\n          newLightDirection[0] =\n            transform[0] * ld[0] + transform[1] * ld[1] + transform[2] * ld[2];\n          newLightDirection[1] =\n            transform[4] * ld[0] + transform[5] * ld[1] + transform[6] * ld[2];\n          newLightDirection[2] =\n            transform[8] * ld[0] + transform[9] * ld[1] + transform[10] * ld[2];\n          vtkMath.normalize(newLightDirection);\n        }\n\n        model.lightDirection[0] = newLightDirection[0];\n        model.lightDirection[1] = newLightDirection[1];\n        model.lightDirection[2] = newLightDirection[2];\n        model.lightHalfAngle[0] = -model.lightDirection[0];\n        model.lightHalfAngle[1] = -model.lightDirection[1];\n        model.lightHalfAngle[2] = -model.lightDirection[2] + 1.0;\n        vtkMath.normalize(model.lightDirection);\n        program.setUniform3fArray(\n          `lightColor${numberOfLights}`,\n          model.lightColor\n        );\n        program.setUniform3fArray(\n          `lightDirectionVC${numberOfLights}`,\n          model.lightDirection\n        );\n        program.setUniform3fArray(\n          `lightHalfAngleVC${numberOfLights}`,\n          model.lightHalfAngle\n        );\n        numberOfLights++;\n      }\n    }\n\n    // we are done unless we have positional lights\n    if (lastLightComplexity < 3) {\n      return;\n    }\n\n    // for lightkit case there are some parameters to set\n    const cam = ren.getActiveCamera();\n    const viewTF = cam.getViewMatrix();\n    mat4.transpose(viewTF, viewTF);\n\n    numberOfLights = 0;\n\n    for (let index = 0; index < lights.length; ++index) {\n      const light = lights[index];\n      const status = light.getSwitch();\n      if (status > 0.0) {\n        const lp = light.getTransformedPosition();\n        const np = vec3.fromValues(lp[0], lp[1], lp[2]);\n        vec3.transformMat4(np, np, viewTF);\n        program.setUniform3fArray(\n          `lightAttenuation${numberOfLights}`,\n          light.getAttenuationValuesByReference()\n        );\n        program.setUniformi(\n          `lightPositional${numberOfLights}`,\n          light.getPositional()\n        );\n        program.setUniformf(\n          `lightExponent${numberOfLights}`,\n          light.getExponent()\n        );\n        program.setUniformf(\n          `lightConeAngle${numberOfLights}`,\n          light.getConeAngle()\n        );\n        program.setUniform3fArray(`lightPositionVC${numberOfLights}`, [\n          np[0],\n          np[1],\n          np[2],\n        ]);\n        numberOfLights++;\n      }\n    }\n  };\n\n  function safeMatrixMultiply(matrixArray, matrixType, tmpMat) {\n    matrixType.identity(tmpMat);\n    return matrixArray.reduce((res, matrix, index) => {\n      if (index === 0) {\n        return matrix ? matrixType.copy(res, matrix) : matrixType.identity(res);\n      }\n      return matrix ? matrixType.multiply(res, res, matrix) : res;\n    }, tmpMat);\n  }\n\n  publicAPI.setCameraShaderParameters = (cellBO, ren, actor) => {\n    const program = cellBO.getProgram();\n\n    // // [WMVD]C == {world, model, view, display} coordinates\n    // // E.g., WCDC == world to display coordinate transformation\n    const keyMats = model.openGLCamera.getKeyMatrices(ren);\n    const cam = ren.getActiveCamera();\n\n    const camm = model.openGLCamera.getKeyMatrixTime().getMTime();\n    const progm = program.getLastCameraMTime();\n\n    const shiftScaleEnabled = cellBO.getCABO().getCoordShiftAndScaleEnabled();\n    const inverseShiftScaleMatrix = shiftScaleEnabled\n      ? cellBO.getCABO().getInverseShiftAndScaleMatrix()\n      : null;\n\n    const actorIsIdentity = actor.getIsIdentity();\n    const actMats = actorIsIdentity\n      ? { mcwc: null, normalMatrix: null }\n      : model.openGLActor.getKeyMatrices();\n\n    program.setUniformMatrix(\n      'MCDCMatrix',\n      safeMatrixMultiply(\n        [keyMats.wcdc, actMats.mcwc, inverseShiftScaleMatrix],\n        mat4,\n        model.tmpMat4\n      )\n    );\n    if (program.isUniformUsed('MCVCMatrix')) {\n      program.setUniformMatrix(\n        'MCVCMatrix',\n        safeMatrixMultiply(\n          [keyMats.wcvc, actMats.mcwc, inverseShiftScaleMatrix],\n          mat4,\n          model.tmpMat4\n        )\n      );\n    }\n    if (program.isUniformUsed('normalMatrix')) {\n      program.setUniformMatrix3x3(\n        'normalMatrix',\n        safeMatrixMultiply(\n          [keyMats.normalMatrix, actMats.normalMatrix],\n          mat3,\n          model.tmpMat3\n        )\n      );\n    }\n\n    if (progm !== camm) {\n      if (program.isUniformUsed('cameraParallel')) {\n        program.setUniformi('cameraParallel', cam.getParallelProjection());\n      }\n      program.setLastCameraMTime(camm);\n    }\n\n    if (!actorIsIdentity) {\n      // reset the cam mtime as actor modified the shader values\n      program.setLastCameraMTime(0);\n    }\n  };\n\n  publicAPI.setPropertyShaderParameters = (cellBO, ren, actor) => {\n    const program = cellBO.getProgram();\n\n    const ppty = actor.getProperty();\n\n    const opacity = ppty.getOpacity();\n    program.setUniformf('opacityUniform', opacity);\n\n    const aColor = model.drawingEdges\n      ? ppty.getEdgeColorByReference()\n      : ppty.getAmbientColorByReference();\n    program.setUniform3fArray('ambientColorUniform', aColor);\n    program.setUniformf('ambient', ppty.getAmbient());\n\n    const dColor = model.drawingEdges\n      ? ppty.getEdgeColorByReference()\n      : ppty.getDiffuseColorByReference();\n    program.setUniform3fArray('diffuseColorUniform', dColor);\n    program.setUniformf('diffuse', ppty.getDiffuse());\n\n    // we are done unless we have lighting\n    const lastLightComplexity = model.lastBoundBO.getReferenceByName(\n      'lastLightComplexity'\n    );\n    if (lastLightComplexity < 1) {\n      return;\n    }\n    const sColor = ppty.getSpecularColorByReference();\n    program.setUniform3fArray('specularColorUniform', sColor);\n    program.setUniformf('specular', ppty.getSpecular());\n    program.setUniformf('specularPowerUniform', ppty.getSpecularPower());\n\n    // // now set the backface properties if we have them\n    // if (actor.getBackfaceProperty() && !model.DrawingEdges)\n    //   {\n    //   ppty = actor.getBackfaceProperty();\n\n    //   let opacity = static_cast<float>(ppty.getOpacity());\n    //   double *aColor = ppty.getAmbientColor();\n    //   double aIntensity = ppty.getAmbient();  // ignoring renderer ambient\n    //   let ambientColor[3] = {static_cast<float>(aColor[0] * aIntensity),\n    //     static_cast<float>(aColor[1] * aIntensity),\n    //     static_cast<float>(aColor[2] * aIntensity)};\n    //   double *dColor = ppty.getDiffuseColor();\n    //   double dIntensity = ppty.getDiffuse();\n    //   let diffuseColor[3] = {static_cast<float>(dColor[0] * dIntensity),\n    //     static_cast<float>(dColor[1] * dIntensity),\n    //     static_cast<float>(dColor[2] * dIntensity)};\n    //   double *sColor = ppty.getSpecularColor();\n    //   double sIntensity = ppty.getSpecular();\n    //   let specularColor[3] = {static_cast<float>(sColor[0] * sIntensity),\n    //     static_cast<float>(sColor[1] * sIntensity),\n    //     static_cast<float>(sColor[2] * sIntensity)};\n    //   double specularPower = ppty.getSpecularPower();\n\n    //   program.SetUniformf('opacityUniformBF', opacity);\n    //   program.SetUniform3f('ambientColorUniformBF', ambientColor);\n    //   program.SetUniform3f('diffuseColorUniformBF', diffuseColor);\n    //   // we are done unless we have lighting\n    //   if (model.LastLightComplexity[&cellBO] < 1)\n    //     {\n    //     return;\n    //     }\n    //   program.SetUniform3f('specularColorUniformBF', specularColor);\n    //   program.SetUniformf('specularPowerUniformBF', specularPower);\n    //   }\n  };\n\n  publicAPI.renderPieceStart = (ren, actor) => {\n    model.primitiveIDOffset = 0;\n\n    if (model.openGLRenderer.getSelector()) {\n      switch (model.openGLRenderer.getSelector().getCurrentPass()) {\n        default:\n          model.openGLRenderer.getSelector().renderProp(actor);\n      }\n    }\n\n    // make sure the BOs are up to date\n    publicAPI.updateBufferObjects(ren, actor);\n\n    // If we are coloring by texture, then load the texture map.\n    // Use Map as indicator, because texture hangs around.\n    if (model.renderable.getColorTextureMap()) {\n      model.internalColorTexture.activate();\n    }\n\n    // Bind the OpenGL, this is shared between the different primitive/cell types.\n    model.lastBoundBO = null;\n  };\n\n  publicAPI.renderPieceDraw = (ren, actor) => {\n    const representation = actor.getProperty().getRepresentation();\n\n    const gl = model.context;\n\n    const drawSurfaceWithEdges =\n      actor.getProperty().getEdgeVisibility() &&\n      representation === Representation.SURFACE;\n\n    // for every primitive type\n    for (let i = primTypes.Start; i < primTypes.End; i++) {\n      // if there are entries\n      const cabo = model.primitives[i].getCABO();\n      if (cabo.getElementCount()) {\n        // are we drawing edges\n        model.drawingEdges =\n          drawSurfaceWithEdges &&\n          (i === primTypes.TrisEdges || i === primTypes.TriStripsEdges);\n        publicAPI.updateShaders(model.primitives[i], ren, actor);\n        const mode = publicAPI.getOpenGLMode(representation, i);\n        gl.drawArrays(mode, 0, cabo.getElementCount());\n\n        const stride =\n          (mode === gl.POINTS ? 1 : 0) || (mode === gl.LINES ? 2 : 3);\n        model.primitiveIDOffset += cabo.getElementCount() / stride;\n      }\n    }\n  };\n\n  publicAPI.getOpenGLMode = (rep, type) => {\n    if (rep === Representation.POINTS || type === primTypes.Points) {\n      return model.context.POINTS;\n    }\n    if (\n      rep === Representation.WIREFRAME ||\n      type === primTypes.Lines ||\n      type === primTypes.TrisEdges ||\n      type === primTypes.TriStripsEdges\n    ) {\n      return model.context.LINES;\n    }\n    return model.context.TRIANGLES;\n  };\n\n  publicAPI.renderPieceFinish = (ren, actor) => {\n    if (model.LastBoundBO) {\n      model.LastBoundBO.getVAO().release();\n    }\n    if (model.renderable.getColorTextureMap()) {\n      model.internalColorTexture.deactivate();\n    }\n  };\n\n  publicAPI.renderPiece = (ren, actor) => {\n    // Make sure that we have been properly initialized.\n    // if (ren.getRenderWindow().checkAbortStatus()) {\n    //   return;\n    // }\n\n    publicAPI.invokeEvent(StartEvent);\n    if (!model.renderable.getStatic()) {\n      model.renderable.update();\n    }\n    model.currentInput = model.renderable.getInputData();\n    publicAPI.invokeEvent(EndEvent);\n\n    if (!model.currentInput) {\n      vtkErrorMacro('No input!');\n      return;\n    }\n\n    // if there are no points then we are done\n    if (\n      !model.currentInput.getPoints ||\n      !model.currentInput.getPoints().getNumberOfValues()\n    ) {\n      return;\n    }\n\n    // apply faceCulling\n    const gl = model.context;\n    const backfaceCulling = actor.getProperty().getBackfaceCulling();\n    const frontfaceCulling = actor.getProperty().getFrontfaceCulling();\n    if (!backfaceCulling && !frontfaceCulling) {\n      model.openGLRenderWindow.disableCullFace();\n    } else if (frontfaceCulling) {\n      model.openGLRenderWindow.enableCullFace();\n      gl.cullFace(gl.FRONT);\n    } else {\n      model.openGLRenderWindow.enableCullFace();\n      gl.cullFace(gl.BACK);\n    }\n\n    publicAPI.renderPieceStart(ren, actor);\n    publicAPI.renderPieceDraw(ren, actor);\n    publicAPI.renderPieceFinish(ren, actor);\n  };\n\n  publicAPI.computeBounds = (ren, actor) => {\n    if (!publicAPI.getInput()) {\n      vtkMath.uninitializeBounds(model.bounds);\n      return;\n    }\n    model.bounds = publicAPI.getInput().getBounds();\n  };\n\n  publicAPI.updateBufferObjects = (ren, actor) => {\n    // Rebuild buffers if needed\n    if (publicAPI.getNeedToRebuildBufferObjects(ren, actor)) {\n      publicAPI.buildBufferObjects(ren, actor);\n    }\n  };\n\n  publicAPI.getNeedToRebuildBufferObjects = (ren, actor) => {\n    // first do a coarse check\n    // Note that the actor's mtime includes it's properties mtime\n    const vmtime = model.VBOBuildTime.getMTime();\n    if (\n      vmtime < publicAPI.getMTime() ||\n      vmtime < model.renderable.getMTime() ||\n      vmtime < actor.getMTime() ||\n      vmtime < model.currentInput.getMTime()\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  publicAPI.buildBufferObjects = (ren, actor) => {\n    const poly = model.currentInput;\n\n    if (poly === null) {\n      return;\n    }\n\n    model.renderable.mapScalars(poly, 1.0);\n    const c = model.renderable.getColorMapColors();\n\n    model.haveCellScalars = false;\n    const scalarMode = model.renderable.getScalarMode();\n    if (model.renderable.getScalarVisibility()) {\n      // We must figure out how the scalars should be mapped to the polydata.\n      if (\n        (scalarMode === ScalarMode.USE_CELL_DATA ||\n          scalarMode === ScalarMode.USE_CELL_FIELD_DATA ||\n          scalarMode === ScalarMode.USE_FIELD_DATA ||\n          !poly.getPointData().getScalars()) &&\n        scalarMode !== ScalarMode.USE_POINT_FIELD_DATA &&\n        c\n      ) {\n        model.haveCellScalars = true;\n      }\n    }\n\n    // Do we have normals?\n    let n =\n      actor.getProperty().getInterpolation() !== Shading.FLAT\n        ? poly.getPointData().getNormals()\n        : null;\n    if (n === null && poly.getCellData().getNormals()) {\n      model.haveCellNormals = true;\n      n = poly.getCellData().getNormals();\n    }\n\n    // rebuild the VBO if the data has changed we create a string for the VBO what\n    // can change the VBO? points normals tcoords colors so what can change those?\n    // the input data is clearly one as it can change all four items tcoords may\n    // haveTextures or not colors may change based on quite a few mapping\n    // parameters in the mapper\n\n    const representation = actor.getProperty().getRepresentation();\n\n    let tcoords = poly.getPointData().getTCoords();\n    if (!model.openGLActor.getActiveTextures()) {\n      tcoords = null;\n    }\n\n    // handle color mapping via texture\n    if (model.renderable.getColorCoordinates()) {\n      tcoords = model.renderable.getColorCoordinates();\n      if (!model.internalColorTexture) {\n        model.internalColorTexture = vtkOpenGLTexture.newInstance();\n      }\n      const tex = model.internalColorTexture;\n      // the following 4 lines allow for NPOT textures\n      tex.setMinificationFilter(Filter.NEAREST);\n      tex.setMagnificationFilter(Filter.NEAREST);\n      tex.setWrapS(Wrap.CLAMP_TO_EDGE);\n      tex.setWrapT(Wrap.CLAMP_TO_EDGE);\n      tex.setOpenGLRenderWindow(model.openGLRenderWindow);\n\n      const input = model.renderable.getColorTextureMap();\n      const ext = input.getExtent();\n      const inScalars = input.getPointData().getScalars();\n      tex.create2DFromRaw(\n        ext[1] - ext[0] + 1,\n        ext[3] - ext[2] + 1,\n        inScalars.getNumberOfComponents(),\n        inScalars.getDataType(),\n        inScalars.getData()\n      );\n      tex.activate();\n      tex.sendParameters();\n      tex.deactivate();\n    }\n\n    const toString =\n      `${poly.getMTime()}A${representation}B${poly.getMTime()}` +\n      `C${n ? n.getMTime() : 1}D${c ? c.getMTime() : 1}` +\n      `E${actor.getProperty().getEdgeVisibility()}` +\n      `F${tcoords ? tcoords.getMTime() : 1}`;\n    if (model.VBOBuildString !== toString) {\n      // Build the VBOs\n      const points = poly.getPoints();\n      const options = {\n        points,\n        normals: n,\n        tcoords,\n        colors: c,\n        cellOffset: 0,\n        haveCellScalars: model.haveCellScalars,\n        haveCellNormals: model.haveCellNormals,\n        customAttributes: model.renderable\n          .getCustomShaderAttributes()\n          .map((arrayName) => poly.getPointData().getArrayByName(arrayName)),\n      };\n      options.cellOffset += model.primitives[primTypes.Points]\n        .getCABO()\n        .createVBO(poly.getVerts(), 'verts', representation, options);\n      options.cellOffset += model.primitives[primTypes.Lines]\n        .getCABO()\n        .createVBO(poly.getLines(), 'lines', representation, options);\n      options.cellOffset += model.primitives[primTypes.Tris]\n        .getCABO()\n        .createVBO(poly.getPolys(), 'polys', representation, options);\n      options.cellOffset += model.primitives[primTypes.TriStrips]\n        .getCABO()\n        .createVBO(poly.getStrips(), 'strips', representation, options);\n\n      const drawSurfaceWithEdges =\n        actor.getProperty().getEdgeVisibility() &&\n        representation === Representation.SURFACE;\n\n      // if we have edge visibility build the edge VBOs\n      if (drawSurfaceWithEdges) {\n        model.primitives[primTypes.TrisEdges]\n          .getCABO()\n          .createVBO(poly.getPolys(), 'polys', Representation.WIREFRAME, {\n            points,\n            normals: n,\n            tcoords: null,\n            colors: null,\n            cellOffset: 0,\n            haveCellScalars: false,\n            haveCellNormals: false,\n          });\n        model.primitives[primTypes.TriStripsEdges]\n          .getCABO()\n          .createVBO(poly.getStrips(), 'strips', Representation.WIREFRAME, {\n            points,\n            normals: n,\n            tcoords: null,\n            colors: null,\n            cellOffset: 0,\n            haveCellScalars: false,\n            haveCellNormals: false,\n          });\n      } else {\n        // otherwise free them\n        model.primitives[primTypes.TrisEdges].releaseGraphicsResources(\n          model.openGLRenderWindow\n        );\n        model.primitives[primTypes.TriStripsEdges].releaseGraphicsResources(\n          model.openGLRenderWindow\n        );\n      }\n\n      model.VBOBuildTime.modified();\n      model.VBOBuildString = toString;\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n  VBOBuildTime: 0,\n  VBOBuildString: null,\n  primitives: null,\n  primTypes: null,\n  shaderRebuildString: null,\n  tmpMat4: null,\n  ambientColor: [], // used internally\n  diffuseColor: [], // used internally\n  specularColor: [], // used internally\n  lightColor: [], // used internally\n  lightHalfAngle: [], // used internally\n  lightDirection: [], // used internally\n  lastHaveSeenDepthRequest: false,\n  haveSeenDepthRequest: false,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  model.primitives = [];\n  model.primTypes = primTypes;\n\n  model.tmpMat3 = mat3.create();\n  model.tmpMat4 = mat4.create();\n\n  for (let i = primTypes.Start; i < primTypes.End; i++) {\n    model.primitives[i] = vtkHelper.newInstance();\n    model.primitives[i].setPrimitiveType(i);\n    model.primitives[i].set(\n      { lastLightComplexity: 0, lastLightCount: 0, lastSelectionPass: false },\n      true\n    );\n  }\n\n  // Build VTK API\n  macro.setGet(publicAPI, model, ['context']);\n\n  model.VBOBuildTime = {};\n  macro.obj(model.VBOBuildTime, { mtime: 0 });\n\n  // Object methods\n  vtkOpenGLPolyDataMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkOpenGLPolyDataMapper');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import { mat3, mat4 } from 'gl-matrix';\n\nimport macro from 'vtk.js/Sources/macro';\n\nimport vtkBufferObject from 'vtk.js/Sources/Rendering/OpenGL/BufferObject';\nimport vtkHardwareSelector from 'vtk.js/Sources/Rendering/OpenGL/HardwareSelector';\nimport vtkProperty from 'vtk.js/Sources/Rendering/Core/Property';\nimport vtkOpenGLPolyDataMapper from 'vtk.js/Sources/Rendering/OpenGL/PolyDataMapper';\nimport vtkShaderProgram from 'vtk.js/Sources/Rendering/OpenGL/ShaderProgram';\n\nconst { vtkErrorMacro } = macro;\nconst { Representation } = vtkProperty;\nconst { ObjectType } = vtkBufferObject;\nconst { PassTypes } = vtkHardwareSelector;\n\nconst StartEvent = { type: 'StartEvent' };\nconst EndEvent = { type: 'EndEvent' };\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLSphereMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLGlyph3DMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLGlyph3DMapper');\n\n  // Capture 'parentClass' api for internal use\n  const superClass = Object.assign({}, publicAPI);\n\n  publicAPI.renderPiece = (ren, actor) => {\n    publicAPI.invokeEvent(StartEvent);\n    if (!model.renderable.getStatic()) {\n      model.renderable.update();\n    }\n    model.currentInput = model.renderable.getInputData(1);\n    publicAPI.invokeEvent(EndEvent);\n\n    if (!model.currentInput) {\n      vtkErrorMacro('No input!');\n      return;\n    }\n\n    // if there are no points then we are done\n    if (\n      !model.currentInput.getPoints ||\n      !model.currentInput.getPoints().getNumberOfValues()\n    ) {\n      return;\n    }\n\n    // apply faceCulling\n    const gl = model.context;\n    if (model.openGLRenderWindow.getWebgl2()) {\n      model.hardwareSupport = true;\n      model.extension = null;\n    } else if (!model.extension) {\n      model.extension = model.context.getExtension('ANGLE_instanced_arrays');\n      model.hardwareSupport = !!model.extension;\n    }\n    // to test without extension support uncomment the next two lines\n    // model.extension = null;\n    // model.hardwareSupport = !!model.extension;\n\n    const backfaceCulling = actor.getProperty().getBackfaceCulling();\n    const frontfaceCulling = actor.getProperty().getFrontfaceCulling();\n    if (!backfaceCulling && !frontfaceCulling) {\n      model.openGLRenderWindow.disableCullFace();\n    } else if (frontfaceCulling) {\n      model.openGLRenderWindow.enableCullFace();\n      gl.cullFace(gl.FRONT);\n    } else {\n      model.openGLRenderWindow.enableCullFace();\n      gl.cullFace(gl.BACK);\n    }\n\n    publicAPI.renderPieceStart(ren, actor);\n    publicAPI.renderPieceDraw(ren, actor);\n    publicAPI.renderPieceFinish(ren, actor);\n  };\n\n  publicAPI.multiply4x4WithOffset = (out, a, b, off) => {\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a10 = a[4];\n    const a11 = a[5];\n    const a12 = a[6];\n    const a13 = a[7];\n    const a20 = a[8];\n    const a21 = a[9];\n    const a22 = a[10];\n    const a23 = a[11];\n    const a30 = a[12];\n    const a31 = a[13];\n    const a32 = a[14];\n    const a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    let b0 = b[off];\n    let b1 = b[off + 1];\n    let b2 = b[off + 2];\n    let b3 = b[off + 3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[off + 4];\n    b1 = b[off + 5];\n    b2 = b[off + 6];\n    b3 = b[off + 7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[off + 8];\n    b1 = b[off + 9];\n    b2 = b[off + 10];\n    b3 = b[off + 11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[off + 12];\n    b1 = b[off + 13];\n    b2 = b[off + 14];\n    b3 = b[off + 15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  };\n\n  publicAPI.replaceShaderNormal = (shaders, ren, actor) => {\n    if (model.hardwareSupport) {\n      const lastLightComplexity = model.lastBoundBO.getReferenceByName(\n        'lastLightComplexity'\n      );\n\n      if (lastLightComplexity > 0) {\n        let VSSource = shaders.Vertex;\n\n        if (model.lastBoundBO.getCABO().getNormalOffset()) {\n          VSSource = vtkShaderProgram.substitute(\n            VSSource,\n            '//VTK::Normal::Dec',\n            [\n              'attribute vec3 normalMC;',\n              'attribute mat3 gNormal;',\n              'uniform mat3 normalMatrix;',\n              'varying vec3 normalVCVSOutput;',\n            ]\n          ).result;\n          VSSource = vtkShaderProgram.substitute(\n            VSSource,\n            '//VTK::Normal::Impl',\n            ['normalVCVSOutput = normalMatrix * gNormal * normalMC;']\n          ).result;\n        }\n        shaders.Vertex = VSSource;\n      }\n    }\n    superClass.replaceShaderNormal(shaders, ren, actor);\n  };\n\n  publicAPI.replaceShaderColor = (shaders, ren, actor) => {\n    if (model.hardwareSupport && model.renderable.getColorArray()) {\n      let VSSource = shaders.Vertex;\n      let GSSource = shaders.Geometry;\n      let FSSource = shaders.Fragment;\n\n      const lastLightComplexity = model.lastBoundBO.getReferenceByName(\n        'lastLightComplexity'\n      );\n\n      // create the material/color property declarations, and VS implementation\n      // these are always defined\n      let colorDec = [\n        'uniform float ambient;',\n        'uniform float diffuse;',\n        'uniform float specular;',\n        'uniform float opacityUniform; // the fragment opacity',\n      ];\n      // add more for specular\n      if (lastLightComplexity) {\n        colorDec = colorDec.concat([\n          'uniform vec3 specularColorUniform;',\n          'uniform float specularPowerUniform;',\n        ]);\n      }\n\n      // now handle the more complex fragment shader implementation\n      // the following are always defined variables.  We start\n      // by assiging a default value from the uniform\n      let colorImpl = [\n        'vec3 ambientColor;',\n        '  vec3 diffuseColor;',\n        '  float opacity;',\n      ];\n      if (lastLightComplexity) {\n        colorImpl = colorImpl.concat([\n          '  vec3 specularColor;',\n          '  float specularPower;',\n        ]);\n      }\n      colorImpl = colorImpl.concat(['  opacity = opacityUniform;']);\n      if (lastLightComplexity) {\n        colorImpl = colorImpl.concat([\n          '  specularColor = specularColorUniform;',\n          '  specularPower = specularPowerUniform;',\n        ]);\n      }\n\n      if (!model.drawingEdges) {\n        colorDec = colorDec.concat(['varying vec4 vertexColorVSOutput;']);\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Color::Dec', [\n          'attribute vec4 gColor;',\n          'varying vec4 vertexColorVSOutput;',\n        ]).result;\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Color::Impl', [\n          'vertexColorVSOutput = gColor;',\n        ]).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::Color::Dec', [\n          'in vec4 vertexColorVSOutput[];',\n          'out vec4 vertexColorGSOutput;',\n        ]).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::Color::Impl', [\n          'vertexColorGSOutput = vertexColorVSOutput[i];',\n        ]).result;\n\n        colorImpl = colorImpl.concat([\n          '  diffuseColor = vertexColorVSOutput.rgb;',\n          '  ambientColor = vertexColorVSOutput.rgb;',\n          '  opacity = opacity*vertexColorVSOutput.a;',\n        ]);\n      }\n\n      FSSource = vtkShaderProgram.substitute(\n        FSSource,\n        '//VTK::Color::Impl',\n        colorImpl\n      ).result;\n\n      FSSource = vtkShaderProgram.substitute(\n        FSSource,\n        '//VTK::Color::Dec',\n        colorDec\n      ).result;\n\n      shaders.Vertex = VSSource;\n      shaders.Geometry = GSSource;\n      shaders.Fragment = FSSource;\n    }\n    superClass.replaceShaderColor(shaders, ren, actor);\n  };\n\n  publicAPI.replaceShaderPositionVC = (shaders, ren, actor) => {\n    if (model.hardwareSupport) {\n      let VSSource = shaders.Vertex;\n\n      // do we need the vertex in the shader in View Coordinates\n      const lastLightComplexity = model.lastBoundBO.getReferenceByName(\n        'lastLightComplexity'\n      );\n      if (lastLightComplexity > 0) {\n        VSSource = vtkShaderProgram.substitute(\n          VSSource,\n          '//VTK::PositionVC::Impl',\n          [\n            'vec4 gVertexMC = gMatrix * vertexMC;',\n            'vertexVCVSOutput = MCVCMatrix * gVertexMC;',\n            '  gl_Position = MCDCMatrix * gVertexMC;',\n          ]\n        ).result;\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Camera::Dec', [\n          'attribute mat4 gMatrix;',\n          'uniform mat4 MCDCMatrix;',\n          'uniform mat4 MCVCMatrix;',\n        ]).result;\n      } else {\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Camera::Dec', [\n          'attribute mat4 gMatrix;',\n          'uniform mat4 MCDCMatrix;',\n        ]).result;\n        VSSource = vtkShaderProgram.substitute(\n          VSSource,\n          '//VTK::PositionVC::Impl',\n          [\n            'vec4 gVertexMC = gMatrix * vertexMC;',\n            '  gl_Position = MCDCMatrix * gVertexMC;',\n          ]\n        ).result;\n      }\n      shaders.Vertex = VSSource;\n    }\n    superClass.replaceShaderPositionVC(shaders, ren, actor);\n  };\n\n  publicAPI.replaceShaderPicking = (shaders, ren, actor) => {\n    if (model.hardwareSupport) {\n      let FSSource = shaders.Fragment;\n      let VSSource = shaders.Vertex;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Picking::Dec', [\n        'attribute vec3 mapperIndexVS;',\n        'varying vec3 mapperIndexVSOutput;',\n      ]).result;\n      VSSource = vtkShaderProgram.substitute(\n        VSSource,\n        '//VTK::Picking::Impl',\n        '  mapperIndexVSOutput = mapperIndexVS;'\n      ).result;\n      shaders.Vertex = VSSource;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Picking::Dec', [\n        'varying vec3 mapperIndexVSOutput;',\n        'uniform vec3 mapperIndex;',\n        'uniform int picking;',\n      ]).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Picking::Impl', [\n        '  vec4 pickColor = picking == 2 ? vec4(mapperIndexVSOutput,1.0) : vec4(mapperIndex,1.0);',\n        '  gl_FragData[0] = picking != 0 ? pickColor : gl_FragData[0];',\n      ]).result;\n      shaders.Fragment = FSSource;\n    } else {\n      superClass.replaceShaderPicking(shaders, ren, actor);\n    }\n  };\n\n  publicAPI.updateGlyphShaderParameters = (\n    normalMatrixUsed,\n    mcvcMatrixUsed,\n    cellBO,\n    carray,\n    garray,\n    narray,\n    p,\n    selector\n  ) => {\n    const program = cellBO.getProgram();\n\n    if (normalMatrixUsed) {\n      const a = model.normalMatrix;\n      const b = narray;\n      const ofs = p * 9;\n      const out = model.tmpMat3;\n\n      const a00 = a[0];\n      const a01 = a[1];\n      const a02 = a[2];\n      const a10 = a[3];\n      const a11 = a[4];\n      const a12 = a[5];\n      const a20 = a[6];\n      const a21 = a[7];\n      const a22 = a[8];\n\n      const b00 = b[ofs];\n      const b01 = b[ofs + 1];\n      const b02 = b[ofs + 2];\n      const b10 = b[ofs + 3];\n      const b11 = b[ofs + 4];\n      const b12 = b[ofs + 5];\n      const b20 = b[ofs + 6];\n      const b21 = b[ofs + 7];\n      const b22 = b[ofs + 8];\n\n      out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n      out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n      out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n      out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n      out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n      out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n      out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n      out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n      out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n\n      program.setUniformMatrix3x3('normalMatrix', model.tmpMat3);\n    }\n    publicAPI.multiply4x4WithOffset(\n      model.tmpMat4,\n      model.mcdcMatrix,\n      garray,\n      p * 16\n    );\n    program.setUniformMatrix('MCDCMatrix', model.tmpMat4);\n    if (mcvcMatrixUsed) {\n      publicAPI.multiply4x4WithOffset(\n        model.tmpMat4,\n        model.mcvcMatrix,\n        garray,\n        p * 16\n      );\n      program.setUniformMatrix('MCVCMatrix', model.tmpMat4);\n    }\n\n    // set color\n    if (carray) {\n      const cdata = carray.getData();\n      model.tmpColor[0] = cdata[p * 4] / 255.0;\n      model.tmpColor[1] = cdata[p * 4 + 1] / 255.0;\n      model.tmpColor[2] = cdata[p * 4 + 2] / 255.0;\n      program.setUniform3fArray('ambientColorUniform', model.tmpColor);\n      program.setUniform3fArray('diffuseColorUniform', model.tmpColor);\n    }\n\n    if (selector) {\n      program.setUniform3fArray('mapperIndex', selector.getPropColorValue());\n    }\n  };\n\n  publicAPI.renderPieceDraw = (ren, actor) => {\n    const representation = actor.getProperty().getRepresentation();\n\n    const gl = model.context;\n\n    const drawSurfaceWithEdges =\n      actor.getProperty().getEdgeVisibility() &&\n      representation === Representation.SURFACE;\n\n    // // [WMVD]C == {world, model, view, display} coordinates\n    // // E.g., WCDC == world to display coordinate transformation\n    const keyMats = model.openGLCamera.getKeyMatrices(ren);\n    const actMats = model.openGLActor.getKeyMatrices();\n\n    // precompute the actor+camera mats once\n    mat3.multiply(\n      model.normalMatrix,\n      keyMats.normalMatrix,\n      actMats.normalMatrix\n    );\n    mat4.multiply(model.mcdcMatrix, keyMats.wcdc, actMats.mcwc);\n    mat4.multiply(model.mcvcMatrix, keyMats.wcvc, actMats.mcwc);\n\n    const garray = model.renderable.getMatrixArray();\n    const narray = model.renderable.getNormalArray();\n    const carray = model.renderable.getColorArray();\n    const numPts = garray.length / 16;\n\n    let compositePass = false;\n    if (model.openGLRenderer.getSelector()) {\n      if (\n        model.openGLRenderer.getSelector().getCurrentPass() ===\n        PassTypes.COMPOSITE_INDEX_PASS\n      ) {\n        compositePass = true;\n      }\n    }\n\n    // for every primitive type\n    for (let i = model.primTypes.Start; i < model.primTypes.End; i++) {\n      // if there are entries\n      const cabo = model.primitives[i].getCABO();\n      if (cabo.getElementCount()) {\n        // are we drawing edges\n        model.drawingEdges =\n          drawSurfaceWithEdges &&\n          (i === model.primTypes.TrisEdges ||\n            i === model.primTypes.TriStripsEdges);\n        publicAPI.updateShaders(model.primitives[i], ren, actor);\n        const program = model.primitives[i].getProgram();\n\n        const mode = publicAPI.getOpenGLMode(representation, i);\n        const normalMatrixUsed = program.isUniformUsed('normalMatrix');\n        const mcvcMatrixUsed = program.isUniformUsed('MCVCMatrix');\n\n        if (model.hardwareSupport) {\n          if (model.extension) {\n            model.extension.drawArraysInstancedANGLE(\n              mode,\n              0,\n              cabo.getElementCount(),\n              numPts\n            );\n          } else {\n            gl.drawArraysInstanced(mode, 0, cabo.getElementCount(), numPts);\n          }\n        } else {\n          // draw the array multiple times with different cam matrix\n          for (let p = 0; p < numPts; ++p) {\n            if (compositePass) {\n              model.openGLRenderer.getSelector().renderCompositeIndex(p);\n            }\n            publicAPI.updateGlyphShaderParameters(\n              normalMatrixUsed,\n              mcvcMatrixUsed,\n              model.primitives[i],\n              carray,\n              garray,\n              narray,\n              p,\n              compositePass ? model.openGLRenderer.getSelector() : null\n            );\n            gl.drawArrays(mode, 0, cabo.getElementCount());\n          }\n        }\n      }\n    }\n  };\n\n  publicAPI.setMapperShaderParameters = (cellBO, ren, actor) => {\n    if (\n      cellBO.getCABO().getElementCount() &&\n      (model.glyphBOBuildTime.getMTime() >\n        cellBO.getAttributeUpdateTime().getMTime() ||\n        cellBO.getShaderSourceTime().getMTime() >\n          cellBO.getAttributeUpdateTime().getMTime())\n    ) {\n      if (cellBO.getProgram().isAttributeUsed('gMatrix')) {\n        if (\n          !cellBO\n            .getVAO()\n            .addAttributeMatrixWithDivisor(\n              cellBO.getProgram(),\n              model.matrixBuffer,\n              'gMatrix',\n              0,\n              64,\n              model.context.FLOAT,\n              4,\n              false,\n              1\n            )\n        ) {\n          vtkErrorMacro('Error setting gMatrix in shader VAO.');\n        }\n      } else {\n        cellBO.getVAO().removeAttributeArray('gMatrix');\n      }\n      if (cellBO.getProgram().isAttributeUsed('gNormal')) {\n        if (\n          !cellBO\n            .getVAO()\n            .addAttributeMatrixWithDivisor(\n              cellBO.getProgram(),\n              model.normalBuffer,\n              'gNormal',\n              0,\n              36,\n              model.context.FLOAT,\n              3,\n              false,\n              1\n            )\n        ) {\n          vtkErrorMacro('Error setting gNormal in shader VAO.');\n        }\n      } else {\n        cellBO.getVAO().removeAttributeArray('gNormal');\n      }\n      if (cellBO.getProgram().isAttributeUsed('gColor')) {\n        if (\n          !cellBO\n            .getVAO()\n            .addAttributeArrayWithDivisor(\n              cellBO.getProgram(),\n              model.colorBuffer,\n              'gColor',\n              0,\n              4,\n              model.context.UNSIGNED_BYTE,\n              4,\n              true,\n              1,\n              false\n            )\n        ) {\n          vtkErrorMacro('Error setting gColor in shader VAO.');\n        }\n      } else {\n        cellBO.getVAO().removeAttributeArray('gColor');\n      }\n      if (cellBO.getProgram().isAttributeUsed('mapperIndexVS')) {\n        if (\n          !cellBO\n            .getVAO()\n            .addAttributeArrayWithDivisor(\n              cellBO.getProgram(),\n              model.pickBuffer,\n              'mapperIndexVS',\n              0,\n              4,\n              model.context.UNSIGNED_BYTE,\n              4,\n              true,\n              1,\n              false\n            )\n        ) {\n          vtkErrorMacro('Error setting mapperIndexVS in shader VAO.');\n        }\n      } else {\n        cellBO.getVAO().removeAttributeArray('mapperIndexVS');\n      }\n      superClass.setMapperShaderParameters(cellBO, ren, actor);\n      cellBO.getAttributeUpdateTime().modified();\n      return;\n    }\n\n    superClass.setMapperShaderParameters(cellBO, ren, actor);\n  };\n\n  publicAPI.getNeedToRebuildBufferObjects = (ren, actor) => {\n    model.renderable.buildArrays();\n\n    // first do a coarse check\n    // Note that the actor's mtime includes it's properties mtime\n    const vmtime = model.VBOBuildTime.getMTime();\n    if (vmtime < model.renderable.getBuildTime().getMTime()) {\n      return true;\n    }\n    return superClass.getNeedToRebuildBufferObjects(ren, actor);\n  };\n\n  publicAPI.buildBufferObjects = (ren, actor) => {\n    if (model.hardwareSupport) {\n      // update the buffer objects if needed\n      const garray = model.renderable.getMatrixArray();\n      const narray = model.renderable.getNormalArray();\n      const carray = model.renderable.getColorArray();\n      if (!model.matrixBuffer) {\n        model.matrixBuffer = vtkBufferObject.newInstance();\n        model.matrixBuffer.setOpenGLRenderWindow(model.openGLRenderWindow);\n        model.normalBuffer = vtkBufferObject.newInstance();\n        model.normalBuffer.setOpenGLRenderWindow(model.openGLRenderWindow);\n        model.colorBuffer = vtkBufferObject.newInstance();\n        model.colorBuffer.setOpenGLRenderWindow(model.openGLRenderWindow);\n        model.pickBuffer = vtkBufferObject.newInstance();\n        model.pickBuffer.setOpenGLRenderWindow(model.openGLRenderWindow);\n      }\n      if (\n        model.renderable.getBuildTime().getMTime() >\n        model.glyphBOBuildTime.getMTime()\n      ) {\n        model.matrixBuffer.upload(garray, ObjectType.ARRAY_BUFFER);\n        model.normalBuffer.upload(narray, ObjectType.ARRAY_BUFFER);\n        if (carray) {\n          model.colorBuffer.upload(carray.getData(), ObjectType.ARRAY_BUFFER);\n        } else {\n          model.colorBuffer.releaseGraphicsResources();\n        }\n        const numPts = garray.length / 16;\n        const parray = new Uint8Array(4 * numPts);\n        for (let i = 0; i < numPts; ++i) {\n          let value = i + 1;\n          const offset = i * 4;\n          parray[offset] = value % 256;\n          value -= parray[offset];\n          value /= 256;\n          parray[offset + 1] = value % 256;\n          value -= parray[offset + 1];\n          value /= 256;\n          parray[offset + 2] = value % 256;\n          parray[offset + 3] = 255;\n        }\n        model.pickBuffer.upload(parray, ObjectType.ARRAY_BUFFER);\n        model.glyphBOBuildTime.modified();\n      }\n    }\n    return superClass.buildBufferObjects(ren, actor);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  normalMatrix: null,\n  mcdcMatrix: null,\n  mcwcMatrix: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkOpenGLPolyDataMapper.extend(publicAPI, model, initialValues);\n\n  model.tmpMat3 = mat3.create();\n  model.normalMatrix = mat3.create();\n  model.mcdcMatrix = mat4.create();\n  model.mcvcMatrix = mat4.create();\n  model.tmpColor = [];\n\n  model.glyphBOBuildTime = {};\n  macro.obj(model.glyphBOBuildTime, { mtime: 0 });\n\n  // Object methods\n  vtkOpenGLGlyph3DMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkOpenGLGlyph3DMapper');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","export const SlicingMode = {\n  NONE: -1,\n  I: 0,\n  J: 1,\n  K: 2,\n  X: 3,\n  Y: 4,\n  Z: 5,\n};\n\nexport default {\n  SlicingMode,\n};\n","export const InterpolationType = {\n  NEAREST: 0,\n  LINEAR: 1,\n};\n\nexport default {\n  InterpolationType,\n};\n","import { mat4 } from 'gl-matrix';\nimport Constants from 'vtk.js/Sources/Rendering/Core/ImageMapper/Constants';\nimport macro from 'vtk.js/Sources/macro';\nimport vtkDataArray from 'vtk.js/Sources/Common/Core/DataArray';\nimport { VtkDataTypes } from 'vtk.js/Sources/Common/Core/DataArray/Constants';\nimport vtkHelper from 'vtk.js/Sources/Rendering/OpenGL/Helper';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport vtkOpenGLTexture from 'vtk.js/Sources/Rendering/OpenGL/Texture';\nimport vtkShaderProgram from 'vtk.js/Sources/Rendering/OpenGL/ShaderProgram';\nimport vtkViewNode from 'vtk.js/Sources/Rendering/SceneGraph/ViewNode';\nimport { Representation } from 'vtk.js/Sources/Rendering/Core/Property/Constants';\nimport {\n  Wrap,\n  Filter,\n} from 'vtk.js/Sources/Rendering/OpenGL/Texture/Constants';\nimport { InterpolationType } from 'vtk.js/Sources/Rendering/Core/ImageProperty/Constants';\n\nimport vtkPolyDataVS from 'vtk.js/Sources/Rendering/OpenGL/glsl/vtkPolyDataVS.glsl';\nimport vtkPolyDataFS from 'vtk.js/Sources/Rendering/OpenGL/glsl/vtkPolyDataFS.glsl';\n\nconst { vtkErrorMacro } = macro;\n\nconst { SlicingMode } = Constants;\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLImageMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLImageMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLImageMapper');\n\n  publicAPI.buildPass = (prepass) => {\n    if (prepass) {\n      model.openGLImageSlice = publicAPI.getFirstAncestorOfType(\n        'vtkOpenGLImageSlice'\n      );\n      model.openGLRenderer = publicAPI.getFirstAncestorOfType(\n        'vtkOpenGLRenderer'\n      );\n      model.openGLRenderWindow = model.openGLRenderer.getParent();\n      model.context = model.openGLRenderWindow.getContext();\n      model.tris.setOpenGLRenderWindow(model.openGLRenderWindow);\n      model.openGLTexture.setOpenGLRenderWindow(model.openGLRenderWindow);\n      model.colorTexture.setOpenGLRenderWindow(model.openGLRenderWindow);\n      model.opacityTexture.setOpenGLRenderWindow(model.openGLRenderWindow);\n      const ren = model.openGLRenderer.getRenderable();\n      model.openGLCamera = model.openGLRenderer.getViewNodeFor(\n        ren.getActiveCamera()\n      );\n      // is slice set by the camera\n      if (model.renderable.getSliceAtFocalPoint()) {\n        model.renderable.setSliceFromCamera(ren.getActiveCamera());\n      }\n    }\n  };\n\n  publicAPI.translucentPass = (prepass) => {\n    if (prepass) {\n      publicAPI.render();\n    }\n  };\n\n  publicAPI.opaqueZBufferPass = (prepass) => {\n    if (prepass) {\n      model.haveSeenDepthRequest = true;\n      model.renderDepth = true;\n      publicAPI.render();\n      model.renderDepth = false;\n    }\n  };\n\n  publicAPI.opaquePass = (prepass) => {\n    if (prepass) {\n      publicAPI.render();\n    }\n  };\n\n  // Renders myself\n  publicAPI.render = () => {\n    const actor = model.openGLImageSlice.getRenderable();\n    const ren = model.openGLRenderer.getRenderable();\n    publicAPI.renderPiece(ren, actor);\n  };\n\n  publicAPI.buildShaders = (shaders, ren, actor) => {\n    publicAPI.getShaderTemplate(shaders, ren, actor);\n    publicAPI.replaceShaderValues(shaders, ren, actor);\n  };\n\n  publicAPI.getShaderTemplate = (shaders, ren, actor) => {\n    shaders.Vertex = vtkPolyDataVS;\n    shaders.Fragment = vtkPolyDataFS;\n    shaders.Geometry = '';\n  };\n\n  publicAPI.replaceShaderValues = (shaders, ren, actor) => {\n    let VSSource = shaders.Vertex;\n    let FSSource = shaders.Fragment;\n\n    VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Camera::Dec', [\n      'uniform mat4 MCDCMatrix;',\n    ]).result;\n    VSSource = vtkShaderProgram.substitute(\n      VSSource,\n      '//VTK::PositionVC::Impl',\n      ['  gl_Position = MCDCMatrix * vertexMC;']\n    ).result;\n\n    VSSource = vtkShaderProgram.substitute(\n      VSSource,\n      '//VTK::TCoord::Impl',\n      'tcoordVCVSOutput = tcoordMC;'\n    ).result;\n\n    const tNumComp = model.openGLTexture.getComponents();\n\n    VSSource = vtkShaderProgram.substitute(\n      VSSource,\n      '//VTK::TCoord::Dec',\n      'attribute vec2 tcoordMC; varying vec2 tcoordVCVSOutput;'\n    ).result;\n\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Dec', [\n      'varying vec2 tcoordVCVSOutput;',\n      // color shift and scale\n      'uniform float shift;',\n      'uniform float scale;',\n      // opacity shift and scale\n      'uniform float oshift;',\n      'uniform float oscale;',\n      'uniform sampler2D texture1;',\n      'uniform sampler2D colorTexture1;',\n      'uniform sampler2D opacityTexture1;',\n      'uniform float opacity;',\n    ]).result;\n    switch (tNumComp) {\n      case 1:\n        FSSource = vtkShaderProgram.substitute(\n          FSSource,\n          '//VTK::TCoord::Impl',\n          [\n            'float intensity = texture2D(texture1, tcoordVCVSOutput).r;',\n            'vec3 tcolor = texture2D(colorTexture1, vec2(intensity * scale + shift, 0.5)).rgb;',\n            'float scalarOpacity = texture2D(opacityTexture1, vec2(intensity * oscale + oshift, 0.5)).r;',\n            'gl_FragData[0] = vec4(tcolor, scalarOpacity * opacity);',\n          ]\n        ).result;\n        break;\n      case 2:\n        FSSource = vtkShaderProgram.substitute(\n          FSSource,\n          '//VTK::TCoord::Impl',\n          [\n            'vec4 tcolor = texture2D(texture1, tcoordVCVSOutput);',\n            'float intensity = tcolor.r*scale + shift;',\n            'gl_FragData[0] = vec4(texture2D(colorTexture1, vec2(intensity, 0.5)), scale*tcolor.g + shift);',\n          ]\n        ).result;\n        break;\n      default:\n        FSSource = vtkShaderProgram.substitute(\n          FSSource,\n          '//VTK::TCoord::Impl',\n          [\n            'vec4 tcolor = scale*texture2D(texture1, tcoordVCVSOutput.st) + shift;',\n            'gl_FragData[0] = vec4(texture2D(colorTexture1, vec2(tcolor.r,0.5)).r,',\n            '  texture2D(colorTexture1, vec2(tcolor.g,0.5)).r,',\n            '  texture2D(colorTexture1, vec2(tcolor.b,0.5)).r, tcolor.a);',\n          ]\n        ).result;\n    }\n\n    if (model.haveSeenDepthRequest) {\n      FSSource = vtkShaderProgram.substitute(\n        FSSource,\n        '//VTK::ZBuffer::Dec',\n        'uniform int depthRequest;'\n      ).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ZBuffer::Impl', [\n        'if (depthRequest == 1) {',\n        'float iz = floor(gl_FragCoord.z*65535.0 + 0.1);',\n        'float rf = floor(iz/256.0)/255.0;',\n        'float gf = mod(iz,256.0)/255.0;',\n        'gl_FragData[0] = vec4(rf, gf, 0.0, 1.0); }',\n      ]).result;\n    }\n\n    shaders.Vertex = VSSource;\n    shaders.Fragment = FSSource;\n  };\n\n  publicAPI.getNeedToRebuildShaders = (cellBO, ren, actor) => {\n    // has something changed that would require us to recreate the shader?\n    // candidates are\n    // property modified (representation interpolation and lighting)\n    // input modified\n    // light complexity changed\n\n    const tNumComp = model.openGLTexture.getComponents();\n\n    if (\n      model.lastHaveSeenDepthRequest !== model.haveSeenDepthRequest ||\n      cellBO.getProgram() === 0 ||\n      model.lastTextureComponents !== tNumComp\n    ) {\n      model.lastHaveSeenDepthRequest = model.haveSeenDepthRequest;\n      model.lastTextureComponents = tNumComp;\n      return true;\n    }\n\n    return false;\n  };\n\n  publicAPI.updateShaders = (cellBO, ren, actor) => {\n    model.lastBoundBO = cellBO;\n\n    // has something changed that would require us to recreate the shader?\n    if (publicAPI.getNeedToRebuildShaders(cellBO, ren, actor)) {\n      const shaders = { Vertex: null, Fragment: null, Geometry: null };\n\n      publicAPI.buildShaders(shaders, ren, actor);\n\n      // compile and bind the program if needed\n      const newShader = model.openGLRenderWindow\n        .getShaderCache()\n        .readyShaderProgramArray(\n          shaders.Vertex,\n          shaders.Fragment,\n          shaders.Geometry\n        );\n\n      // if the shader changed reinitialize the VAO\n      if (newShader !== cellBO.getProgram()) {\n        cellBO.setProgram(newShader);\n        // reset the VAO as the shader has changed\n        cellBO.getVAO().releaseGraphicsResources();\n      }\n\n      cellBO.getShaderSourceTime().modified();\n    } else {\n      model.openGLRenderWindow\n        .getShaderCache()\n        .readyShaderProgram(cellBO.getProgram());\n    }\n\n    cellBO.getVAO().bind();\n    publicAPI.setMapperShaderParameters(cellBO, ren, actor);\n    publicAPI.setCameraShaderParameters(cellBO, ren, actor);\n    publicAPI.setPropertyShaderParameters(cellBO, ren, actor);\n  };\n\n  publicAPI.setMapperShaderParameters = (cellBO, ren, actor) => {\n    // Now to update the VAO too, if necessary.\n\n    if (\n      cellBO.getCABO().getElementCount() &&\n      (model.VBOBuildTime > cellBO.getAttributeUpdateTime().getMTime() ||\n        cellBO.getShaderSourceTime().getMTime() >\n          cellBO.getAttributeUpdateTime().getMTime())\n    ) {\n      if (cellBO.getProgram().isAttributeUsed('vertexMC')) {\n        if (\n          !cellBO\n            .getVAO()\n            .addAttributeArray(\n              cellBO.getProgram(),\n              cellBO.getCABO(),\n              'vertexMC',\n              cellBO.getCABO().getVertexOffset(),\n              cellBO.getCABO().getStride(),\n              model.context.FLOAT,\n              3,\n              model.context.FALSE\n            )\n        ) {\n          vtkErrorMacro('Error setting vertexMC in shader VAO.');\n        }\n      }\n      if (\n        cellBO.getProgram().isAttributeUsed('tcoordMC') &&\n        cellBO.getCABO().getTCoordOffset()\n      ) {\n        if (\n          !cellBO\n            .getVAO()\n            .addAttributeArray(\n              cellBO.getProgram(),\n              cellBO.getCABO(),\n              'tcoordMC',\n              cellBO.getCABO().getTCoordOffset(),\n              cellBO.getCABO().getStride(),\n              model.context.FLOAT,\n              cellBO.getCABO().getTCoordComponents(),\n              model.context.FALSE\n            )\n        ) {\n          vtkErrorMacro('Error setting tcoordMC in shader VAO.');\n        }\n      }\n      cellBO.getAttributeUpdateTime().modified();\n    }\n\n    const texUnit = model.openGLTexture.getTextureUnit();\n    cellBO.getProgram().setUniformi('texture1', texUnit);\n\n    let cw = actor.getProperty().getColorWindow();\n    let cl = actor.getProperty().getColorLevel();\n    const cfun = actor.getProperty().getRGBTransferFunction();\n    if (cfun) {\n      const cRange = cfun.getRange();\n      cw = cRange[1] - cRange[0];\n      cl = 0.5 * (cRange[1] + cRange[0]);\n    }\n    const oglShiftScale = model.openGLTexture.getShiftAndScale();\n\n    const scale = oglShiftScale.scale / cw;\n    const shift = (oglShiftScale.shift - cl) / cw + 0.5;\n\n    // opacity shift/scale\n    const ofun = actor.getProperty().getScalarOpacity();\n    let oscale = 1.0;\n    let oshift = 0.0;\n    if (ofun) {\n      const oRange = ofun.getRange();\n      const length = oRange[1] - oRange[0];\n      const mid = 0.5 * (oRange[0] + oRange[1]);\n      oscale = oglShiftScale.scale / length;\n      oshift = (oglShiftScale.shift - mid) / length + 0.5;\n    }\n\n    if (model.haveSeenDepthRequest) {\n      cellBO\n        .getProgram()\n        .setUniformi('depthRequest', model.renderDepth ? 1 : 0);\n    }\n\n    cellBO.getProgram().setUniformf('shift', shift);\n    cellBO.getProgram().setUniformf('scale', scale);\n\n    cellBO.getProgram().setUniformf('oshift', oshift);\n    cellBO.getProgram().setUniformf('oscale', oscale);\n\n    const texColorUnit = model.colorTexture.getTextureUnit();\n    const texOpacityUnit = model.opacityTexture.getTextureUnit();\n    cellBO.getProgram().setUniformi('colorTexture1', texColorUnit);\n    cellBO.getProgram().setUniformi('opacityTexture1', texOpacityUnit);\n  };\n\n  publicAPI.setCameraShaderParameters = (cellBO, ren, actor) => {\n    const program = cellBO.getProgram();\n\n    const actMats = model.openGLImageSlice.getKeyMatrices();\n    const image = model.currentInput;\n    const i2wmat4 = image.getIndexToWorld();\n    mat4.multiply(model.imagemat, actMats.mcwc, i2wmat4);\n\n    const keyMats = model.openGLCamera.getKeyMatrices(ren);\n    mat4.multiply(model.imagemat, keyMats.wcdc, model.imagemat);\n\n    if (cellBO.getCABO().getCoordShiftAndScaleEnabled()) {\n      const inverseShiftScaleMat = cellBO\n        .getCABO()\n        .getInverseShiftAndScaleMatrix();\n      mat4.multiply(model.imagemat, model.imagemat, inverseShiftScaleMat);\n    }\n\n    program.setUniformMatrix('MCDCMatrix', model.imagemat);\n  };\n\n  publicAPI.setPropertyShaderParameters = (cellBO, ren, actor) => {\n    const program = cellBO.getProgram();\n\n    const ppty = actor.getProperty();\n\n    const opacity = ppty.getOpacity();\n    program.setUniformf('opacity', opacity);\n  };\n\n  publicAPI.renderPieceStart = (ren, actor) => {\n    // make sure the BOs are up to date\n    publicAPI.updateBufferObjects(ren, actor);\n\n    // Bind the OpenGL, this is shared between the different primitive/cell types.\n    model.lastBoundBO = null;\n  };\n\n  publicAPI.renderPieceDraw = (ren, actor) => {\n    const gl = model.context;\n\n    // activate the texture\n    model.openGLTexture.activate();\n    model.colorTexture.activate();\n    model.opacityTexture.activate();\n\n    // draw polygons\n    if (model.tris.getCABO().getElementCount()) {\n      // First we do the triangles, update the shader, set uniforms, etc.\n      publicAPI.updateShaders(model.tris, ren, actor);\n      gl.drawArrays(gl.TRIANGLES, 0, model.tris.getCABO().getElementCount());\n      model.tris.getVAO().release();\n    }\n\n    model.openGLTexture.deactivate();\n    model.colorTexture.deactivate();\n    model.opacityTexture.deactivate();\n  };\n\n  publicAPI.renderPieceFinish = (ren, actor) => {};\n\n  publicAPI.renderPiece = (ren, actor) => {\n    // Make sure that we have been properly initialized.\n    // if (ren.getRenderWindow().checkAbortStatus()) {\n    //   return;\n    // }\n\n    publicAPI.invokeEvent({ type: 'StartEvent' });\n    model.renderable.update();\n    model.currentInput = model.renderable.getInputData();\n    publicAPI.invokeEvent({ type: 'EndEvent' });\n\n    if (!model.currentInput) {\n      vtkErrorMacro('No input!');\n      return;\n    }\n\n    publicAPI.renderPieceStart(ren, actor);\n    publicAPI.renderPieceDraw(ren, actor);\n    publicAPI.renderPieceFinish(ren, actor);\n  };\n\n  publicAPI.computeBounds = (ren, actor) => {\n    if (!publicAPI.getInput()) {\n      vtkMath.uninitializeBounds(model.bounds);\n      return;\n    }\n    model.bounds = publicAPI.getInput().getBounds();\n  };\n\n  publicAPI.updateBufferObjects = (ren, actor) => {\n    // Rebuild buffers if needed\n    if (publicAPI.getNeedToRebuildBufferObjects(ren, actor)) {\n      publicAPI.buildBufferObjects(ren, actor);\n    }\n  };\n\n  publicAPI.getNeedToRebuildBufferObjects = (ren, actor) => {\n    // first do a coarse check\n    if (\n      model.VBOBuildTime.getMTime() < publicAPI.getMTime() ||\n      model.VBOBuildTime.getMTime() < actor.getMTime() ||\n      model.VBOBuildTime.getMTime() < model.renderable.getMTime() ||\n      model.VBOBuildTime.getMTime() < actor.getProperty().getMTime() ||\n      model.VBOBuildTime.getMTime() < model.currentInput.getMTime()\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  publicAPI.buildBufferObjects = (ren, actor) => {\n    const image = model.currentInput;\n\n    if (image === null) {\n      return;\n    }\n\n    // set interpolation on the texture based on property setting\n    const iType = actor.getProperty().getInterpolationType();\n    if (iType === InterpolationType.NEAREST) {\n      model.colorTexture.setMinificationFilter(Filter.NEAREST);\n      model.colorTexture.setMagnificationFilter(Filter.NEAREST);\n      model.opacityTexture.setMinificationFilter(Filter.NEAREST);\n      model.opacityTexture.setMagnificationFilter(Filter.NEAREST);\n    } else {\n      model.colorTexture.setMinificationFilter(Filter.LINEAR);\n      model.colorTexture.setMagnificationFilter(Filter.LINEAR);\n      model.opacityTexture.setMinificationFilter(Filter.LINEAR);\n      model.opacityTexture.setMagnificationFilter(Filter.LINEAR);\n    }\n\n    const cWidth = 1024;\n    const cTable = new Uint8Array(cWidth * 3);\n    const cfun = actor.getProperty().getRGBTransferFunction();\n    if (cfun) {\n      const cfunToString = `${cfun.getMTime()}`;\n      if (model.colorTextureString !== cfunToString) {\n        const cRange = cfun.getRange();\n        const cfTable = new Float32Array(cWidth * 3);\n        cfun.getTable(cRange[0], cRange[1], cWidth, cfTable, 1);\n        for (let i = 0; i < cWidth * 3; ++i) {\n          cTable[i] = 255.0 * cfTable[i];\n        }\n        model.colorTextureString = cfunToString;\n        model.colorTexture.create2DFromRaw(\n          cWidth,\n          1,\n          3,\n          VtkDataTypes.UNSIGNED_CHAR,\n          cTable\n        );\n      }\n    } else {\n      const cfunToString = '0';\n      if (model.colorTextureString !== cfunToString) {\n        for (let i = 0; i < cWidth * 3; ++i) {\n          cTable[i] = (255.0 * i) / ((cWidth - 1) * 3);\n          cTable[i + 1] = (255.0 * i) / ((cWidth - 1) * 3);\n          cTable[i + 2] = (255.0 * i) / ((cWidth - 1) * 3);\n        }\n        model.colorTextureString = cfunToString;\n        model.colorTexture.create2DFromRaw(\n          cWidth,\n          1,\n          3,\n          VtkDataTypes.UNSIGNED_CHAR,\n          cTable\n        );\n      }\n    }\n\n    const oWidth = 1024;\n    const oTable = new Uint8Array(oWidth);\n    const ofun = actor.getProperty().getScalarOpacity();\n    if (ofun) {\n      const ofunToString = `${ofun.getMTime()}`;\n      if (model.opacityTextureString !== ofunToString) {\n        const oRange = ofun.getRange();\n        const ofTable = new Float32Array(oWidth);\n        ofun.getTable(oRange[0], oRange[1], oWidth, ofTable, 1);\n        for (let i = 0; i < oWidth; ++i) {\n          oTable[i] = 255.0 * ofTable[i];\n        }\n        model.opacityTextureString = ofunToString;\n        model.opacityTexture.create2DFromRaw(\n          oWidth,\n          1,\n          1,\n          VtkDataTypes.UNSIGNED_CHAR,\n          oTable\n        );\n      }\n    } else {\n      const ofunToString = '0';\n      if (model.opacityTextureString !== ofunToString) {\n        // default is opaque\n        oTable.fill(255.0);\n        model.opacityTextureString = ofunToString;\n        model.opacityTexture.create2DFromRaw(\n          oWidth,\n          1,\n          1,\n          VtkDataTypes.UNSIGNED_CHAR,\n          oTable\n        );\n      }\n    }\n\n    // Find what IJK axis and what direction to slice along\n    const { ijkMode } = model.renderable.getClosestIJKAxis();\n\n    // Find the IJK slice\n    let nSlice = model.renderable.getSlice();\n    if (ijkMode !== model.renderable.getSlicingMode()) {\n      // If not IJK slicing, get the IJK slice from the XYZ position/slice\n      nSlice = model.renderable.getSliceAtPosition(nSlice);\n    }\n\n    // Find sliceOffset\n    const ext = image.getExtent();\n    let sliceOffset;\n    if (ijkMode === SlicingMode.I) {\n      sliceOffset = nSlice - ext[0];\n    }\n    if (ijkMode === SlicingMode.J) {\n      sliceOffset = nSlice - ext[2];\n    }\n    if (ijkMode === SlicingMode.K || ijkMode === SlicingMode.NONE) {\n      sliceOffset = nSlice - ext[4];\n    }\n\n    // rebuild the VBO if the data has changed\n    const toString = `${nSlice}A${image.getMTime()}A${image\n      .getPointData()\n      .getScalars()\n      .getMTime()}B${publicAPI.getMTime()}C${model.renderable.getSlicingMode()}D${actor\n      .getProperty()\n      .getMTime()}`;\n    if (model.VBOBuildString !== toString) {\n      // Build the VBOs\n      const dims = image.getDimensions();\n      const numComp = image\n        .getPointData()\n        .getScalars()\n        .getNumberOfComponents();\n      if (iType === InterpolationType.NEAREST) {\n        if (numComp === 4) {\n          model.openGLTexture.setGenerateMipmap(true);\n          model.openGLTexture.setMinificationFilter(Filter.NEAREST);\n        } else {\n          model.openGLTexture.setMinificationFilter(Filter.NEAREST);\n        }\n        model.openGLTexture.setMagnificationFilter(Filter.NEAREST);\n      } else {\n        if (numComp === 4) {\n          model.openGLTexture.setGenerateMipmap(true);\n          model.openGLTexture.setMinificationFilter(\n            Filter.LINEAR_MIPMAP_LINEAR\n          );\n        } else {\n          model.openGLTexture.setMinificationFilter(Filter.LINEAR);\n        }\n        model.openGLTexture.setMagnificationFilter(Filter.LINEAR);\n      }\n      model.openGLTexture.setWrapS(Wrap.CLAMP_TO_EDGE);\n      model.openGLTexture.setWrapT(Wrap.CLAMP_TO_EDGE);\n      const sliceSize = dims[0] * dims[1] * numComp;\n\n      const ptsArray = new Float32Array(12);\n      const tcoordArray = new Float32Array(8);\n      for (let i = 0; i < 4; i++) {\n        tcoordArray[i * 2] = i % 2 ? 1.0 : 0.0;\n        tcoordArray[i * 2 + 1] = i > 1 ? 1.0 : 0.0;\n      }\n\n      const basicScalars = image\n        .getPointData()\n        .getScalars()\n        .getData();\n      let scalars = null;\n      // Get right scalars according to slicing mode\n      if (ijkMode === SlicingMode.I) {\n        scalars = new basicScalars.constructor(dims[2] * dims[1] * numComp);\n        let id = 0;\n        for (let k = 0; k < dims[2]; k++) {\n          for (let j = 0; j < dims[1]; j++) {\n            const bsIdx =\n              (sliceOffset + j * dims[0] + k * dims[0] * dims[1]) * numComp;\n            id = (k * dims[1] + j) * numComp;\n            scalars.set(basicScalars.subarray(bsIdx, bsIdx + numComp), id);\n          }\n        }\n        dims[0] = dims[1];\n        dims[1] = dims[2];\n        ptsArray[0] = nSlice;\n        ptsArray[1] = ext[2];\n        ptsArray[2] = ext[4];\n        ptsArray[3] = nSlice;\n        ptsArray[4] = ext[3];\n        ptsArray[5] = ext[4];\n        ptsArray[6] = nSlice;\n        ptsArray[7] = ext[2];\n        ptsArray[8] = ext[5];\n        ptsArray[9] = nSlice;\n        ptsArray[10] = ext[3];\n        ptsArray[11] = ext[5];\n      } else if (ijkMode === SlicingMode.J) {\n        scalars = new basicScalars.constructor(dims[2] * dims[0] * numComp);\n        let id = 0;\n        for (let k = 0; k < dims[2]; k++) {\n          for (let i = 0; i < dims[0]; i++) {\n            const bsIdx =\n              (i + sliceOffset * dims[0] + k * dims[0] * dims[1]) * numComp;\n            id = (k * dims[0] + i) * numComp;\n            scalars.set(basicScalars.subarray(bsIdx, bsIdx + numComp), id);\n          }\n        }\n        dims[1] = dims[2];\n        ptsArray[0] = ext[0];\n        ptsArray[1] = nSlice;\n        ptsArray[2] = ext[4];\n        ptsArray[3] = ext[1];\n        ptsArray[4] = nSlice;\n        ptsArray[5] = ext[4];\n        ptsArray[6] = ext[0];\n        ptsArray[7] = nSlice;\n        ptsArray[8] = ext[5];\n        ptsArray[9] = ext[1];\n        ptsArray[10] = nSlice;\n        ptsArray[11] = ext[5];\n      } else if (ijkMode === SlicingMode.K || ijkMode === SlicingMode.NONE) {\n        scalars = basicScalars.subarray(\n          sliceOffset * sliceSize,\n          (sliceOffset + 1) * sliceSize\n        );\n        ptsArray[0] = ext[0];\n        ptsArray[1] = ext[2];\n        ptsArray[2] = nSlice;\n        ptsArray[3] = ext[1];\n        ptsArray[4] = ext[2];\n        ptsArray[5] = nSlice;\n        ptsArray[6] = ext[0];\n        ptsArray[7] = ext[3];\n        ptsArray[8] = nSlice;\n        ptsArray[9] = ext[1];\n        ptsArray[10] = ext[3];\n        ptsArray[11] = nSlice;\n      } else {\n        vtkErrorMacro('Reformat slicing not yet supported.');\n      }\n\n      model.openGLTexture.create2DFromRaw(\n        dims[0],\n        dims[1],\n        numComp,\n        image\n          .getPointData()\n          .getScalars()\n          .getDataType(),\n        scalars\n      );\n      model.openGLTexture.activate();\n      model.openGLTexture.sendParameters();\n      model.openGLTexture.deactivate();\n\n      const points = vtkDataArray.newInstance({\n        numberOfComponents: 3,\n        values: ptsArray,\n      });\n      points.setName('points');\n      const tcoords = vtkDataArray.newInstance({\n        numberOfComponents: 2,\n        values: tcoordArray,\n      });\n      tcoords.setName('tcoords');\n\n      const cellArray = new Uint16Array(8);\n      cellArray[0] = 3;\n      cellArray[1] = 0;\n      cellArray[2] = 1;\n      cellArray[3] = 3;\n      cellArray[4] = 3;\n      cellArray[5] = 0;\n      cellArray[6] = 3;\n      cellArray[7] = 2;\n      const cells = vtkDataArray.newInstance({\n        numberOfComponents: 1,\n        values: cellArray,\n      });\n\n      model.tris.getCABO().createVBO(cells, 'polys', Representation.SURFACE, {\n        points,\n        tcoords,\n        cellOffset: 0,\n      });\n      model.VBOBuildTime.modified();\n      model.VBOBuildString = toString;\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  VBOBuildTime: 0,\n  VBOBuildString: null,\n  openGLTexture: null,\n  tris: null,\n  imagemat: null,\n  colorTexture: null,\n  opacityTexture: null,\n  lastHaveSeenDepthRequest: false,\n  haveSeenDepthRequest: false,\n  lastTextureComponents: 0,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  model.tris = vtkHelper.newInstance();\n  model.openGLTexture = vtkOpenGLTexture.newInstance();\n  model.colorTexture = vtkOpenGLTexture.newInstance();\n  model.opacityTexture = vtkOpenGLTexture.newInstance();\n\n  model.imagemat = mat4.create();\n\n  // Build VTK API\n  macro.setGet(publicAPI, model, []);\n\n  model.VBOBuildTime = {};\n  macro.obj(model.VBOBuildTime);\n\n  // Object methods\n  vtkOpenGLImageMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkOpenGLImageMapper');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import { mat4 } from 'gl-matrix';\n\nimport macro from 'vtk.js/Sources/macro';\nimport vtkViewNode from 'vtk.js/Sources/Rendering/SceneGraph/ViewNode';\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLImageSlice methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLImageSlice(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLImageSlice');\n\n  // Builds myself.\n  publicAPI.buildPass = (prepass) => {\n    if (!model.renderable || !model.renderable.getVisibility()) {\n      return;\n    }\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n\n      model.openGLRenderer = publicAPI.getFirstAncestorOfType(\n        'vtkOpenGLRenderer'\n      );\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.renderable.getMapper());\n      publicAPI.removeUnusedNodes();\n    }\n  };\n\n  publicAPI.traverseOpaqueZBufferPass = (renderPass) => {\n    publicAPI.traverseOpaquePass(renderPass);\n  };\n\n  // we draw textures, then mapper, then post pass textures\n  publicAPI.traverseOpaquePass = (renderPass) => {\n    if (\n      !model.renderable ||\n      !model.renderable.getVisibility() ||\n      !model.renderable.getIsOpaque() ||\n      (model.openGLRenderer.getSelector() && !model.renderable.getPickable())\n    ) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n    model.children.forEach((child) => {\n      child.traverse(renderPass);\n    });\n    publicAPI.apply(renderPass, false);\n  };\n\n  // we draw textures, then mapper, then post pass textures\n  publicAPI.traverseTranslucentPass = (renderPass) => {\n    if (\n      !model.renderable ||\n      !model.renderable.getVisibility() ||\n      model.renderable.getIsOpaque() ||\n      (model.openGLRenderer.getSelector() && !model.renderable.getPickable())\n    ) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n    model.children.forEach((child) => {\n      child.traverse(renderPass);\n    });\n    publicAPI.apply(renderPass, false);\n  };\n\n  publicAPI.queryPass = (prepass, renderPass) => {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n      if (model.renderable.getIsOpaque()) {\n        renderPass.incrementOpaqueActorCount();\n      } else {\n        renderPass.incrementTranslucentActorCount();\n      }\n    }\n  };\n\n  publicAPI.opaqueZBufferPass = (prepass, renderPass) =>\n    publicAPI.opaquePass(prepass, renderPass);\n\n  // Renders myself\n  publicAPI.opaquePass = (prepass, renderPass) => {\n    if (prepass) {\n      model.context = publicAPI\n        .getFirstAncestorOfType('vtkOpenGLRenderWindow')\n        .getContext();\n      model.context.depthMask(true);\n    }\n  };\n\n  // Renders myself\n  publicAPI.translucentPass = (prepass, renderPass) => {\n    if (prepass) {\n      model.context = publicAPI\n        .getFirstAncestorOfType('vtkOpenGLRenderWindow')\n        .getContext();\n      model.context.depthMask(false);\n    } else {\n      model.context.depthMask(true);\n    }\n  };\n\n  publicAPI.getKeyMatrices = () => {\n    // has the actor changed?\n    if (model.renderable.getMTime() > model.keyMatrixTime.getMTime()) {\n      mat4.copy(model.keyMatrices.mcwc, model.renderable.getMatrix());\n      mat4.transpose(model.keyMatrices.mcwc, model.keyMatrices.mcwc);\n      model.keyMatrixTime.modified();\n    }\n\n    return model.keyMatrices;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n  keyMatrixTime: null,\n  keyMatrices: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  model.keyMatrixTime = {};\n  macro.obj(model.keyMatrixTime, { mtime: 0 });\n  model.keyMatrices = {\n    mcwc: mat4.create(),\n  };\n\n  // Build VTK API\n  macro.setGet(publicAPI, model, ['context']);\n\n  // Object methods\n  vtkOpenGLImageSlice(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkOpenGLImageSlice');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","// import { mat4, vec3 }     from 'gl-matrix';\n\nimport macro from 'vtk.js/Sources/macro';\nimport vtkViewNode from 'vtk.js/Sources/Rendering/SceneGraph/ViewNode';\n\nconst { vtkDebugMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLPixelSpaceCallbackMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLPixelSpaceCallbackMapper(publicAPI, model) {\n  model.classHierarchy.push('vtkOpenGLPixelSpaceCallbackMapper');\n\n  publicAPI.opaquePass = (prepass, renderPass) => {\n    model.openGLRenderer = publicAPI.getFirstAncestorOfType(\n      'vtkOpenGLRenderer'\n    );\n    model.openGLRenderWindow = model.openGLRenderer.getParent();\n    const aspectRatio = model.openGLRenderer.getAspectRatio();\n    const camera = model.openGLRenderer\n      ? model.openGLRenderer.getRenderable().getActiveCamera()\n      : null;\n    const tsize = model.openGLRenderer.getTiledSizeAndOrigin();\n    let texels = null;\n\n    if (model.renderable.getUseZValues()) {\n      const zbt = renderPass.getZBufferTexture();\n      const width = Math.floor(zbt.getWidth());\n      const height = Math.floor(zbt.getHeight());\n\n      const gl = model.openGLRenderWindow.getContext();\n      zbt.bind();\n\n      // Here we need to use vtkFramebuffer to save current settings (bindings/buffers)\n      const fb = renderPass.getFramebuffer();\n      if (!fb) {\n        vtkDebugMacro('No framebuffer to save/restore');\n      } else {\n        // save framebuffer settings\n        fb.saveCurrentBindingsAndBuffers();\n      }\n\n      const framebuffer = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        zbt.getHandle(),\n        0\n      );\n\n      if (\n        gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE\n      ) {\n        texels = new Uint8Array(width * height * 4);\n        gl.viewport(0, 0, width, height);\n        gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, texels);\n      }\n\n      // Now we need to restore framebuffer bindings/buffers\n      if (fb) {\n        fb.restorePreviousBindingsAndBuffers();\n      }\n\n      gl.deleteFramebuffer(framebuffer);\n    }\n\n    model.renderable.invokeCallback(\n      model.renderable.getInputData(),\n      camera,\n      aspectRatio,\n      tsize,\n      texels\n    );\n  };\n\n  publicAPI.queryPass = (prepass, renderPass) => {\n    if (prepass) {\n      if (model.renderable.getUseZValues()) {\n        renderPass.setDepthRequested(true);\n      } else {\n        renderPass.setDepthRequested(true);\n      }\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  // Object methods\n  vtkOpenGLPixelSpaceCallbackMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(\n  extend,\n  'vtkOpenGLPixelSpaceCallbackMapper'\n);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import macro from 'vtk.js/Sources/macro';\nimport vtkViewNode from 'vtk.js/Sources/Rendering/SceneGraph/ViewNode';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\n\nconst { vtkDebugMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLRenderer methods\n// ----------------------------------------------------------------------------\n/* eslint-disable no-bitwise */\n\nfunction vtkOpenGLRenderer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLRenderer');\n\n  // Builds myself.\n  publicAPI.buildPass = (prepass) => {\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n\n      // make sure we have a camera\n      if (!model.renderable.isActiveCameraCreated()) {\n        model.renderable.resetCamera();\n      }\n      publicAPI.updateLights();\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.renderable.getActiveCamera());\n      publicAPI.addMissingNodes(model.renderable.getViewPropsWithNestedProps());\n      publicAPI.removeUnusedNodes();\n    }\n  };\n\n  publicAPI.updateLights = () => {\n    let count = 0;\n\n    const lights = model.renderable.getLightsByReference();\n    for (let index = 0; index < lights.length; ++index) {\n      if (lights[index].getSwitch() > 0.0) {\n        count++;\n      }\n    }\n\n    if (!count) {\n      vtkDebugMacro('No lights are on, creating one.');\n      model.renderable.createLight();\n    }\n\n    return count;\n  };\n\n  publicAPI.opaqueZBufferPass = (prepass) => {\n    if (prepass) {\n      let clearMask = 0;\n      const gl = model.context;\n      if (!model.renderable.getTransparent()) {\n        model.context.clearColor(1.0, 0.0, 0.0, 1.0);\n        clearMask |= gl.COLOR_BUFFER_BIT;\n      }\n\n      if (!model.renderable.getPreserveDepthBuffer()) {\n        gl.clearDepth(1.0);\n        clearMask |= gl.DEPTH_BUFFER_BIT;\n        gl.depthMask(true);\n      }\n\n      const ts = publicAPI.getTiledSizeAndOrigin();\n      gl.enable(gl.SCISSOR_TEST);\n      gl.scissor(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\n      gl.viewport(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\n\n      gl.colorMask(true, true, true, true);\n      gl.clear(clearMask);\n\n      gl.enable(gl.DEPTH_TEST);\n    }\n  };\n\n  // Renders myself\n  publicAPI.cameraPass = (prepass) => {\n    if (prepass) {\n      publicAPI.clear();\n    }\n  };\n\n  publicAPI.getAspectRatio = () => {\n    const size = model.parent.getSizeByReference();\n    const viewport = model.renderable.getViewportByReference();\n    return (\n      (size[0] * (viewport[2] - viewport[0])) /\n      ((viewport[3] - viewport[1]) * size[1])\n    );\n  };\n\n  publicAPI.getTiledSizeAndOrigin = () => {\n    const vport = model.renderable.getViewportByReference();\n\n    // if there is no window assume 0 1\n    const tileViewPort = [0.0, 0.0, 1.0, 1.0];\n\n    // find the lower left corner of the viewport, taking into account the\n    // lower left boundary of this tile\n    const vpu = vtkMath.clampValue(vport[0] - tileViewPort[0], 0.0, 1.0);\n    const vpv = vtkMath.clampValue(vport[1] - tileViewPort[1], 0.0, 1.0);\n\n    // store the result as a pixel value\n    const ndvp = model.parent.normalizedDisplayToDisplay(vpu, vpv);\n    const lowerLeftU = Math.round(ndvp[0]);\n    const lowerLeftV = Math.round(ndvp[1]);\n\n    // find the upper right corner of the viewport, taking into account the\n    // lower left boundary of this tile\n    let vpu2 = vtkMath.clampValue(vport[2] - tileViewPort[0], 0.0, 1.0);\n    let vpv2 = vtkMath.clampValue(vport[3] - tileViewPort[1], 0.0, 1.0);\n    // also watch for the upper right boundary of the tile\n    if (vpu2 > tileViewPort[2] - tileViewPort[0]) {\n      vpu2 = tileViewPort[2] - tileViewPort[0];\n    }\n    if (vpv2 > tileViewPort[3] - tileViewPort[1]) {\n      vpv2 = tileViewPort[3] - tileViewPort[1];\n    }\n    const ndvp2 = model.parent.normalizedDisplayToDisplay(vpu2, vpv2);\n\n    // now compute the size of the intersection of the viewport with the\n    // current tile\n    let usize = Math.round(ndvp2[0]) - lowerLeftU;\n    let vsize = Math.round(ndvp2[1]) - lowerLeftV;\n\n    if (usize < 0) {\n      usize = 0;\n    }\n    if (vsize < 0) {\n      vsize = 0;\n    }\n\n    return { usize, vsize, lowerLeftU, lowerLeftV };\n  };\n\n  publicAPI.clear = () => {\n    let clearMask = 0;\n    const gl = model.context;\n\n    if (!model.renderable.getTransparent()) {\n      const background = model.renderable.getBackgroundByReference();\n      // renderable ensures that background has 4 entries.\n      model.context.clearColor(\n        background[0],\n        background[1],\n        background[2],\n        background[3]\n      );\n      clearMask |= gl.COLOR_BUFFER_BIT;\n    }\n\n    if (!model.renderable.getPreserveDepthBuffer()) {\n      gl.clearDepth(1.0);\n      clearMask |= gl.DEPTH_BUFFER_BIT;\n      gl.depthMask(true);\n    }\n\n    gl.colorMask(true, true, true, true);\n\n    const ts = publicAPI.getTiledSizeAndOrigin();\n    gl.enable(gl.SCISSOR_TEST);\n    gl.scissor(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\n    gl.viewport(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\n\n    gl.clear(clearMask);\n\n    gl.enable(gl.DEPTH_TEST);\n    /* eslint-enable no-bitwise */\n  };\n\n  publicAPI.releaseGraphicsResources = () => {\n    if (model.selector !== null) {\n      model.selector.releaseGraphicsResources();\n    }\n  };\n\n  publicAPI.setOpenGLRenderWindow = (rw) => {\n    if (model.openGLRenderWindow === rw) {\n      return;\n    }\n    publicAPI.releaseGraphicsResources();\n    model.openGLRenderWindow = rw;\n    model.context = null;\n    if (rw) {\n      model.context = model.openGLRenderWindow.getContext();\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n  openGLRenderWindow: null,\n  selector: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  // Build VTK API\n  macro.get(publicAPI, model, ['shaderCache']);\n\n  macro.setGet(publicAPI, model, ['selector']);\n\n  // Object methods\n  vtkOpenGLRenderer(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkOpenGLRenderer');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import { mat3, mat4 } from 'gl-matrix';\n\nimport macro from 'vtk.js/Sources/macro';\nimport vtkDataArray from 'vtk.js/Sources/Common/Core/DataArray';\nimport vtkHelper from 'vtk.js/Sources/Rendering/OpenGL/Helper';\nimport vtkViewNode from 'vtk.js/Sources/Rendering/SceneGraph/ViewNode';\nimport vtkOpenGLTexture from 'vtk.js/Sources/Rendering/OpenGL/Texture';\n\nimport { Representation } from 'vtk.js/Sources/Rendering/Core/Property/Constants';\n\nconst { vtkErrorMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLSkybox methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLSkybox(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLSkybox');\n\n  // Builds myself.\n  publicAPI.buildPass = (prepass) => {\n    if (prepass) {\n      model.openGLRenderer = publicAPI.getFirstAncestorOfType(\n        'vtkOpenGLRenderer'\n      );\n      model.openGLRenderWindow = model.openGLRenderer.getParent();\n      model.context = model.openGLRenderWindow.getContext();\n      model.tris.setOpenGLRenderWindow(model.openGLRenderWindow);\n      model.openGLTexture.setOpenGLRenderWindow(model.openGLRenderWindow);\n      const ren = model.openGLRenderer.getRenderable();\n      model.openGLCamera = model.openGLRenderer.getViewNodeFor(\n        ren.getActiveCamera()\n      );\n    }\n  };\n\n  publicAPI.queryPass = (prepass, renderPass) => {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n      renderPass.incrementOpaqueActorCount();\n    }\n  };\n\n  publicAPI.opaquePass = (prepass, renderPass) => {\n    if (prepass && !model.openGLRenderer.getSelector()) {\n      publicAPI.updateBufferObjects();\n\n      model.openGLRenderWindow.enableDepthMask();\n\n      model.openGLRenderWindow\n        .getShaderCache()\n        .readyShaderProgram(model.tris.getProgram());\n\n      model.openGLTexture.render(model.openGLRenderWindow);\n\n      const texUnit = model.openGLTexture.getTextureUnit();\n      model.tris.getProgram().setUniformi('sbtexture', texUnit);\n\n      const ren = model.openGLRenderer.getRenderable();\n\n      const keyMats = model.openGLCamera.getKeyMatrices(ren);\n      const imat = mat4.create();\n      mat4.invert(imat, keyMats.wcdc);\n      model.tris.getProgram().setUniformMatrix('IMCDCMatrix', imat);\n\n      if (model.lastFormat === 'box') {\n        const camPos = ren.getActiveCamera().getPosition();\n        model.tris\n          .getProgram()\n          .setUniform3f('camPos', camPos[0], camPos[1], camPos[2]);\n      }\n\n      model.tris.getVAO().bind();\n\n      // draw polygons\n      model.context.drawArrays(\n        model.context.TRIANGLES,\n        0,\n        model.tris.getCABO().getElementCount()\n      );\n      model.tris.getVAO().release();\n\n      model.openGLTexture.deactivate();\n    }\n  };\n\n  publicAPI.updateBufferObjects = () => {\n    // build the VBO if needed, only happens once\n    if (!model.tris.getCABO().getElementCount()) {\n      const ptsArray = new Float32Array(12);\n      for (let i = 0; i < 4; i++) {\n        ptsArray[i * 3] = (i % 2) * 2 - 1.0;\n        ptsArray[i * 3 + 1] = i > 1 ? 1.0 : -1.0;\n        ptsArray[i * 3 + 2] = 1.0;\n      }\n      const points = vtkDataArray.newInstance({\n        numberOfComponents: 3,\n        values: ptsArray,\n      });\n      points.setName('points');\n\n      const cellArray = new Uint16Array(8);\n      cellArray[0] = 3;\n      cellArray[1] = 0;\n      cellArray[2] = 1;\n      cellArray[3] = 3;\n      cellArray[4] = 3;\n      cellArray[5] = 0;\n      cellArray[6] = 3;\n      cellArray[7] = 2;\n      const cells = vtkDataArray.newInstance({\n        numberOfComponents: 1,\n        values: cellArray,\n      });\n\n      model.tris.getCABO().createVBO(cells, 'polys', Representation.SURFACE, {\n        points,\n        cellOffset: 0,\n      });\n    }\n\n    // update the program?\n    if (model.renderable.getFormat() !== model.lastFormat) {\n      model.lastFormat = model.renderable.getFormat();\n\n      if (model.lastFormat === 'box') {\n        // we invert Y below because opengl is messed up!\n        // Cube Maps have been specified to follow the RenderMan\n        // specification (for whatever reason), and RenderMan\n        // assumes the images' origin being in the upper left,\n        // contrary to the usual OpenGL behaviour of having the\n        // image origin in the lower left. That's why things get\n        // swapped in the Y direction. It totally breaks with the usual\n        // OpenGL semantics and doesn't make sense at all.\n        // But now we're stuck with it.  From\n        // https://stackoverflow.com/questions/11685608/convention-of-faces-in-opengl-cubemapping\n        //\n        model.tris.setProgram(\n          model.openGLRenderWindow.getShaderCache().readyShaderProgramArray(\n            `//VTK::System::Dec\n             attribute vec3 vertexMC;\n             uniform mat4 IMCDCMatrix;\n             varying vec3 TexCoords;\n             void main () {\n              gl_Position = vec4(vertexMC.xyz, 1.0);\n              vec4 wpos = IMCDCMatrix * gl_Position;\n              TexCoords = wpos.xyz/wpos.w;\n             }`,\n            `//VTK::System::Dec\n             //VTK::Output::Dec\n             varying vec3 TexCoords;\n             uniform samplerCube sbtexture;\n             uniform vec3 camPos;\n             void main () {\n               // skybox looks from inside out\n               // which means we have to adjust\n               // our tcoords. Otherwise text would\n               // be flipped\n               vec3 tc = normalize(TexCoords - camPos);\n               if (abs(tc.z) < max(abs(tc.x),abs(tc.y)))\n               {\n                 tc = vec3(1.0, 1.0, -1.0) * tc;\n               }\n               else\n               {\n                 tc = vec3(-1.0, 1.0, 1.0) * tc;\n               }\n               gl_FragData[0] = textureCube(sbtexture, tc);\n             }`,\n            ''\n          )\n        );\n      }\n\n      if (model.lastFormat === 'background') {\n        // maps the texture to the window\n        model.tris.setProgram(\n          model.openGLRenderWindow.getShaderCache().readyShaderProgramArray(\n            `//VTK::System::Dec\n             attribute vec3 vertexMC;\n             uniform mat4 IMCDCMatrix;\n             varying vec2 TexCoords;\n             void main () {\n              gl_Position = vec4(vertexMC.xyz, 1.0);\n              vec4 wpos = IMCDCMatrix * gl_Position;\n              TexCoords = vec2(vertexMC.x, vertexMC.y)*0.5 + 0.5;\n             }`,\n            `//VTK::System::Dec\n             //VTK::Output::Dec\n             varying vec2 TexCoords;\n             uniform sampler2D sbtexture;\n             void main () {\n               gl_FragData[0] = texture2D(sbtexture, TexCoords);\n             }`,\n            ''\n          )\n        );\n      }\n\n      model.tris.getShaderSourceTime().modified();\n\n      model.tris.getVAO().bind();\n\n      if (\n        !model.tris\n          .getVAO()\n          .addAttributeArray(\n            model.tris.getProgram(),\n            model.tris.getCABO(),\n            'vertexMC',\n            model.tris.getCABO().getVertexOffset(),\n            model.tris.getCABO().getStride(),\n            model.context.FLOAT,\n            3,\n            model.context.FALSE\n          )\n      ) {\n        vtkErrorMacro('Error setting vertexMC in shader VAO.');\n      }\n    }\n\n    // set/update the texture map if needed\n    const tmaps = model.renderable.getTextures();\n    if (!tmaps.length) {\n      vtkErrorMacro('vtkSkybox requires a texture map');\n    }\n    if (model.openGLTexture.getRenderable() !== tmaps[0]) {\n      model.openGLTexture.releaseGraphicsResources(model.openGLRenderWindow);\n      model.openGLTexture.setRenderable(tmaps[0]);\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  model.openGLTexture = vtkOpenGLTexture.newInstance();\n  model.tris = vtkHelper.newInstance();\n\n  model.keyMatrixTime = {};\n  macro.obj(model.keyMatrixTime, { mtime: 0 });\n  model.keyMatrices = {\n    normalMatrix: mat3.create(),\n    mcwc: mat4.create(),\n  };\n\n  // Build VTK API\n  macro.setGet(publicAPI, model, ['context']);\n\n  macro.get(publicAPI, model, ['activeTextures']);\n\n  // Object methods\n  vtkOpenGLSkybox(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import { mat4 } from 'gl-matrix';\nimport { ObjectType } from 'vtk.js/Sources/Rendering/OpenGL/BufferObject/Constants';\n\nimport macro from 'vtk.js/Sources/macro';\n\nimport vtkBufferObject from 'vtk.js/Sources/Rendering/OpenGL/BufferObject';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\n\nimport vtkShaderProgram from 'vtk.js/Sources/Rendering/OpenGL/ShaderProgram';\nimport vtkOpenGLPolyDataMapper from 'vtk.js/Sources/Rendering/OpenGL/PolyDataMapper';\n\nimport vtkSphereMapperVS from 'vtk.js/Sources/Rendering/OpenGL/glsl/vtkSphereMapperVS.glsl';\nimport vtkPolyDataFS from 'vtk.js/Sources/Rendering/OpenGL/glsl/vtkPolyDataFS.glsl';\n\nconst { vtkErrorMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLSphereMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLSphereMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLSphereMapper');\n\n  // Capture 'parentClass' api for internal use\n  const superClass = Object.assign({}, publicAPI);\n\n  publicAPI.getShaderTemplate = (shaders, ren, actor) => {\n    shaders.Vertex = vtkSphereMapperVS;\n    shaders.Fragment = vtkPolyDataFS;\n    shaders.Geometry = '';\n  };\n\n  publicAPI.replaceShaderValues = (shaders, ren, actor) => {\n    let VSSource = shaders.Vertex;\n    let FSSource = shaders.Fragment;\n\n    VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Camera::Dec', [\n      'uniform mat4 VCDCMatrix;\\n',\n      'uniform mat4 MCVCMatrix;',\n    ]).result;\n\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::PositionVC::Dec', [\n      'varying vec4 vertexVCVSOutput;',\n    ]).result;\n\n    // we create vertexVC below, so turn off the default\n    // implementation\n    FSSource = vtkShaderProgram.substitute(\n      FSSource,\n      '//VTK::PositionVC::Impl',\n      ['vec4 vertexVC = vertexVCVSOutput;\\n']\n    ).result;\n\n    // for lights kit and positional the VCDC matrix is already defined\n    // so don't redefine it\n    const replacement = [\n      'uniform float invertedDepth;\\n',\n      'uniform int cameraParallel;\\n',\n      'varying float radiusVCVSOutput;\\n',\n      'varying vec3 centerVCVSOutput;\\n',\n      'uniform mat4 VCDCMatrix;\\n',\n    ];\n    FSSource = vtkShaderProgram.substitute(\n      FSSource,\n      '//VTK::Normal::Dec',\n      replacement\n    ).result;\n\n    let fragString = '';\n    if (model.context.getExtension('EXT_frag_depth')) {\n      fragString = 'gl_FragDepthEXT = (pos.z / pos.w + 1.0) / 2.0;\\n';\n    }\n    if (model.openGLRenderWindow.getWebgl2()) {\n      fragString = 'gl_FragDepth = (pos.z / pos.w + 1.0) / 2.0;\\n';\n    }\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Depth::Impl', [\n      // compute the eye position and unit direction\n      '  vec3 EyePos;\\n',\n      '  vec3 EyeDir;\\n',\n      '  if (cameraParallel != 0) {\\n',\n      '    EyePos = vec3(vertexVC.x, vertexVC.y, vertexVC.z + 3.0*radiusVCVSOutput);\\n',\n      '    EyeDir = vec3(0.0,0.0,-1.0); }\\n',\n      '  else {\\n',\n      '    EyeDir = vertexVC.xyz;\\n',\n      '    EyePos = vec3(0.0,0.0,0.0);\\n',\n      '    float lengthED = length(EyeDir);\\n',\n      '    EyeDir = normalize(EyeDir);\\n',\n      // we adjust the EyePos to be closer if it is too far away\n      // to prevent floating point precision noise\n      '    if (lengthED > radiusVCVSOutput*3.0) {\\n',\n      '      EyePos = vertexVC.xyz - EyeDir*3.0*radiusVCVSOutput; }\\n',\n      '    }\\n',\n\n      // translate to Sphere center\n      '  EyePos = EyePos - centerVCVSOutput;\\n',\n      // scale to radius 1.0\n      '  EyePos = EyePos/radiusVCVSOutput;\\n',\n      // find the intersection\n      '  float b = 2.0*dot(EyePos,EyeDir);\\n',\n      '  float c = dot(EyePos,EyePos) - 1.0;\\n',\n      '  float d = b*b - 4.0*c;\\n',\n      '  vec3 normalVCVSOutput = vec3(0.0,0.0,1.0);\\n',\n      '  if (d < 0.0) { discard; }\\n',\n      '  else {\\n',\n      '    float t = (-b - invertedDepth*sqrt(d))*0.5;\\n',\n\n      // compute the normal, for unit sphere this is just\n      // the intersection point\n      '    normalVCVSOutput = invertedDepth*normalize(EyePos + t*EyeDir);\\n',\n      // compute the intersection point in VC\n      '    vertexVC.xyz = normalVCVSOutput*radiusVCVSOutput + centerVCVSOutput;\\n',\n      '    }\\n',\n      // compute the pixel's depth\n      // ' normalVCVSOutput = vec3(0,0,1);\\n'\n      '  vec4 pos = VCDCMatrix * vertexVC;\\n',\n      fragString,\n    ]).result;\n\n    // Strip out the normal line -- the normal is computed as part of the depth\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Normal::Impl', '')\n      .result;\n\n    if (model.haveSeenDepthRequest) {\n      // special depth impl\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ZBuffer::Impl', [\n        'if (depthRequest == 1) {',\n        'float computedZ = (pos.z / pos.w + 1.0) / 2.0;',\n        'float iz = floor(computedZ * 65535.0 + 0.1);',\n        'float rf = floor(iz/256.0)/255.0;',\n        'float gf = mod(iz,256.0)/255.0;',\n        'gl_FragData[0] = vec4(rf, gf, 0.0, 1.0); }',\n      ]).result;\n    }\n\n    shaders.Vertex = VSSource;\n    shaders.Fragment = FSSource;\n\n    superClass.replaceShaderValues(shaders, ren, actor);\n  };\n\n  publicAPI.setMapperShaderParameters = (cellBO, ren, actor) => {\n    if (\n      cellBO.getCABO().getElementCount() &&\n      (model.VBOBuildTime > cellBO.getAttributeUpdateTime().getMTime() ||\n        cellBO.getShaderSourceTime().getMTime() >\n          cellBO.getAttributeUpdateTime().getMTime()) &&\n      cellBO.getProgram().isAttributeUsed('offsetMC')\n    ) {\n      if (\n        !cellBO.getVAO().addAttributeArray(\n          cellBO.getProgram(),\n          cellBO.getCABO(),\n          'offsetMC',\n          12, // 12:this->VBO->ColorOffset+sizeof(float)\n          cellBO.getCABO().getStride(),\n          model.context.FLOAT,\n          2,\n          false\n        )\n      ) {\n        vtkErrorMacro(\"Error setting 'offsetMC' in shader VAO.\");\n      }\n    }\n\n    if (cellBO.getProgram().isUniformUsed('invertedDepth')) {\n      cellBO\n        .getProgram()\n        .setUniformf('invertedDepth', model.invert ? -1.0 : 1.0);\n    }\n\n    superClass.setMapperShaderParameters(cellBO, ren, actor);\n  };\n\n  publicAPI.setCameraShaderParameters = (cellBO, ren, actor) => {\n    const program = cellBO.getProgram();\n\n    const cam = ren.getActiveCamera();\n    const keyMats = model.openGLCamera.getKeyMatrices(ren);\n\n    if (program.isUniformUsed('VCDCMatrix')) {\n      program.setUniformMatrix('VCDCMatrix', keyMats.vcdc);\n    }\n\n    if (program.isUniformUsed('MCVCMatrix')) {\n      if (!actor.getIsIdentity()) {\n        const actMats = model.openGLActor.getKeyMatrices();\n        const tmp4 = mat4.create();\n        mat4.multiply(tmp4, keyMats.wcvc, actMats.mcwc);\n        program.setUniformMatrix('MCVCMatrix', tmp4);\n      } else {\n        program.setUniformMatrix('MCVCMatrix', keyMats.wcvc);\n      }\n    }\n\n    if (program.isUniformUsed('cameraParallel')) {\n      cellBO\n        .getProgram()\n        .setUniformi('cameraParallel', cam.getParallelProjection());\n    }\n  };\n\n  publicAPI.getOpenGLMode = (rep, type) => model.context.TRIANGLES;\n\n  publicAPI.buildBufferObjects = (ren, actor) => {\n    const poly = model.currentInput;\n\n    if (poly === null) {\n      return;\n    }\n\n    model.renderable.mapScalars(poly, 1.0);\n    const c = model.renderable.getColorMapColors();\n\n    const vbo = model.primitives[model.primTypes.Tris].getCABO();\n\n    const pointData = poly.getPointData();\n    const points = poly.getPoints();\n    const numPoints = points.getNumberOfPoints();\n    const pointArray = points.getData();\n\n    const pointSize = 5; // x,y,z,orientation1,orientation2\n    let scales = null;\n\n    if (\n      model.renderable.getScaleArray() != null &&\n      pointData.hasArray(model.renderable.getScaleArray())\n    ) {\n      scales = pointData.getArray(model.renderable.getScaleArray()).getData();\n    }\n\n    let colorData = null;\n    let colorComponents = 0;\n    let packedUCVBO = null;\n    if (c) {\n      colorComponents = c.getNumberOfComponents();\n      vbo.setColorOffset(0);\n      vbo.setColorBOStride(4);\n      colorData = c.getData();\n      packedUCVBO = new Uint8Array(3 * numPoints * 4);\n      if (!vbo.getColorBO()) {\n        vbo.setColorBO(vtkBufferObject.newInstance());\n      }\n      vbo.getColorBO().setOpenGLRenderWindow(model.openGLRenderWindow);\n    } else if (vbo.getColorBO()) {\n      vbo.setColorBO(null);\n    }\n    vbo.setColorComponents(colorComponents);\n\n    const packedVBO = new Float32Array(pointSize * numPoints * 3);\n\n    vbo.setStride(pointSize * 4);\n\n    const cos30 = Math.cos(vtkMath.radiansFromDegrees(30.0));\n    let pointIdx = 0;\n    let colorIdx = 0;\n\n    //\n    // Generate points and point data for sides\n    //\n    let vboIdx = 0;\n    let ucIdx = 0;\n    for (let i = 0; i < numPoints; ++i) {\n      let radius = model.renderable.getRadius();\n      if (scales) {\n        radius = scales[i];\n      }\n\n      pointIdx = i * 3;\n      packedVBO[vboIdx++] = pointArray[pointIdx++];\n      packedVBO[vboIdx++] = pointArray[pointIdx++];\n      packedVBO[vboIdx++] = pointArray[pointIdx++];\n      packedVBO[vboIdx++] = -2.0 * radius * cos30;\n      packedVBO[vboIdx++] = -radius;\n      if (colorData) {\n        colorIdx = i * colorComponents;\n        packedUCVBO[ucIdx++] = colorData[colorIdx];\n        packedUCVBO[ucIdx++] = colorData[colorIdx + 1];\n        packedUCVBO[ucIdx++] = colorData[colorIdx + 2];\n        packedUCVBO[ucIdx++] = colorData[colorIdx + 3];\n      }\n\n      pointIdx = i * 3;\n      packedVBO[vboIdx++] = pointArray[pointIdx++];\n      packedVBO[vboIdx++] = pointArray[pointIdx++];\n      packedVBO[vboIdx++] = pointArray[pointIdx++];\n      packedVBO[vboIdx++] = 2.0 * radius * cos30;\n      packedVBO[vboIdx++] = -radius;\n      if (colorData) {\n        packedUCVBO[ucIdx++] = colorData[colorIdx];\n        packedUCVBO[ucIdx++] = colorData[colorIdx + 1];\n        packedUCVBO[ucIdx++] = colorData[colorIdx + 2];\n        packedUCVBO[ucIdx++] = colorData[colorIdx + 3];\n      }\n\n      pointIdx = i * 3;\n      packedVBO[vboIdx++] = pointArray[pointIdx++];\n      packedVBO[vboIdx++] = pointArray[pointIdx++];\n      packedVBO[vboIdx++] = pointArray[pointIdx++];\n      packedVBO[vboIdx++] = 0.0;\n      packedVBO[vboIdx++] = 2.0 * radius;\n      if (colorData) {\n        packedUCVBO[ucIdx++] = colorData[colorIdx];\n        packedUCVBO[ucIdx++] = colorData[colorIdx + 1];\n        packedUCVBO[ucIdx++] = colorData[colorIdx + 2];\n        packedUCVBO[ucIdx++] = colorData[colorIdx + 3];\n      }\n    }\n\n    vbo.setElementCount(vboIdx / pointSize);\n    vbo.upload(packedVBO, ObjectType.ARRAY_BUFFER);\n    if (c) {\n      vbo.getColorBO().upload(packedUCVBO, ObjectType.ARRAY_BUFFER);\n    }\n\n    model.VBOBuildTime.modified();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkOpenGLPolyDataMapper.extend(publicAPI, model, initialValues);\n\n  // Object methods\n  vtkOpenGLSphereMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkOpenGLSphereMapper');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import { mat3, mat4 } from 'gl-matrix';\nimport { ObjectType } from 'vtk.js/Sources/Rendering/OpenGL/BufferObject/Constants';\n\nimport * as macro from 'vtk.js/Sources/macro';\n\nimport vtkBufferObject from 'vtk.js/Sources/Rendering/OpenGL/BufferObject';\nimport vtkStickMapperVS from 'vtk.js/Sources/Rendering/OpenGL/glsl/vtkStickMapperVS.glsl';\nimport vtkPolyDataFS from 'vtk.js/Sources/Rendering/OpenGL/glsl/vtkPolyDataFS.glsl';\n\nimport vtkShaderProgram from 'vtk.js/Sources/Rendering/OpenGL/ShaderProgram';\nimport vtkOpenGLPolyDataMapper from 'vtk.js/Sources/Rendering/OpenGL/PolyDataMapper';\n\nconst { vtkErrorMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLStickMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLStickMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLStickMapper');\n\n  // Capture 'parentClass' api for internal use\n  const superClass = Object.assign({}, publicAPI);\n\n  publicAPI.getShaderTemplate = (shaders, ren, actor) => {\n    shaders.Vertex = vtkStickMapperVS;\n    shaders.Fragment = vtkPolyDataFS;\n    shaders.Geometry = '';\n  };\n\n  publicAPI.replaceShaderValues = (shaders, ren, actor) => {\n    let VSSource = shaders.Vertex;\n    let FSSource = shaders.Fragment;\n\n    VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Camera::Dec', [\n      'uniform mat4 VCDCMatrix;\\n',\n      'uniform mat4 MCVCMatrix;',\n    ]).result;\n\n    FSSource = vtkShaderProgram.substitute(\n      FSSource,\n      '//VTK::PositionVC::Dec',\n      'varying vec4 vertexVCVSOutput;'\n    ).result;\n\n    // we create vertexVC below, so turn off the default\n    // implementation\n    FSSource = vtkShaderProgram.substitute(\n      FSSource,\n      '//VTK::PositionVC::Impl',\n      '  vec4 vertexVC = vertexVCVSOutput;\\n'\n    ).result;\n\n    // for lights kit and positional the VCDC matrix is already defined\n    // so don't redefine it\n    const replacement = [\n      'uniform int cameraParallel;\\n',\n      'varying float radiusVCVSOutput;\\n',\n      'varying vec3 orientVCVSOutput;\\n',\n      'varying float lengthVCVSOutput;\\n',\n      'varying vec3 centerVCVSOutput;\\n',\n      'uniform mat4 VCDCMatrix;\\n',\n    ];\n    FSSource = vtkShaderProgram.substitute(\n      FSSource,\n      '//VTK::Normal::Dec',\n      replacement\n    ).result;\n\n    let fragString = '';\n    if (model.context.getExtension('EXT_frag_depth')) {\n      fragString = '  gl_FragDepthEXT = (pos.z / pos.w + 1.0) / 2.0;\\n';\n    }\n    if (model.openGLRenderWindow.getWebgl2()) {\n      fragString = 'gl_FragDepth = (pos.z / pos.w + 1.0) / 2.0;\\n';\n    }\n    // see https://www.cl.cam.ac.uk/teaching/1999/AGraphHCI/SMAG/node2.html\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Depth::Impl', [\n      // compute the eye position and unit direction\n      '  vec3 EyePos;\\n',\n      '  vec3 EyeDir;\\n',\n      '  if (cameraParallel != 0) {\\n',\n      '    EyePos = vec3(vertexVC.x, vertexVC.y, vertexVC.z + 3.0*radiusVCVSOutput);\\n',\n      '    EyeDir = vec3(0.0,0.0,-1.0); }\\n',\n      '  else {\\n',\n      '    EyeDir = vertexVC.xyz;\\n',\n      '    EyePos = vec3(0.0,0.0,0.0);\\n',\n      '    float lengthED = length(EyeDir);\\n',\n      '    EyeDir = normalize(EyeDir);\\n',\n      // we adjust the EyePos to be closer if it is too far away\n      // to prevent floating point precision noise\n      '    if (lengthED > radiusVCVSOutput*3.0) {\\n',\n      '      EyePos = vertexVC.xyz - EyeDir*3.0*radiusVCVSOutput; }\\n',\n      '    }\\n',\n\n      // translate to Stick center\n      '  EyePos = EyePos - centerVCVSOutput;\\n',\n\n      // rotate to new basis\n      // base1, base2, orientVC\n      '  vec3 base1;\\n',\n      '  if (abs(orientVCVSOutput.z) < 0.99) {\\n',\n      '    base1 = normalize(cross(orientVCVSOutput,vec3(0.0,0.0,1.0))); }\\n',\n      '  else {\\n',\n      '    base1 = normalize(cross(orientVCVSOutput,vec3(0.0,1.0,0.0))); }\\n',\n      '  vec3 base2 = cross(orientVCVSOutput,base1);\\n',\n      '  EyePos = vec3(dot(EyePos,base1),dot(EyePos,base2),dot(EyePos,orientVCVSOutput));\\n',\n      '  EyeDir = vec3(dot(EyeDir,base1),dot(EyeDir,base2),dot(EyeDir,orientVCVSOutput));\\n',\n\n      // scale by radius\n      '  EyePos = EyePos/radiusVCVSOutput;\\n',\n\n      // find the intersection\n      '  float a = EyeDir.x*EyeDir.x + EyeDir.y*EyeDir.y;\\n',\n      '  float b = 2.0*(EyePos.x*EyeDir.x + EyePos.y*EyeDir.y);\\n',\n      '  float c = EyePos.x*EyePos.x + EyePos.y*EyePos.y - 1.0;\\n',\n      '  float d = b*b - 4.0*a*c;\\n',\n      '  vec3 normalVCVSOutput = vec3(0.0,0.0,1.0);\\n',\n      '  if (d < 0.0) { discard; }\\n',\n      '  else {\\n',\n      '    float t =  (-b - sqrt(d))/(2.0*a);\\n',\n      '    float tz = EyePos.z + t*EyeDir.z;\\n',\n      '    vec3 iPoint = EyePos + t*EyeDir;\\n',\n      '    if (abs(iPoint.z)*radiusVCVSOutput > lengthVCVSOutput*0.5) {\\n',\n      // test for end cap\n      '      float t2 = (-b + sqrt(d))/(2.0*a);\\n',\n      '      float tz2 = EyePos.z + t2*EyeDir.z;\\n',\n      '      if (tz2*radiusVCVSOutput > lengthVCVSOutput*0.5 || tz*radiusVCVSOutput < -0.5*lengthVCVSOutput) { discard; }\\n',\n      '      else {\\n',\n      '        normalVCVSOutput = orientVCVSOutput;\\n',\n      '        float t3 = (lengthVCVSOutput*0.5/radiusVCVSOutput - EyePos.z)/EyeDir.z;\\n',\n      '        iPoint = EyePos + t3*EyeDir;\\n',\n      '        vertexVC.xyz = radiusVCVSOutput*(iPoint.x*base1 + iPoint.y*base2 + iPoint.z*orientVCVSOutput) + centerVCVSOutput;\\n',\n      '        }\\n',\n      '      }\\n',\n      '    else {\\n',\n      // The normal is the iPoint.xy rotated back into VC\n      '      normalVCVSOutput = iPoint.x*base1 + iPoint.y*base2;\\n',\n      // rescale rerotate and translate\n      '      vertexVC.xyz = radiusVCVSOutput*(normalVCVSOutput + iPoint.z*orientVCVSOutput) + centerVCVSOutput;\\n',\n      '      }\\n',\n      '    }\\n',\n\n      //    '  vec3 normalVC = vec3(0.0,0.0,1.0);\\n'\n      // compute the pixel's depth\n      '  vec4 pos = VCDCMatrix * vertexVC;\\n',\n      fragString,\n    ]).result;\n\n    // Strip out the normal line -- the normal is computed as part of the depth\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Normal::Impl', '')\n      .result;\n\n    if (model.haveSeenDepthRequest) {\n      // special depth impl\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ZBuffer::Impl', [\n        'if (depthRequest == 1) {',\n        'float computedZ = (pos.z / pos.w + 1.0) / 2.0;',\n        'float iz = floor(computedZ * 65535.0 + 0.1);',\n        'float rf = floor(iz/256.0)/255.0;',\n        'float gf = mod(iz,256.0)/255.0;',\n        'gl_FragData[0] = vec4(rf, gf, 0.0, 1.0); }',\n      ]).result;\n    }\n\n    shaders.Vertex = VSSource;\n    shaders.Fragment = FSSource;\n\n    superClass.replaceShaderValues(shaders, ren, actor);\n  };\n\n  publicAPI.setMapperShaderParameters = (cellBO, ren, actor) => {\n    if (\n      cellBO.getCABO().getElementCount() &&\n      (model.VBOBuildTime > cellBO.getAttributeUpdateTime().getMTime() ||\n        cellBO.getShaderSourceTime().getMTime() >\n          cellBO.getAttributeUpdateTime().getMTime())\n    ) {\n      if (cellBO.getProgram().isAttributeUsed('orientMC')) {\n        if (\n          !cellBO.getVAO().addAttributeArray(\n            cellBO.getProgram(),\n            cellBO.getCABO(),\n            'orientMC',\n            12, // after X Y Z\n            cellBO.getCABO().getStride(),\n            model.context.FLOAT,\n            3,\n            false\n          )\n        ) {\n          vtkErrorMacro(\"Error setting 'orientMC' in shader VAO.\");\n        }\n      }\n      if (cellBO.getProgram().isAttributeUsed('offsetMC')) {\n        if (\n          !cellBO\n            .getVAO()\n            .addAttributeArray(\n              cellBO.getProgram(),\n              cellBO.getCABO().getColorBO(),\n              'offsetMC',\n              0,\n              cellBO.getCABO().getColorBOStride(),\n              model.context.UNSIGNED_BYTE,\n              3,\n              true\n            )\n        ) {\n          vtkErrorMacro(\"Error setting 'offsetMC' in shader VAO.\");\n        }\n      }\n      if (cellBO.getProgram().isAttributeUsed('radiusMC')) {\n        if (\n          !cellBO.getVAO().addAttributeArray(\n            cellBO.getProgram(),\n            cellBO.getCABO(),\n            'radiusMC',\n            24, // X Y Z OX OY OZ\n            cellBO.getCABO().getStride(),\n            model.context.FLOAT,\n            1,\n            false\n          )\n        ) {\n          vtkErrorMacro(\"Error setting 'radiusMC' in shader VAO.\");\n        }\n      }\n    }\n\n    superClass.setMapperShaderParameters(cellBO, ren, actor);\n  };\n\n  publicAPI.setCameraShaderParameters = (cellBO, ren, actor) => {\n    const program = cellBO.getProgram();\n\n    const cam = ren.getActiveCamera();\n    const keyMats = model.openGLCamera.getKeyMatrices(ren);\n\n    if (program.isUniformUsed('VCDCMatrix')) {\n      program.setUniformMatrix('VCDCMatrix', keyMats.vcdc);\n    }\n\n    if (!actor.getIsIdentity()) {\n      const actMats = model.openGLActor.getKeyMatrices();\n      const tmp4 = mat4.create();\n\n      if (program.isUniformUsed('MCVCMatrix')) {\n        mat4.multiply(tmp4, keyMats.wcvc, actMats.mcwc);\n        program.setUniformMatrix('MCVCMatrix', tmp4);\n      }\n      if (program.isUniformUsed('normalMatrix')) {\n        const anorms = mat3.create();\n        mat3.multiply(anorms, keyMats.normalMatrix, actMats.normalMatrix);\n        program.setUniformMatrix3x3('normalMatrix', anorms);\n      }\n    } else {\n      if (program.isUniformUsed('MCVCMatrix')) {\n        program.setUniformMatrix('MCVCMatrix', keyMats.wcvc);\n      }\n      if (program.isUniformUsed('normalMatrix')) {\n        program.setUniformMatrix3x3('normalMatrix', keyMats.normalMatrix);\n      }\n    }\n\n    if (program.isUniformUsed('cameraParallel')) {\n      cellBO\n        .getProgram()\n        .setUniformi('cameraParallel', cam.getParallelProjection());\n    }\n  };\n\n  publicAPI.getOpenGLMode = (rep, type) => model.context.TRIANGLES;\n\n  publicAPI.buildBufferObjects = (ren, actor) => {\n    const poly = model.currentInput;\n\n    if (poly === null) {\n      return;\n    }\n\n    model.renderable.mapScalars(poly, 1.0);\n    const c = model.renderable.getColorMapColors();\n\n    const vbo = model.primitives[model.primTypes.Tris].getCABO();\n\n    const pointData = poly.getPointData();\n    const points = poly.getPoints();\n    const numPoints = points.getNumberOfPoints();\n    const pointArray = points.getData();\n    let pointSize = 3; // x,y,z\n\n    // three more floats for orientation + 1 for radius\n    pointSize += 4;\n\n    let colorData = null;\n    let colorComponents = 0;\n    vbo.setColorBOStride(4);\n\n    if (!vbo.getColorBO()) {\n      vbo.setColorBO(vtkBufferObject.newInstance());\n    }\n    vbo.getColorBO().setOpenGLRenderWindow(model.openGLRenderWindow);\n    if (c) {\n      colorComponents = c.getNumberOfComponents();\n      vbo.setColorOffset(4);\n      colorData = c.getData();\n      vbo.setColorBOStride(8);\n    }\n    vbo.setColorComponents(colorComponents);\n\n    vbo.setStride(pointSize * 4);\n\n    // Create a buffer, and copy the data over.\n    const packedVBO = new Float32Array(pointSize * numPoints * 12);\n    const packedUCVBO = new Uint8Array(12 * numPoints * (colorData ? 8 : 4));\n\n    let scales = null;\n    let orientationArray = null;\n    //\n    // Generate points and point data for sides\n    //\n    if (\n      model.renderable.getScaleArray() != null &&\n      pointData.hasArray(model.renderable.getScaleArray())\n    ) {\n      scales = pointData.getArray(model.renderable.getScaleArray()).getData();\n    }\n\n    if (\n      model.renderable.getOrientationArray() != null &&\n      pointData.hasArray(model.renderable.getOrientationArray())\n    ) {\n      orientationArray = pointData\n        .getArray(model.renderable.getOrientationArray())\n        .getData();\n    } else {\n      vtkErrorMacro([\n        'Error setting orientationArray.\\n',\n        'You have to specify the stick orientation',\n      ]);\n    }\n\n    // Vertices\n    // 013 - 032 - 324 - 453\n    //\n    //       _.4---_.5\n    //    .-*   .-*\n    //   2-----3\n    //   |    /|\n    //   |   / |\n    //   |  /  |\n    //   | /   |\n    //   |/    |\n    //   0-----1\n    //\n    // coord for each points\n    // 0: 000\n    // 1: 100\n    // 2: 001\n    // 3: 101\n    // 4: 011\n    // 5: 111\n\n    // prettier-ignore\n    const verticesArray = [\n      0, 1, 3,\n      0, 3, 2,\n      2, 3, 5,\n      2, 5, 4,\n    ];\n\n    let pointIdx = 0;\n    let colorIdx = 0;\n    let vboIdx = 0;\n    let ucIdx = 0;\n\n    for (let i = 0; i < numPoints; ++i) {\n      let length = model.renderable.getLength();\n      let radius = model.renderable.getRadius();\n      if (scales) {\n        length = scales[i * 2];\n        radius = scales[i * 2 + 1];\n      }\n\n      for (let j = 0; j < verticesArray.length; ++j) {\n        pointIdx = i * 3;\n        packedVBO[vboIdx++] = pointArray[pointIdx++];\n        packedVBO[vboIdx++] = pointArray[pointIdx++];\n        packedVBO[vboIdx++] = pointArray[pointIdx++];\n        pointIdx = i * 3;\n        packedVBO[vboIdx++] = orientationArray[pointIdx++] * length;\n        packedVBO[vboIdx++] = orientationArray[pointIdx++] * length;\n        packedVBO[vboIdx++] = orientationArray[pointIdx++] * length;\n        packedVBO[vboIdx++] = radius;\n\n        packedUCVBO[ucIdx++] = 255 * (verticesArray[j] % 2);\n        packedUCVBO[ucIdx++] = verticesArray[j] >= 4 ? 255 : 0;\n        packedUCVBO[ucIdx++] = verticesArray[j] >= 2 ? 255 : 0;\n        packedUCVBO[ucIdx++] = 255;\n\n        colorIdx = i * colorComponents;\n        if (colorData) {\n          packedUCVBO[ucIdx++] = colorData[colorIdx];\n          packedUCVBO[ucIdx++] = colorData[colorIdx + 1];\n          packedUCVBO[ucIdx++] = colorData[colorIdx + 2];\n          packedUCVBO[ucIdx++] = colorData[colorIdx + 3];\n        }\n      }\n    }\n    vbo.setElementCount(vboIdx / pointSize);\n    vbo.upload(packedVBO, ObjectType.ARRAY_BUFFER);\n    vbo.getColorBO().upload(packedUCVBO, ObjectType.ARRAY_BUFFER);\n    model.VBOBuildTime.modified();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkOpenGLPolyDataMapper.extend(publicAPI, model, initialValues);\n\n  // Object methods\n  vtkOpenGLStickMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkOpenGLStickMapper');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import { mat3, mat4 } from 'gl-matrix';\n\nimport macro from 'vtk.js/Sources/macro';\nimport vtkViewNode from 'vtk.js/Sources/Rendering/SceneGraph/ViewNode';\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLVolume methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLVolume(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLVolume');\n\n  // Builds myself.\n  publicAPI.buildPass = (prepass) => {\n    if (!model.renderable || !model.renderable.getVisibility()) {\n      return;\n    }\n    if (prepass) {\n      model.openGLRenderer = publicAPI.getFirstAncestorOfType(\n        'vtkOpenGLRenderer'\n      );\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.renderable.getMapper());\n      publicAPI.removeUnusedNodes();\n    }\n  };\n\n  publicAPI.queryPass = (prepass, renderPass) => {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n      renderPass.incrementVolumeCount();\n    }\n  };\n\n  publicAPI.traverseVolumePass = (renderPass) => {\n    if (\n      !model.renderable ||\n      !model.renderable.getVisibility() ||\n      (model.openGLRenderer.getSelector() && !model.renderable.getPickable())\n    ) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n\n    model.children[0].traverse(renderPass);\n\n    publicAPI.apply(renderPass, false);\n  };\n\n  // Renders myself\n  publicAPI.volumePass = (prepass) => {\n    if (!model.renderable || !model.renderable.getVisibility()) {\n      return;\n    }\n    if (prepass) {\n      model.context = publicAPI\n        .getFirstAncestorOfType('vtkOpenGLRenderWindow')\n        .getContext();\n      model.context.depthMask(false);\n    } else {\n      model.context.depthMask(true);\n    }\n  };\n\n  publicAPI.getKeyMatrices = () => {\n    // has the actor changed?\n    if (model.renderable.getMTime() > model.keyMatrixTime.getMTime()) {\n      model.renderable.computeMatrix();\n      mat4.copy(model.MCWCMatrix, model.renderable.getMatrix());\n      mat4.transpose(model.MCWCMatrix, model.MCWCMatrix);\n\n      if (model.renderable.getIsIdentity()) {\n        mat3.identity(model.normalMatrix);\n      } else {\n        mat3.fromMat4(model.normalMatrix, model.MCWCMatrix);\n        mat3.invert(model.normalMatrix, model.normalMatrix);\n      }\n      model.keyMatrixTime.modified();\n    }\n\n    return { mcwc: model.MCWCMatrix, normalMatrix: model.normalMatrix };\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // context: null,\n  // keyMatrixTime: null,\n  // normalMatrix: null,\n  // MCWCMatrix: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  model.keyMatrixTime = {};\n  macro.obj(model.keyMatrixTime, { mtime: 0 });\n  model.normalMatrix = mat3.create();\n  model.MCWCMatrix = mat4.create();\n\n  // Build VTK API\n  macro.setGet(publicAPI, model, ['context']);\n\n  // Object methods\n  vtkOpenGLVolume(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkOpenGLVolume');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","export const InterpolationType = {\n  NEAREST: 0,\n  LINEAR: 1,\n  FAST_LINEAR: 2,\n};\n\nexport default {\n  InterpolationType,\n};\n","export const BlendMode = {\n  COMPOSITE_BLEND: 0,\n  MAXIMUM_INTENSITY_BLEND: 1,\n  MINIMUM_INTENSITY_BLEND: 2,\n  AVERAGE_INTENSITY_BLEND: 3,\n};\n\nexport default {\n  BlendMode,\n};\n","import macro from 'vtk.js/Sources/macro';\nimport { vec3, mat3, mat4 } from 'gl-matrix';\n// import vtkBoundingBox       from 'vtk.js/Sources/Common/DataModel/BoundingBox';\nimport vtkDataArray from 'vtk.js/Sources/Common/Core/DataArray';\nimport { VtkDataTypes } from 'vtk.js/Sources/Common/Core/DataArray/Constants';\nimport vtkHelper from 'vtk.js/Sources/Rendering/OpenGL/Helper';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport vtkOpenGLFramebuffer from 'vtk.js/Sources/Rendering/OpenGL/Framebuffer';\nimport vtkOpenGLTexture from 'vtk.js/Sources/Rendering/OpenGL/Texture';\nimport vtkShaderProgram from 'vtk.js/Sources/Rendering/OpenGL/ShaderProgram';\nimport vtkVertexArrayObject from 'vtk.js/Sources/Rendering/OpenGL/VertexArrayObject';\nimport vtkViewNode from 'vtk.js/Sources/Rendering/SceneGraph/ViewNode';\nimport { Representation } from 'vtk.js/Sources/Rendering/Core/Property/Constants';\nimport {\n  Wrap,\n  Filter,\n} from 'vtk.js/Sources/Rendering/OpenGL/Texture/Constants';\nimport { InterpolationType } from 'vtk.js/Sources/Rendering/Core/VolumeProperty/Constants';\nimport { BlendMode } from 'vtk.js/Sources/Rendering/Core/VolumeMapper/Constants';\n\nimport vtkVolumeVS from 'vtk.js/Sources/Rendering/OpenGL/glsl/vtkVolumeVS.glsl';\nimport vtkVolumeFS from 'vtk.js/Sources/Rendering/OpenGL/glsl/vtkVolumeFS.glsl';\n\nconst { vtkWarningMacro, vtkErrorMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLVolumeMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLVolumeMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLVolumeMapper');\n\n  publicAPI.buildPass = () => {\n    model.zBufferTexture = null;\n  };\n\n  // ohh someone is doing a zbuffer pass, use that for\n  // intermixed volume rendering\n  publicAPI.opaqueZBufferPass = (prepass, renderPass) => {\n    if (prepass) {\n      const zbt = renderPass.getZBufferTexture();\n      if (zbt !== model.zBufferTexture) {\n        model.zBufferTexture = zbt;\n      }\n    }\n  };\n\n  // Renders myself\n  publicAPI.volumePass = (prepass, renderPass) => {\n    if (prepass) {\n      model.openGLRenderWindow = publicAPI.getFirstAncestorOfType(\n        'vtkOpenGLRenderWindow'\n      );\n      model.context = model.openGLRenderWindow.getContext();\n      model.tris.setOpenGLRenderWindow(model.openGLRenderWindow);\n      model.jitterTexture.setOpenGLRenderWindow(model.openGLRenderWindow);\n      model.framebuffer.setOpenGLRenderWindow(model.openGLRenderWindow);\n\n      // Per Component?\n      model.scalarTexture.setOpenGLRenderWindow(model.openGLRenderWindow);\n      model.colorTexture.setOpenGLRenderWindow(model.openGLRenderWindow);\n      model.opacityTexture.setOpenGLRenderWindow(model.openGLRenderWindow);\n\n      model.openGLVolume = publicAPI.getFirstAncestorOfType('vtkOpenGLVolume');\n      const actor = model.openGLVolume.getRenderable();\n      model.openGLRenderer = publicAPI.getFirstAncestorOfType(\n        'vtkOpenGLRenderer'\n      );\n      const ren = model.openGLRenderer.getRenderable();\n      model.openGLCamera = model.openGLRenderer.getViewNodeFor(\n        ren.getActiveCamera()\n      );\n      publicAPI.renderPiece(ren, actor);\n    }\n  };\n\n  publicAPI.buildShaders = (shaders, ren, actor) => {\n    publicAPI.getShaderTemplate(shaders, ren, actor);\n    publicAPI.replaceShaderValues(shaders, ren, actor);\n  };\n\n  publicAPI.getShaderTemplate = (shaders, ren, actor) => {\n    shaders.Vertex = vtkVolumeVS;\n    shaders.Fragment = vtkVolumeFS;\n    shaders.Geometry = '';\n  };\n\n  publicAPI.replaceShaderValues = (shaders, ren, actor) => {\n    let FSSource = shaders.Fragment;\n\n    // define some values in the shader\n    const iType = actor.getProperty().getInterpolationType();\n    if (iType === InterpolationType.LINEAR) {\n      FSSource = vtkShaderProgram.substitute(\n        FSSource,\n        '//VTK::TrilinearOn',\n        '#define vtkTrilinearOn'\n      ).result;\n    }\n\n    const vtkImageLabelOutline = actor.getProperty().getUseLabelOutline();\n    if (vtkImageLabelOutline === true) {\n      FSSource = vtkShaderProgram.substitute(\n        FSSource,\n        '//VTK::ImageLabelOutlineOn',\n        '#define vtkImageLabelOutlineOn'\n      ).result;\n    }\n\n    const numComp = model.scalarTexture.getComponents();\n    FSSource = vtkShaderProgram.substitute(\n      FSSource,\n      '//VTK::NumComponents',\n      `#define vtkNumComponents ${numComp}`\n    ).result;\n\n    const iComps = actor.getProperty().getIndependentComponents();\n    if (iComps) {\n      FSSource = vtkShaderProgram.substitute(\n        FSSource,\n        '//VTK::IndependentComponentsOn',\n        '#define vtkIndependentComponentsOn'\n      ).result;\n    }\n\n    // WebGL only supports loops over constants\n    // and does not support while loops so we\n    // have to hard code how many steps/samples to take\n    // We do a break so most systems will gracefully\n    // early terminate, but it is always possible\n    // a system will execute every step regardless\n    const ext = model.currentInput.getExtent();\n    const spc = model.currentInput.getSpacing();\n    const vsize = vec3.create();\n    vec3.set(\n      vsize,\n      (ext[1] - ext[0]) * spc[0],\n      (ext[3] - ext[2]) * spc[1],\n      (ext[5] - ext[4]) * spc[2]\n    );\n\n    const maxSamples =\n      vec3.length(vsize) / model.renderable.getSampleDistance();\n\n    FSSource = vtkShaderProgram.substitute(\n      FSSource,\n      '//VTK::MaximumSamplesValue',\n      `${Math.ceil(maxSamples)}`\n    ).result;\n\n    // set light complexity\n    FSSource = vtkShaderProgram.substitute(\n      FSSource,\n      '//VTK::LightComplexity',\n      `#define vtkLightComplexity ${model.lastLightComplexity}`\n    ).result;\n\n    // if using gradient opacity define that\n    model.gopacity = actor.getProperty().getUseGradientOpacity(0);\n    for (let nc = 1; iComps && !model.gopacity && nc < numComp; ++nc) {\n      if (actor.getProperty().getUseGradientOpacity(nc)) {\n        model.gopacity = true;\n      }\n    }\n    if (model.gopacity) {\n      FSSource = vtkShaderProgram.substitute(\n        FSSource,\n        '//VTK::GradientOpacityOn',\n        '#define vtkGradientOpacityOn'\n      ).result;\n    }\n\n    // if we have a ztexture then declare it and use it\n    if (model.zBufferTexture !== null) {\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ZBuffer::Dec', [\n        'uniform sampler2D zBufferTexture;',\n        'uniform float vpWidth;',\n        'uniform float vpHeight;',\n      ]).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ZBuffer::Impl', [\n        'vec4 depthVec = texture2D(zBufferTexture, vec2(gl_FragCoord.x / vpWidth, gl_FragCoord.y/vpHeight));',\n        'float zdepth = (depthVec.r*256.0 + depthVec.g)/257.0;',\n        'zdepth = zdepth * 2.0 - 1.0;',\n        'zdepth = -2.0 * camFar * camNear / (zdepth*(camFar-camNear)-(camFar+camNear)) - camNear;',\n        'zdepth = -zdepth/rayDir.z;',\n        'dists.y = min(zdepth,dists.y);',\n      ]).result;\n    }\n\n    // Set the BlendMode approach\n    FSSource = vtkShaderProgram.substitute(\n      FSSource,\n      '//VTK::BlendMode',\n      `${model.renderable.getBlendMode()}`\n    ).result;\n\n    const averageIPScalarRange = model.renderable.getAverageIPScalarRange();\n\n    // TODO: Adding the .0 at the end feels hacky\n    FSSource = vtkShaderProgram.substitute(\n      FSSource,\n      '//VTK::AverageIPScalarRangeMin',\n      `${averageIPScalarRange[0]}.0`\n    ).result;\n\n    FSSource = vtkShaderProgram.substitute(\n      FSSource,\n      '//VTK::AverageIPScalarRangeMax',\n      `${averageIPScalarRange[1]}.0`\n    ).result;\n\n    shaders.Fragment = FSSource;\n\n    publicAPI.replaceShaderLight(shaders, ren, actor);\n  };\n\n  publicAPI.replaceShaderLight = (shaders, ren, actor) => {\n    let FSSource = shaders.Fragment;\n\n    // check for shadow maps\n    const shadowFactor = '';\n\n    switch (model.lastLightComplexity) {\n      default:\n      case 0: // no lighting, tcolor is fine as is\n        break;\n\n      case 1: // headlight\n      case 2: // light kit\n      case 3: {\n        // positional not implemented fallback to directional\n        let lightNum = 0;\n        ren.getLights().forEach((light) => {\n          const status = light.getSwitch();\n          if (status > 0) {\n            FSSource = vtkShaderProgram.substitute(\n              FSSource,\n              '//VTK::Light::Dec',\n              [\n                // intensity weighted color\n                `uniform vec3 lightColor${lightNum};`,\n                `uniform vec3 lightDirectionVC${lightNum}; // normalized`,\n                `uniform vec3 lightHalfAngleVC${lightNum}; // normalized`,\n                '//VTK::Light::Dec',\n              ],\n              false\n            ).result;\n            FSSource = vtkShaderProgram.substitute(\n              FSSource,\n              '//VTK::Light::Impl',\n              [\n                //              `  float df = max(0.0, dot(normal.rgb, -lightDirectionVC${lightNum}));`,\n                `  float df = abs(dot(normal.rgb, -lightDirectionVC${lightNum}));`,\n                `  diffuse += ((df${shadowFactor}) * lightColor${lightNum});`,\n                // '  if (df > 0.0)',\n                // '    {',\n                //              `    float sf = pow( max(0.0, dot(lightHalfAngleWC${lightNum},normal.rgb)), specularPower);`,\n                `    float sf = pow( abs(dot(lightHalfAngleVC${lightNum},normal.rgb)), vSpecularPower);`,\n                `    specular += ((sf${shadowFactor}) * lightColor${lightNum});`,\n                //              '    }',\n                '  //VTK::Light::Impl',\n              ],\n              false\n            ).result;\n            lightNum++;\n          }\n        });\n      }\n    }\n\n    shaders.Fragment = FSSource;\n  };\n\n  publicAPI.getNeedToRebuildShaders = (cellBO, ren, actor) => {\n    // do we need lighting?\n    let lightComplexity = 0;\n    if (\n      actor.getProperty().getShade() &&\n      model.renderable.getBlendMode() === BlendMode.COMPOSITE_BLEND\n    ) {\n      // consider the lighting complexity to determine which case applies\n      // simple headlight, Light Kit, the whole feature set of VTK\n      lightComplexity = 0;\n      model.numberOfLights = 0;\n\n      ren.getLights().forEach((light) => {\n        const status = light.getSwitch();\n        if (status > 0) {\n          model.numberOfLights++;\n          if (lightComplexity === 0) {\n            lightComplexity = 1;\n          }\n        }\n\n        if (\n          lightComplexity === 1 &&\n          (model.numberOfLights > 1 ||\n            light.getIntensity() !== 1.0 ||\n            !light.lightTypeIsHeadLight())\n        ) {\n          lightComplexity = 2;\n        }\n        if (lightComplexity < 3 && light.getPositional()) {\n          lightComplexity = 3;\n        }\n      });\n    }\n\n    let needRebuild = false;\n    if (model.lastLightComplexity !== lightComplexity) {\n      model.lastLightComplexity = lightComplexity;\n      needRebuild = true;\n    }\n\n    // has something changed that would require us to recreate the shader?\n    if (\n      cellBO.getProgram() === 0 ||\n      needRebuild ||\n      model.lastHaveSeenDepthRequest !== model.haveSeenDepthRequest ||\n      !!model.lastZBufferTexture !== !!model.zBufferTexture ||\n      cellBO.getShaderSourceTime().getMTime() < publicAPI.getMTime() ||\n      cellBO.getShaderSourceTime().getMTime() < actor.getMTime() ||\n      cellBO.getShaderSourceTime().getMTime() < model.renderable.getMTime() ||\n      cellBO.getShaderSourceTime().getMTime() < model.currentInput.getMTime()\n    ) {\n      model.lastZBufferTexture = model.zBufferTexture;\n      return true;\n    }\n\n    return false;\n  };\n\n  publicAPI.updateShaders = (cellBO, ren, actor) => {\n    model.lastBoundBO = cellBO;\n\n    // has something changed that would require us to recreate the shader?\n    if (publicAPI.getNeedToRebuildShaders(cellBO, ren, actor)) {\n      const shaders = { Vertex: null, Fragment: null, Geometry: null };\n\n      publicAPI.buildShaders(shaders, ren, actor);\n\n      // compile and bind the program if needed\n      const newShader = model.openGLRenderWindow\n        .getShaderCache()\n        .readyShaderProgramArray(\n          shaders.Vertex,\n          shaders.Fragment,\n          shaders.Geometry\n        );\n\n      // if the shader changed reinitialize the VAO\n      if (newShader !== cellBO.getProgram()) {\n        cellBO.setProgram(newShader);\n        // reset the VAO as the shader has changed\n        cellBO.getVAO().releaseGraphicsResources();\n      }\n\n      cellBO.getShaderSourceTime().modified();\n    } else {\n      model.openGLRenderWindow\n        .getShaderCache()\n        .readyShaderProgram(cellBO.getProgram());\n    }\n\n    cellBO.getVAO().bind();\n    publicAPI.setMapperShaderParameters(cellBO, ren, actor);\n    publicAPI.setCameraShaderParameters(cellBO, ren, actor);\n    publicAPI.setPropertyShaderParameters(cellBO, ren, actor);\n  };\n\n  publicAPI.setMapperShaderParameters = (cellBO, ren, actor) => {\n    // Now to update the VAO too, if necessary.\n    const program = cellBO.getProgram();\n\n    if (\n      cellBO.getCABO().getElementCount() &&\n      (model.VBOBuildTime.getMTime() >\n        cellBO.getAttributeUpdateTime().getMTime() ||\n        cellBO.getShaderSourceTime().getMTime() >\n          cellBO.getAttributeUpdateTime().getMTime())\n    ) {\n      if (program.isAttributeUsed('vertexDC')) {\n        if (\n          !cellBO\n            .getVAO()\n            .addAttributeArray(\n              program,\n              cellBO.getCABO(),\n              'vertexDC',\n              cellBO.getCABO().getVertexOffset(),\n              cellBO.getCABO().getStride(),\n              model.context.FLOAT,\n              3,\n              model.context.FALSE\n            )\n        ) {\n          vtkErrorMacro('Error setting vertexDC in shader VAO.');\n        }\n      }\n      cellBO.getAttributeUpdateTime().modified();\n    }\n\n    program.setUniformi('texture1', model.scalarTexture.getTextureUnit());\n    program.setUniformf('sampleDistance', model.renderable.getSampleDistance());\n\n    // if we have a zbuffer texture then set it\n    if (model.zBufferTexture !== null) {\n      program.setUniformi(\n        'zBufferTexture',\n        model.zBufferTexture.getTextureUnit()\n      );\n      const size = publicAPI.getRenderTargetSize();\n      program.setUniformf('vpWidth', size[0]);\n      program.setUniformf('vpHeight', size[1]);\n    }\n  };\n\n  publicAPI.setCameraShaderParameters = (cellBO, ren, actor) => {\n    // // [WMVD]C == {world, model, view, display} coordinates\n    // // E.g., WCDC == world to display coordinate transformation\n    const keyMats = model.openGLCamera.getKeyMatrices(ren);\n    const actMats = model.openGLVolume.getKeyMatrices();\n\n    mat4.multiply(model.modelToView, keyMats.wcvc, actMats.mcwc);\n\n    const program = cellBO.getProgram();\n\n    const cam = model.openGLCamera.getRenderable();\n    const crange = cam.getClippingRange();\n    program.setUniformf('camThick', crange[1] - crange[0]);\n    program.setUniformf('camNear', crange[0]);\n    program.setUniformf('camFar', crange[1]);\n\n    const bounds = model.currentInput.getBounds();\n    const dims = model.currentInput.getDimensions();\n\n    // compute the viewport bounds of the volume\n    // we will only render those fragments.\n    const pos = vec3.create();\n    const dir = vec3.create();\n    let dcxmin = 1.0;\n    let dcxmax = -1.0;\n    let dcymin = 1.0;\n    let dcymax = -1.0;\n\n    for (let i = 0; i < 8; ++i) {\n      vec3.set(\n        pos,\n        bounds[i % 2],\n        bounds[2 + (Math.floor(i / 2) % 2)],\n        bounds[4 + Math.floor(i / 4)]\n      );\n      vec3.transformMat4(pos, pos, model.modelToView);\n      if (!cam.getParallelProjection()) {\n        vec3.normalize(dir, pos);\n\n        // now find the projection of this point onto a\n        // nearZ distance plane. Since the camera is at 0,0,0\n        // in VC the ray is just t*pos and\n        // t is -nearZ/dir.z\n        // intersection becomes pos.x/pos.z\n        const t = -crange[0] / pos[2];\n        vec3.scale(pos, dir, t);\n      }\n      // now convert to DC\n      vec3.transformMat4(pos, pos, keyMats.vcdc);\n\n      dcxmin = Math.min(pos[0], dcxmin);\n      dcxmax = Math.max(pos[0], dcxmax);\n      dcymin = Math.min(pos[1], dcymin);\n      dcymax = Math.max(pos[1], dcymax);\n    }\n\n    program.setUniformf('dcxmin', dcxmin);\n    program.setUniformf('dcxmax', dcxmax);\n    program.setUniformf('dcymin', dcymin);\n    program.setUniformf('dcymax', dcymax);\n\n    if (program.isUniformUsed('cameraParallel')) {\n      program.setUniformi('cameraParallel', cam.getParallelProjection());\n    }\n\n    const ext = model.currentInput.getExtent();\n    const spc = model.currentInput.getSpacing();\n    const vsize = vec3.create();\n    vec3.set(\n      vsize,\n      (ext[1] - ext[0] + 1) * spc[0],\n      (ext[3] - ext[2] + 1) * spc[1],\n      (ext[5] - ext[4] + 1) * spc[2]\n    );\n    program.setUniform3f('vSpacing', spc[0], spc[1], spc[2]);\n\n    vec3.set(pos, ext[0], ext[2], ext[4]);\n    model.currentInput.indexToWorldVec3(pos, pos);\n\n    vec3.transformMat4(pos, pos, model.modelToView);\n    program.setUniform3f('vOriginVC', pos[0], pos[1], pos[2]);\n\n    // apply the image directions\n    const i2wmat4 = model.currentInput.getIndexToWorld();\n    mat4.multiply(model.idxToView, model.modelToView, i2wmat4);\n\n    mat3.multiply(\n      model.idxNormalMatrix,\n      keyMats.normalMatrix,\n      actMats.normalMatrix\n    );\n    mat3.multiply(\n      model.idxNormalMatrix,\n      model.idxNormalMatrix,\n      model.currentInput.getDirection()\n    );\n\n    const maxSamples =\n      vec3.length(vsize) / model.renderable.getSampleDistance();\n    if (maxSamples > model.renderable.getMaximumSamplesPerRay()) {\n      vtkWarningMacro(`The number of steps required ${Math.ceil(\n        maxSamples\n      )} is larger than the\n        specified maximum number of steps ${model.renderable.getMaximumSamplesPerRay()}.\n        Please either change the\n        volumeMapper sampleDistance or its maximum number of samples.`);\n    }\n\n    const vctoijk = vec3.create();\n\n    vec3.set(vctoijk, 1.0, 1.0, 1.0);\n    vec3.divide(vctoijk, vctoijk, vsize);\n    program.setUniform3f('vVCToIJK', vctoijk[0], vctoijk[1], vctoijk[2]);\n    program.setUniform3i('volumeDimensions', dims[0], dims[1], dims[2]);\n\n    if (!model.openGLRenderWindow.getWebgl2()) {\n      const volInfo = model.scalarTexture.getVolumeInfo();\n      program.setUniformf('texWidth', model.scalarTexture.getWidth());\n      program.setUniformf('texHeight', model.scalarTexture.getHeight());\n      program.setUniformi('xreps', volInfo.xreps);\n      program.setUniformf('xstride', volInfo.xstride);\n      program.setUniformf('ystride', volInfo.ystride);\n    }\n\n    // map normals through normal matrix\n    // then use a point on the plane to compute the distance\n    const normal = vec3.create();\n    const pos2 = vec3.create();\n    for (let i = 0; i < 6; ++i) {\n      switch (i) {\n        default:\n        case 0:\n          vec3.set(normal, 1.0, 0.0, 0.0);\n          vec3.set(pos2, ext[1], ext[3], ext[5]);\n          break;\n        case 1:\n          vec3.set(normal, -1.0, 0.0, 0.0);\n          vec3.set(pos2, ext[0], ext[2], ext[4]);\n          break;\n        case 2:\n          vec3.set(normal, 0.0, 1.0, 0.0);\n          vec3.set(pos2, ext[1], ext[3], ext[5]);\n          break;\n        case 3:\n          vec3.set(normal, 0.0, -1.0, 0.0);\n          vec3.set(pos2, ext[0], ext[2], ext[4]);\n          break;\n        case 4:\n          vec3.set(normal, 0.0, 0.0, 1.0);\n          vec3.set(pos2, ext[1], ext[3], ext[5]);\n          break;\n        case 5:\n          vec3.set(normal, 0.0, 0.0, -1.0);\n          vec3.set(pos2, ext[0], ext[2], ext[4]);\n          break;\n      }\n      vec3.transformMat3(normal, normal, model.idxNormalMatrix);\n      vec3.transformMat4(pos2, pos2, model.idxToView);\n      const dist = -1.0 * vec3.dot(pos2, normal);\n\n      // we have the plane in view coordinates\n      // specify the planes in view coordinates\n      program.setUniform3f(`vPlaneNormal${i}`, normal[0], normal[1], normal[2]);\n      program.setUniformf(`vPlaneDistance${i}`, dist);\n\n      if (actor.getProperty().getUseLabelOutline()) {\n        const image = model.currentInput;\n        const worldToIndex = image.getWorldToIndex();\n\n        program.setUniformMatrix('vWCtoIDX', worldToIndex);\n\n        // Get the display coordinate to world coordinate transformation matrix.\n        mat4.invert(model.displayToWorld, keyMats.wcdc);\n        program.setUniformMatrix('DCWCMatrix', model.displayToWorld);\n\n        const size = publicAPI.getRenderTargetSize();\n\n        program.setUniformf('vpWidth', size[0]);\n        program.setUniformf('vpHeight', size[1]);\n      }\n    }\n\n    mat4.invert(model.displayToView, keyMats.vcdc);\n    program.setUniformMatrix('DCVCMatrix', model.displayToView);\n\n    // handle lighting values\n    switch (model.lastLightComplexity) {\n      default:\n      case 0: // no lighting, tcolor is fine as is\n        break;\n\n      case 1: // headlight\n      case 2: // light kit\n      case 3: {\n        // positional not implemented fallback to directional\n        // mat3.transpose(keyMats.normalMatrix, keyMats.normalMatrix);\n        let lightNum = 0;\n        const lightColor = [];\n        ren.getLights().forEach((light) => {\n          const status = light.getSwitch();\n          if (status > 0) {\n            const dColor = light.getColor();\n            const intensity = light.getIntensity();\n            lightColor[0] = dColor[0] * intensity;\n            lightColor[1] = dColor[1] * intensity;\n            lightColor[2] = dColor[2] * intensity;\n            program.setUniform3fArray(`lightColor${lightNum}`, lightColor);\n            const ldir = light.getDirection();\n            vec3.set(normal, ldir[0], ldir[1], ldir[2]);\n            vec3.transformMat3(normal, normal, keyMats.normalMatrix);\n            program.setUniform3f(\n              `lightDirectionVC${lightNum}`,\n              normal[0],\n              normal[1],\n              normal[2]\n            );\n            // camera DOP is 0,0,-1.0 in VC\n            const halfAngle = [\n              -0.5 * normal[0],\n              -0.5 * normal[1],\n              -0.5 * (normal[2] - 1.0),\n            ];\n            program.setUniform3fArray(`lightHalfAngleVC${lightNum}`, halfAngle);\n            lightNum++;\n          }\n        });\n        // mat3.transpose(keyMats.normalMatrix, keyMats.normalMatrix);\n      }\n    }\n  };\n\n  publicAPI.setPropertyShaderParameters = (cellBO, ren, actor) => {\n    const program = cellBO.getProgram();\n\n    program.setUniformi('ctexture', model.colorTexture.getTextureUnit());\n    program.setUniformi('otexture', model.opacityTexture.getTextureUnit());\n    program.setUniformi('jtexture', model.jitterTexture.getTextureUnit());\n\n    const volInfo = model.scalarTexture.getVolumeInfo();\n    const vprop = actor.getProperty();\n\n    // set the component mix when independent\n    const numComp = model.scalarTexture.getComponents();\n    const iComps = actor.getProperty().getIndependentComponents();\n    if (iComps && numComp >= 2) {\n      let totalComp = 0.0;\n      for (let i = 0; i < numComp; ++i) {\n        totalComp += actor.getProperty().getComponentWeight(i);\n      }\n      for (let i = 0; i < numComp; ++i) {\n        program.setUniformf(\n          `mix${i}`,\n          actor.getProperty().getComponentWeight(i) / totalComp\n        );\n      }\n    }\n\n    // three levels of shift scale combined into one\n    // for performance in the fragment shader\n    for (let i = 0; i < numComp; ++i) {\n      const target = iComps ? i : 0;\n      const sscale = volInfo.scale[i];\n      const ofun = vprop.getScalarOpacity(target);\n      const oRange = ofun.getRange();\n      const oscale = sscale / (oRange[1] - oRange[0]);\n      const oshift = (volInfo.offset[i] - oRange[0]) / (oRange[1] - oRange[0]);\n      program.setUniformf(`oshift${i}`, oshift);\n      program.setUniformf(`oscale${i}`, oscale);\n\n      const cfun = vprop.getRGBTransferFunction(target);\n      const cRange = cfun.getRange();\n      program.setUniformf(\n        `cshift${i}`,\n        (volInfo.offset[i] - cRange[0]) / (cRange[1] - cRange[0])\n      );\n      program.setUniformf(`cscale${i}`, sscale / (cRange[1] - cRange[0]));\n    }\n\n    if (model.gopacity) {\n      if (iComps) {\n        for (let nc = 0; nc < numComp; ++nc) {\n          const sscale = volInfo.scale[nc];\n          const useGO = vprop.getUseGradientOpacity(nc);\n          if (useGO) {\n            const gomin = vprop.getGradientOpacityMinimumOpacity(nc);\n            const gomax = vprop.getGradientOpacityMaximumOpacity(nc);\n            program.setUniformf(`gomin${nc}`, gomin);\n            program.setUniformf(`gomax${nc}`, gomax);\n            const goRange = [\n              vprop.getGradientOpacityMinimumValue(nc),\n              vprop.getGradientOpacityMaximumValue(nc),\n            ];\n            program.setUniformf(\n              `goscale${nc}`,\n              (sscale * (gomax - gomin)) / (goRange[1] - goRange[0])\n            );\n            program.setUniformf(\n              `goshift${nc}`,\n              (-goRange[0] * (gomax - gomin)) / (goRange[1] - goRange[0]) +\n                gomin\n            );\n          } else {\n            program.setUniformf(`gomin${nc}`, 1.0);\n            program.setUniformf(`gomax${nc}`, 1.0);\n            program.setUniformf(`goscale${nc}`, 0.0);\n            program.setUniformf(`goshift${nc}`, 1.0);\n          }\n        }\n      } else {\n        const sscale = volInfo.scale[numComp - 1];\n        const gomin = vprop.getGradientOpacityMinimumOpacity(0);\n        const gomax = vprop.getGradientOpacityMaximumOpacity(0);\n        program.setUniformf('gomin0', gomin);\n        program.setUniformf('gomax0', gomax);\n        const goRange = [\n          vprop.getGradientOpacityMinimumValue(0),\n          vprop.getGradientOpacityMaximumValue(0),\n        ];\n        program.setUniformf(\n          'goscale0',\n          (sscale * (gomax - gomin)) / (goRange[1] - goRange[0])\n        );\n        program.setUniformf(\n          'goshift0',\n          (-goRange[0] * (gomax - gomin)) / (goRange[1] - goRange[0]) + gomin\n        );\n      }\n    }\n\n    const vtkImageLabelOutline = actor.getProperty().getUseLabelOutline();\n    if (vtkImageLabelOutline === true) {\n      const labelOutlineThickness = actor\n        .getProperty()\n        .getLabelOutlineThickness();\n\n      program.setUniformi('outlineThickness', labelOutlineThickness);\n    }\n\n    if (model.lastLightComplexity > 0) {\n      program.setUniformf('vAmbient', vprop.getAmbient());\n      program.setUniformf('vDiffuse', vprop.getDiffuse());\n      program.setUniformf('vSpecular', vprop.getSpecular());\n      program.setUniformf('vSpecularPower', vprop.getSpecularPower());\n    }\n  };\n\n  publicAPI.getRenderTargetSize = () => {\n    if (model.lastXYF > 1.43) {\n      const sz = model.framebuffer.getSize();\n      return [model.fvp[0] * sz[0], model.fvp[1] * sz[1]];\n    }\n    return model.openGLRenderWindow.getFramebufferSize();\n  };\n\n  publicAPI.renderPieceStart = (ren, actor) => {\n    if (model.renderable.getAutoAdjustSampleDistances()) {\n      const rwi = ren.getVTKWindow().getInteractor();\n      const rft = rwi.getLastFrameTime();\n      // console.log(`last frame time ${Math.floor(1.0 / rft)}`);\n\n      // frame time is typically for a couple frames prior\n      // which makes it messy, so keep long running averages\n      // of frame times and pixels rendered\n      model.avgFrameTime = 0.97 * model.avgFrameTime + 0.03 * rft;\n      model.avgWindowArea =\n        0.97 * model.avgWindowArea + 0.03 / (model.lastXYF * model.lastXYF);\n\n      if (\n        ren\n          .getVTKWindow()\n          .getInteractor()\n          .isAnimating()\n      ) {\n        // compute target xy factor\n        let txyf = Math.sqrt(\n          (model.avgFrameTime * rwi.getDesiredUpdateRate()) /\n            model.avgWindowArea\n        );\n\n        // limit subsampling to a factor of 10\n        if (txyf > 10.0) {\n          txyf = 10.0;\n        }\n\n        model.targetXYF = txyf;\n      } else {\n        model.targetXYF = Math.sqrt(\n          (model.avgFrameTime * rwi.getStillUpdateRate()) / model.avgWindowArea\n        );\n      }\n\n      // have some inertia to change states around 1.43\n      if (model.targetXYF < 1.53 && model.targetXYF > 1.33) {\n        model.targetXYF = model.lastXYF;\n      }\n\n      // and add some inertia to change at all\n      if (Math.abs(1.0 - model.targetXYF / model.lastXYF) < 0.1) {\n        model.targetXYF = model.lastXYF;\n      }\n      model.lastXYF = model.targetXYF;\n    } else {\n      model.lastXYF = model.renderable.getImageSampleDistance();\n    }\n\n    // only use FBO beyond this value\n    if (model.lastXYF <= 1.43) {\n      model.lastXYF = 1.0;\n    }\n\n    // console.log(`last target  ${model.lastXYF} ${model.targetXYF}`);\n    // console.log(`awin aft  ${model.avgWindowArea} ${model.avgFrameTime}`);\n    const xyf = model.lastXYF;\n\n    const size = model.openGLRenderWindow.getFramebufferSize();\n    // const newSize = [\n    //   Math.floor((size[0] / xyf) + 0.5),\n    //   Math.floor((size[1] / xyf) + 0.5)];\n\n    // const diag = vtkBoundingBox.getDiagonalLength(model.currentInput.getBounds());\n\n    // // so what is the resulting sample size roughly\n    // console.log(`sam size ${diag / newSize[0]} ${diag / newSize[1]} ${model.renderable.getImageSampleDistance()}`);\n\n    // // if the sample distance is getting far from the image sample dist\n    // if (2.0 * diag / (newSize[0] + newSize[1]) > 4 * model.renderable.getSampleDistance()) {\n    //   model.renderable.setSampleDistance(4.0 * model.renderable.getSampleDistance());\n    // }\n    // if (2.0 * diag / (newSize[0] + newSize[1]) < 0.25 * model.renderable.getSampleDistance()) {\n    //   model.renderable.setSampleDistance(0.25 * model.renderable.getSampleDistance());\n    // }\n\n    // create/resize framebuffer if needed\n    if (xyf > 1.43) {\n      model.framebuffer.saveCurrentBindingsAndBuffers();\n\n      if (model.framebuffer.getGLFramebuffer() === null) {\n        model.framebuffer.create(\n          Math.floor(size[0] * 0.7),\n          Math.floor(size[1] * 0.7)\n        );\n        model.framebuffer.populateFramebuffer();\n      } else {\n        const fbSize = model.framebuffer.getSize();\n        if (\n          fbSize[0] !== Math.floor(size[0] * 0.7) ||\n          fbSize[1] !== Math.floor(size[1] * 0.7)\n        ) {\n          model.framebuffer.create(\n            Math.floor(size[0] * 0.7),\n            Math.floor(size[1] * 0.7)\n          );\n          model.framebuffer.populateFramebuffer();\n        }\n      }\n      model.framebuffer.bind();\n      const gl = model.context;\n      gl.clearColor(0.0, 0.0, 0.0, 0.0);\n      gl.colorMask(true, true, true, true);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n      gl.viewport(0, 0, size[0] / xyf, size[1] / xyf);\n      model.fvp = [\n        Math.floor(size[0] / xyf) / Math.floor(size[0] * 0.7),\n        Math.floor(size[1] / xyf) / Math.floor(size[1] * 0.7),\n      ];\n    }\n    model.context.disable(model.context.DEPTH_TEST);\n\n    // make sure the BOs are up to date\n    publicAPI.updateBufferObjects(ren, actor);\n\n    // set interpolation on the texture based on property setting\n    const iType = actor.getProperty().getInterpolationType();\n    if (iType === InterpolationType.NEAREST) {\n      model.scalarTexture.setMinificationFilter(Filter.NEAREST);\n      model.scalarTexture.setMagnificationFilter(Filter.NEAREST);\n    } else {\n      model.scalarTexture.setMinificationFilter(Filter.LINEAR);\n      model.scalarTexture.setMagnificationFilter(Filter.LINEAR);\n    }\n\n    // Bind the OpenGL, this is shared between the different primitive/cell types.\n    model.lastBoundBO = null;\n\n    // if we have a zbuffer texture then activate it\n    if (model.zBufferTexture !== null) {\n      model.zBufferTexture.activate();\n    }\n  };\n\n  publicAPI.renderPieceDraw = (ren, actor) => {\n    const gl = model.context;\n\n    // render the texture\n    model.scalarTexture.activate();\n    model.opacityTexture.activate();\n    model.colorTexture.activate();\n    model.jitterTexture.activate();\n\n    publicAPI.updateShaders(model.tris, ren, actor);\n\n    // First we do the triangles, update the shader, set uniforms, etc.\n    // for (let i = 0; i < 11; ++i) {\n    //   gl.drawArrays(gl.TRIANGLES, 66 * i, 66);\n    // }\n    gl.drawArrays(gl.TRIANGLES, 0, model.tris.getCABO().getElementCount());\n    model.tris.getVAO().release();\n\n    model.scalarTexture.deactivate();\n    model.colorTexture.deactivate();\n    model.opacityTexture.deactivate();\n    model.jitterTexture.deactivate();\n  };\n\n  publicAPI.renderPieceFinish = (ren, actor) => {\n    // if we have a zbuffer texture then deactivate it\n    if (model.zBufferTexture !== null) {\n      model.zBufferTexture.deactivate();\n    }\n\n    if (model.lastXYF > 1.43) {\n      // now copy the frambuffer with the volume into the\n      // regular buffer\n      model.framebuffer.restorePreviousBindingsAndBuffers();\n\n      if (model.copyShader === null) {\n        model.copyShader = model.openGLRenderWindow\n          .getShaderCache()\n          .readyShaderProgramArray(\n            [\n              '//VTK::System::Dec',\n              'attribute vec4 vertexDC;',\n              'uniform vec2 tfactor;',\n              'varying vec2 tcoord;',\n              'void main() { tcoord = vec2(vertexDC.x*0.5 + 0.5, vertexDC.y*0.5 + 0.5) * tfactor; gl_Position = vertexDC; }',\n            ].join('\\n'),\n            [\n              '//VTK::System::Dec',\n              '//VTK::Output::Dec',\n              'uniform sampler2D texture1;',\n              'varying vec2 tcoord;',\n              'void main() { gl_FragData[0] = texture2D(texture1,tcoord); }',\n            ].join('\\n'),\n            ''\n          );\n        const program = model.copyShader;\n\n        model.copyVAO = vtkVertexArrayObject.newInstance();\n        model.copyVAO.setOpenGLRenderWindow(model.openGLRenderWindow);\n\n        model.tris.getCABO().bind();\n        if (\n          !model.copyVAO.addAttributeArray(\n            program,\n            model.tris.getCABO(),\n            'vertexDC',\n            model.tris.getCABO().getVertexOffset(),\n            model.tris.getCABO().getStride(),\n            model.context.FLOAT,\n            3,\n            model.context.FALSE\n          )\n        ) {\n          vtkErrorMacro('Error setting vertexDC in copy shader VAO.');\n        }\n      } else {\n        model.openGLRenderWindow\n          .getShaderCache()\n          .readyShaderProgram(model.copyShader);\n      }\n\n      const size = model.openGLRenderWindow.getFramebufferSize();\n      model.context.viewport(0, 0, size[0], size[1]);\n\n      // activate texture\n      const tex = model.framebuffer.getColorTexture();\n      tex.activate();\n      model.copyShader.setUniformi('texture', tex.getTextureUnit());\n\n      model.copyShader.setUniform2f('tfactor', model.fvp[0], model.fvp[1]);\n\n      const gl = model.context;\n      gl.blendFuncSeparate(\n        gl.ONE,\n        gl.ONE_MINUS_SRC_ALPHA,\n        gl.ONE,\n        gl.ONE_MINUS_SRC_ALPHA\n      );\n\n      // render quad\n      model.context.drawArrays(\n        model.context.TRIANGLES,\n        0,\n        model.tris.getCABO().getElementCount()\n      );\n      tex.deactivate();\n\n      gl.blendFuncSeparate(\n        gl.SRC_ALPHA,\n        gl.ONE_MINUS_SRC_ALPHA,\n        gl.ONE,\n        gl.ONE_MINUS_SRC_ALPHA\n      );\n    }\n  };\n\n  publicAPI.renderPiece = (ren, actor) => {\n    publicAPI.invokeEvent({ type: 'StartEvent' });\n    model.renderable.update();\n    model.currentInput = model.renderable.getInputData();\n    publicAPI.invokeEvent({ type: 'EndEvent' });\n\n    if (!model.currentInput) {\n      vtkErrorMacro('No input!');\n      return;\n    }\n\n    publicAPI.renderPieceStart(ren, actor);\n    publicAPI.renderPieceDraw(ren, actor);\n    publicAPI.renderPieceFinish(ren, actor);\n  };\n\n  publicAPI.computeBounds = (ren, actor) => {\n    if (!publicAPI.getInput()) {\n      vtkMath.uninitializeBounds(model.Bounds);\n      return;\n    }\n    model.bounds = publicAPI.getInput().getBounds();\n  };\n\n  publicAPI.updateBufferObjects = (ren, actor) => {\n    // Rebuild buffers if needed\n    if (publicAPI.getNeedToRebuildBufferObjects(ren, actor)) {\n      publicAPI.buildBufferObjects(ren, actor);\n    }\n  };\n\n  publicAPI.getNeedToRebuildBufferObjects = (ren, actor) => {\n    // first do a coarse check\n    if (\n      model.VBOBuildTime.getMTime() < publicAPI.getMTime() ||\n      model.VBOBuildTime.getMTime() < actor.getMTime() ||\n      model.VBOBuildTime.getMTime() < model.renderable.getMTime() ||\n      model.VBOBuildTime.getMTime() < actor.getProperty().getMTime() ||\n      model.VBOBuildTime.getMTime() < model.currentInput.getMTime()\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  publicAPI.buildBufferObjects = (ren, actor) => {\n    const image = model.currentInput;\n\n    if (image === null) {\n      return;\n    }\n\n    const vprop = actor.getProperty();\n\n    if (!model.jitterTexture.getHandle()) {\n      const oTable = new Uint8Array(32 * 32);\n      for (let i = 0; i < 32 * 32; ++i) {\n        oTable[i] = 255.0 * Math.random();\n      }\n      model.jitterTexture.setMinificationFilter(Filter.LINEAR);\n      model.jitterTexture.setMagnificationFilter(Filter.LINEAR);\n      model.jitterTexture.create2DFromRaw(\n        32,\n        32,\n        1,\n        VtkDataTypes.UNSIGNED_CHAR,\n        oTable\n      );\n    }\n\n    const numComp = image\n      .getPointData()\n      .getScalars()\n      .getNumberOfComponents();\n    const iComps = vprop.getIndependentComponents();\n    const numIComps = iComps ? numComp : 1;\n\n    // rebuild opacity tfun?\n    let toString = `${vprop.getMTime()}`;\n    if (model.opacityTextureString !== toString) {\n      const oWidth = 1024;\n      const oSize = oWidth * 2 * numIComps;\n      const ofTable = new Float32Array(oSize);\n      const tmpTable = new Float32Array(oWidth);\n\n      for (let c = 0; c < numIComps; ++c) {\n        const ofun = vprop.getScalarOpacity(c);\n        const opacityFactor =\n          model.renderable.getSampleDistance() /\n          vprop.getScalarOpacityUnitDistance(c);\n\n        const oRange = ofun.getRange();\n        ofun.getTable(oRange[0], oRange[1], oWidth, tmpTable, 1);\n        // adjust for sample distance etc\n        for (let i = 0; i < oWidth; ++i) {\n          ofTable[c * oWidth * 2 + i] =\n            1.0 - (1.0 - tmpTable[i]) ** opacityFactor;\n          ofTable[c * oWidth * 2 + i + oWidth] = ofTable[c * oWidth * 2 + i];\n        }\n      }\n\n      model.opacityTexture.releaseGraphicsResources(model.openGLRenderWindow);\n      model.opacityTexture.setMinificationFilter(Filter.LINEAR);\n      model.opacityTexture.setMagnificationFilter(Filter.LINEAR);\n\n      // use float texture where possible because we really need the resolution\n      // for this table. Errors in low values of opacity accumulate to\n      // visible artifacts. High values of opacity quickly terminate without\n      // artifacts.\n      if (\n        model.openGLRenderWindow.getWebgl2() ||\n        (model.context.getExtension('OES_texture_float') &&\n          model.context.getExtension('OES_texture_float_linear'))\n      ) {\n        model.opacityTexture.create2DFromRaw(\n          oWidth,\n          2 * numIComps,\n          1,\n          VtkDataTypes.FLOAT,\n          ofTable\n        );\n      } else {\n        const oTable = new Uint8Array(oSize);\n        for (let i = 0; i < oSize; ++i) {\n          oTable[i] = 255.0 * ofTable[i];\n        }\n        model.opacityTexture.create2DFromRaw(\n          oWidth,\n          2 * numIComps,\n          1,\n          VtkDataTypes.UNSIGNED_CHAR,\n          oTable\n        );\n      }\n      model.opacityTextureString = toString;\n    }\n\n    // rebuild color tfun?\n    toString = `${vprop.getMTime()}`;\n    if (model.colorTextureString !== toString) {\n      const cWidth = 1024;\n      const cSize = cWidth * 2 * numIComps * 3;\n      const cTable = new Uint8Array(cSize);\n      const tmpTable = new Float32Array(cWidth * 3);\n\n      for (let c = 0; c < numIComps; ++c) {\n        const cfun = vprop.getRGBTransferFunction(c);\n        const cRange = cfun.getRange();\n        cfun.getTable(cRange[0], cRange[1], cWidth, tmpTable, 1);\n        for (let i = 0; i < cWidth * 3; ++i) {\n          cTable[c * cWidth * 6 + i] = 255.0 * tmpTable[i];\n          cTable[c * cWidth * 6 + i + cWidth * 3] = 255.0 * tmpTable[i];\n        }\n      }\n\n      model.colorTexture.releaseGraphicsResources(model.openGLRenderWindow);\n      model.colorTexture.setMinificationFilter(Filter.LINEAR);\n      model.colorTexture.setMagnificationFilter(Filter.LINEAR);\n\n      model.colorTexture.create2DFromRaw(\n        cWidth,\n        2 * numIComps,\n        3,\n        VtkDataTypes.UNSIGNED_CHAR,\n        cTable\n      );\n      model.colorTextureString = toString;\n    }\n\n    // rebuild the scalarTexture if the data has changed\n    toString = `${image.getMTime()}`;\n    if (model.scalarTextureString !== toString) {\n      // Build the textures\n      const dims = image.getDimensions();\n      model.scalarTexture.releaseGraphicsResources(model.openGLRenderWindow);\n      model.scalarTexture.resetFormatAndType();\n      model.scalarTexture.create3DFilterableFromRaw(\n        dims[0],\n        dims[1],\n        dims[2],\n        numComp,\n        image\n          .getPointData()\n          .getScalars()\n          .getDataType(),\n        image\n          .getPointData()\n          .getScalars()\n          .getData()\n      );\n      // console.log(model.scalarTexture.get());\n      model.scalarTextureString = toString;\n    }\n\n    if (!model.tris.getCABO().getElementCount()) {\n      // build the CABO\n      const ptsArray = new Float32Array(12);\n      for (let i = 0; i < 4; i++) {\n        ptsArray[i * 3] = (i % 2) * 2 - 1.0;\n        ptsArray[i * 3 + 1] = i > 1 ? 1.0 : -1.0;\n        ptsArray[i * 3 + 2] = -1.0;\n      }\n\n      const cellArray = new Uint16Array(8);\n      cellArray[0] = 3;\n      cellArray[1] = 0;\n      cellArray[2] = 1;\n      cellArray[3] = 3;\n      cellArray[4] = 3;\n      cellArray[5] = 0;\n      cellArray[6] = 3;\n      cellArray[7] = 2;\n\n      // const dim = 12.0;\n      // const ptsArray = new Float32Array(3 * dim * dim);\n      // for (let i = 0; i < dim; i++) {\n      //   for (let j = 0; j < dim; j++) {\n      //     const offset = ((i * dim) + j) * 3;\n      //     ptsArray[offset] = (2.0 * (i / (dim - 1.0))) - 1.0;\n      //     ptsArray[offset + 1] = (2.0 * (j / (dim - 1.0))) - 1.0;\n      //     ptsArray[offset + 2] = -1.0;\n      //   }\n      // }\n\n      // const cellArray = new Uint16Array(8 * (dim - 1) * (dim - 1));\n      // for (let i = 0; i < dim - 1; i++) {\n      //   for (let j = 0; j < dim - 1; j++) {\n      //     const offset = 8 * ((i * (dim - 1)) + j);\n      //     cellArray[offset] = 3;\n      //     cellArray[offset + 1] = (i * dim) + j;\n      //     cellArray[offset + 2] = (i * dim) + 1 + j;\n      //     cellArray[offset + 3] = ((i + 1) * dim) + 1 + j;\n      //     cellArray[offset + 4] = 3;\n      //     cellArray[offset + 5] = (i * dim) + j;\n      //     cellArray[offset + 6] = ((i + 1) * dim) + 1 + j;\n      //     cellArray[offset + 7] = ((i + 1) * dim) + j;\n      //   }\n      // }\n\n      const points = vtkDataArray.newInstance({\n        numberOfComponents: 3,\n        values: ptsArray,\n      });\n      points.setName('points');\n      const cells = vtkDataArray.newInstance({\n        numberOfComponents: 1,\n        values: cellArray,\n      });\n      model.tris.getCABO().createVBO(cells, 'polys', Representation.SURFACE, {\n        points,\n        cellOffset: 0,\n      });\n    }\n\n    model.VBOBuildTime.modified();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n  VBOBuildTime: null,\n  scalarTexture: null,\n  scalarTextureString: null,\n  opacityTexture: null,\n  opacityTextureString: null,\n  colorTexture: null,\n  colorTextureString: null,\n  jitterTexture: null,\n  tris: null,\n  framebuffer: null,\n  copyShader: null,\n  copyVAO: null,\n  lastXYF: 1.0,\n  targetXYF: 1.0,\n  zBufferTexture: null,\n  lastZBufferTexture: null,\n  lastLightComplexity: 0,\n  fullViewportTime: 1.0,\n  idxToView: null,\n  idxNormalMatrix: null,\n  modelToView: null,\n  displayToView: null,\n  avgWindowArea: 0.0,\n  avgFrameTime: 0.0,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  model.VBOBuildTime = {};\n  macro.obj(model.VBOBuildTime, { mtime: 0 });\n\n  model.tris = vtkHelper.newInstance();\n  model.scalarTexture = vtkOpenGLTexture.newInstance();\n  model.opacityTexture = vtkOpenGLTexture.newInstance();\n  model.colorTexture = vtkOpenGLTexture.newInstance();\n  model.jitterTexture = vtkOpenGLTexture.newInstance();\n  model.jitterTexture.setWrapS(Wrap.REPEAT);\n  model.jitterTexture.setWrapT(Wrap.REPEAT);\n  model.framebuffer = vtkOpenGLFramebuffer.newInstance();\n\n  model.idxToView = mat4.create();\n  model.idxNormalMatrix = mat3.create();\n  model.modelToView = mat4.create();\n  model.displayToView = mat4.create();\n  model.displayToWorld = mat4.create();\n\n  // Build VTK API\n  macro.setGet(publicAPI, model, ['context']);\n\n  // Object methods\n  vtkOpenGLVolumeMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkOpenGLVolumeMapper');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import macro from 'vtk.js/Sources/macro';\n\n// ----------------------------------------------------------------------------\n// vtkViewNodeFactory methods\n// ----------------------------------------------------------------------------\n\nfunction vtkViewNodeFactory(publicAPI, model) {\n  // Make sure our overrides is just for our instance not shared with everyone...\n  model.overrides = {};\n\n  // Set our className\n  model.classHierarchy.push('vtkViewNodeFactory');\n\n  publicAPI.createNode = (dataObject) => {\n    if (dataObject.isDeleted()) {\n      return null;\n    }\n\n    let cpt = 0;\n    let className = dataObject.getClassName(cpt++);\n    let isObject = false;\n    const keys = Object.keys(model.overrides);\n    while (className && !isObject) {\n      if (keys.indexOf(className) !== -1) {\n        isObject = true;\n      } else {\n        className = dataObject.getClassName(cpt++);\n      }\n    }\n\n    if (!isObject) {\n      return null;\n    }\n    const vn = model.overrides[className]();\n    vn.setMyFactory(publicAPI);\n    return vn;\n  };\n\n  publicAPI.registerOverride = (className, func) => {\n    model.overrides[className] = func;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // overrides: {},\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n\n  // Object methods\n  vtkViewNodeFactory(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkViewNodeFactory');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import macro from 'vtk.js/Sources/macro';\nimport vtkGenericWidgetRepresentation from 'vtk.js/Sources/Rendering/SceneGraph/GenericWidgetRepresentation';\nimport vtkOpenGLActor from 'vtk.js/Sources/Rendering/OpenGL/Actor';\nimport vtkOpenGLActor2D from 'vtk.js/Sources/Rendering/OpenGL/Actor2D';\nimport vtkOpenGLCamera from 'vtk.js/Sources/Rendering/OpenGL/Camera';\nimport vtkOpenGLGlyph3DMapper from 'vtk.js/Sources/Rendering/OpenGL/Glyph3DMapper';\nimport vtkOpenGLImageMapper from 'vtk.js/Sources/Rendering/OpenGL/ImageMapper';\nimport vtkOpenGLImageSlice from 'vtk.js/Sources/Rendering/OpenGL/ImageSlice';\nimport vtkOpenGLPixelSpaceCallbackMapper from 'vtk.js/Sources/Rendering/OpenGL/PixelSpaceCallbackMapper';\nimport vtkOpenGLPolyDataMapper from 'vtk.js/Sources/Rendering/OpenGL/PolyDataMapper';\nimport vtkOpenGLRenderer from 'vtk.js/Sources/Rendering/OpenGL/Renderer';\nimport vtkOpenGLSkybox from 'vtk.js/Sources/Rendering/OpenGL/Skybox';\nimport vtkOpenGLSphereMapper from 'vtk.js/Sources/Rendering/OpenGL/SphereMapper';\nimport vtkOpenGLStickMapper from 'vtk.js/Sources/Rendering/OpenGL/StickMapper';\nimport vtkOpenGLTexture from 'vtk.js/Sources/Rendering/OpenGL/Texture';\nimport vtkOpenGLVolume from 'vtk.js/Sources/Rendering/OpenGL/Volume';\nimport vtkOpenGLVolumeMapper from 'vtk.js/Sources/Rendering/OpenGL/VolumeMapper';\nimport vtkViewNodeFactory from 'vtk.js/Sources/Rendering/SceneGraph/ViewNodeFactory';\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLViewNodeFactory methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLViewNodeFactory(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLViewNodeFactory');\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNodeFactory.extend(publicAPI, model, initialValues);\n\n  // Object methods\n  vtkOpenGLViewNodeFactory(publicAPI, model);\n\n  // Initialization\n  publicAPI.registerOverride('vtkActor', vtkOpenGLActor.newInstance);\n  publicAPI.registerOverride('vtkActor2D', vtkOpenGLActor2D.newInstance);\n  publicAPI.registerOverride('vtkCamera', vtkOpenGLCamera.newInstance);\n  publicAPI.registerOverride(\n    'vtkGlyph3DMapper',\n    vtkOpenGLGlyph3DMapper.newInstance\n  );\n  publicAPI.registerOverride(\n    'vtkImageMapper',\n    vtkOpenGLImageMapper.newInstance\n  );\n  publicAPI.registerOverride('vtkImageSlice', vtkOpenGLImageSlice.newInstance);\n  publicAPI.registerOverride('vtkMapper', vtkOpenGLPolyDataMapper.newInstance);\n  publicAPI.registerOverride(\n    'vtkPixelSpaceCallbackMapper',\n    vtkOpenGLPixelSpaceCallbackMapper.newInstance\n  );\n  publicAPI.registerOverride('vtkRenderer', vtkOpenGLRenderer.newInstance);\n  publicAPI.registerOverride('vtkSkybox', vtkOpenGLSkybox.newInstance);\n  publicAPI.registerOverride(\n    'vtkSphereMapper',\n    vtkOpenGLSphereMapper.newInstance\n  );\n  publicAPI.registerOverride(\n    'vtkStickMapper',\n    vtkOpenGLStickMapper.newInstance\n  );\n  publicAPI.registerOverride('vtkTexture', vtkOpenGLTexture.newInstance);\n  publicAPI.registerOverride('vtkVolume', vtkOpenGLVolume.newInstance);\n  publicAPI.registerOverride(\n    'vtkVolumeMapper',\n    vtkOpenGLVolumeMapper.newInstance\n  );\n  publicAPI.registerOverride(\n    'vtkWidgetRepresentation',\n    vtkGenericWidgetRepresentation.newInstance\n  );\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(\n  extend,\n  'vtkOpenGLViewNodeFactory'\n);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import md5 from 'blueimp-md5';\n\nimport macro from 'vtk.js/Sources/macro';\nimport vtkShaderProgram from 'vtk.js/Sources/Rendering/OpenGL/ShaderProgram';\n\n// ----------------------------------------------------------------------------\n\nconst SET_GET_FIELDS = ['lastShaderBound', 'context', 'openGLRenderWindow'];\n\n// ----------------------------------------------------------------------------\n// vtkShaderCache methods\n// ----------------------------------------------------------------------------\n\nfunction vtkShaderCache(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkShaderCache');\n\n  publicAPI.replaceShaderValues = (VSSource, FSSource, GSSource) => {\n    // first handle renaming any Fragment shader inputs\n    // if we have a geometry shader. By deafult fragment shaders\n    // assume their inputs come from a Vertex Shader. When we\n    // have a Geometry shader we rename the frament shader inputs\n    // to come from the geometry shader\n\n    let nFSSource = FSSource;\n    if (GSSource.length > 0) {\n      nFSSource = vtkShaderProgram.substitute(nFSSource, 'VSOut', 'GSOut')\n        .result;\n    }\n\n    const gl2 = model.openGLRenderWindow.getWebgl2();\n\n    let fragDepthString = '\\n';\n\n    let version = '#version 100\\n';\n    if (gl2) {\n      version =\n        '#version 300 es\\n' +\n        '#define attribute in\\n' +\n        '#define textureCube texture\\n' +\n        '#define texture2D texture\\n' +\n        '#define textureCubeLod textureLod\\n' +\n        '#define texture2DLod textureLod\\n';\n    } else {\n      model.context.getExtension('OES_standard_derivatives');\n      if (model.context.getExtension('EXT_frag_depth')) {\n        fragDepthString = '#extension GL_EXT_frag_depth : enable\\n';\n      }\n      if (model.context.getExtension('EXT_shader_texture_lod')) {\n        fragDepthString +=\n          '#extension GL_EXT_shader_texture_lod : enable\\n' +\n          '#define textureCubeLod textureCubeLodEXT\\n' +\n          '#define texture2DLod texture2DLodEXT';\n      }\n    }\n\n    nFSSource = vtkShaderProgram.substitute(nFSSource, '//VTK::System::Dec', [\n      `${version}\\n`,\n      gl2 ? '' : '#extension GL_OES_standard_derivatives : enable\\n',\n      fragDepthString,\n      '#ifdef GL_FRAGMENT_PRECISION_HIGH',\n      'precision highp float;',\n      'precision highp int;',\n      '#else',\n      'precision mediump float;',\n      'precision mediump int;',\n      '#endif',\n    ]).result;\n\n    let nVSSource = vtkShaderProgram.substitute(\n      VSSource,\n      '//VTK::System::Dec',\n      [\n        `${version}\\n`,\n        '#ifdef GL_FRAGMENT_PRECISION_HIGH',\n        'precision highp float;',\n        'precision highp int;',\n        '#else',\n        'precision mediump float;',\n        'precision mediump int;',\n        '#endif',\n      ]\n    ).result;\n\n    if (gl2) {\n      nVSSource = vtkShaderProgram.substitute(nVSSource, 'varying', 'out')\n        .result;\n      nFSSource = vtkShaderProgram.substitute(nFSSource, 'varying', 'in')\n        .result;\n      nFSSource = vtkShaderProgram.substitute(\n        nFSSource,\n        'gl_FragData\\\\[0\\\\]',\n        'fragOutput0'\n      ).result;\n      nFSSource = vtkShaderProgram.substitute(\n        nFSSource,\n        '//VTK::Output::Dec',\n        'layout(location = 0) out vec4 fragOutput0;'\n      ).result;\n    }\n\n    // nFSSource = ShaderProgram.substitute(nFSSource, 'gl_FragData\\\\[0\\\\]',\n    //   'gl_FragColor').result;\n\n    const nGSSource = vtkShaderProgram.substitute(\n      GSSource,\n      '//VTK::System::Dec',\n      version\n    ).result;\n\n    return { VSSource: nVSSource, FSSource: nFSSource, GSSource: nGSSource };\n  };\n\n  // return NULL if there is an issue\n  publicAPI.readyShaderProgramArray = (\n    vertexCode,\n    fragmentCode,\n    geometryCode\n  ) => {\n    const data = publicAPI.replaceShaderValues(\n      vertexCode,\n      fragmentCode,\n      geometryCode\n    );\n\n    const shader = publicAPI.getShaderProgram(\n      data.VSSource,\n      data.FSSource,\n      data.GSSource\n    );\n\n    return publicAPI.readyShaderProgram(shader);\n  };\n\n  publicAPI.readyShaderProgram = (shader) => {\n    if (!shader) {\n      return null;\n    }\n\n    // compile if needed\n    if (!shader.getCompiled() && !shader.compileShader()) {\n      return null;\n    }\n\n    // bind if needed\n    if (!publicAPI.bindShader(shader)) {\n      return null;\n    }\n\n    return shader;\n  };\n\n  publicAPI.getShaderProgram = (vertexCode, fragmentCode, geometryCode) => {\n    // compute the MD5 and the check the map\n    const hashInput = `${vertexCode}${fragmentCode}${geometryCode}`;\n    const result = md5(hashInput);\n\n    // does it already exist?\n    const loc = Object.keys(model.shaderPrograms).indexOf(result);\n\n    if (loc === -1) {\n      // create one\n      const sps = vtkShaderProgram.newInstance();\n      sps.setContext(model.context);\n      sps.getVertexShader().setSource(vertexCode);\n      sps.getFragmentShader().setSource(fragmentCode);\n      if (geometryCode) {\n        sps.getGeometryShader().setSource(geometryCode);\n      }\n      sps.setMd5Hash(result);\n      model.shaderPrograms[result] = sps;\n      return sps;\n    }\n\n    return model.shaderPrograms[result];\n  };\n\n  publicAPI.releaseGraphicsResources = (win) => {\n    // NOTE:\n    // In the current implementation as of October 26th, if a shader\n    // program is created by ShaderCache then it should make sure\n    // that it releases the graphics resouces used by these programs.\n    // It is not wisely for callers to do that since then they would\n    // have to loop over all the programs were in use and invoke\n    // release graphics resources individually.\n\n    publicAPI.releaseCurrentShader();\n\n    Object.keys(model.shaderPrograms)\n      .map((key) => model.shaderPrograms[key])\n      .forEach((sp) => sp.releaseGraphicsResources(win));\n  };\n\n  publicAPI.releaseGraphicsResources = () => {\n    // release prior shader\n    if (model.astShaderBound) {\n      model.lastShaderBound.release();\n      model.lastShaderBound = null;\n    }\n  };\n\n  publicAPI.bindShader = (shader) => {\n    if (model.lastShaderBound === shader) {\n      return 1;\n    }\n\n    // release prior shader\n    if (model.lastShaderBound) {\n      model.lastShaderBound.release();\n    }\n    shader.bind();\n    model.lastShaderBound = shader;\n    return 1;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  lastShaderBound: null,\n  shaderPrograms: null,\n  context: null,\n  openGLRenderWindow: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Internal objects\n  model.shaderPrograms = {};\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, SET_GET_FIELDS);\n\n  // Object methods\n  vtkShaderCache(publicAPI, model);\n\n  return Object.freeze(publicAPI);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkShaderCache');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import macro from 'vtk.js/Sources/macro';\n\nconst { vtkErrorMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLTextureUnitManager methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLTextureUnitManager(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLTextureUnitManager');\n\n  // ----------------------------------------------------------------------------\n  // Description:\n  // Delete the allocation table and check if it is not called before\n  // all the texture units have been released.\n  publicAPI.deleteTable = () => {\n    for (let i = 0; i < model.numberOfTextureUnits; ++i) {\n      if (model.textureUnits[i] === true) {\n        vtkErrorMacro('some texture units  were not properly released');\n      }\n    }\n    model.textureUnits = [];\n    model.numberOfTextureUnits = 0;\n  };\n\n  // ----------------------------------------------------------------------------\n  publicAPI.setContext = (ctx) => {\n    if (model.context !== ctx) {\n      if (model.context !== 0) {\n        publicAPI.deleteTable();\n      }\n      model.context = ctx;\n      if (model.context) {\n        model.numberOfTextureUnits = ctx.getParameter(\n          ctx.MAX_TEXTURE_IMAGE_UNITS\n        );\n        for (let i = 0; i < model.numberOfTextureUnits; ++i) {\n          model.textureUnits[i] = false;\n        }\n      }\n      publicAPI.modified();\n    }\n  };\n\n  // ----------------------------------------------------------------------------\n  // Description:\n  // Reserve a texture unit. It returns its number.\n  // It returns -1 if the allocation failed (because there are no more\n  // texture units left).\n  // \\post valid_result: result==-1 || result>=0 && result<this->GetNumberOfTextureUnits())\n  // \\post allocated: result==-1 || this->IsAllocated(result)\n  publicAPI.allocate = () => {\n    for (let i = 0; i < model.numberOfTextureUnits; i++) {\n      if (!publicAPI.isAllocated(i)) {\n        model.textureUnits[i] = true;\n        return i;\n      }\n    }\n    return -1;\n  };\n\n  publicAPI.allocateUnit = (unit) => {\n    if (publicAPI.isAllocated(unit)) {\n      return -1;\n    }\n\n    model.textureUnits[unit] = true;\n    return unit;\n  };\n\n  // ----------------------------------------------------------------------------\n  // Description:\n  // Tell if texture unit `textureUnitId' is already allocated.\n  // \\pre valid_id_range : textureUnitId>=0 && textureUnitId<this->GetNumberOfTextureUnits()\n  publicAPI.isAllocated = (textureUnitId) => model.textureUnits[textureUnitId];\n\n  // ----------------------------------------------------------------------------\n  // Description:\n  // Release a texture unit.\n  // \\pre valid_id: textureUnitId>=0 && textureUnitId<this->GetNumberOfTextureUnits()\n  // \\pre allocated_id: this->IsAllocated(textureUnitId)\n  publicAPI.free = (val) => {\n    model.textureUnits[val] = false;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n  numberOfTextureUnits: 0,\n  textureUnits: 0,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  macro.obj(publicAPI, model);\n\n  model.textureUnits = [];\n\n  // Build VTK API\n  macro.get(publicAPI, model, ['numberOfTextureUnits']);\n\n  macro.setGet(publicAPI, model, ['context']);\n\n  // Object methods\n  vtkOpenGLTextureUnitManager(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(\n  extend,\n  'vtkOpenGLTextureUnitManager'\n);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import macro from 'vtk.js/Sources/macro';\nimport vtkForwardPass from 'vtk.js/Sources/Rendering/OpenGL/ForwardPass';\nimport vtkOpenGLViewNodeFactory from 'vtk.js/Sources/Rendering/OpenGL/ViewNodeFactory';\nimport vtkRenderPass from 'vtk.js/Sources/Rendering/SceneGraph/RenderPass';\nimport vtkShaderCache from 'vtk.js/Sources/Rendering/OpenGL/ShaderCache';\nimport vtkViewNode from 'vtk.js/Sources/Rendering/SceneGraph/ViewNode';\nimport vtkOpenGLTextureUnitManager from 'vtk.js/Sources/Rendering/OpenGL/TextureUnitManager';\nimport { VtkDataTypes } from 'vtk.js/Sources/Common/Core/DataArray/Constants';\nimport WebVRPolyfill from 'webvr-polyfill';\n\nconst { vtkDebugMacro, vtkErrorMacro } = macro;\nconst IS_CHROME = navigator.userAgent.indexOf('Chrome') !== -1;\n\nfunction checkRenderTargetSupport(gl, format, type) {\n  // create temporary frame buffer and texture\n  const framebuffer = gl.createFramebuffer();\n  const texture = gl.createTexture();\n\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texImage2D(gl.TEXTURE_2D, 0, format, 2, 2, 0, format, type, null);\n\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  gl.framebufferTexture2D(\n    gl.FRAMEBUFFER,\n    gl.COLOR_ATTACHMENT0,\n    gl.TEXTURE_2D,\n    texture,\n    0\n  );\n\n  // check frame buffer status\n  const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\n  // clean up\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  gl.bindTexture(gl.TEXTURE_2D, null);\n\n  return status === gl.FRAMEBUFFER_COMPLETE;\n}\n\n// ----------------------------------------------------------------------------\n// Monitor the usage of GL context across vtkOpenGLRenderWindow instances\n// ----------------------------------------------------------------------------\n\nlet GL_CONTEXT_COUNT = 0;\nconst GL_CONTEXT_LISTENERS = [];\n\nfunction createGLContext() {\n  GL_CONTEXT_COUNT++;\n  GL_CONTEXT_LISTENERS.forEach((cb) => cb(GL_CONTEXT_COUNT));\n}\n\nfunction deleteGLContext() {\n  GL_CONTEXT_COUNT--;\n  GL_CONTEXT_LISTENERS.forEach((cb) => cb(GL_CONTEXT_COUNT));\n}\n\nexport function pushMonitorGLContextCount(cb) {\n  GL_CONTEXT_LISTENERS.push(cb);\n}\n\nexport function popMonitorGLContextCount(cb) {\n  return GL_CONTEXT_LISTENERS.pop();\n}\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLRenderWindow methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLRenderWindow(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLRenderWindow');\n\n  // Auto update style\n  function updateWindow() {\n    // Canvas size\n    if (model.renderable) {\n      model.canvas.setAttribute('width', model.size[0]);\n      model.canvas.setAttribute('height', model.size[1]);\n    }\n\n    // ImageStream size\n    if (model.viewStream) {\n      // If same size that's a NoOp\n      model.viewStream.setSize(model.size[0], model.size[1]);\n    }\n\n    // Offscreen ?\n    model.canvas.style.display = model.useOffScreen ? 'none' : 'block';\n\n    // Cursor type\n    if (model.el) {\n      model.el.style.cursor = model.cursorVisibility ? model.cursor : 'none';\n    }\n\n    // Invalidate cached DOM container size\n    model.containerSize = null;\n  }\n  publicAPI.onModified(updateWindow);\n\n  // Builds myself.\n  publicAPI.buildPass = (prepass) => {\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNodes(model.renderable.getRenderersByReference());\n      publicAPI.removeUnusedNodes();\n\n      publicAPI.initialize();\n      model.children.forEach((child) => {\n        child.setOpenGLRenderWindow(publicAPI);\n      });\n    }\n  };\n\n  publicAPI.initialize = () => {\n    if (!model.initialized) {\n      model.context = publicAPI.get3DContext();\n      model.textureUnitManager = vtkOpenGLTextureUnitManager.newInstance();\n      model.textureUnitManager.setContext(model.context);\n      model.shaderCache.setContext(model.context);\n      // initialize blending for transparency\n      const gl = model.context;\n      gl.blendFuncSeparate(\n        gl.SRC_ALPHA,\n        gl.ONE_MINUS_SRC_ALPHA,\n        gl.ONE,\n        gl.ONE_MINUS_SRC_ALPHA\n      );\n      gl.depthFunc(gl.LEQUAL);\n      gl.enable(gl.BLEND);\n      model.initialized = true;\n    }\n  };\n\n  publicAPI.makeCurrent = () => {\n    model.context.makeCurrent();\n  };\n\n  publicAPI.setContainer = (el) => {\n    if (model.el && model.el !== el) {\n      if (model.canvas.parentNode !== model.el) {\n        vtkErrorMacro('Error: canvas parent node does not match container');\n      }\n\n      // Remove canvas from previous container\n      model.el.removeChild(model.canvas);\n\n      // If the renderer has previously added\n      // a background image, remove it from the DOM.\n      if (model.el.contains(model.bgImage)) {\n        model.el.removeChild(model.bgImage);\n      }\n    }\n\n    if (model.el !== el) {\n      model.el = el;\n      if (model.el) {\n        model.el.appendChild(model.canvas);\n      }\n\n      // If the renderer is set to use a background\n      // image, attach it to the DOM.\n      if (model.useBackgroundImage) {\n        model.el.appendChild(model.bgImage);\n      }\n\n      // Trigger modified()\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.getContainer = () => model.el;\n\n  publicAPI.getContainerSize = () => {\n    if (!model.containerSize && model.el) {\n      const { width, height } = model.el.getBoundingClientRect();\n      model.containerSize = [width, height];\n    }\n    return model.containerSize || model.size;\n  };\n\n  publicAPI.getFramebufferSize = () => {\n    if (model.activeFramebuffer) {\n      return model.activeFramebuffer.getSize();\n    }\n    return model.size;\n  };\n\n  publicAPI.isInViewport = (x, y, viewport) => {\n    const vCoords = viewport.getViewportByReference();\n    const size = publicAPI.getFramebufferSize();\n    if (\n      vCoords[0] * size[0] <= x &&\n      vCoords[2] * size[0] >= x &&\n      vCoords[1] * size[1] <= y &&\n      vCoords[3] * size[1] >= y\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  publicAPI.getViewportSize = (viewport) => {\n    const vCoords = viewport.getViewportByReference();\n    const size = publicAPI.getFramebufferSize();\n\n    return [\n      (vCoords[2] - vCoords[0]) * size[0],\n      (vCoords[3] - vCoords[1]) * size[1],\n    ];\n  };\n\n  publicAPI.getViewportCenter = (viewport) => {\n    const size = publicAPI.getViewportSize(viewport);\n    return [size[0] * 0.5, size[1] * 0.5];\n  };\n\n  publicAPI.displayToNormalizedDisplay = (x, y, z) => {\n    const size = publicAPI.getFramebufferSize();\n    return [x / size[0], y / size[1], z];\n  };\n\n  publicAPI.normalizedDisplayToDisplay = (x, y, z) => {\n    const size = publicAPI.getFramebufferSize();\n    return [x * size[0], y * size[1], z];\n  };\n\n  publicAPI.worldToView = (x, y, z, renderer) => {\n    const dims = publicAPI.getViewportSize(renderer);\n    return renderer.worldToView(x, y, z, dims[0] / dims[1]);\n  };\n\n  publicAPI.viewToWorld = (x, y, z, renderer) => {\n    const dims = publicAPI.getViewportSize(renderer);\n    return renderer.viewToWorld(x, y, z, dims[0] / dims[1]);\n  };\n\n  publicAPI.worldToDisplay = (x, y, z, renderer) => {\n    const val = publicAPI.worldToView(x, y, z, renderer);\n    const val2 = renderer.viewToNormalizedDisplay(val[0], val[1], val[2]);\n    return publicAPI.normalizedDisplayToDisplay(val2[0], val2[1], val2[2]);\n  };\n\n  publicAPI.displayToWorld = (x, y, z, renderer) => {\n    const val = publicAPI.displayToNormalizedDisplay(x, y, z);\n    const val2 = renderer.normalizedDisplayToView(val[0], val[1], val[2]);\n    return publicAPI.viewToWorld(val2[0], val2[1], val2[2], renderer);\n  };\n\n  publicAPI.normalizedDisplayToViewport = (x, y, z, renderer) => {\n    let vCoords = renderer.getViewportByReference();\n    vCoords = publicAPI.normalizedDisplayToDisplay(vCoords[0], vCoords[1], 0.0);\n    const coords = publicAPI.normalizedDisplayToDisplay(x, y, z);\n    return [coords[0] - vCoords[0] - 0.5, coords[1] - vCoords[1] - 0.5, z];\n  };\n\n  publicAPI.viewportToNormalizedViewport = (x, y, z, renderer) => {\n    const size = publicAPI.getViewportSize(renderer);\n    if (size && size[0] !== 0 && size[1] !== 0) {\n      return [x / (size[0] - 1.0), y / (size[1] - 1.0), z];\n    }\n    return [x, y, z];\n  };\n\n  publicAPI.normalizedViewportToViewport = (x, y, z) => {\n    const size = publicAPI.getFramebufferSize();\n    return [x * (size[0] - 1.0), y * (size[1] - 1.0), z];\n  };\n\n  publicAPI.displayToLocalDisplay = (x, y, z) => {\n    const size = publicAPI.getFramebufferSize();\n    return [x, size[1] - y - 1, z];\n  };\n\n  publicAPI.viewportToNormalizedDisplay = (x, y, z, renderer) => {\n    let vCoords = renderer.getViewportByReference();\n    vCoords = publicAPI.normalizedDisplayToDisplay(vCoords[0], vCoords[1], 0.0);\n    const x2 = x + vCoords[0] + 0.5;\n    const y2 = y + vCoords[1] + 0.5;\n    return publicAPI.displayToNormalizedDisplay(x2, y2, z);\n  };\n\n  publicAPI.getPixelData = (x1, y1, x2, y2) => {\n    const pixels = new Uint8Array((x2 - x1 + 1) * (y2 - y1 + 1) * 4);\n    model.context.readPixels(\n      x1,\n      y1,\n      x2 - x1 + 1,\n      y2 - y1 + 1,\n      model.context.RGBA,\n      model.context.UNSIGNED_BYTE,\n      pixels\n    );\n    return pixels;\n  };\n\n  publicAPI.get3DContext = (\n    options = { preserveDrawingBuffer: false, depth: true, alpha: true }\n  ) => {\n    let result = null;\n\n    const webgl2Supported = typeof WebGL2RenderingContext !== 'undefined';\n    model.webgl2 = false;\n    if (model.defaultToWebgl2 && webgl2Supported) {\n      result = model.canvas.getContext('webgl2', options);\n      if (result) {\n        model.webgl2 = true;\n        vtkDebugMacro('using webgl2');\n      }\n    }\n    if (!result) {\n      vtkDebugMacro('using webgl1');\n      result =\n        model.canvas.getContext('webgl', options) ||\n        model.canvas.getContext('experimental-webgl', options);\n    }\n\n    /* eslint-disable */\n    const polyfill = new WebVRPolyfill({\n      // Ensures the polyfill is always active on mobile, due to providing\n      // a polyfilled CardboardVRDisplay when no native API is available,\n      // and also polyfilling even when the native API is available, due to\n      // providing a CardboardVRDisplay when no native VRDisplays exist.\n      PROVIDE_MOBILE_VRDISPLAY: true,\n      // Polyfill optimizations\n      DIRTY_SUBMIT_FRAME_BINDINGS: false,\n      BUFFER_SCALE: 0.75,\n    });\n    /* eslint-enable */\n\n    // Do we have webvr support\n    if (navigator.getVRDisplays) {\n      navigator.getVRDisplays().then((displays) => {\n        if (displays.length > 0) {\n          // take the first display for now\n          model.vrDisplay = displays[0];\n          // set the clipping ranges\n          model.vrDisplay.depthNear = 0.01; // meters\n          model.vrDisplay.depthFar = 100.0; // meters\n          publicAPI.invokeHaveVRDisplay();\n        }\n      });\n    }\n\n    // prevent default context lost handler\n    model.canvas.addEventListener(\n      'webglcontextlost',\n      (event) => {\n        event.preventDefault();\n      },\n      false\n    );\n\n    model.canvas.addEventListener(\n      'webglcontextrestored',\n      publicAPI.restoreContext,\n      false\n    );\n\n    return result;\n  };\n\n  publicAPI.startVR = () => {\n    model.oldCanvasSize = model.size.slice();\n    if (model.vrDisplay.capabilities.canPresent) {\n      model.vrDisplay\n        .requestPresent([{ source: model.canvas }])\n        .then(() => {\n          if (\n            model.el &&\n            model.vrDisplay.capabilities.hasExternalDisplay &&\n            model.hideCanvasInVR\n          ) {\n            model.el.style.display = 'none';\n          }\n          if (model.queryVRSize) {\n            const leftEye = model.vrDisplay.getEyeParameters('left');\n            const rightEye = model.vrDisplay.getEyeParameters('right');\n            const width = Math.floor(\n              leftEye.renderWidth + rightEye.renderWidth\n            );\n            const height = Math.floor(\n              Math.max(leftEye.renderHeight, rightEye.renderHeight)\n            );\n            publicAPI.setSize(width, height);\n          } else {\n            publicAPI.setSize(model.vrResolution);\n          }\n\n          const ren = model.renderable.getRenderers()[0];\n          ren.resetCamera();\n          model.vrFrameData = new VRFrameData();\n          model.renderable.getInteractor().switchToVRAnimation();\n\n          model.vrSceneFrame = model.vrDisplay.requestAnimationFrame(\n            publicAPI.vrRender\n          );\n          // If Broswer is chrome we need to request animation again to canvas update\n          if (IS_CHROME) {\n            model.vrSceneFrame = model.vrDisplay.requestAnimationFrame(\n              publicAPI.vrRender\n            );\n          }\n        })\n        .catch(() => {\n          console.error('failed to requestPresent');\n        });\n    } else {\n      vtkErrorMacro('vrDisplay is not connected');\n    }\n  };\n\n  publicAPI.stopVR = () => {\n    model.renderable.getInteractor().returnFromVRAnimation();\n    model.vrDisplay.exitPresent();\n    model.vrDisplay.cancelAnimationFrame(model.vrSceneFrame);\n\n    publicAPI.setSize(...model.oldCanvasSize);\n    if (model.el && model.vrDisplay.capabilities.hasExternalDisplay) {\n      model.el.style.display = 'block';\n    }\n\n    const ren = model.renderable.getRenderers()[0];\n    ren.getActiveCamera().setProjectionMatrix(null);\n\n    ren.setViewport(0.0, 0, 1.0, 1.0);\n    publicAPI.traverseAllPasses();\n  };\n\n  publicAPI.vrRender = () => {\n    // If not presenting for any reason, we do not submit frame\n    if (!model.vrDisplay.isPresenting) {\n      return;\n    }\n    model.renderable.getInteractor().updateGamepads(model.vrDisplay.displayId);\n    model.vrSceneFrame = model.vrDisplay.requestAnimationFrame(\n      publicAPI.vrRender\n    );\n    model.vrDisplay.getFrameData(model.vrFrameData);\n\n    // get the first renderer\n    const ren = model.renderable.getRenderers()[0];\n\n    // do the left eye\n    ren.setViewport(0, 0, 0.5, 1.0);\n    ren\n      .getActiveCamera()\n      .computeViewParametersFromPhysicalMatrix(\n        model.vrFrameData.leftViewMatrix\n      );\n    ren\n      .getActiveCamera()\n      .setProjectionMatrix(model.vrFrameData.leftProjectionMatrix);\n    publicAPI.traverseAllPasses();\n\n    ren.setViewport(0.5, 0, 1.0, 1.0);\n    ren\n      .getActiveCamera()\n      .computeViewParametersFromPhysicalMatrix(\n        model.vrFrameData.rightViewMatrix\n      );\n    ren\n      .getActiveCamera()\n      .setProjectionMatrix(model.vrFrameData.rightProjectionMatrix);\n    publicAPI.traverseAllPasses();\n\n    model.vrDisplay.submitFrame();\n  };\n\n  publicAPI.restoreContext = () => {\n    const rp = vtkRenderPass.newInstance();\n    rp.setCurrentOperation('Release');\n    rp.traverse(publicAPI, null);\n  };\n\n  publicAPI.activateTexture = (texture) => {\n    // Only add if it isn't already there\n    const result = model.textureResourceIds.get(texture);\n    if (result !== undefined) {\n      model.context.activeTexture(model.context.TEXTURE0 + result);\n      return;\n    }\n\n    const activeUnit = publicAPI.getTextureUnitManager().allocate();\n    if (activeUnit < 0) {\n      vtkErrorMacro(\n        'Hardware does not support the number of textures defined.'\n      );\n      return;\n    }\n\n    model.textureResourceIds.set(texture, activeUnit);\n    model.context.activeTexture(model.context.TEXTURE0 + activeUnit);\n  };\n\n  publicAPI.deactivateTexture = (texture) => {\n    // Only deactivate if it isn't already there\n    const result = model.textureResourceIds.get(texture);\n    if (result !== undefined) {\n      publicAPI.getTextureUnitManager().free(result);\n      delete model.textureResourceIds.delete(texture);\n    }\n  };\n\n  publicAPI.getTextureUnitForTexture = (texture) => {\n    const result = model.textureResourceIds.get(texture);\n    if (result !== undefined) {\n      return result;\n    }\n    return -1;\n  };\n\n  publicAPI.getDefaultTextureInternalFormat = (vtktype, numComps, useFloat) => {\n    if (model.webgl2) {\n      switch (vtktype) {\n        case VtkDataTypes.UNSIGNED_CHAR:\n          switch (numComps) {\n            case 1:\n              return model.context.R8;\n            case 2:\n              return model.context.RG8;\n            case 3:\n              return model.context.RGB8;\n            case 4:\n            default:\n              return model.context.RGBA8;\n          }\n        default:\n        case VtkDataTypes.FLOAT:\n          switch (numComps) {\n            case 1:\n              return model.context.R16F;\n            case 2:\n              return model.context.RG16F;\n            case 3:\n              return model.context.RGB16F;\n            case 4:\n            default:\n              return model.context.RGBA16F;\n          }\n      }\n    }\n\n    // webgl1 only supports four types\n    switch (numComps) {\n      case 1:\n        return model.context.LUMINANCE;\n      case 2:\n        return model.context.LUMINANCE_ALPHA;\n      case 3:\n        return model.context.RGB;\n      case 4:\n      default:\n        return model.context.RGBA;\n    }\n  };\n\n  publicAPI.setBackgroundImage = (img) => {\n    model.bgImage.src = img.src;\n  };\n\n  publicAPI.setUseBackgroundImage = (value) => {\n    model.useBackgroundImage = value;\n\n    // Add or remove the background image from the\n    // DOM as specified.\n    if (model.useBackgroundImage && !model.el.contains(model.bgImage)) {\n      model.el.appendChild(model.bgImage);\n    } else if (!model.useBackgroundImage && model.el.contains(model.bgImage)) {\n      model.el.removeChild(model.bgImage);\n    }\n  };\n\n  function getCanvasDataURL(format = model.imageFormat) {\n    // Copy current canvas to not modify the original\n    const temporaryCanvas = document.createElement('canvas');\n    const temporaryContext = temporaryCanvas.getContext('2d');\n    temporaryCanvas.width = model.canvas.width;\n    temporaryCanvas.height = model.canvas.height;\n    temporaryContext.drawImage(model.canvas, 0, 0);\n\n    // Get current client rect to place canvas\n    const mainBoundingClientRect = model.canvas.getBoundingClientRect();\n\n    const renderWindow = model.renderable;\n    const renderers = renderWindow.getRenderers();\n    renderers.forEach((renderer) => {\n      const viewProps = renderer.getViewProps();\n      viewProps.forEach((viewProp) => {\n        // Check if the prop has a container that should have canvas\n        if (viewProp.getContainer) {\n          const container = viewProp.getContainer();\n          const canvasList = container.getElementsByTagName('canvas');\n          // Go throughout all canvas and copy it into temporary main canvas\n          for (let i = 0; i < canvasList.length; i++) {\n            const currentCanvas = canvasList[i];\n            const boundingClientRect = currentCanvas.getBoundingClientRect();\n            const newXPosition =\n              boundingClientRect.x - mainBoundingClientRect.x;\n            const newYPosition =\n              boundingClientRect.y - mainBoundingClientRect.y;\n            temporaryContext.drawImage(\n              currentCanvas,\n              newXPosition,\n              newYPosition\n            );\n          }\n        }\n      });\n    });\n\n    const screenshot = temporaryCanvas.toDataURL(format);\n    temporaryCanvas.remove();\n    publicAPI.invokeImageReady(screenshot);\n  }\n\n  publicAPI.captureNextImage = (format = 'image/png') => {\n    if (model.deleted) {\n      return null;\n    }\n    model.imageFormat = format;\n    const previous = model.notifyStartCaptureImage;\n    model.notifyStartCaptureImage = true;\n\n    return new Promise((resolve, reject) => {\n      const subscription = publicAPI.onImageReady((imageURL) => {\n        model.notifyStartCaptureImage = previous;\n        subscription.unsubscribe();\n        resolve(imageURL);\n      });\n    });\n  };\n\n  publicAPI.getGLInformations = () => {\n    const gl = publicAPI.get3DContext();\n\n    const glTextureFloat = gl.getExtension('OES_texture_float');\n    const glTextureHalfFloat = gl.getExtension('OES_texture_half_float');\n    const glDebugRendererInfo = gl.getExtension('WEBGL_debug_renderer_info');\n    const glDrawBuffers = gl.getExtension('WEBGL_draw_buffers');\n    const glAnisotropic =\n      gl.getExtension('EXT_texture_filter_anisotropic') ||\n      gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n\n    const params = [\n      [\n        'Max Vertex Attributes',\n        'MAX_VERTEX_ATTRIBS',\n        gl.getParameter(gl.MAX_VERTEX_ATTRIBS),\n      ],\n      [\n        'Max Varying Vectors',\n        'MAX_VARYING_VECTORS',\n        gl.getParameter(gl.MAX_VARYING_VECTORS),\n      ],\n      [\n        'Max Vertex Uniform Vectors',\n        'MAX_VERTEX_UNIFORM_VECTORS',\n        gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS),\n      ],\n      [\n        'Max Fragment Uniform Vectors',\n        'MAX_FRAGMENT_UNIFORM_VECTORS',\n        gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS),\n      ],\n      [\n        'Max Fragment Texture Image Units',\n        'MAX_TEXTURE_IMAGE_UNITS',\n        gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS),\n      ],\n      [\n        'Max Vertex Texture Image Units',\n        'MAX_VERTEX_TEXTURE_IMAGE_UNITS',\n        gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS),\n      ],\n      [\n        'Max Combined Texture Image Units',\n        'MAX_COMBINED_TEXTURE_IMAGE_UNITS',\n        gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS),\n      ],\n      [\n        'Max 2D Texture Size',\n        'MAX_TEXTURE_SIZE',\n        gl.getParameter(gl.MAX_TEXTURE_SIZE),\n      ],\n      [\n        'Max Cube Texture Size',\n        'MAX_CUBE_MAP_TEXTURE_SIZE',\n        gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE),\n      ],\n      [\n        'Max Texture Anisotropy',\n        'MAX_TEXTURE_MAX_ANISOTROPY_EXT',\n        glAnisotropic &&\n          gl.getParameter(glAnisotropic.MAX_TEXTURE_MAX_ANISOTROPY_EXT),\n      ],\n      [\n        'Point Size Range',\n        'ALIASED_POINT_SIZE_RANGE',\n        gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE).join(' - '),\n      ],\n      [\n        'Line Width Range',\n        'ALIASED_LINE_WIDTH_RANGE',\n        gl.getParameter(gl.ALIASED_LINE_WIDTH_RANGE).join(' - '),\n      ],\n      [\n        'Max Viewport Dimensions',\n        'MAX_VIEWPORT_DIMS',\n        gl.getParameter(gl.MAX_VIEWPORT_DIMS).join(' - '),\n      ],\n      [\n        'Max Renderbuffer Size',\n        'MAX_RENDERBUFFER_SIZE',\n        gl.getParameter(gl.MAX_RENDERBUFFER_SIZE),\n      ],\n      ['Framebuffer Red Bits', 'RED_BITS', gl.getParameter(gl.RED_BITS)],\n      ['Framebuffer Green Bits', 'GREEN_BITS', gl.getParameter(gl.GREEN_BITS)],\n      ['Framebuffer Blue Bits', 'BLUE_BITS', gl.getParameter(gl.BLUE_BITS)],\n      ['Framebuffer Alpha Bits', 'ALPHA_BITS', gl.getParameter(gl.ALPHA_BITS)],\n      ['Framebuffer Depth Bits', 'DEPTH_BITS', gl.getParameter(gl.DEPTH_BITS)],\n      [\n        'Framebuffer Stencil Bits',\n        'STENCIL_BITS',\n        gl.getParameter(gl.STENCIL_BITS),\n      ],\n      [\n        'Framebuffer Subpixel Bits',\n        'SUBPIXEL_BITS',\n        gl.getParameter(gl.SUBPIXEL_BITS),\n      ],\n      ['MSAA Samples', 'SAMPLES', gl.getParameter(gl.SAMPLES)],\n      [\n        'MSAA Sample Buffers',\n        'SAMPLE_BUFFERS',\n        gl.getParameter(gl.SAMPLE_BUFFERS),\n      ],\n      [\n        'Supported Formats for UByte Render Targets     ',\n        'UNSIGNED_BYTE RENDER TARGET FORMATS',\n        [\n          glTextureFloat &&\n          checkRenderTargetSupport(gl, gl.RGBA, gl.UNSIGNED_BYTE)\n            ? 'RGBA'\n            : '',\n          glTextureFloat &&\n          checkRenderTargetSupport(gl, gl.RGB, gl.UNSIGNED_BYTE)\n            ? 'RGB'\n            : '',\n          glTextureFloat &&\n          checkRenderTargetSupport(gl, gl.LUMINANCE, gl.UNSIGNED_BYTE)\n            ? 'LUMINANCE'\n            : '',\n          glTextureFloat &&\n          checkRenderTargetSupport(gl, gl.ALPHA, gl.UNSIGNED_BYTE)\n            ? 'ALPHA'\n            : '',\n          glTextureFloat &&\n          checkRenderTargetSupport(gl, gl.LUMINANCE_ALPHA, gl.UNSIGNED_BYTE)\n            ? 'LUMINANCE_ALPHA'\n            : '',\n        ].join(' '),\n      ],\n      [\n        'Supported Formats for Half Float Render Targets',\n        'HALF FLOAT RENDER TARGET FORMATS',\n        [\n          glTextureHalfFloat &&\n          checkRenderTargetSupport(\n            gl,\n            gl.RGBA,\n            glTextureHalfFloat.HALF_FLOAT_OES\n          )\n            ? 'RGBA'\n            : '',\n          glTextureHalfFloat &&\n          checkRenderTargetSupport(\n            gl,\n            gl.RGB,\n            glTextureHalfFloat.HALF_FLOAT_OES\n          )\n            ? 'RGB'\n            : '',\n          glTextureHalfFloat &&\n          checkRenderTargetSupport(\n            gl,\n            gl.LUMINANCE,\n            glTextureHalfFloat.HALF_FLOAT_OES\n          )\n            ? 'LUMINANCE'\n            : '',\n          glTextureHalfFloat &&\n          checkRenderTargetSupport(\n            gl,\n            gl.ALPHA,\n            glTextureHalfFloat.HALF_FLOAT_OES\n          )\n            ? 'ALPHA'\n            : '',\n          glTextureHalfFloat &&\n          checkRenderTargetSupport(\n            gl,\n            gl.LUMINANCE_ALPHA,\n            glTextureHalfFloat.HALF_FLOAT_OES\n          )\n            ? 'LUMINANCE_ALPHA'\n            : '',\n        ].join(' '),\n      ],\n      [\n        'Supported Formats for Full Float Render Targets',\n        'FLOAT RENDER TARGET FORMATS',\n        [\n          glTextureFloat && checkRenderTargetSupport(gl, gl.RGBA, gl.FLOAT)\n            ? 'RGBA'\n            : '',\n          glTextureFloat && checkRenderTargetSupport(gl, gl.RGB, gl.FLOAT)\n            ? 'RGB'\n            : '',\n          glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE, gl.FLOAT)\n            ? 'LUMINANCE'\n            : '',\n          glTextureFloat && checkRenderTargetSupport(gl, gl.ALPHA, gl.FLOAT)\n            ? 'ALPHA'\n            : '',\n          glTextureFloat &&\n          checkRenderTargetSupport(gl, gl.LUMINANCE_ALPHA, gl.FLOAT)\n            ? 'LUMINANCE_ALPHA'\n            : '',\n        ].join(' '),\n      ],\n      [\n        'Max Multiple Render Targets Buffers',\n        'MAX_DRAW_BUFFERS_WEBGL',\n        glDrawBuffers\n          ? gl.getParameter(glDrawBuffers.MAX_DRAW_BUFFERS_WEBGL)\n          : 0,\n      ],\n      [\n        'High Float Precision in Vertex Shader',\n        'HIGH_FLOAT VERTEX_SHADER',\n        [\n          gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT)\n            .precision,\n          ' (-2<sup>',\n          gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).rangeMin,\n          '</sup> - 2<sup>',\n          gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).rangeMax,\n          '</sup>)',\n        ].join(''),\n      ],\n      [\n        'Medium Float Precision in Vertex Shader',\n        'MEDIUM_FLOAT VERTEX_SHADER',\n        [\n          gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT)\n            .precision,\n          ' (-2<sup>',\n          gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT)\n            .rangeMin,\n          '</sup> - 2<sup>',\n          gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT)\n            .rangeMax,\n          '</sup>)',\n        ].join(''),\n      ],\n      [\n        'Low Float Precision in Vertex Shader',\n        'LOW_FLOAT VERTEX_SHADER',\n        [\n          gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).precision,\n          ' (-2<sup>',\n          gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).rangeMin,\n          '</sup> - 2<sup>',\n          gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).rangeMax,\n          '</sup>)',\n        ].join(''),\n      ],\n      [\n        'High Float Precision in Fragment Shader',\n        'HIGH_FLOAT FRAGMENT_SHADER',\n        [\n          gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT)\n            .precision,\n          ' (-2<sup>',\n          gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT)\n            .rangeMin,\n          '</sup> - 2<sup>',\n          gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT)\n            .rangeMax,\n          '</sup>)',\n        ].join(''),\n      ],\n      [\n        'Medium Float Precision in Fragment Shader',\n        'MEDIUM_FLOAT FRAGMENT_SHADER',\n        [\n          gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT)\n            .precision,\n          ' (-2<sup>',\n          gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT)\n            .rangeMin,\n          '</sup> - 2<sup>',\n          gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT)\n            .rangeMax,\n          '</sup>)',\n        ].join(''),\n      ],\n      [\n        'Low Float Precision in Fragment Shader',\n        'LOW_FLOAT FRAGMENT_SHADER',\n        [\n          gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT)\n            .precision,\n          ' (-2<sup>',\n          gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT)\n            .rangeMin,\n          '</sup> - 2<sup>',\n          gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT)\n            .rangeMax,\n          '</sup>)',\n        ].join(''),\n      ],\n      [\n        'High Int Precision in Vertex Shader',\n        'HIGH_INT VERTEX_SHADER',\n        [\n          gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).precision,\n          ' (-2<sup>',\n          gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).rangeMin,\n          '</sup> - 2<sup>',\n          gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).rangeMax,\n          '</sup>)',\n        ].join(''),\n      ],\n      [\n        'Medium Int Precision in Vertex Shader',\n        'MEDIUM_INT VERTEX_SHADER',\n        [\n          gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT)\n            .precision,\n          ' (-2<sup>',\n          gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).rangeMin,\n          '</sup> - 2<sup>',\n          gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).rangeMax,\n          '</sup>)',\n        ].join(''),\n      ],\n      [\n        'Low Int Precision in Vertex Shader',\n        'LOW_INT VERTEX_SHADER',\n        [\n          gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).precision,\n          ' (-2<sup>',\n          gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).rangeMin,\n          '</sup> - 2<sup>',\n          gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).rangeMax,\n          '</sup>)',\n        ].join(''),\n      ],\n      [\n        'High Int Precision in Fragment Shader',\n        'HIGH_INT FRAGMENT_SHADER',\n        [\n          gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT)\n            .precision,\n          ' (-2<sup>',\n          gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).rangeMin,\n          '</sup> - 2<sup>',\n          gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).rangeMax,\n          '</sup>)',\n        ].join(''),\n      ],\n      [\n        'Medium Int Precision in Fragment Shader',\n        'MEDIUM_INT FRAGMENT_SHADER',\n        [\n          gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT)\n            .precision,\n          ' (-2<sup>',\n          gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT)\n            .rangeMin,\n          '</sup> - 2<sup>',\n          gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT)\n            .rangeMax,\n          '</sup>)',\n        ].join(''),\n      ],\n      [\n        'Low Int Precision in Fragment Shader',\n        'LOW_INT FRAGMENT_SHADER',\n        [\n          gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).precision,\n          ' (-2<sup>',\n          gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).rangeMin,\n          '</sup> - 2<sup>',\n          gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).rangeMax,\n          '</sup>)',\n        ].join(''),\n      ],\n      [\n        'Supported Extensions',\n        'EXTENSIONS',\n        gl.getSupportedExtensions().join('<br/>\\t\\t\\t\\t\\t    '),\n      ],\n      ['WebGL Renderer', 'RENDERER', gl.getParameter(gl.RENDERER)],\n      ['WebGL Vendor', 'VENDOR', gl.getParameter(gl.VENDOR)],\n      ['WebGL Version', 'VERSION', gl.getParameter(gl.VERSION)],\n      [\n        'Shading Language Version',\n        'SHADING_LANGUAGE_VERSION',\n        gl.getParameter(gl.SHADING_LANGUAGE_VERSION),\n      ],\n      [\n        'Unmasked Renderer',\n        'UNMASKED_RENDERER',\n        glDebugRendererInfo &&\n          gl.getParameter(glDebugRendererInfo.UNMASKED_RENDERER_WEBGL),\n      ],\n      [\n        'Unmasked Vendor',\n        'UNMASKED_VENDOR',\n        glDebugRendererInfo &&\n          gl.getParameter(glDebugRendererInfo.UNMASKED_VENDOR_WEBGL),\n      ],\n      ['WebGL Version', 'WEBGL_VERSION', model.webgl2 ? 2 : 1],\n    ];\n\n    const result = {};\n    while (params.length) {\n      const [label, key, value] = params.pop();\n      if (key) {\n        result[key] = { label, value };\n      }\n    }\n    return result;\n  };\n\n  publicAPI.traverseAllPasses = () => {\n    if (model.renderPasses) {\n      for (let index = 0; index < model.renderPasses.length; ++index) {\n        model.renderPasses[index].traverse(publicAPI, null);\n      }\n    }\n    if (model.notifyStartCaptureImage) {\n      getCanvasDataURL();\n    }\n  };\n\n  publicAPI.disableDepthMask = () => {\n    if (model.depthMaskEnabled) {\n      model.context.depthMask(false);\n      model.depthMaskEnabled = false;\n    }\n  };\n\n  publicAPI.enableDepthMask = () => {\n    if (!model.depthMaskEnabled) {\n      model.context.depthMask(true);\n      model.depthMaskEnabled = true;\n    }\n  };\n\n  publicAPI.disableCullFace = () => {\n    if (model.cullFaceEnabled) {\n      model.context.disable(model.context.CULL_FACE);\n      model.cullFaceEnabled = false;\n    }\n  };\n\n  publicAPI.enableCullFace = () => {\n    if (!model.cullFaceEnabled) {\n      model.context.enable(model.context.CULL_FACE);\n      model.cullFaceEnabled = true;\n    }\n  };\n\n  publicAPI.setViewStream = (stream) => {\n    if (model.viewStream === stream) {\n      return false;\n    }\n    if (model.subscription) {\n      model.subscription.unsubscribe();\n      model.subscription = null;\n    }\n    model.viewStream = stream;\n    if (model.viewStream) {\n      // Force background to be transparent + render\n      const mainRenderer = model.renderable.getRenderers()[0];\n      mainRenderer.getBackgroundByReference()[3] = 0;\n\n      // Enable display of the background image\n      publicAPI.setUseBackgroundImage(true);\n\n      // Bind to remote stream\n      model.subscription = model.viewStream.onImageReady((e) =>\n        publicAPI.setBackgroundImage(e.image)\n      );\n      model.viewStream.setSize(model.size[0], model.size[1]);\n      model.viewStream.invalidateCache();\n      model.viewStream.render();\n\n      publicAPI.modified();\n    }\n    return true;\n  };\n\n  publicAPI.delete = macro.chain(\n    publicAPI.delete,\n    publicAPI.setViewStream,\n    deleteGLContext\n  );\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  cullFaceEnabled: false,\n  depthMaskEnabled: true,\n  shaderCache: null,\n  initialized: false,\n  context: null,\n  canvas: null,\n  size: [300, 300],\n  cursorVisibility: true,\n  cursor: 'pointer',\n  textureUnitManager: null,\n  textureResourceIds: null,\n  containerSize: null,\n  renderPasses: [],\n  notifyStartCaptureImage: false,\n  webgl2: false,\n  defaultToWebgl2: true, // attempt webgl2 on by default\n  vrResolution: [2160, 1200],\n  queryVRSize: false,\n  hideCanvasInVR: true,\n  activeFramebuffer: null,\n  vrDisplay: null,\n  imageFormat: 'image/png',\n  useOffScreen: false,\n  useBackgroundImage: false,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Create internal instances\n  model.canvas = document.createElement('canvas');\n  model.canvas.style.width = '100%';\n  createGLContext();\n\n  // Create internal bgImage\n  model.bgImage = new Image();\n  model.bgImage.style.position = 'absolute';\n  model.bgImage.style.left = '0';\n  model.bgImage.style.top = '0';\n  model.bgImage.style.width = '100%';\n  model.bgImage.style.height = '100%';\n  model.bgImage.style.zIndex = '-1';\n\n  model.textureResourceIds = new Map();\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  model.myFactory = vtkOpenGLViewNodeFactory.newInstance();\n  /* eslint-disable no-use-before-define */\n  model.myFactory.registerOverride('vtkRenderWindow', newInstance);\n  /* eslint-enable no-use-before-define */\n\n  model.shaderCache = vtkShaderCache.newInstance();\n  model.shaderCache.setOpenGLRenderWindow(publicAPI);\n\n  // setup default forward pass rendering\n  model.renderPasses[0] = vtkForwardPass.newInstance();\n\n  macro.event(publicAPI, model, 'imageReady');\n  macro.event(publicAPI, model, 'haveVRDisplay');\n\n  // Build VTK API\n  macro.get(publicAPI, model, [\n    'shaderCache',\n    'textureUnitManager',\n    'webgl2',\n    'vrDisplay',\n    'useBackgroundImage',\n  ]);\n\n  macro.setGet(publicAPI, model, [\n    'initialized',\n    'context',\n    'canvas',\n    'renderPasses',\n    'notifyStartCaptureImage',\n    'defaultToWebgl2',\n    'cursor',\n    'queryVRSize',\n    'hideCanvasInVR',\n    'useOffScreen',\n    // might want to make this not call modified as\n    // we change the active framebuffer a lot. Or maybe\n    // only mark modified if the size or depth\n    // of the buffer has changed\n    'activeFramebuffer',\n  ]);\n\n  macro.setGetArray(publicAPI, model, ['size', 'vrResolution'], 2);\n\n  // Object methods\n  vtkOpenGLRenderWindow(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkOpenGLRenderWindow');\n\n// ----------------------------------------------------------------------------\n\nexport default {\n  newInstance,\n  extend,\n  pushMonitorGLContextCount,\n  popMonitorGLContextCount,\n};\n","import { quat, vec3, vec4, mat4 } from 'gl-matrix';\n\nimport macro from 'vtk.js/Sources/macro';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\n\nconst { vtkDebugMacro } = macro;\n\n/* eslint-disable new-cap */\n\n/*\n * Convenience function to access elements of a gl-matrix.  If it turns\n * out I have rows and columns swapped everywhere, then I'll just change\n * the order of 'row' and 'col' parameters in this function\n */\n// function getMatrixElement(matrix, row, col) {\n//   const idx = (row * 4) + col;\n//   return matrix[idx];\n// }\n\n// ----------------------------------------------------------------------------\n// vtkCamera methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCamera(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCamera');\n\n  // Set up private variables and methods\n  const origin = vec3.create();\n  const dopbasis = vec3.fromValues(0.0, 0.0, -1.0);\n  const upbasis = vec3.fromValues(0.0, 1.0, 0.0);\n  const tmpMatrix = mat4.create();\n  const tmpvec1 = vec3.create();\n  const tmpvec2 = vec3.create();\n  const tmpvec3 = vec3.create();\n\n  const rotateMatrix = mat4.create();\n  const trans = mat4.create();\n  const newPosition = vec3.create();\n  const newFocalPoint = vec3.create();\n\n  // Internal Functions that don't need to be public\n  function computeViewPlaneNormal() {\n    // VPN is -DOP\n    model.viewPlaneNormal[0] = -model.directionOfProjection[0];\n    model.viewPlaneNormal[1] = -model.directionOfProjection[1];\n    model.viewPlaneNormal[2] = -model.directionOfProjection[2];\n  }\n\n  publicAPI.orthogonalizeViewUp = () => {\n    const vt = publicAPI.getViewMatrix();\n    model.viewUp[0] = vt[4];\n    model.viewUp[1] = vt[5];\n    model.viewUp[2] = vt[6];\n\n    publicAPI.modified();\n  };\n\n  publicAPI.setPosition = (x, y, z) => {\n    if (\n      x === model.position[0] &&\n      y === model.position[1] &&\n      z === model.position[2]\n    ) {\n      return;\n    }\n\n    model.position[0] = x;\n    model.position[1] = y;\n    model.position[2] = z;\n\n    // recompute the focal distance\n    publicAPI.computeDistance();\n\n    publicAPI.modified();\n  };\n\n  publicAPI.setFocalPoint = (x, y, z) => {\n    if (\n      x === model.focalPoint[0] &&\n      y === model.focalPoint[1] &&\n      z === model.focalPoint[2]\n    ) {\n      return;\n    }\n\n    model.focalPoint[0] = x;\n    model.focalPoint[1] = y;\n    model.focalPoint[2] = z;\n\n    // recompute the focal distance\n    publicAPI.computeDistance();\n\n    publicAPI.modified();\n  };\n\n  publicAPI.setDistance = (d) => {\n    if (model.distance === d) {\n      return;\n    }\n\n    model.distance = d;\n\n    if (model.distance < 1e-20) {\n      model.distance = 1e-20;\n      vtkDebugMacro('Distance is set to minimum.');\n    }\n\n    // we want to keep the camera pointing in the same direction\n    const vec = model.directionOfProjection;\n\n    // recalculate FocalPoint\n    model.focalPoint[0] = model.position[0] + vec[0] * model.distance;\n    model.focalPoint[1] = model.position[1] + vec[1] * model.distance;\n    model.focalPoint[2] = model.position[2] + vec[2] * model.distance;\n\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  // This method must be called when the focal point or camera position changes\n  publicAPI.computeDistance = () => {\n    const dx = model.focalPoint[0] - model.position[0];\n    const dy = model.focalPoint[1] - model.position[1];\n    const dz = model.focalPoint[2] - model.position[2];\n\n    model.distance = Math.sqrt(dx * dx + dy * dy + dz * dz);\n\n    if (model.distance < 1e-20) {\n      model.distance = 1e-20;\n      vtkDebugMacro('Distance is set to minimum.');\n\n      const vec = model.directionOfProjection;\n\n      // recalculate FocalPoint\n      model.focalPoint[0] = model.position[0] + vec[0] * model.distance;\n      model.focalPoint[1] = model.position[1] + vec[1] * model.distance;\n      model.focalPoint[2] = model.position[2] + vec[2] * model.distance;\n    }\n\n    model.directionOfProjection[0] = dx / model.distance;\n    model.directionOfProjection[1] = dy / model.distance;\n    model.directionOfProjection[2] = dz / model.distance;\n\n    computeViewPlaneNormal();\n  };\n\n  //----------------------------------------------------------------------------\n  // Move the position of the camera along the view plane normal. Moving\n  // towards the focal point (e.g., > 1) is a dolly-in, moving away\n  // from the focal point (e.g., < 1) is a dolly-out.\n  publicAPI.dolly = (amount) => {\n    if (amount <= 0.0) {\n      return;\n    }\n\n    // dolly moves the camera towards the focus\n    const d = model.distance / amount;\n\n    publicAPI.setPosition(\n      model.focalPoint[0] - d * model.directionOfProjection[0],\n      model.focalPoint[1] - d * model.directionOfProjection[1],\n      model.focalPoint[2] - d * model.directionOfProjection[2]\n    );\n  };\n\n  publicAPI.roll = (angle) => {\n    const eye = model.position;\n    const at = model.focalPoint;\n    const up = model.viewUp;\n    const viewUpVec4 = vec4.fromValues(up[0], up[1], up[2], 0.0);\n\n    mat4.identity(rotateMatrix);\n    const viewDir = vec3.fromValues(\n      at[0] - eye[0],\n      at[1] - eye[1],\n      at[2] - eye[2]\n    );\n    mat4.rotate(\n      rotateMatrix,\n      rotateMatrix,\n      vtkMath.radiansFromDegrees(angle),\n      viewDir\n    );\n    vec4.transformMat4(viewUpVec4, viewUpVec4, rotateMatrix);\n\n    model.viewUp[0] = viewUpVec4[0];\n    model.viewUp[1] = viewUpVec4[1];\n    model.viewUp[2] = viewUpVec4[2];\n\n    publicAPI.modified();\n  };\n\n  publicAPI.azimuth = (angle) => {\n    const fp = model.focalPoint;\n\n    mat4.identity(trans);\n\n    // translate the focal point to the origin,\n    // rotate about view up,\n    // translate back again\n    mat4.translate(trans, trans, vec3.fromValues(fp[0], fp[1], fp[2]));\n    mat4.rotate(\n      trans,\n      trans,\n      vtkMath.radiansFromDegrees(angle),\n      vec3.fromValues(model.viewUp[0], model.viewUp[1], model.viewUp[2])\n    );\n    mat4.translate(trans, trans, vec3.fromValues(-fp[0], -fp[1], -fp[2]));\n\n    // apply the transform to the position\n    vec3.transformMat4(\n      newPosition,\n      vec3.fromValues(model.position[0], model.position[1], model.position[2]),\n      trans\n    );\n    publicAPI.setPosition(newPosition[0], newPosition[1], newPosition[2]);\n  };\n\n  publicAPI.yaw = (angle) => {\n    const position = model.position;\n\n    mat4.identity(trans);\n\n    // translate the camera to the origin,\n    // rotate about axis,\n    // translate back again\n    mat4.translate(\n      trans,\n      trans,\n      vec3.fromValues(position[0], position[1], position[2])\n    );\n    mat4.rotate(\n      trans,\n      trans,\n      vtkMath.radiansFromDegrees(angle),\n      vec3.fromValues(model.viewUp[0], model.viewUp[1], model.viewUp[2])\n    );\n    mat4.translate(\n      trans,\n      trans,\n      vec3.fromValues(-position[0], -position[1], -position[2])\n    );\n\n    // apply the transform to the position\n    vec3.transformMat4(\n      newFocalPoint,\n      vec3.fromValues(\n        model.focalPoint[0],\n        model.focalPoint[1],\n        model.focalPoint[2]\n      ),\n      trans\n    );\n    publicAPI.setFocalPoint(\n      newFocalPoint[0],\n      newFocalPoint[1],\n      newFocalPoint[2]\n    );\n  };\n\n  publicAPI.elevation = (angle) => {\n    const fp = model.focalPoint;\n\n    // get the eye / camera position from the viewMatrix\n    const vt = publicAPI.getViewMatrix();\n    const axis = [-vt[0], -vt[1], -vt[2]];\n\n    mat4.identity(trans);\n\n    // translate the focal point to the origin,\n    // rotate about view up,\n    // translate back again\n    mat4.translate(trans, trans, vec3.fromValues(fp[0], fp[1], fp[2]));\n    mat4.rotate(\n      trans,\n      trans,\n      vtkMath.radiansFromDegrees(angle),\n      vec3.fromValues(axis[0], axis[1], axis[2])\n    );\n    mat4.translate(trans, trans, vec3.fromValues(-fp[0], -fp[1], -fp[2]));\n\n    // apply the transform to the position\n    vec3.transformMat4(\n      newPosition,\n      vec3.fromValues(model.position[0], model.position[1], model.position[2]),\n      trans\n    );\n    publicAPI.setPosition(newPosition[0], newPosition[1], newPosition[2]);\n  };\n\n  publicAPI.pitch = (angle) => {\n    const position = model.position;\n\n    const vt = publicAPI.getViewMatrix();\n    const axis = [vt[0], vt[1], vt[2]];\n\n    mat4.identity(trans);\n\n    // translate the camera to the origin,\n    // rotate about axis,\n    // translate back again\n    mat4.translate(\n      trans,\n      trans,\n      vec3.fromValues(position[0], position[1], position[2])\n    );\n    mat4.rotate(\n      trans,\n      trans,\n      vtkMath.radiansFromDegrees(angle),\n      vec3.fromValues(axis[0], axis[1], axis[2])\n    );\n    mat4.translate(\n      trans,\n      trans,\n      vec3.fromValues(-position[0], -position[1], -position[2])\n    );\n\n    // apply the transform to the focal point\n    vec3.transformMat4(\n      newFocalPoint,\n      vec3.fromValues(...model.focalPoint),\n      trans\n    );\n    publicAPI.setFocalPoint(...newFocalPoint);\n  };\n\n  publicAPI.zoom = (factor) => {\n    if (factor <= 0) {\n      return;\n    }\n    if (model.parallelProjection) {\n      model.parallelScale /= factor;\n    } else {\n      model.viewAngle /= factor;\n    }\n    publicAPI.modified();\n  };\n\n  publicAPI.applyTransform = (transformMat4) => {\n    const vuOld = [...model.viewUp, 1.0];\n    const posNew = [];\n    const fpNew = [];\n    const vuNew = [];\n\n    vuOld[0] += model.position[0];\n    vuOld[1] += model.position[1];\n    vuOld[2] += model.position[2];\n\n    vec4.transformMat4(posNew, [...model.position, 1.0], transformMat4);\n    vec4.transformMat4(fpNew, [...model.focalPoint, 1.0], transformMat4);\n    vec4.transformMat4(vuNew, vuOld, transformMat4);\n\n    vuNew[0] -= posNew[0];\n    vuNew[1] -= posNew[1];\n    vuNew[2] -= posNew[2];\n\n    publicAPI.setPosition(...posNew.slice(0, 3));\n    publicAPI.setFocalPoint(...fpNew.slice(0, 3));\n    publicAPI.setViewUp(...vuNew.slice(0, 3));\n  };\n\n  publicAPI.getThickness = () =>\n    model.clippingRange[1] - model.clippingRange[0];\n\n  publicAPI.setThickness = (thickness) => {\n    let t = thickness;\n    if (t < 1e-20) {\n      t = 1e-20;\n      vtkDebugMacro('Thickness is set to minimum.');\n    }\n    publicAPI.setClippingRange(\n      model.clippingRange[0],\n      model.clippingRange[0] + t\n    );\n  };\n\n  publicAPI.setThicknessFromFocalPoint = (thickness) => {\n    let t = thickness;\n    if (t < 1e-20) {\n      t = 1e-20;\n      vtkDebugMacro('Thickness is set to minimum.');\n    }\n    publicAPI.setClippingRange(model.distance - t / 2, model.distance + t / 2);\n  };\n\n  // Unimplemented functions\n  publicAPI.setRoll = (angle) => {}; // dependency on GetOrientation() and a model.ViewTransform object, see https://github.com/Kitware/VTK/blob/master/Common/Transforms/vtkTransform.cxx and https://vtk.org/doc/nightly/html/classvtkTransform.html\n  publicAPI.getRoll = () => {};\n  publicAPI.setObliqueAngles = (alpha, beta) => {};\n  publicAPI.getOrientation = () => {};\n  publicAPI.getOrientationWXYZ = () => {};\n  publicAPI.getFrustumPlanes = (aspect) => {\n    // Return array of 24 params (4 params for each of 6 plane equations)\n  };\n  publicAPI.getCameraLightTransformMatrix = () => {};\n  publicAPI.deepCopy = (sourceCamera) => {};\n\n  publicAPI.physicalOrientationToWorldDirection = (ori) => {\n    // push the x axis through the orientation quat\n    const oriq = quat.fromValues(ori[0], ori[1], ori[2], ori[3]);\n    const coriq = quat.create();\n    const qdir = quat.fromValues(0.0, 0.0, 1.0, 0.0);\n    quat.conjugate(coriq, oriq);\n\n    // rotate the z axis by the quat\n    quat.multiply(qdir, oriq, qdir);\n    quat.multiply(qdir, qdir, coriq);\n\n    // return the z axis in world coords\n    return [qdir[0], qdir[1], qdir[2]];\n  };\n\n  publicAPI.getPhysicalToWorldMatrix = (result) => {\n    publicAPI.getWorldToPhysicalMatrix(result);\n    mat4.invert(result, result);\n  };\n\n  publicAPI.getWorldToPhysicalMatrix = (result) => {\n    mat4.identity(result);\n\n    // now the physical to vtk world rotation tform\n    const physVRight = [3];\n    vtkMath.cross(model.physicalViewNorth, model.physicalViewUp, physVRight);\n    result[0] = physVRight[0];\n    result[1] = physVRight[1];\n    result[2] = physVRight[2];\n    result[4] = model.physicalViewUp[0];\n    result[5] = model.physicalViewUp[1];\n    result[6] = model.physicalViewUp[2];\n    result[8] = -model.physicalViewNorth[0];\n    result[9] = -model.physicalViewNorth[1];\n    result[10] = -model.physicalViewNorth[2];\n    mat4.transpose(result, result);\n\n    vec3.set(\n      tmpvec1,\n      1 / model.physicalScale,\n      1 / model.physicalScale,\n      1 / model.physicalScale\n    );\n\n    mat4.scale(result, result, tmpvec1);\n    mat4.translate(result, result, model.physicalTranslation);\n  };\n\n  publicAPI.computeViewParametersFromViewMatrix = (vmat) => {\n    // invert to get view to world\n    mat4.invert(tmpMatrix, vmat);\n\n    // note with glmatrix operations happen in\n    // the reverse order\n    // mat.scale\n    // mat.translate\n    // will result in the translation then the scale\n    // mat.mult(a,b)\n    // results in perform the B transformation then A\n\n    // then extract the params position, orientation\n    // push 0,0,0 through to get a translation\n    vec3.transformMat4(tmpvec1, origin, tmpMatrix);\n    publicAPI.computeDistance();\n    const oldDist = model.distance;\n    publicAPI.setPosition(tmpvec1[0], tmpvec1[1], tmpvec1[2]);\n\n    // push basis vectors to get orientation\n    vec3.transformMat4(tmpvec2, dopbasis, tmpMatrix);\n    vec3.subtract(tmpvec2, tmpvec2, tmpvec1);\n    vec3.normalize(tmpvec2, tmpvec2);\n    publicAPI.setDirectionOfProjection(tmpvec2[0], tmpvec2[1], tmpvec2[2]);\n\n    vec3.transformMat4(tmpvec3, upbasis, tmpMatrix);\n    vec3.subtract(tmpvec3, tmpvec3, tmpvec1);\n    vec3.normalize(tmpvec3, tmpvec3);\n    publicAPI.setViewUp(tmpvec3[0], tmpvec3[1], tmpvec3[2]);\n\n    publicAPI.setDistance(oldDist);\n  };\n\n  // the provided matrix should include\n  // translation and orientation only\n  // mat is physical to view\n  publicAPI.computeViewParametersFromPhysicalMatrix = (mat) => {\n    // get the WorldToPhysicalMatrix\n    publicAPI.getWorldToPhysicalMatrix(tmpMatrix);\n\n    // first convert the physical -> view matrix to be\n    // world -> view\n    mat4.multiply(tmpMatrix, mat, tmpMatrix);\n\n    publicAPI.computeViewParametersFromViewMatrix(tmpMatrix);\n  };\n\n  publicAPI.setViewMatrix = (mat) => {\n    model.viewMatrix = mat;\n    if (model.viewMatrix) {\n      mat4.copy(tmpMatrix, model.viewMatrix);\n      publicAPI.computeViewParametersFromViewMatrix(tmpMatrix);\n      mat4.transpose(model.viewMatrix, model.viewMatrix);\n    }\n  };\n\n  publicAPI.getViewMatrix = () => {\n    if (model.viewMatrix) {\n      return model.viewMatrix;\n    }\n\n    const result = mat4.create();\n\n    mat4.lookAt(\n      tmpMatrix,\n      vec3.fromValues(...model.position), // eye\n      vec3.fromValues(...model.focalPoint), // at\n      vec3.fromValues(...model.viewUp) // up\n    );\n\n    mat4.transpose(tmpMatrix, tmpMatrix);\n\n    mat4.copy(result, tmpMatrix);\n    return result;\n  };\n\n  publicAPI.setProjectionMatrix = (mat) => {\n    model.projectionMatrix = mat;\n  };\n\n  publicAPI.getProjectionMatrix = (aspect, nearz, farz) => {\n    const result = mat4.create();\n\n    if (model.projectionMatrix) {\n      const scale = 1 / model.physicalScale;\n      vec3.set(tmpvec1, scale, scale, scale);\n\n      mat4.copy(result, model.projectionMatrix);\n      mat4.scale(result, result, tmpvec1);\n      mat4.transpose(result, result);\n      return result;\n    }\n\n    mat4.identity(tmpMatrix);\n\n    // FIXME: Not sure what to do about adjust z buffer here\n    // adjust Z-buffer range\n    // this->ProjectionTransform->AdjustZBuffer( -1, +1, nearz, farz );\n    const cWidth = model.clippingRange[1] - model.clippingRange[0];\n    const cRange = [\n      model.clippingRange[0] + ((nearz + 1) * cWidth) / 2.0,\n      model.clippingRange[0] + ((farz + 1) * cWidth) / 2.0,\n    ];\n\n    if (model.parallelProjection) {\n      // set up a rectangular parallelipiped\n      const width = model.parallelScale * aspect;\n      const height = model.parallelScale;\n\n      const xmin = (model.windowCenter[0] - 1.0) * width;\n      const xmax = (model.windowCenter[0] + 1.0) * width;\n      const ymin = (model.windowCenter[1] - 1.0) * height;\n      const ymax = (model.windowCenter[1] + 1.0) * height;\n\n      mat4.ortho(tmpMatrix, xmin, xmax, ymin, ymax, cRange[0], cRange[1]);\n      mat4.transpose(tmpMatrix, tmpMatrix);\n    } else if (model.useOffAxisProjection) {\n      throw new Error('Off-Axis projection is not supported at this time');\n    } else {\n      const tmp = Math.tan(vtkMath.radiansFromDegrees(model.viewAngle) / 2.0);\n      let width;\n      let height;\n      if (model.useHorizontalViewAngle === true) {\n        width = model.clippingRange[0] * tmp;\n        height = (model.clippingRange[0] * tmp) / aspect;\n      } else {\n        width = model.clippingRange[0] * tmp * aspect;\n        height = model.clippingRange[0] * tmp;\n      }\n\n      const xmin = (model.windowCenter[0] - 1.0) * width;\n      const xmax = (model.windowCenter[0] + 1.0) * width;\n      const ymin = (model.windowCenter[1] - 1.0) * height;\n      const ymax = (model.windowCenter[1] + 1.0) * height;\n      const znear = cRange[0];\n      const zfar = cRange[1];\n\n      tmpMatrix[0] = (2.0 * znear) / (xmax - xmin);\n      tmpMatrix[5] = (2.0 * znear) / (ymax - ymin);\n      tmpMatrix[2] = (xmin + xmax) / (xmax - xmin);\n      tmpMatrix[6] = (ymin + ymax) / (ymax - ymin);\n      tmpMatrix[10] = -(znear + zfar) / (zfar - znear);\n      tmpMatrix[14] = -1.0;\n      tmpMatrix[11] = (-2.0 * znear * zfar) / (zfar - znear);\n      tmpMatrix[15] = 0.0;\n    }\n\n    mat4.copy(result, tmpMatrix);\n\n    return result;\n  };\n\n  publicAPI.getCompositeProjectionMatrix = (aspect, nearz, farz) => {\n    const vMat = publicAPI.getViewMatrix();\n    const pMat = publicAPI.getProjectionMatrix(aspect, nearz, farz);\n    const result = mat4.create();\n    // mats are transposed so the order is A then B\n    mat4.multiply(result, vMat, pMat);\n    return result;\n  };\n\n  publicAPI.setDirectionOfProjection = (x, y, z) => {\n    if (\n      model.directionOfProjection[0] === x &&\n      model.directionOfProjection[1] === y &&\n      model.directionOfProjection[2] === z\n    ) {\n      return;\n    }\n\n    model.directionOfProjection[0] = x;\n    model.directionOfProjection[1] = y;\n    model.directionOfProjection[2] = z;\n\n    const vec = model.directionOfProjection;\n\n    // recalculate FocalPoint\n    model.focalPoint[0] = model.position[0] + vec[0] * model.distance;\n    model.focalPoint[1] = model.position[1] + vec[1] * model.distance;\n    model.focalPoint[2] = model.position[2] + vec[2] * model.distance;\n    computeViewPlaneNormal();\n  };\n\n  // used to handle convert js device orientation angles\n  // when you use this method the camera will adjust to the\n  // device orientation such that the physicalViewUp you set\n  // in world coordinates looks up, and the physicalViewNorth\n  // you set in world coorindates will (maybe) point north\n  //\n  // NOTE WARNING - much of the documentaiton out there on how\n  // orientation works is seriously wrong. Even worse the Chrome\n  // device orientation simulator is completely wrong and should\n  // never be used. OMG it is so messed up.\n  //\n  // how it seems to work on iOS is that the device orientation\n  // is specified in extrinsic angles with a alpha, beta, gamma\n  // convention with axes of Z, X, Y (the code below substitutes\n  // the physical coordinate system for these axes to get the right\n  // modified coordinate system.\n  publicAPI.setDeviceAngles = (alpha, beta, gamma, screen) => {\n    const physVRight = [3];\n    vtkMath.cross(model.physicalViewNorth, model.physicalViewUp, physVRight);\n\n    const rotmat = mat4.create(); // phone to physical coordinates\n    mat4.rotate(\n      rotmat,\n      rotmat,\n      vtkMath.radiansFromDegrees(alpha),\n      model.physicalViewUp\n    );\n    mat4.rotate(rotmat, rotmat, vtkMath.radiansFromDegrees(beta), physVRight);\n    mat4.rotate(\n      rotmat,\n      rotmat,\n      vtkMath.radiansFromDegrees(gamma),\n      model.physicalViewNorth\n    );\n\n    mat4.rotate(\n      rotmat,\n      rotmat,\n      vtkMath.radiansFromDegrees(-screen),\n      model.physicalViewUp\n    );\n\n    const dop = vec3.fromValues(\n      -model.physicalViewUp[0],\n      -model.physicalViewUp[1],\n      -model.physicalViewUp[2]\n    );\n    const vup = vec3.fromValues(\n      model.physicalViewNorth[0],\n      model.physicalViewNorth[1],\n      model.physicalViewNorth[2]\n    );\n    vec3.transformMat4(dop, dop, rotmat);\n    vec3.transformMat4(vup, vup, rotmat);\n\n    publicAPI.setDirectionOfProjection(dop[0], dop[1], dop[2]);\n    publicAPI.setViewUp(vup[0], vup[1], vup[2]);\n    publicAPI.modified();\n  };\n\n  publicAPI.setOrientationWXYZ = (degrees, x, y, z) => {\n    const quatMat = mat4.create();\n\n    if (degrees !== 0.0 && (x !== 0.0 || y !== 0.0 || z !== 0.0)) {\n      // convert to radians\n      const angle = vtkMath.radiansFromDegrees(degrees);\n      const q = quat.create();\n      quat.setAxisAngle(q, [x, y, z], angle);\n      quat.toMat4(q, quatMat);\n    }\n\n    const dop = vec3.fromValues(0.0, 0.0, -1.0);\n    const newdop = vec3.create();\n    vec3.transformMat4(newdop, dop, quatMat);\n\n    const vup = vec3.fromValues(0.0, 1.0, 0.0);\n    const newvup = vec3.create();\n    vec3.transformMat4(newvup, vup, quatMat);\n\n    publicAPI.setDirectionOfProjection(...newdop);\n    publicAPI.setViewUp(...newvup);\n    publicAPI.modified();\n  };\n\n  publicAPI.computeClippingRange = (bounds) => {\n    let vn = null;\n    let position = null;\n\n    vn = model.viewPlaneNormal;\n    position = model.position;\n\n    const a = -vn[0];\n    const b = -vn[1];\n    const c = -vn[2];\n    const d = -(a * position[0] + b * position[1] + c * position[2]);\n\n    // Set the max near clipping plane and the min far clipping plane\n    const range = [a * bounds[0] + b * bounds[2] + c * bounds[4] + d, 1e-18];\n\n    // Find the closest / farthest bounding box vertex\n    for (let k = 0; k < 2; k++) {\n      for (let j = 0; j < 2; j++) {\n        for (let i = 0; i < 2; i++) {\n          const dist =\n            a * bounds[i] + b * bounds[2 + j] + c * bounds[4 + k] + d;\n          range[0] = dist < range[0] ? dist : range[0];\n          range[1] = dist > range[1] ? dist : range[1];\n        }\n      }\n    }\n\n    return range;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nexport const DEFAULT_VALUES = {\n  position: [0, 0, 1],\n  focalPoint: [0, 0, 0],\n  viewUp: [0, 1, 0],\n  directionOfProjection: [0, 0, -1],\n  parallelProjection: false,\n  useHorizontalViewAngle: false,\n  viewAngle: 30,\n  parallelScale: 1,\n  clippingRange: [0.01, 1000.01],\n  windowCenter: [0, 0],\n  viewPlaneNormal: [0, 0, 1],\n  useOffAxisProjection: false,\n  screenBottomLeft: [-0.5, -0.5, -0.5],\n  screenBottomRight: [0.5, -0.5, -0.5],\n  screenTopRight: [0.5, 0.5, -0.5],\n  freezeFocalPoint: false,\n  projectionMatrix: null,\n  viewMatrix: null,\n\n  // used for world to physical transformations\n  physicalTranslation: [0, 0, 0],\n  physicalScale: 1.0,\n  physicalViewUp: [0, 1, 0],\n  physicalViewNorth: [0, 0, -1],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n\n  macro.get(publicAPI, model, ['distance']);\n\n  macro.setGet(publicAPI, model, [\n    'parallelProjection',\n    'useHorizontalViewAngle',\n    'viewAngle',\n    'parallelScale',\n    'useOffAxisProjection',\n    'freezeFocalPoint',\n    'physicalScale',\n  ]);\n\n  macro.getArray(publicAPI, model, [\n    'directionOfProjection',\n    'viewPlaneNormal',\n    'position',\n    'focalPoint',\n  ]);\n\n  macro.setGetArray(publicAPI, model, ['clippingRange', 'windowCenter'], 2);\n\n  macro.setGetArray(\n    publicAPI,\n    model,\n    [\n      'viewUp',\n      'screenBottomLeft',\n      'screenBottomRight',\n      'screenTopRight',\n      'physicalTranslation',\n      'physicalViewUp',\n      'physicalViewNorth',\n    ],\n    3\n  );\n\n  // Object methods\n  vtkCamera(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkCamera');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import macro from 'vtk.js/Sources/macro';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\n\n// ----------------------------------------------------------------------------\n\nexport const LIGHT_TYPES = ['HeadLight', 'CameraLight', 'SceneLight'];\n\n// ----------------------------------------------------------------------------\n// vtkLight methods\n// ----------------------------------------------------------------------------\n\nfunction vtkLight(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkLight');\n\n  publicAPI.getTransformedPosition = () => {\n    if (model.transformMatrix) {\n      return []; // FIXME !!!!\n    }\n    return [].concat(model.position);\n  };\n\n  publicAPI.getTransformedFocalPoint = () => {\n    if (model.transformMatrix) {\n      return []; // FIXME !!!!\n    }\n    return [].concat(model.focalPoint);\n  };\n\n  publicAPI.getDirection = () => {\n    if (model.directionMTime < model.mtime) {\n      model.direction[0] = model.focalPoint[0] - model.position[0];\n      model.direction[1] = model.focalPoint[1] - model.position[1];\n      model.direction[2] = model.focalPoint[2] - model.position[2];\n      vtkMath.normalize(model.direction);\n      model.directionMTime = model.mtime;\n    }\n    return model.direction;\n  };\n\n  publicAPI.setDirectionAngle = (elevation, azimuth) => {\n    const elevationRadians = vtkMath.radiansFromDegrees(elevation);\n    const azimuthRadians = vtkMath.radiansFromDegrees(azimuth);\n\n    publicAPI.setPosition(\n      Math.cos(elevationRadians) * Math.sin(azimuthRadians),\n      Math.sin(elevationRadians),\n      Math.cos(elevationRadians) * Math.cos(azimuthRadians)\n    );\n\n    publicAPI.setFocalPoint(0, 0, 0);\n    publicAPI.setPositional(0);\n  };\n\n  publicAPI.setLightTypeToHeadLight = () => {\n    publicAPI.setLightType('HeadLight');\n  };\n\n  publicAPI.setLightTypeToCameraLight = () => {\n    publicAPI.setLightType('CameraLight');\n  };\n\n  publicAPI.setLightTypeToSceneLight = () => {\n    publicAPI.setTransformMatrix(null);\n    publicAPI.setLightType('SceneLight');\n  };\n\n  publicAPI.lightTypeIsHeadLight = () => model.lightType === 'HeadLight';\n\n  publicAPI.lightTypeIsSceneLight = () => model.lightType === 'SceneLight';\n\n  publicAPI.lightTypeIsCameraLight = () => model.lightType === 'CameraLight';\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  switch: true,\n  intensity: 1,\n  color: [1, 1, 1],\n  position: [0, 0, 1],\n  focalPoint: [0, 0, 0],\n  positional: false,\n  exponent: 1,\n  coneAngle: 30,\n  attenuationValues: [1, 0, 0],\n  transformMatrix: null,\n  lightType: 'SceneLight',\n  shadowAttenuation: 1,\n  direction: [0, 0, 0],\n  directionMTime: 0,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, [\n    'intensity',\n    'switch',\n    'positional',\n    'exponent',\n    'coneAngle',\n    'transformMatrix',\n    'lightType',\n    'shadowAttenuation',\n  ]);\n  macro.setGetArray(\n    publicAPI,\n    model,\n    ['color', 'position', 'focalPoint', 'attenuationValues'],\n    3\n  );\n\n  // Object methods\n  vtkLight(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkLight');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend, LIGHT_TYPES };\n","import macro from 'vtk.js/Sources/macro';\n\nconst { vtkErrorMacro } = macro;\n\nfunction notImplemented(method) {\n  return () => vtkErrorMacro(`vtkViewport::${method} - NOT IMPLEMENTED`);\n}\n\n// ----------------------------------------------------------------------------\n// vtkViewport methods\n// ----------------------------------------------------------------------------\n\nfunction vtkViewport(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkViewport');\n\n  // Public API methods\n  publicAPI.getViewProps = () => model.props;\n  publicAPI.hasViewProp = (prop) =>\n    !!model.props.filter((item) => item === prop).length;\n  publicAPI.addViewProp = (prop) => {\n    if (prop && !publicAPI.hasViewProp(prop)) {\n      model.props = model.props.concat(prop);\n    }\n  };\n\n  publicAPI.removeViewProp = (prop) => {\n    const newPropList = model.props.filter((item) => item !== prop);\n    if (model.props.length !== newPropList.length) {\n      model.props = newPropList;\n    }\n  };\n\n  publicAPI.removeAllViewProps = () => {\n    model.props = [];\n  };\n\n  // this method get all the props including any nested props\n  function gatherProps(prop, allProps = []) {\n    allProps.push(prop);\n    const children = prop.getNestedProps();\n    if (children && children.length) {\n      for (let i = 0; i < children.length; i++) {\n        gatherProps(children[i], allProps);\n      }\n    }\n    return allProps;\n  }\n\n  publicAPI.getViewPropsWithNestedProps = () => {\n    const allPropsArray = [];\n    for (let i = 0; i < model.props.length; i++) {\n      gatherProps(model.props[i], allPropsArray);\n    }\n    return allPropsArray;\n  };\n\n  publicAPI.addActor2D = publicAPI.addViewProp;\n  publicAPI.removeActor2D = (prop) => {\n    // VTK way: model.actors2D.RemoveItem(prop);\n    publicAPI.removeViewProp(prop);\n  };\n\n  publicAPI.getActors2D = () => {\n    model.actors2D = [];\n    model.props.forEach((prop) => {\n      model.actors2D = model.actors2D.concat(prop.getActors2D());\n    });\n    return model.actors2D;\n  };\n\n  publicAPI.displayToView = () =>\n    vtkErrorMacro('call displayToView on your view instead');\n  publicAPI.viewToDisplay = () =>\n    vtkErrorMacro('callviewtodisplay on your view instead');\n  publicAPI.getSize = () => vtkErrorMacro('call getSize on your View instead');\n\n  publicAPI.normalizedDisplayToView = (x, y, z) => {\n    // first to normalized viewport\n    const nvp = publicAPI.normalizedDisplayToNormalizedViewport(x, y, z);\n\n    // then to view\n    return publicAPI.normalizedViewportToView(nvp[0], nvp[1], nvp[2]);\n  };\n\n  publicAPI.normalizedDisplayToNormalizedViewport = (x, y, z) => {\n    const scale = [\n      model.viewport[2] - model.viewport[0],\n      model.viewport[3] - model.viewport[1],\n    ];\n    return [\n      (x - model.viewport[0]) / scale[0],\n      (y - model.viewport[1]) / scale[1],\n      z,\n    ];\n  };\n\n  publicAPI.normalizedViewportToView = (x, y, z) => [\n    x * 2.0 - 1.0,\n    y * 2.0 - 1.0,\n    z * 2.0 - 1.0,\n  ];\n\n  publicAPI.viewToNormalizedDisplay = (x, y, z) => {\n    // first to nvp\n    const nvp = publicAPI.viewToNormalizedViewport(x, y, z);\n\n    // then to ndp\n    return publicAPI.normalizedViewportToNormalizedDisplay(\n      nvp[0],\n      nvp[1],\n      nvp[2]\n    );\n  };\n\n  publicAPI.normalizedViewportToNormalizedDisplay = (x, y, z) => {\n    const scale = [\n      model.viewport[2] - model.viewport[0],\n      model.viewport[3] - model.viewport[1],\n    ];\n    return [\n      x * scale[0] + model.viewport[0],\n      y * scale[1] + model.viewport[1],\n      z,\n    ];\n  };\n\n  publicAPI.viewToNormalizedViewport = (x, y, z) => [\n    (x + 1.0) * 0.5,\n    (y + 1.0) * 0.5,\n    (z + 1.0) * 0.5,\n  ];\n\n  publicAPI.PickPropFrom = notImplemented('PickPropFrom');\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  vtkWindow: null,\n  background: [0, 0, 0],\n  background2: [0.2, 0.2, 0.2],\n  gradientBackground: false,\n  viewport: [0, 0, 1, 1],\n  aspect: [1, 1],\n  pixelAspect: [1, 1],\n  props: [],\n  actors2D: [],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.event(publicAPI, model, 'event');\n\n  macro.setGetArray(publicAPI, model, ['viewport'], 4);\n\n  macro.setGetArray(publicAPI, model, ['background', 'background2'], 3);\n\n  vtkViewport(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkViewport');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import { mat4, vec3 } from 'gl-matrix';\n\nimport * as macro from 'vtk.js/Sources/macro';\nimport vtkCamera from 'vtk.js/Sources/Rendering/Core/Camera';\nimport vtkLight from 'vtk.js/Sources/Rendering/Core/Light';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport vtkViewport from 'vtk.js/Sources/Rendering/Core/Viewport';\nimport vtkBoundingBox from 'vtk.js/Sources/Common/DataModel/BoundingBox';\n\nconst { vtkDebugMacro, vtkErrorMacro, vtkWarningMacro } = macro;\n\nfunction notImplemented(method) {\n  return () => vtkErrorMacro(`vtkRenderer::${method} - NOT IMPLEMENTED`);\n}\n\n// ----------------------------------------------------------------------------\n// vtkRenderer methods\n// ----------------------------------------------------------------------------\n\nfunction vtkRenderer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderer');\n\n  // make sure background has 4 entries. Default to opaque black\n  if (!model.background) model.background = [0, 0, 0, 1];\n  while (model.background.length < 3) model.background.push(0);\n  if (model.background.length === 3) model.background.push(1);\n\n  // Events\n  const COMPUTE_VISIBLE_PROP_BOUNDS_EVENT = {\n    type: 'ComputeVisiblePropBoundsEvent',\n    renderer: publicAPI,\n  };\n  const RESET_CAMERA_CLIPPING_RANGE_EVENT = {\n    type: 'ResetCameraClippingRangeEvent',\n    renderer: publicAPI,\n  };\n  const RESET_CAMERA_EVENT = {\n    type: 'ResetCameraEvent',\n    renderer: publicAPI,\n  };\n\n  publicAPI.updateCamera = () => {\n    if (!model.activeCamera) {\n      vtkDebugMacro('No cameras are on, creating one.');\n      // the get method will automagically create a camera\n      // and reset it since one hasn't been specified yet.\n      publicAPI.getActiveCameraAndResetIfCreated();\n    }\n\n    // update the viewing transformation\n    model.activeCamera.render(publicAPI);\n\n    return true;\n  };\n\n  publicAPI.updateLightsGeometryToFollowCamera = () => {\n    // only update the light's geometry if this Renderer is tracking\n    // this lights.  That allows one renderer to view the lights that\n    // another renderer is setting up.\n    const camera = publicAPI.getActiveCameraAndResetIfCreated();\n\n    model.lights.forEach((light) => {\n      if (light.lightTypeIsSceneLight() || light.lightTypeIsCameraLight()) {\n        // Do nothing. Don't reset the transform matrix because applications\n        // may have set a custom matrix. Only reset the transform matrix in\n        // vtkLight::SetLightTypeToSceneLight()\n      } else if (light.lightTypeIsHeadLight()) {\n        // update position and orientation of light to match camera.\n        light.setPositionFrom(camera.getPositionByReference());\n        light.setFocalPointFrom(camera.getFocalPointByReference());\n        light.modified(camera.getMTime());\n      } else {\n        vtkErrorMacro('light has unknown light type', light.get());\n      }\n    });\n  };\n\n  publicAPI.updateLightGeometry = () => {\n    if (model.lightFollowCamera) {\n      // only update the light's geometry if this Renderer is tracking\n      // this lights.  That allows one renderer to view the lights that\n      // another renderer is setting up.\n      return publicAPI.updateLightsGeometryToFollowCamera();\n    }\n    return true;\n  };\n\n  publicAPI.allocateTime = notImplemented('allocateTime');\n  publicAPI.updateGeometry = notImplemented('updateGeometry');\n\n  publicAPI.getVTKWindow = () => model.renderWindow;\n\n  publicAPI.setLayer = (layer) => {\n    vtkDebugMacro(\n      publicAPI.getClassName(),\n      publicAPI,\n      'setting Layer to ',\n      layer\n    );\n    if (model.layer !== layer) {\n      model.layer = layer;\n      publicAPI.modified();\n    }\n    publicAPI.setPreserveColorBuffer(!!layer);\n  };\n\n  publicAPI.setActiveCamera = (camera) => {\n    if (model.activeCamera === camera) {\n      return false;\n    }\n\n    model.activeCamera = camera;\n    publicAPI.modified();\n    publicAPI.invokeEvent({ type: 'ActiveCameraEvent', camera });\n    return true;\n  };\n\n  publicAPI.makeCamera = () => {\n    const camera = vtkCamera.newInstance();\n    publicAPI.invokeEvent({ type: 'CreateCameraEvent', camera });\n    return camera;\n  };\n\n  // Replace the set/get macro method\n  publicAPI.getActiveCamera = () => {\n    if (!model.activeCamera) {\n      model.activeCamera = publicAPI.makeCamera();\n    }\n    return model.activeCamera;\n  };\n\n  publicAPI.getActiveCameraAndResetIfCreated = () => {\n    if (!model.activeCamera) {\n      publicAPI.getActiveCamera();\n      publicAPI.resetCamera();\n    }\n    return model.activeCamera;\n  };\n\n  publicAPI.getActors = () => {\n    model.actors = [];\n    model.props.forEach((prop) => {\n      model.actors = model.actors.concat(prop.getActors());\n    });\n    return model.actors;\n  };\n  publicAPI.addActor = publicAPI.addViewProp;\n  publicAPI.removeActor = (actor) => {\n    model.actors = model.actors.filter((a) => a !== actor);\n    publicAPI.removeViewProp(actor);\n    publicAPI.modified();\n  };\n  publicAPI.removeAllActors = () => {\n    model.actors.forEach((actor) => {\n      publicAPI.removeViewProp(actor);\n    });\n    model.actors = [];\n    publicAPI.modified();\n  };\n\n  publicAPI.getVolumes = () => {\n    model.volumes = [];\n    model.props.forEach((prop) => {\n      model.volumes = model.volumes.concat(prop.getVolumes());\n    });\n    return model.volumes;\n  };\n  publicAPI.addVolume = publicAPI.addViewProp;\n  publicAPI.removeVolume = (volume) => {\n    model.volumes = model.volumes.filter((v) => v !== volume);\n    publicAPI.removeViewProp(volume);\n    publicAPI.modified();\n  };\n  publicAPI.removeAllVolumes = () => {\n    model.volumes.forEach((volume) => {\n      publicAPI.removeViewProp(volume);\n    });\n    model.volumes = [];\n    publicAPI.modified();\n  };\n\n  publicAPI.addLight = (light) => {\n    model.lights = [].concat(model.lights, light);\n    publicAPI.modified();\n  };\n  publicAPI.removeLight = (light) => {\n    model.lights = model.lights.filter((l) => l !== light);\n    publicAPI.modified();\n  };\n  publicAPI.removeAllLights = () => {\n    model.lights = [];\n    publicAPI.modified();\n  };\n  publicAPI.setLightCollection = (lights) => {\n    model.lights = lights;\n    publicAPI.modified();\n  };\n\n  publicAPI.makeLight = vtkLight.newInstance;\n\n  publicAPI.createLight = () => {\n    if (!model.automaticLightCreation) {\n      return;\n    }\n\n    if (model.createdLight) {\n      publicAPI.removeLight(model.createdLight);\n      model.createdLight.delete();\n      model.createdLight = null;\n    }\n\n    model.createdLight = publicAPI.makeLight();\n    publicAPI.addLight(model.createdLight);\n\n    model.createdLight.setLightTypeToHeadLight();\n\n    // set these values just to have a good default should LightFollowCamera\n    // be turned off.\n    model.createdLight.setPosition(publicAPI.getActiveCamera().getPosition());\n    model.createdLight.setFocalPoint(\n      publicAPI.getActiveCamera().getFocalPoint()\n    );\n  };\n\n  // requires the aspect ratio of the viewport as X/Y\n  publicAPI.normalizedDisplayToWorld = (x, y, z, aspect) => {\n    const vpd = publicAPI.normalizedDisplayToView(x, y, z);\n\n    return publicAPI.viewToWorld(vpd[0], vpd[1], vpd[2], aspect);\n  };\n\n  // requires the aspect ratio of the viewport as X/Y\n  publicAPI.worldToNormalizedDisplay = (x, y, z, aspect) => {\n    const vpd = publicAPI.worldToView(x, y, z);\n\n    return publicAPI.viewToNormalizedDisplay(vpd[0], vpd[1], vpd[2], aspect);\n  };\n\n  // requires the aspect ratio of the viewport as X/Y\n  publicAPI.viewToWorld = (x, y, z, aspect) => {\n    if (model.activeCamera === null) {\n      vtkErrorMacro(\n        'ViewToWorld: no active camera, cannot compute view to world, returning 0,0,0'\n      );\n      return [0, 0, 0];\n    }\n\n    // get the perspective transformation from the active camera\n    const matrix = model.activeCamera.getCompositeProjectionMatrix(\n      aspect,\n      -1.0,\n      1.0\n    );\n\n    mat4.invert(matrix, matrix);\n    mat4.transpose(matrix, matrix);\n\n    // Transform point to world coordinates\n    const result = vec3.fromValues(x, y, z);\n    vec3.transformMat4(result, result, matrix);\n    return [result[0], result[1], result[2]];\n  };\n\n  // Convert world point coordinates to view coordinates.\n  // requires the aspect ratio of the viewport as X/Y\n  publicAPI.worldToView = (x, y, z, aspect) => {\n    if (model.activeCamera === null) {\n      vtkErrorMacro(\n        'ViewToWorld: no active camera, cannot compute view to world, returning 0,0,0'\n      );\n      return [0, 0, 0];\n    }\n\n    // get the perspective transformation from the active camera\n    const matrix = model.activeCamera.getCompositeProjectionMatrix(\n      aspect,\n      -1.0,\n      1.0\n    );\n    mat4.transpose(matrix, matrix);\n\n    const result = vec3.fromValues(x, y, z);\n    vec3.transformMat4(result, result, matrix);\n    return [result[0], result[1], result[2]];\n  };\n\n  publicAPI.computeVisiblePropBounds = () => {\n    model.allBounds[0] = vtkBoundingBox.INIT_BOUNDS[0];\n    model.allBounds[1] = vtkBoundingBox.INIT_BOUNDS[1];\n    model.allBounds[2] = vtkBoundingBox.INIT_BOUNDS[2];\n    model.allBounds[3] = vtkBoundingBox.INIT_BOUNDS[3];\n    model.allBounds[4] = vtkBoundingBox.INIT_BOUNDS[4];\n    model.allBounds[5] = vtkBoundingBox.INIT_BOUNDS[5];\n    let nothingVisible = true;\n\n    publicAPI.invokeEvent(COMPUTE_VISIBLE_PROP_BOUNDS_EVENT);\n\n    // loop through all props\n    for (let index = 0; index < model.props.length; ++index) {\n      const prop = model.props[index];\n      if (prop.getVisibility() && prop.getUseBounds()) {\n        const bounds = prop.getBounds();\n        if (bounds && vtkMath.areBoundsInitialized(bounds)) {\n          nothingVisible = false;\n\n          if (bounds[0] < model.allBounds[0]) {\n            model.allBounds[0] = bounds[0];\n          }\n          if (bounds[1] > model.allBounds[1]) {\n            model.allBounds[1] = bounds[1];\n          }\n          if (bounds[2] < model.allBounds[2]) {\n            model.allBounds[2] = bounds[2];\n          }\n          if (bounds[3] > model.allBounds[3]) {\n            model.allBounds[3] = bounds[3];\n          }\n          if (bounds[4] < model.allBounds[4]) {\n            model.allBounds[4] = bounds[4];\n          }\n          if (bounds[5] > model.allBounds[5]) {\n            model.allBounds[5] = bounds[5];\n          }\n        }\n      }\n    }\n\n    if (nothingVisible) {\n      vtkMath.uninitializeBounds(model.allBounds);\n      vtkDebugMacro(\"Can't compute bounds, no 3D props are visible\");\n    }\n\n    return model.allBounds;\n  };\n\n  publicAPI.resetCamera = (bounds = null) => {\n    const boundsToUse = bounds || publicAPI.computeVisiblePropBounds();\n    const center = [0, 0, 0];\n\n    if (!vtkMath.areBoundsInitialized(boundsToUse)) {\n      vtkDebugMacro('Cannot reset camera!');\n      return false;\n    }\n\n    let vn = null;\n\n    if (publicAPI.getActiveCamera()) {\n      vn = model.activeCamera.getViewPlaneNormal();\n    } else {\n      vtkErrorMacro('Trying to reset non-existant camera');\n      return false;\n    }\n\n    // Reset the perspective zoom factors, otherwise subsequent zooms will cause\n    // the view angle to become very small and cause bad depth sorting.\n    model.activeCamera.setViewAngle(30.0);\n\n    center[0] = (boundsToUse[0] + boundsToUse[1]) / 2.0;\n    center[1] = (boundsToUse[2] + boundsToUse[3]) / 2.0;\n    center[2] = (boundsToUse[4] + boundsToUse[5]) / 2.0;\n\n    let w1 = boundsToUse[1] - boundsToUse[0];\n    let w2 = boundsToUse[3] - boundsToUse[2];\n    let w3 = boundsToUse[5] - boundsToUse[4];\n    w1 *= w1;\n    w2 *= w2;\n    w3 *= w3;\n    let radius = w1 + w2 + w3;\n\n    // If we have just a single point, pick a radius of 1.0\n    radius = radius === 0 ? 1.0 : radius;\n\n    // compute the radius of the enclosing sphere\n    radius = Math.sqrt(radius) * 0.5;\n\n    // default so that the bounding sphere fits within the view fustrum\n\n    // compute the distance from the intersection of the view frustum with the\n    // bounding sphere. Basically in 2D draw a circle representing the bounding\n    // sphere in 2D then draw a horizontal line going out from the center of\n    // the circle. That is the camera view. Then draw a line from the camera\n    // position to the point where it intersects the circle. (it will be tangent\n    // to the circle at this point, this is important, only go to the tangent\n    // point, do not draw all the way to the view plane). Then draw the radius\n    // from the tangent point to the center of the circle. You will note that\n    // this forms a right triangle with one side being the radius, another being\n    // the target distance for the camera, then just find the target dist using\n    // a sin.\n    const angle = vtkMath.radiansFromDegrees(model.activeCamera.getViewAngle());\n    const parallelScale = radius;\n    const distance = radius / Math.sin(angle * 0.5);\n\n    // check view-up vector against view plane normal\n    const vup = model.activeCamera.getViewUp();\n    if (Math.abs(vtkMath.dot(vup, vn)) > 0.999) {\n      vtkWarningMacro('Resetting view-up since view plane normal is parallel');\n      model.activeCamera.setViewUp(-vup[2], vup[0], vup[1]);\n    }\n\n    // update the camera\n    model.activeCamera.setFocalPoint(center[0], center[1], center[2]);\n    model.activeCamera.setPosition(\n      center[0] + distance * vn[0],\n      center[1] + distance * vn[1],\n      center[2] + distance * vn[2]\n    );\n\n    publicAPI.resetCameraClippingRange(boundsToUse);\n\n    // setup default parallel scale\n    model.activeCamera.setParallelScale(parallelScale);\n\n    // update reasonable world to physical values\n    model.activeCamera.setPhysicalScale(radius);\n    model.activeCamera.setPhysicalTranslation(\n      -center[0],\n      -center[1],\n      -center[2]\n    );\n\n    // Here to let parallel/distributed compositing intercept\n    // and do the right thing.\n    publicAPI.invokeEvent(RESET_CAMERA_EVENT);\n\n    return true;\n  };\n\n  publicAPI.resetCameraClippingRange = (bounds = null) => {\n    const boundsToUse = bounds || publicAPI.computeVisiblePropBounds();\n\n    if (!vtkMath.areBoundsInitialized(boundsToUse)) {\n      vtkDebugMacro('Cannot reset camera clipping range!');\n      return false;\n    }\n\n    // Make sure we have an active camera\n    publicAPI.getActiveCameraAndResetIfCreated();\n    if (!model.activeCamera) {\n      vtkErrorMacro('Trying to reset clipping range of non-existant camera');\n      return false;\n    }\n\n    // Get the exact range for the bounds\n    const range = model.activeCamera.computeClippingRange(boundsToUse);\n\n    // do not let far - near be less than 0.1 of the window height\n    // this is for cases such as 2D images which may have zero range\n    let minGap = 0.0;\n    if (model.activeCamera.getParallelProjection()) {\n      minGap = 0.1 * model.activeCamera.getParallelScale();\n    } else {\n      const angle = vtkMath.radiansFromDegrees(\n        model.activeCamera.getViewAngle()\n      );\n      minGap = 0.2 * Math.tan(angle / 2.0) * range[1];\n    }\n\n    if (range[1] - range[0] < minGap) {\n      minGap = minGap - range[1] + range[0];\n      range[1] += minGap / 2.0;\n      range[0] -= minGap / 2.0;\n    }\n\n    // Do not let the range behind the camera throw off the calculation.\n    if (range[0] < 0.0) {\n      range[0] = 0.0;\n    }\n\n    // Give ourselves a little breathing room\n    range[0] =\n      0.99 * range[0] - (range[1] - range[0]) * model.clippingRangeExpansion;\n    range[1] =\n      1.01 * range[1] + (range[1] - range[0]) * model.clippingRangeExpansion;\n\n    // Make sure near is not bigger than far\n    range[0] = range[0] >= range[1] ? 0.01 * range[1] : range[0];\n\n    // Make sure near is at least some fraction of far - this prevents near\n    // from being behind the camera or too close in front. How close is too\n    // close depends on the resolution of the depth buffer\n    if (!model.nearClippingPlaneTolerance) {\n      model.nearClippingPlaneTolerance = 0.01;\n    }\n\n    // make sure the front clipping range is not too far from the far clippnig\n    // range, this is to make sure that the zbuffer resolution is effectively\n    // used\n    if (range[0] < model.nearClippingPlaneTolerance * range[1]) {\n      range[0] = model.nearClippingPlaneTolerance * range[1];\n    }\n    model.activeCamera.setClippingRange(range[0], range[1]);\n\n    // Here to let parallel/distributed compositing intercept\n    // and do the right thing.\n    publicAPI.invokeEvent(RESET_CAMERA_CLIPPING_RANGE_EVENT);\n    return false;\n  };\n\n  publicAPI.setRenderWindow = (renderWindow) => {\n    if (renderWindow !== model.renderWindow) {\n      model.vtkWindow = renderWindow;\n      model.renderWindow = renderWindow;\n    }\n  };\n\n  publicAPI.visibleActorCount = () =>\n    model.props.filter((prop) => prop.getVisibility()).length;\n  publicAPI.visibleVolumeCount = publicAPI.visibleActorCount;\n\n  publicAPI.getMTime = () => {\n    let m1 = model.mtime;\n    const m2 = model.activeCamera ? model.activeCamera.getMTime() : 0;\n    if (m2 > m1) {\n      m1 = m2;\n    }\n    const m3 = model.createdLight ? model.createdLight.getMTime() : 0;\n    if (m3 > m1) {\n      m1 = m3;\n    }\n    return m1;\n  };\n\n  publicAPI.getTransparent = () => !!model.preserveColorBuffer;\n\n  publicAPI.isActiveCameraCreated = () => !!model.activeCamera;\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  pickedProp: null,\n  activeCamera: null,\n\n  allBounds: [],\n  ambient: [1, 1, 1],\n\n  allocatedRenderTime: 100,\n  timeFactor: 1,\n\n  createdLight: null,\n  automaticLightCreation: true,\n\n  twoSidedLighting: true,\n  lastRenderTimeInSeconds: -1,\n\n  renderWindow: null,\n  lights: [],\n  actors: [],\n  volumes: [],\n\n  lightFollowCamera: true,\n\n  numberOfPropsRendered: 0,\n\n  propArray: null,\n\n  pathArray: null,\n\n  layer: 0,\n  preserveColorBuffer: false,\n  preserveDepthBuffer: false,\n\n  computeVisiblePropBounds: vtkMath.createUninitializedBounds(),\n\n  interactive: true,\n\n  nearClippingPlaneTolerance: 0,\n  clippingRangeExpansion: 0.05,\n\n  erase: true,\n  draw: true,\n\n  useShadows: false,\n\n  useDepthPeeling: false,\n  occlusionRatio: 0,\n  maximumNumberOfPeels: 4,\n\n  selector: null,\n  delegate: null,\n\n  texturedBackground: false,\n  backgroundTexture: null,\n\n  pass: 0,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewport.extend(publicAPI, model, initialValues);\n\n  // Build VTK API\n  macro.get(publicAPI, model, [\n    'renderWindow',\n\n    'allocatedRenderTime',\n    'timeFactor',\n\n    'lastRenderTimeInSeconds',\n    'numberOfPropsRendered',\n    'lastRenderingUsedDepthPeeling',\n\n    'selector',\n  ]);\n  macro.setGet(publicAPI, model, [\n    'twoSidedLighting',\n    'lightFollowCamera',\n    'automaticLightCreation',\n    'erase',\n    'draw',\n    'nearClippingPlaneTolerance',\n    'clippingRangeExpansion',\n    'backingStore',\n    'interactive',\n    'layer',\n    'preserveColorBuffer',\n    'preserveDepthBuffer',\n    'useDepthPeeling',\n    'occlusionRatio',\n    'maximumNumberOfPeels',\n    'delegate',\n    'backgroundTexture',\n    'texturedBackground',\n    'useShadows',\n    'pass',\n  ]);\n  macro.getArray(publicAPI, model, ['actors', 'volumes', 'lights']);\n  macro.setGetArray(publicAPI, model, ['background'], 4, 1.0);\n\n  // Object methods\n  vtkRenderer(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkRenderer');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import macro from 'vtk.js/Sources/macro';\n\n// ----------------------------------------------------------------------------\n// vtkRenderWindow methods\n// ----------------------------------------------------------------------------\n\nfunction vtkRenderWindow(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderWindow');\n\n  // Add renderer\n  publicAPI.addRenderer = (renderer) => {\n    if (publicAPI.hasRenderer(renderer)) {\n      return;\n    }\n    renderer.setRenderWindow(publicAPI);\n    model.renderers.push(renderer);\n\n    // for (this->Renderers->InitTraversal(rsit);\n    //      (aren = this->Renderers->GetNextRenderer(rsit)); )\n    //   {\n    //   aren->SetAllocatedRenderTime\n    //     (1.0/(this->DesiredUpdateRate*this->Renderers->GetNumberOfItems()));\n    //   }\n\n    publicAPI.modified();\n  };\n\n  // Remove renderer\n  publicAPI.removeRenderer = (renderer) => {\n    model.renderers = model.renderers.filter((r) => r !== renderer);\n    publicAPI.modified();\n  };\n\n  publicAPI.hasRenderer = (ren) => model.renderers.indexOf(ren) !== -1;\n\n  // Add renderer\n  publicAPI.addView = (view) => {\n    if (publicAPI.hasView(view)) {\n      return;\n    }\n    view.setRenderable(publicAPI);\n    model.views.push(view);\n    publicAPI.modified();\n  };\n\n  // Remove renderer\n  publicAPI.removeView = (view) => {\n    model.views = model.views.filter((r) => r !== view);\n    publicAPI.modified();\n  };\n\n  publicAPI.hasView = (view) => model.views.indexOf(view) !== -1;\n\n  publicAPI.render = () => {\n    if (model.interactor) {\n      model.interactor.render();\n    } else {\n      model.views.forEach((view) => view.traverseAllPasses());\n    }\n  };\n\n  publicAPI.getStatistics = () => {\n    const results = { propCount: 0, invisiblePropCount: 0 };\n    model.renderers.forEach((ren) => {\n      const props = ren.getViewProps();\n      props.forEach((prop) => {\n        if (prop.getVisibility()) {\n          results.propCount += 1;\n          const mpr = prop.getMapper && prop.getMapper();\n          if (mpr && mpr.getPrimitiveCount) {\n            const pcount = mpr.getPrimitiveCount();\n            Object.keys(pcount).forEach((keyName) => {\n              if (!results[keyName]) {\n                results[keyName] = 0;\n              }\n              results[keyName] += pcount[keyName];\n            });\n          }\n        } else {\n          results.invisiblePropCount += 1;\n        }\n      });\n    });\n    results.str = Object.keys(results)\n      .map((keyName) => `${keyName}: ${results[keyName]}`)\n      .join('\\n');\n\n    return results;\n  };\n\n  publicAPI.captureImages = (format = 'image/png') => {\n    macro.setImmediate(publicAPI.render);\n    return model.views\n      .map(\n        (view) =>\n          view.captureNextImage ? view.captureNextImage(format) : undefined\n      )\n      .filter((i) => !!i);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nexport const DEFAULT_VALUES = {\n  renderers: [],\n  views: [],\n  interactor: null,\n  neverRendered: true,\n  numberOfLayers: 1,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['interactor', 'numberOfLayers', 'views']);\n  macro.get(publicAPI, model, ['neverRendered']);\n  macro.getArray(publicAPI, model, ['renderers']);\n  macro.event(publicAPI, model, 'completion');\n\n  // Object methods\n  vtkRenderWindow(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkRenderWindow');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","export const Device = {\n  Unknown: 0,\n  LeftController: 1,\n  RightController: 2,\n};\n\nexport const Input = {\n  Unknown: 0,\n  Trigger: 1,\n  TrackPad: 2,\n  Grip: 3,\n  ApplicationMenu: 4,\n};\n\nexport default {\n  Device,\n  Input,\n};\n","import macro from 'vtk.js/Sources/macro';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\n\nimport Constants from 'vtk.js/Sources/Rendering/Core/RenderWindowInteractor/Constants';\n\nconst { Device, Input } = Constants;\nconst {\n  vtkWarningMacro,\n  vtkErrorMacro,\n  normalizeWheel,\n  vtkOnceErrorMacro,\n} = macro;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nconst deviceInputMap = {\n  'OpenVR Gamepad': [\n    Input.TrackPad,\n    Input.Trigger,\n    Input.Grip,\n    Input.ApplicationMenu,\n  ],\n};\n\nconst handledEvents = [\n  'StartAnimation',\n  'Animation',\n  'EndAnimation',\n  'StartMouseMove',\n  'MouseMove',\n  'EndMouseMove',\n  'LeftButtonPress',\n  'LeftButtonRelease',\n  'MiddleButtonPress',\n  'MiddleButtonRelease',\n  'RightButtonPress',\n  'RightButtonRelease',\n  'KeyPress',\n  'KeyDown',\n  'KeyUp',\n  'StartMouseWheel',\n  'MouseWheel',\n  'EndMouseWheel',\n  'StartPinch',\n  'Pinch',\n  'EndPinch',\n  'StartPan',\n  'Pan',\n  'EndPan',\n  'StartRotate',\n  'Rotate',\n  'EndRotate',\n  'Button3D',\n  'Move3D',\n  'StartInteractionEvent',\n  'InteractionEvent',\n  'EndInteractionEvent',\n];\n\nfunction preventDefault(event) {\n  event.stopPropagation();\n  event.preventDefault();\n  return false;\n}\n\n// ----------------------------------------------------------------------------\n// vtkRenderWindowInteractor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkRenderWindowInteractor(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderWindowInteractor');\n\n  // Initialize list of requesters\n  const animationRequesters = new Set();\n\n  // Public API methods\n\n  //----------------------------------------------------------------------\n  publicAPI.start = () => {\n    // Let the compositing handle the event loop if it wants to.\n    // if (publicAPI.HasObserver(vtkCommand::StartEvent) && !publicAPI.HandleEventLoop) {\n    //   publicAPI.invokeEvent({ type: 'StartEvent' });\n    //   return;\n    // }\n\n    // As a convenience, initialize if we aren't initialized yet.\n    if (!model.initialized) {\n      publicAPI.initialize();\n      if (!model.initialized) {\n        return;\n      }\n    }\n    // Pass execution to the subclass which will run the event loop,\n    // this will not return until TerminateApp is called.\n    publicAPI.startEventLoop();\n  };\n\n  //----------------------------------------------------------------------\n  publicAPI.setRenderWindow = (aren) => {\n    vtkErrorMacro(\n      'you want to call setView(view) instead of setRenderWindow on a vtk.js interactor'\n    );\n  };\n\n  //----------------------------------------------------------------------\n  publicAPI.setInteractorStyle = (style) => {\n    if (model.interactorStyle !== style) {\n      if (model.interactorStyle != null) {\n        model.interactorStyle.setInteractor(null);\n      }\n      model.interactorStyle = style;\n      if (model.interactorStyle != null) {\n        if (model.interactorStyle.getInteractor() !== publicAPI) {\n          model.interactorStyle.setInteractor(publicAPI);\n        }\n      }\n    }\n  };\n\n  //---------------------------------------------------------------------\n  publicAPI.initialize = () => {\n    model.initialized = true;\n    publicAPI.enable();\n    publicAPI.render();\n  };\n\n  publicAPI.enable = () => publicAPI.setEnabled(true);\n\n  publicAPI.disable = () => publicAPI.setEnabled(false);\n\n  publicAPI.startEventLoop = () => vtkWarningMacro('empty event loop');\n\n  function updateCurrentRenderer(x, y) {\n    model.currentRenderer = publicAPI.findPokedRenderer(x, y);\n  }\n\n  publicAPI.getCurrentRenderer = () => {\n    if (model.currentRenderer) {\n      return model.currentRenderer;\n    }\n    updateCurrentRenderer(0, 0);\n    return model.currentRenderer;\n  };\n\n  function getScreenEventPositionFor(source) {\n    const bounds = model.container.getBoundingClientRect();\n    const canvas = model.view.getCanvas();\n    const scaleX = canvas.width / bounds.width;\n    const scaleY = canvas.height / bounds.height;\n    const position = {\n      x: scaleX * (source.clientX - bounds.left),\n      y: scaleY * (bounds.height - source.clientY + bounds.top),\n      z: 0,\n    };\n    updateCurrentRenderer(position.x, position.y);\n    return position;\n  }\n\n  function getTouchEventPositionsFor(touches) {\n    const positions = {};\n    for (let i = 0; i < touches.length; i++) {\n      const touch = touches[i];\n      positions[touch.identifier] = getScreenEventPositionFor(touch);\n    }\n    return positions;\n  }\n\n  function getModifierKeysFor(event) {\n    return {\n      controlKey: event.ctrlKey,\n      altKey: event.altKey,\n      shiftKey: event.shiftKey,\n    };\n  }\n\n  function getKeysFor(event) {\n    const modifierKeys = getModifierKeysFor(event);\n    const keys = {\n      key: event.key,\n      keyCode: event.charCode,\n    };\n    Object.assign(keys, modifierKeys);\n    return keys;\n  }\n\n  function interactionRegistration(addListeners) {\n    const rootElm = document.querySelector('body');\n    const method = addListeners ? 'addEventListener' : 'removeEventListener';\n    const invMethod = addListeners ? 'removeEventListener' : 'addEventListener';\n\n    if (model.container) {\n      model.container[invMethod]('mousemove', publicAPI.handleMouseMove);\n    }\n\n    rootElm[method]('mouseup', publicAPI.handleMouseUp);\n    rootElm[method]('mouseleave', publicAPI.handleMouseUp);\n    rootElm[method]('mousemove', publicAPI.handleMouseMove);\n    rootElm[method]('touchend', publicAPI.handleTouchEnd, false);\n    rootElm[method]('touchcancel', publicAPI.handleTouchEnd, false);\n    rootElm[method]('touchmove', publicAPI.handleTouchMove, false);\n  }\n\n  publicAPI.bindEvents = (container) => {\n    model.container = container;\n    container.addEventListener('contextmenu', preventDefault);\n    // container.addEventListener('click', preventDefault); // Avoid stopping event propagation\n    container.addEventListener('wheel', publicAPI.handleWheel);\n    container.addEventListener('DOMMouseScroll', publicAPI.handleWheel);\n    container.addEventListener('mousemove', publicAPI.handleMouseMove);\n    container.addEventListener('mousedown', publicAPI.handleMouseDown);\n    document\n      .querySelector('body')\n      .addEventListener('keypress', publicAPI.handleKeyPress);\n    document\n      .querySelector('body')\n      .addEventListener('keydown', publicAPI.handleKeyDown);\n    document\n      .querySelector('body')\n      .addEventListener('keyup', publicAPI.handleKeyUp);\n\n    container.addEventListener('touchstart', publicAPI.handleTouchStart, false);\n  };\n\n  publicAPI.unbindEvents = () => {\n    interactionRegistration(false);\n    model.container.removeEventListener('contextmenu', preventDefault);\n    // model.container.removeEventListener('click', preventDefault); // Avoid stopping event propagation\n    model.container.removeEventListener('wheel', publicAPI.handleWheel);\n    model.container.removeEventListener(\n      'DOMMouseScroll',\n      publicAPI.handleWheel\n    );\n    model.container.removeEventListener('mousemove', publicAPI.handleMouseMove);\n    model.container.removeEventListener('mousedown', publicAPI.handleMouseDown);\n    document\n      .querySelector('body')\n      .removeEventListener('keypress', publicAPI.handleKeyPress);\n    document\n      .querySelector('body')\n      .removeEventListener('keydown', publicAPI.handleKeyDown);\n    document\n      .querySelector('body')\n      .removeEventListener('keyup', publicAPI.handleKeyUp);\n    model.container.removeEventListener(\n      'touchstart',\n      publicAPI.handleTouchStart\n    );\n    model.container = null;\n  };\n\n  publicAPI.handleKeyPress = (event) => {\n    const data = getKeysFor(event);\n    publicAPI.keyPressEvent(data);\n  };\n\n  publicAPI.handleKeyDown = (event) => {\n    const data = getKeysFor(event);\n    publicAPI.keyDownEvent(data);\n  };\n\n  publicAPI.handleKeyUp = (event) => {\n    const data = getKeysFor(event);\n    publicAPI.keyUpEvent(data);\n  };\n\n  publicAPI.handleMouseDown = (event) => {\n    interactionRegistration(true);\n    event.stopPropagation();\n    event.preventDefault();\n\n    const callData = {\n      position: getScreenEventPositionFor(event),\n    };\n    const keys = getModifierKeysFor(event);\n    Object.assign(callData, keys);\n    switch (event.which) {\n      case 1:\n        publicAPI.leftButtonPressEvent(callData);\n        break;\n      case 2:\n        publicAPI.middleButtonPressEvent(callData);\n        break;\n      case 3:\n        publicAPI.rightButtonPressEvent(callData);\n        break;\n      default:\n        vtkErrorMacro(`Unknown mouse button pressed: ${event.which}`);\n        break;\n    }\n  };\n\n  //----------------------------------------------------------------------\n  function forceRender() {\n    if (model.view && model.enabled && model.enableRender) {\n      model.inRender = true;\n      model.view.traverseAllPasses();\n      model.inRender = false;\n    }\n    // outside the above test so that third-party code can redirect\n    // the render to the appropriate class\n    publicAPI.invokeRenderEvent();\n  }\n\n  publicAPI.requestAnimation = (requestor) => {\n    if (requestor === undefined) {\n      vtkErrorMacro(`undefined requester, can not start animating`);\n      return;\n    }\n    if (animationRequesters.has(requestor)) {\n      vtkWarningMacro(`requester is already registered for animating`);\n      return;\n    }\n    animationRequesters.add(requestor);\n    if (animationRequesters.size === 1) {\n      model.lastFrameTime = 0.1;\n      model.lastFrameStart = Date.now();\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n      publicAPI.startAnimationEvent();\n    }\n  };\n\n  publicAPI.isAnimating = () =>\n    model.vrAnimation || model.animationRequest !== null;\n\n  publicAPI.cancelAnimation = (requestor, skipWarning = false) => {\n    if (!animationRequesters.has(requestor)) {\n      if (!skipWarning) {\n        const requestStr =\n          requestor && requestor.getClassName\n            ? requestor.getClassName()\n            : requestor;\n        vtkWarningMacro(`${requestStr} did not request an animation`);\n      }\n\n      return;\n    }\n    animationRequesters.delete(requestor);\n    if (model.animationRequest && animationRequesters.size === 0) {\n      cancelAnimationFrame(model.animationRequest);\n      model.animationRequest = null;\n      publicAPI.endAnimationEvent();\n      publicAPI.render();\n    }\n  };\n\n  publicAPI.switchToVRAnimation = () => {\n    // cancel existing animation if any\n    if (model.animationRequest) {\n      cancelAnimationFrame(model.animationRequest);\n      model.animationRequest = null;\n    }\n    model.vrAnimation = true;\n  };\n\n  publicAPI.returnFromVRAnimation = () => {\n    model.vrAnimation = false;\n  };\n\n  publicAPI.updateGamepads = (displayId) => {\n    const gamepads = navigator.getGamepads();\n\n    // watch for when buttons change state and fire events\n    for (let i = 0; i < gamepads.length; ++i) {\n      const gp = gamepads[i];\n      if (gp && gp.displayId === displayId) {\n        if (!(gp.index in model.lastGamepadValues)) {\n          model.lastGamepadValues[gp.index] = { buttons: {} };\n        }\n        for (let b = 0; b < gp.buttons.length; ++b) {\n          if (!(b in model.lastGamepadValues[gp.index].buttons)) {\n            model.lastGamepadValues[gp.index].buttons[b] = false;\n          }\n          if (\n            model.lastGamepadValues[gp.index].buttons[b] !==\n            gp.buttons[b].pressed\n          ) {\n            publicAPI.button3DEvent({\n              gamepad: gp,\n              position: gp.pose.position,\n              orientation: gp.pose.orientation,\n              pressed: gp.buttons[b].pressed,\n              device:\n                gp.hand === 'left'\n                  ? Device.LeftController\n                  : Device.RightController,\n              input:\n                deviceInputMap[gp.id] && deviceInputMap[gp.id][b]\n                  ? deviceInputMap[gp.id][b]\n                  : Input.Trigger,\n            });\n            model.lastGamepadValues[gp.index].buttons[b] =\n              gp.buttons[b].pressed;\n          }\n          if (model.lastGamepadValues[gp.index].buttons[b]) {\n            publicAPI.move3DEvent({\n              gamepad: gp,\n              position: gp.pose.position,\n              orientation: gp.pose.orientation,\n              device:\n                gp.hand === 'left'\n                  ? Device.LeftController\n                  : Device.RightController,\n            });\n          }\n        }\n      }\n    }\n  };\n\n  publicAPI.handleMouseMove = (event) => {\n    // Do not consume event for move\n    // event.stopPropagation();\n    // event.preventDefault();\n\n    const callData = {\n      position: getScreenEventPositionFor(event),\n    };\n    const keys = getModifierKeysFor(event);\n    Object.assign(callData, keys);\n\n    if (model.moveTimeoutID === 0) {\n      publicAPI.startMouseMoveEvent(callData);\n    } else {\n      publicAPI.mouseMoveEvent(callData);\n      clearTimeout(model.moveTimeoutID);\n    }\n\n    // start a timer to keep us animating while we get mouse move events\n    model.moveTimeoutID = setTimeout(() => {\n      publicAPI.endMouseMoveEvent();\n      model.moveTimeoutID = 0;\n    }, 200);\n  };\n\n  publicAPI.handleAnimation = () => {\n    const currTime = Date.now();\n    if (model.FrameTime === -1.0) {\n      model.lastFrameTime = 0.1;\n    } else {\n      model.lastFrameTime = (currTime - model.lastFrameStart) / 1000.0;\n    }\n    model.lastFrameTime = Math.max(0.01, model.lastFrameTime);\n    model.lastFrameStart = currTime;\n    publicAPI.animationEvent();\n    forceRender();\n    model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n  };\n\n  publicAPI.handleWheel = (event) => {\n    event.stopPropagation();\n    event.preventDefault();\n\n    /**\n     * wheel event values can vary significantly across browsers, platforms\n     * and devices [1]. `normalizeWheel` uses facebook's solution from their\n     * fixed-data-table repository [2].\n     *\n     * [1] https://developer.mozilla.org/en-US/docs/Web/Events/mousewheel\n     * [2] https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\n     *\n     * This code will return an object with properties:\n     *\n     *   spinX   -- normalized spin speed (use for zoom) - x plane\n     *   spinY   -- \" - y plane\n     *   pixelX  -- normalized distance (to pixels) - x plane\n     *   pixelY  -- \" - y plane\n     *\n     */\n    const callData = normalizeWheel(event);\n    const keys = getModifierKeysFor(event);\n    Object.assign(callData, keys);\n\n    if (model.wheelTimeoutID === 0) {\n      publicAPI.startMouseWheelEvent(callData);\n    } else {\n      publicAPI.mouseWheelEvent(callData);\n      clearTimeout(model.wheelTimeoutID);\n    }\n\n    // start a timer to keep us animating while we get wheel events\n    model.wheelTimeoutID = setTimeout(() => {\n      publicAPI.endMouseWheelEvent();\n      model.wheelTimeoutID = 0;\n    }, 200);\n  };\n\n  publicAPI.handleMouseUp = (event) => {\n    interactionRegistration(false);\n    event.stopPropagation();\n    event.preventDefault();\n\n    const callData = {\n      position: getScreenEventPositionFor(event),\n    };\n    const keys = getModifierKeysFor(event);\n    Object.assign(callData, keys);\n    switch (event.which) {\n      case 1:\n        publicAPI.leftButtonReleaseEvent(callData);\n        break;\n      case 2:\n        publicAPI.middleButtonReleaseEvent(callData);\n        break;\n      case 3:\n        publicAPI.rightButtonReleaseEvent(callData);\n        break;\n      default:\n        vtkErrorMacro(`Unknown mouse button released: ${event.which}`);\n        break;\n    }\n  };\n\n  publicAPI.handleTouchStart = (event) => {\n    interactionRegistration(true);\n    event.stopPropagation();\n    event.preventDefault();\n\n    // If multitouch\n    if (model.recognizeGestures && event.touches.length > 1) {\n      const positions = getTouchEventPositionsFor(event.touches);\n      // did we just transition to multitouch?\n      if (event.touches.length === 2) {\n        const touch = event.touches[0];\n        const callData = {\n          position: getScreenEventPositionFor(touch),\n          shiftKey: false,\n          altKey: false,\n          controlKey: false,\n        };\n        publicAPI.leftButtonReleaseEvent(callData);\n      }\n      // handle the gesture\n      publicAPI.recognizeGesture('TouchStart', positions);\n    } else {\n      const touch = event.touches[0];\n      const callData = {\n        position: getScreenEventPositionFor(touch),\n        shiftKey: false,\n        altKey: false,\n        controlKey: false,\n      };\n      publicAPI.leftButtonPressEvent(callData);\n    }\n  };\n\n  publicAPI.handleTouchMove = (event) => {\n    event.stopPropagation();\n    event.preventDefault();\n\n    if (model.recognizeGestures && event.touches.length > 1) {\n      const positions = getTouchEventPositionsFor(event.touches);\n      publicAPI.recognizeGesture('TouchMove', positions);\n    } else {\n      const touch = event.touches[0];\n      const callData = {\n        position: getScreenEventPositionFor(touch),\n        shiftKey: false,\n        altKey: false,\n        controlKey: false,\n      };\n      publicAPI.mouseMoveEvent(callData);\n    }\n  };\n\n  publicAPI.handleTouchEnd = (event) => {\n    event.stopPropagation();\n    event.preventDefault();\n\n    if (model.recognizeGestures) {\n      // No more fingers down\n      if (event.touches.length === 0) {\n        // If just one finger released, consider as left button\n        if (event.changedTouches.length === 1) {\n          const touch = event.changedTouches[0];\n          const callData = {\n            position: getScreenEventPositionFor(touch),\n            shiftKey: false,\n            altKey: false,\n            controlKey: false,\n          };\n          publicAPI.leftButtonReleaseEvent(callData);\n          interactionRegistration(false);\n        } else {\n          // If more than one finger released, recognize touchend\n          const positions = getTouchEventPositionsFor(event.changedTouches);\n          publicAPI.recognizeGesture('TouchEnd', positions);\n          interactionRegistration(false);\n        }\n      } else if (event.touches.length === 1) {\n        // If one finger left, end touch and start button press\n        const positions = getTouchEventPositionsFor(event.changedTouches);\n        publicAPI.recognizeGesture('TouchEnd', positions);\n        const touch = event.touches[0];\n        const callData = {\n          position: getScreenEventPositionFor(touch),\n          shiftKey: false,\n          altKey: false,\n          controlKey: false,\n        };\n        publicAPI.leftButtonPressEvent(callData);\n      } else {\n        // If more than one finger left, keep touch move\n        const positions = getTouchEventPositionsFor(event.touches);\n        publicAPI.recognizeGesture('TouchMove', positions);\n      }\n    } else {\n      const touch = event.changedTouches[0];\n      const callData = {\n        position: getScreenEventPositionFor(touch),\n        shiftKey: false,\n        altKey: false,\n        controlKey: false,\n      };\n      publicAPI.leftButtonReleaseEvent(callData);\n      interactionRegistration(false);\n    }\n  };\n\n  publicAPI.setView = (val) => {\n    if (model.view === val) {\n      return;\n    }\n    model.view = val;\n    model.view.getRenderable().setInteractor(publicAPI);\n    publicAPI.modified();\n  };\n\n  publicAPI.findPokedRenderer = (x = 0, y = 0) => {\n    if (!model.view) {\n      return null;\n    }\n    const rc = model.view.getRenderable().getRenderersByReference();\n    let interactiveren = null;\n    let viewportren = null;\n    let currentRenderer = null;\n\n    let count = rc.length;\n    while (count--) {\n      const aren = rc[count];\n      if (model.view.isInViewport(x, y, aren) && aren.getInteractive()) {\n        currentRenderer = aren;\n      }\n\n      if (interactiveren === null && aren.getInteractive()) {\n        // Save this renderer in case we can't find one in the viewport that\n        // is interactive.\n        interactiveren = aren;\n      }\n      if (viewportren === null && model.view.isInViewport(x, y, aren)) {\n        // Save this renderer in case we can't find one in the viewport that\n        // is interactive.\n        viewportren = aren;\n      }\n    }\n\n    // We must have a value.  If we found an interactive renderer before, that's\n    // better than a non-interactive renderer.\n    if (currentRenderer === null) {\n      currentRenderer = interactiveren;\n    }\n\n    // We must have a value.  If we found a renderer that is in the viewport,\n    // that is better than any old viewport (but not as good as an interactive\n    // one).\n    if (currentRenderer === null) {\n      currentRenderer = viewportren;\n    }\n\n    // We must have a value - take anything.\n    if (currentRenderer == null) {\n      currentRenderer = rc[0];\n    }\n\n    return currentRenderer;\n  };\n\n  // only render if we are not animating. If we are animating\n  // then renders will happen naturally anyhow and we definitely\n  // do not want extra renders as the make the apparent interaction\n  // rate slower.\n  publicAPI.render = () => {\n    if (model.animationRequest === null && !model.inRender) {\n      forceRender();\n    }\n  };\n\n  // create the generic Event methods\n  handledEvents.forEach((eventName) => {\n    const lowerFirst = eventName.charAt(0).toLowerCase() + eventName.slice(1);\n    publicAPI[`${lowerFirst}Event`] = (arg) => {\n      // Check that interactor enabled\n      if (!model.enabled) {\n        return;\n      }\n\n      // Check that a poked renderer exists\n      const renderer = publicAPI.getCurrentRenderer();\n      if (!renderer) {\n        vtkOnceErrorMacro(`\n          Can not forward events without a current renderer on the interactor.\n        `);\n        return;\n      }\n\n      // Pass the eventName and the poked renderer\n      const callData = {\n        type: eventName,\n        pokedRenderer: model.currentRenderer,\n      };\n\n      // Add the arguments to the call data\n      Object.assign(callData, arg);\n\n      // Call invoke\n      publicAPI[`invoke${eventName}`](callData);\n    };\n  });\n\n  // we know we are in multitouch now, so start recognizing\n  publicAPI.recognizeGesture = (event, positions) => {\n    // more than two pointers we ignore\n    if (Object.keys(positions).length > 2) {\n      return;\n    }\n\n    if (!model.startingEventPositions) {\n      model.startingEventPositions = {};\n    }\n\n    // store the initial positions\n    if (event === 'TouchStart') {\n      Object.keys(positions).forEach((key) => {\n        model.startingEventPositions[key] = positions[key];\n      });\n      // we do not know what the gesture is yet\n      model.currentGesture = 'Start';\n      return;\n    }\n\n    // end the gesture if needed\n    if (event === 'TouchEnd') {\n      if (model.currentGesture === 'Pinch') {\n        publicAPI.render();\n        publicAPI.endPinchEvent();\n      }\n      if (model.currentGesture === 'Rotate') {\n        publicAPI.render();\n        publicAPI.endRotateEvent();\n      }\n      if (model.currentGesture === 'Pan') {\n        publicAPI.render();\n        publicAPI.endPanEvent();\n      }\n      model.currentGesture = 'Start';\n      model.startingEventPositions = {};\n      return;\n    }\n\n    // what are the two pointers we are working with\n    let count = 0;\n    const posVals = [];\n    const startVals = [];\n    Object.keys(positions).forEach((key) => {\n      posVals[count] = positions[key];\n      startVals[count] = model.startingEventPositions[key];\n      count++;\n    });\n\n    // The meat of the algorithm\n    // on move events we analyze them to determine what type\n    // of movement it is and then deal with it.\n    // calculate the distances\n    const originalDistance = Math.sqrt(\n      (startVals[0].x - startVals[1].x) * (startVals[0].x - startVals[1].x) +\n        (startVals[0].y - startVals[1].y) * (startVals[0].y - startVals[1].y)\n    );\n    const newDistance = Math.sqrt(\n      (posVals[0].x - posVals[1].x) * (posVals[0].x - posVals[1].x) +\n        (posVals[0].y - posVals[1].y) * (posVals[0].y - posVals[1].y)\n    );\n\n    // calculate rotations\n    let originalAngle = vtkMath.degreesFromRadians(\n      Math.atan2(\n        startVals[1].y - startVals[0].y,\n        startVals[1].x - startVals[0].x\n      )\n    );\n    let newAngle = vtkMath.degreesFromRadians(\n      Math.atan2(posVals[1].y - posVals[0].y, posVals[1].x - posVals[0].x)\n    );\n\n    // angles are cyclic so watch for that, 1 and 359 are only 2 apart :)\n    let angleDeviation = newAngle - originalAngle;\n    newAngle = newAngle + 180.0 >= 360.0 ? newAngle - 180.0 : newAngle + 180.0;\n    originalAngle =\n      originalAngle + 180.0 >= 360.0\n        ? originalAngle - 180.0\n        : originalAngle + 180.0;\n    if (Math.abs(newAngle - originalAngle) < Math.abs(angleDeviation)) {\n      angleDeviation = newAngle - originalAngle;\n    }\n\n    // calculate the translations\n    const trans = [];\n    trans[0] =\n      (posVals[0].x - startVals[0].x + posVals[1].x - startVals[1].x) / 2.0;\n    trans[1] =\n      (posVals[0].y - startVals[0].y + posVals[1].y - startVals[1].y) / 2.0;\n\n    if (event === 'TouchMove') {\n      // OK we want to\n      // - immediately respond to the user\n      // - allow the user to zoom without panning (saves focal point)\n      // - allow the user to rotate without panning (saves focal point)\n\n      // do we know what gesture we are doing yet? If not\n      // see if we can figure it out\n      if (model.currentGesture === 'Start') {\n        // pinch is a move to/from the center point\n        // rotate is a move along the circumference\n        // pan is a move of the center point\n        // compute the distance along each of these axes in pixels\n        // the first to break thresh wins\n        let thresh =\n          0.01 *\n          Math.sqrt(\n            model.container.clientWidth * model.container.clientWidth +\n              model.container.clientHeight * model.container.clientHeight\n          );\n        if (thresh < 15.0) {\n          thresh = 15.0;\n        }\n        const pinchDistance = Math.abs(newDistance - originalDistance);\n        const rotateDistance =\n          (newDistance * 3.1415926 * Math.abs(angleDeviation)) / 360.0;\n        const panDistance = Math.sqrt(\n          trans[0] * trans[0] + trans[1] * trans[1]\n        );\n        if (\n          pinchDistance > thresh &&\n          pinchDistance > rotateDistance &&\n          pinchDistance > panDistance\n        ) {\n          model.currentGesture = 'Pinch';\n          const callData = {\n            scale: 1.0,\n            touches: positions,\n          };\n          publicAPI.startPinchEvent(callData);\n        } else if (rotateDistance > thresh && rotateDistance > panDistance) {\n          model.currentGesture = 'Rotate';\n          const callData = {\n            rotation: 0.0,\n            touches: positions,\n          };\n          publicAPI.startRotateEvent(callData);\n        } else if (panDistance > thresh) {\n          model.currentGesture = 'Pan';\n          const callData = {\n            translation: [0, 0],\n            touches: positions,\n          };\n          publicAPI.startPanEvent(callData);\n        }\n      } else {\n        // if we have found a specific type of movement then\n        // handle it\n        if (model.currentGesture === 'Rotate') {\n          const callData = {\n            rotation: angleDeviation,\n            touches: positions,\n          };\n          publicAPI.rotateEvent(callData);\n        }\n\n        if (model.currentGesture === 'Pinch') {\n          const callData = {\n            scale: newDistance / originalDistance,\n            touches: positions,\n          };\n          publicAPI.pinchEvent(callData);\n        }\n\n        if (model.currentGesture === 'Pan') {\n          const callData = {\n            translation: trans,\n            touches: positions,\n          };\n          publicAPI.panEvent(callData);\n        }\n      }\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  renderWindow: null,\n  interactorStyle: null,\n  picker: null,\n  pickingManager: null,\n  initialized: false,\n  enabled: false,\n  enableRender: true,\n  currentRenderer: null,\n  lightFollowCamera: true,\n  desiredUpdateRate: 30.0,\n  stillUpdateRate: 2.0,\n  container: null,\n  view: null,\n  recognizeGestures: true,\n  currentGesture: 'Start',\n  animationRequest: null,\n  lastFrameTime: 0.1,\n  wheelTimeoutID: 0,\n  moveTimeoutID: 0,\n  lastGamepadValues: {},\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n\n  macro.event(publicAPI, model, 'RenderEvent');\n  handledEvents.forEach((eventName) =>\n    macro.event(publicAPI, model, eventName)\n  );\n\n  // Create get-only macros\n  macro.get(publicAPI, model, [\n    'initialized',\n    'container',\n    'enabled',\n    'enableRender',\n    'interactorStyle',\n    'lastFrameTime',\n    'view',\n  ]);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, [\n    'lightFollowCamera',\n    'enabled',\n    'recognizeGestures',\n    'desiredUpdateRate',\n    'stillUpdateRate',\n    'picker',\n  ]);\n\n  // For more macro methods, see \"Sources/macro.js\"\n\n  // Object specific methods\n  vtkRenderWindowInteractor(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(\n  extend,\n  'vtkRenderWindowInteractor'\n);\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend, handledEvents }, Constants);\n","import macro from 'vtk.js/Sources/macro';\nimport vtkRenderWindowInteractor from 'vtk.js/Sources/Rendering/Core/RenderWindowInteractor';\n\nconst { vtkErrorMacro, VOID } = macro;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n//----------------------------------------------------------------------------\n// Description:\n// Transform from world to display coordinates.\nfunction computeWorldToDisplay(renderer, x, y, z) {\n  const view = renderer.getRenderWindow().getViews()[0];\n  return view.worldToDisplay(x, y, z, renderer);\n}\n\n//----------------------------------------------------------------------------\n// Description:\n// Transform from display to world coordinates.\nfunction computeDisplayToWorld(renderer, x, y, z) {\n  const view = renderer.getRenderWindow().getViews()[0];\n  return view.displayToWorld(x, y, z, renderer);\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\nexport const STATIC = {\n  computeWorldToDisplay,\n  computeDisplayToWorld,\n};\n\n// ----------------------------------------------------------------------------\n// vtkInteractorObserver methods\n// ----------------------------------------------------------------------------\n\nfunction vtkInteractorObserver(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkInteractorObserver');\n\n  const superClass = Object.assign({}, publicAPI);\n\n  //----------------------------------------------------------------------------\n  function unsubscribeFromEvents() {\n    while (model.subscribedEvents.length) {\n      model.subscribedEvents.pop().unsubscribe();\n    }\n  }\n\n  //----------------------------------------------------------------------------\n  // Check what events we can handle and register callbacks\n  function subscribeToEvents() {\n    vtkRenderWindowInteractor.handledEvents.forEach((eventName) => {\n      if (publicAPI[`handle${eventName}`]) {\n        model.subscribedEvents.push(\n          model.interactor[`on${eventName}`]((callData) => {\n            if (model.processEvents) {\n              return publicAPI[`handle${eventName}`](callData);\n            }\n            return VOID;\n          }, model.priority)\n        );\n      }\n    });\n  }\n\n  //----------------------------------------------------------------------------\n  // Public API methods\n  //----------------------------------------------------------------------------\n  publicAPI.setInteractor = (i) => {\n    if (i === model.interactor) {\n      return;\n    }\n\n    unsubscribeFromEvents();\n\n    model.interactor = i;\n\n    if (i && model.enabled) {\n      subscribeToEvents();\n    }\n\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.setEnabled = (enable) => {\n    if (enable === model.enabled) {\n      return;\n    }\n\n    unsubscribeFromEvents();\n\n    if (enable) {\n      if (model.interactor) {\n        subscribeToEvents();\n      } else {\n        vtkErrorMacro(`\n          The interactor must be set before subscribing to events\n        `);\n      }\n    }\n\n    model.enabled = enable;\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  // Description:\n  // Transform from display to world coordinates.\n  publicAPI.computeDisplayToWorld = (renderer, x, y, z) => {\n    if (!renderer) {\n      return null;\n    }\n\n    return model.interactor.getView().displayToWorld(x, y, z, renderer);\n  };\n\n  //----------------------------------------------------------------------------\n  // Description:\n  // Transform from world to display coordinates.\n  publicAPI.computeWorldToDisplay = (renderer, x, y, z) => {\n    if (!renderer) {\n      return null;\n    }\n\n    return model.interactor.getView().worldToDisplay(x, y, z, renderer);\n  };\n\n  //----------------------------------------------------------------------------\n\n  publicAPI.setPriority = (priority) => {\n    const modified = superClass.setPriority(priority);\n\n    if (modified && model.interactor) {\n      unsubscribeFromEvents();\n      subscribeToEvents();\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  enabled: true,\n  interactor: null,\n  priority: 0.0,\n  processEvents: true,\n  subscribedEvents: [],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n\n  macro.event(publicAPI, model, 'InteractionEvent');\n  macro.event(publicAPI, model, 'StartInteractionEvent');\n  macro.event(publicAPI, model, 'EndInteractionEvent');\n\n  // Create get-only macros\n  macro.get(publicAPI, model, ['interactor', 'enabled']);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['priority', 'processEvents']);\n\n  // For more macro methods, see \"Sources/macro.js\"\n\n  // Object specific methods\n  vtkInteractorObserver(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkInteractorObserver');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend }, STATIC);\n","export const States = {\n  IS_START: 0,\n  IS_NONE: 0,\n\n  IS_ROTATE: 1,\n  IS_PAN: 2,\n  IS_SPIN: 3,\n  IS_DOLLY: 4,\n\n  IS_CAMERA_POSE: 11,\n\n  IS_WINDOW_LEVEL: 1024,\n  IS_SLICE: 1025,\n};\n\nexport default {\n  States,\n};\n","import macro from 'vtk.js/Sources/macro';\nimport vtkInteractorObserver from 'vtk.js/Sources/Rendering/Core/InteractorObserver';\nimport Constants from 'vtk.js/Sources/Rendering/Core/InteractorStyle/Constants';\n\nconst { States } = Constants;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n// Add module-level functions or api that you want to expose statically via\n// the next section...\n\nconst stateNames = {\n  Rotate: States.IS_ROTATE,\n  Pan: States.IS_PAN,\n  Spin: States.IS_SPIN,\n  Dolly: States.IS_DOLLY,\n  CameraPose: States.IS_CAMERA_POSE,\n  WindowLevel: States.IS_WINDOW_LEVEL,\n  Slice: States.IS_SLICE,\n};\n\n// ----------------------------------------------------------------------------\n// vtkInteractorStyle methods\n// ----------------------------------------------------------------------------\n\nfunction vtkInteractorStyle(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkInteractorStyle');\n\n  // Public API methods\n  // create bunch of Start/EndState methods\n  Object.keys(stateNames).forEach((key) => {\n    macro.event(publicAPI, model, `Start${key}Event`);\n    publicAPI[`start${key}`] = () => {\n      if (model.state !== States.IS_NONE) {\n        return;\n      }\n      model.state = stateNames[key];\n      model.interactor.requestAnimation(publicAPI);\n      publicAPI.invokeStartInteractionEvent({ type: 'StartInteractionEvent' });\n      publicAPI[`invokeStart${key}Event`]({ type: `Start${key}Event` });\n    };\n    macro.event(publicAPI, model, `End${key}Event`);\n    publicAPI[`end${key}`] = () => {\n      if (model.state !== stateNames[key]) {\n        return;\n      }\n      model.state = States.IS_NONE;\n      model.interactor.cancelAnimation(publicAPI);\n      publicAPI.invokeEndInteractionEvent({ type: 'EndInteractionEvent' });\n      publicAPI[`invokeEnd${key}Event`]({ type: `End${key}Event` });\n      model.interactor.render();\n    };\n  });\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleKeyPress = (callData) => {\n    const rwi = model.interactor;\n    let ac = null;\n    switch (callData.key) {\n      case 'r':\n      case 'R':\n        callData.pokedRenderer.resetCamera();\n        rwi.render();\n        break;\n\n      case 'w':\n      case 'W':\n        ac = callData.pokedRenderer.getActors();\n        ac.forEach((anActor) => {\n          anActor.getProperty().setRepresentationToWireframe();\n        });\n        rwi.render();\n        break;\n\n      case 's':\n      case 'S':\n        ac = callData.pokedRenderer.getActors();\n        ac.forEach((anActor) => {\n          anActor.getProperty().setRepresentationToSurface();\n        });\n        rwi.render();\n        break;\n\n      case 'v':\n      case 'V':\n        ac = callData.pokedRenderer.getActors();\n        ac.forEach((anActor) => {\n          anActor.getProperty().setRepresentationToPoints();\n        });\n        rwi.render();\n        break;\n\n      default:\n        break;\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  state: States.IS_NONE,\n  handleObservers: 1,\n  autoAdjustCameraClippingRange: 1,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkInteractorObserver.extend(publicAPI, model, initialValues);\n\n  // Object specific methods\n  vtkInteractorStyle(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkInteractorStyle');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend }, Constants);\n","import macro from 'vtk.js/Sources/macro';\nimport vtkInteractorStyle from 'vtk.js/Sources/Rendering/Core/InteractorStyle';\nimport vtkInteractorStyleConstants from 'vtk.js/Sources/Rendering/Core/InteractorStyle/Constants';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport {\n  Device,\n  Input,\n} from 'vtk.js/Sources/Rendering/Core/RenderWindowInteractor/Constants';\n\nconst { States } = vtkInteractorStyleConstants;\n\n/* eslint-disable no-lonely-if */\n\n// ----------------------------------------------------------------------------\n// vtkInteractorStyleTrackballCamera methods\n// ----------------------------------------------------------------------------\n\nfunction vtkInteractorStyleTrackballCamera(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkInteractorStyleTrackballCamera');\n\n  // Public API methods\n  publicAPI.handleMouseMove = (callData) => {\n    const pos = callData.position;\n    const renderer = callData.pokedRenderer;\n\n    switch (model.state) {\n      case States.IS_ROTATE:\n        publicAPI.handleMouseRotate(renderer, pos);\n        publicAPI.invokeInteractionEvent({ type: 'InteractionEvent' });\n        break;\n\n      case States.IS_PAN:\n        publicAPI.handleMousePan(renderer, pos);\n        publicAPI.invokeInteractionEvent({ type: 'InteractionEvent' });\n        break;\n\n      case States.IS_DOLLY:\n        publicAPI.handleMouseDolly(renderer, pos);\n        publicAPI.invokeInteractionEvent({ type: 'InteractionEvent' });\n        break;\n\n      case States.IS_SPIN:\n        publicAPI.handleMouseSpin(renderer, pos);\n        publicAPI.invokeInteractionEvent({ type: 'InteractionEvent' });\n        break;\n\n      default:\n        break;\n    }\n\n    model.previousPosition = pos;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleButton3D = (ed) => {\n    if (\n      ed &&\n      ed.pressed &&\n      ed.device === Device.RightController &&\n      ed.input === Input.TrackPad\n    ) {\n      publicAPI.startCameraPose();\n      return;\n    }\n    if (\n      ed &&\n      !ed.pressed &&\n      ed.device === Device.RightController &&\n      ed.input === Input.TrackPad &&\n      model.state === States.IS_CAMERA_POSE\n    ) {\n      publicAPI.endCameraPose();\n      // return;\n    }\n  };\n\n  publicAPI.handleMove3D = (ed) => {\n    switch (model.state) {\n      case States.IS_CAMERA_POSE:\n        publicAPI.updateCameraPose(ed);\n        break;\n      default:\n    }\n  };\n\n  publicAPI.updateCameraPose = (ed) => {\n    // move the world in the direction of the\n    // controller\n    const camera = ed.pokedRenderer.getActiveCamera();\n    const oldTrans = camera.getPhysicalTranslation();\n\n    // look at the y axis to determine how fast / what direction to move\n    const speed = ed.gamepad.axes[1];\n\n    // 0.05 meters / frame movement\n    const pscale = (speed * 0.05) / camera.getPhysicalScale();\n\n    // convert orientation to world coordinate direction\n    const dir = camera.physicalOrientationToWorldDirection(ed.orientation);\n\n    camera.setPhysicalTranslation(\n      oldTrans[0] + dir[0] * pscale,\n      oldTrans[1] + dir[1] * pscale,\n      oldTrans[2] + dir[2] * pscale\n    );\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleLeftButtonPress = (callData) => {\n    const pos = callData.position;\n    model.previousPosition = pos;\n\n    if (callData.shiftKey) {\n      if (callData.controlKey || callData.altKey) {\n        publicAPI.startDolly();\n      } else {\n        publicAPI.startPan();\n      }\n    } else {\n      if (callData.controlKey || callData.altKey) {\n        publicAPI.startSpin();\n      } else {\n        publicAPI.startRotate();\n      }\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleLeftButtonRelease = () => {\n    switch (model.state) {\n      case States.IS_DOLLY:\n        publicAPI.endDolly();\n        break;\n      case States.IS_PAN:\n        publicAPI.endPan();\n        break;\n      case States.IS_SPIN:\n        publicAPI.endSpin();\n        break;\n      case States.IS_ROTATE:\n        publicAPI.endRotate();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleStartMouseWheel = (callData) => {\n    publicAPI.startDolly();\n    publicAPI.handleMouseWheel(callData);\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleEndMouseWheel = () => {\n    publicAPI.endDolly();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleStartPinch = (callData) => {\n    model.previousScale = callData.scale;\n    publicAPI.startDolly();\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleEndPinch = () => {\n    publicAPI.endDolly();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleStartRotate = (callData) => {\n    model.previousRotation = callData.rotation;\n    publicAPI.startRotate();\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleEndRotate = () => {\n    publicAPI.endRotate();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleStartPan = (callData) => {\n    model.previousTranslation = callData.translation;\n    publicAPI.startPan();\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleEndPan = () => {\n    publicAPI.endPan();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handlePinch = (callData) => {\n    publicAPI.dollyByFactor(\n      callData.pokedRenderer,\n      callData.scale / model.previousScale\n    );\n    model.previousScale = callData.scale;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handlePan = (callData) => {\n    const camera = callData.pokedRenderer.getActiveCamera();\n\n    // Calculate the focal depth since we'll be using it a lot\n    let viewFocus = camera.getFocalPoint();\n\n    viewFocus = publicAPI.computeWorldToDisplay(\n      callData.pokedRenderer,\n      viewFocus[0],\n      viewFocus[1],\n      viewFocus[2]\n    );\n    const focalDepth = viewFocus[2];\n\n    const trans = callData.translation;\n    const lastTrans = model.previousTranslation;\n    const newPickPoint = publicAPI.computeDisplayToWorld(\n      callData.pokedRenderer,\n      viewFocus[0] + trans[0] - lastTrans[0],\n      viewFocus[1] + trans[1] - lastTrans[1],\n      focalDepth\n    );\n\n    // Has to recalc old mouse point since the viewport has moved,\n    // so can't move it outside the loop\n    const oldPickPoint = publicAPI.computeDisplayToWorld(\n      callData.pokedRenderer,\n      viewFocus[0],\n      viewFocus[1],\n      focalDepth\n    );\n\n    // Camera motion is reversed\n    const motionVector = [];\n    motionVector[0] = oldPickPoint[0] - newPickPoint[0];\n    motionVector[1] = oldPickPoint[1] - newPickPoint[1];\n    motionVector[2] = oldPickPoint[2] - newPickPoint[2];\n\n    viewFocus = camera.getFocalPoint();\n    const viewPoint = camera.getPosition();\n    camera.setFocalPoint(\n      motionVector[0] + viewFocus[0],\n      motionVector[1] + viewFocus[1],\n      motionVector[2] + viewFocus[2]\n    );\n\n    camera.setPosition(\n      motionVector[0] + viewPoint[0],\n      motionVector[1] + viewPoint[1],\n      motionVector[2] + viewPoint[2]\n    );\n\n    if (model.interactor.getLightFollowCamera()) {\n      callData.pokedRenderer.updateLightsGeometryToFollowCamera();\n    }\n\n    camera.orthogonalizeViewUp();\n\n    model.previousTranslation = callData.translation;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleRotate = (callData) => {\n    const camera = callData.pokedRenderer.getActiveCamera();\n    camera.roll(callData.rotation - model.previousRotation);\n    camera.orthogonalizeViewUp();\n    model.previousRotation = callData.rotation;\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleMouseRotate = (renderer, position) => {\n    const rwi = model.interactor;\n\n    const dx = position.x - model.previousPosition.x;\n    const dy = position.y - model.previousPosition.y;\n\n    const size = rwi.getView().getViewportSize(renderer);\n\n    let deltaElevation = -0.1;\n    let deltaAzimuth = -0.1;\n    if (size[0] && size[1]) {\n      deltaElevation = -20.0 / size[1];\n      deltaAzimuth = -20.0 / size[0];\n    }\n\n    const rxf = dx * deltaAzimuth * model.motionFactor;\n    const ryf = dy * deltaElevation * model.motionFactor;\n\n    const camera = renderer.getActiveCamera();\n    if (!Number.isNaN(rxf) && !Number.isNaN(ryf)) {\n      camera.azimuth(rxf);\n      camera.elevation(ryf);\n      camera.orthogonalizeViewUp();\n    }\n\n    if (model.autoAdjustCameraClippingRange) {\n      renderer.resetCameraClippingRange();\n    }\n\n    if (rwi.getLightFollowCamera()) {\n      renderer.updateLightsGeometryToFollowCamera();\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleMouseSpin = (renderer, position) => {\n    const rwi = model.interactor;\n    const camera = renderer.getActiveCamera();\n    const center = rwi.getView().getViewportCenter(renderer);\n\n    const oldAngle = vtkMath.degreesFromRadians(\n      Math.atan2(\n        model.previousPosition.y - center[1],\n        model.previousPosition.x - center[0]\n      )\n    );\n    const newAngle =\n      vtkMath.degreesFromRadians(\n        Math.atan2(position.y - center[1], position.x - center[0])\n      ) - oldAngle;\n\n    if (!Number.isNaN(newAngle)) {\n      camera.roll(newAngle);\n      camera.orthogonalizeViewUp();\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleMousePan = (renderer, position) => {\n    const camera = renderer.getActiveCamera();\n\n    // Calculate the focal depth since we'll be using it a lot\n    let viewFocus = camera.getFocalPoint();\n    viewFocus = publicAPI.computeWorldToDisplay(\n      renderer,\n      viewFocus[0],\n      viewFocus[1],\n      viewFocus[2]\n    );\n    const focalDepth = viewFocus[2];\n\n    const newPickPoint = publicAPI.computeDisplayToWorld(\n      renderer,\n      position.x,\n      position.y,\n      focalDepth\n    );\n\n    // Has to recalc old mouse point since the viewport has moved,\n    // so can't move it outside the loop\n    const oldPickPoint = publicAPI.computeDisplayToWorld(\n      renderer,\n      model.previousPosition.x,\n      model.previousPosition.y,\n      focalDepth\n    );\n\n    // Camera motion is reversed\n    const motionVector = [];\n    motionVector[0] = oldPickPoint[0] - newPickPoint[0];\n    motionVector[1] = oldPickPoint[1] - newPickPoint[1];\n    motionVector[2] = oldPickPoint[2] - newPickPoint[2];\n\n    viewFocus = camera.getFocalPoint();\n    const viewPoint = camera.getPosition();\n    camera.setFocalPoint(\n      motionVector[0] + viewFocus[0],\n      motionVector[1] + viewFocus[1],\n      motionVector[2] + viewFocus[2]\n    );\n\n    camera.setPosition(\n      motionVector[0] + viewPoint[0],\n      motionVector[1] + viewPoint[1],\n      motionVector[2] + viewPoint[2]\n    );\n\n    if (model.interactor.getLightFollowCamera()) {\n      renderer.updateLightsGeometryToFollowCamera();\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleMouseDolly = (renderer, position) => {\n    const dy = position.y - model.previousPosition.y;\n    const rwi = model.interactor;\n    const center = rwi.getView().getViewportCenter(renderer);\n    const dyf = (model.motionFactor * dy) / center[1];\n\n    publicAPI.dollyByFactor(renderer, 1.1 ** dyf);\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.handleMouseWheel = (callData) => {\n    const dyf = 1 - callData.spinY / 10; // divide by 10 to lower the zoom factor\n    publicAPI.dollyByFactor(callData.pokedRenderer, dyf);\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.dollyByFactor = (renderer, factor) => {\n    if (Number.isNaN(factor)) {\n      return;\n    }\n\n    const camera = renderer.getActiveCamera();\n    if (camera.getParallelProjection()) {\n      camera.setParallelScale(camera.getParallelScale() / factor);\n    } else {\n      camera.dolly(factor);\n      if (model.autoAdjustCameraClippingRange) {\n        renderer.resetCameraClippingRange();\n      }\n    }\n\n    if (model.interactor.getLightFollowCamera()) {\n      renderer.updateLightsGeometryToFollowCamera();\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  motionFactor: 10.0,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkInteractorStyle.extend(publicAPI, model, initialValues);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['motionFactor']);\n\n  // For more macro methods, see \"Sources/macro.js\"\n\n  // Object specific methods\n  vtkInteractorStyleTrackballCamera(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(\n  extend,\n  'vtkInteractorStyleTrackballCamera'\n);\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend });\n","import macro from 'vtk.js/Sources/macro';\nimport vtkDataArray from 'vtk.js/Sources/Common/Core/DataArray';\nimport { VtkDataTypes } from 'vtk.js/Sources/Common/Core/DataArray/Constants';\n\nconst { vtkErrorMacro } = macro;\n\nconst INVALID_BOUNDS = [1, -1, 1, -1, 1, -1];\n\n// ----------------------------------------------------------------------------\n// vtkPoints methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPoints(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPoints');\n\n  // Forwarding methods\n  publicAPI.getNumberOfPoints = publicAPI.getNumberOfTuples;\n\n  publicAPI.setNumberOfPoints = (nbPoints, dimension = 3) => {\n    if (publicAPI.getNumberOfPoints() !== nbPoints) {\n      model.size = nbPoints * dimension;\n      model.values = new window[model.dataType](model.size);\n      publicAPI.setNumberOfComponents(dimension);\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.setPoint = (idx, ...xyz) => {\n    const offset = idx * model.numberOfComponents;\n    for (let i = 0; i < model.numberOfComponents; i++) {\n      model.values[offset + i] = xyz[i];\n    }\n  };\n\n  publicAPI.getPoint = publicAPI.getTuple;\n\n  publicAPI.getBounds = () => {\n    if (publicAPI.getNumberOfComponents() === 3) {\n      const xRange = publicAPI.getRange(0);\n      model.bounds[0] = xRange[0];\n      model.bounds[1] = xRange[1];\n      const yRange = publicAPI.getRange(1);\n      model.bounds[2] = yRange[0];\n      model.bounds[3] = yRange[1];\n      const zRange = publicAPI.getRange(2);\n      model.bounds[4] = zRange[0];\n      model.bounds[5] = zRange[1];\n      return model.bounds;\n    }\n\n    if (publicAPI.getNumberOfComponents() !== 2) {\n      vtkErrorMacro(`getBounds called on an array with components of\n        ${publicAPI.getNumberOfComponents()}`);\n      return INVALID_BOUNDS;\n    }\n\n    const xRange = publicAPI.getRange(0);\n    model.bounds[0] = xRange[0];\n    model.bounds[1] = xRange[1];\n    const yRange = publicAPI.getRange(1);\n    model.bounds[2] = yRange[0];\n    model.bounds[3] = yRange[1];\n    model.bounds[4] = 0;\n    model.bounds[5] = 0;\n\n    return model.bounds;\n  };\n\n  // Trigger the computation of bounds\n  publicAPI.computeBounds = publicAPI.getBounds;\n\n  // Initialize\n  publicAPI.setNumberOfComponents(\n    model.numberOfComponents < 2 ? 3 : model.numberOfComponents\n  );\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  empty: true,\n  numberOfComponents: 3,\n  dataType: VtkDataTypes.FLOAT,\n  bounds: [1, -1, 1, -1, 1, -1],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  vtkDataArray.extend(publicAPI, model, initialValues);\n  vtkPoints(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkPoints');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import macro from 'vtk.js/Sources/macro';\nimport vtkDataArray from 'vtk.js/Sources/Common/Core/DataArray';\nimport { VtkDataTypes } from 'vtk.js/Sources/Common/Core/DataArray/Constants';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction extractCellSizes(cellArray) {\n  let currentIdx = 0;\n  return cellArray.filter((value, index) => {\n    if (index === currentIdx) {\n      currentIdx += value + 1;\n      return true;\n    }\n    return false;\n  });\n}\n\nfunction getNumberOfCells(cellArray) {\n  return extractCellSizes(cellArray).length;\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nexport const STATIC = {\n  extractCellSizes,\n  getNumberOfCells,\n};\n\n// ----------------------------------------------------------------------------\n// vtkCellArray methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCellArray(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCellArray');\n\n  publicAPI.getNumberOfCells = (recompute) => {\n    if (model.numberOfCells !== undefined && !recompute) {\n      return model.numberOfCells;\n    }\n\n    model.cellSizes = extractCellSizes(model.values);\n    model.numberOfCells = model.cellSizes.length;\n    return model.numberOfCells;\n  };\n\n  publicAPI.getCellSizes = (recompute) => {\n    if (model.cellSizes !== undefined && !recompute) {\n      return model.cellSizes;\n    }\n\n    model.cellSizes = extractCellSizes(model.values);\n    return model.cellSizes;\n  };\n\n  const superSetData = publicAPI.setData;\n  publicAPI.setData = (typedArray) => {\n    superSetData(typedArray, 1);\n    model.numberOfCells = undefined;\n    model.cellSizes = undefined;\n  };\n\n  /**\n   * Returns the point indexes at the given location as a subarray.\n   */\n  publicAPI.getCell = (loc) => {\n    let cellLoc = loc;\n    const numberOfPoints = model.values[cellLoc++];\n    return model.values.subarray(cellLoc, cellLoc + numberOfPoints);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  empty: true,\n  numberOfComponents: 1,\n  dataType: VtkDataTypes.UNSIGNED_INT,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  vtkDataArray.extend(publicAPI, model, initialValues);\n  vtkCellArray(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkCellArray');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend }, STATIC);\n","import macro from 'vtk.js/Sources/macro';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport vtkPoints from 'vtk.js/Sources/Common/Core/Points';\n\n// ----------------------------------------------------------------------------\n// vtkCell methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCell(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCell');\n\n  publicAPI.initialize = (points, pointIdsList = null) => {\n    if (!pointIdsList) {\n      model.points = points;\n      model.pointsIds = new Array(points.getNumberOfPoints());\n      for (let i = points.getNumberOfPoints() - 1; i >= 0; --i) {\n        model.pointsIds[i] = i;\n      }\n    } else {\n      model.pointsIds = pointIdsList;\n      let triangleData = model.points.getData();\n      if (triangleData.length !== 3 * model.pointsIds.length) {\n        triangleData = new window[(points.getDataType())](\n          3 * model.pointsIds.length\n        );\n      }\n      const pointsData = points.getData();\n      model.pointsIds.forEach((pointId, index) => {\n        // const start = 3 * pointId;\n        // pointsData.set(p.subarray(start, start + 3), 3 * index);\n        let pointOffset = 3 * pointId;\n        let trianglePointOffset = 3 * index;\n        triangleData[trianglePointOffset] = pointsData[pointOffset];\n        triangleData[++trianglePointOffset] = pointsData[++pointOffset];\n        triangleData[++trianglePointOffset] = pointsData[++pointOffset];\n      });\n      model.points.setData(triangleData);\n    }\n  };\n\n  publicAPI.getBounds = () => {\n    const nbPoints = model.points.getNumberOfPoints();\n    const x = [];\n    if (nbPoints) {\n      model.points.getPoint(0, x);\n      model.bounds[0] = x[0];\n      model.bounds[1] = x[0];\n      model.bounds[2] = x[1];\n      model.bounds[3] = x[1];\n      model.bounds[4] = x[2];\n      model.bounds[5] = x[2];\n\n      for (let i = 1; i < nbPoints; i++) {\n        model.points.getPoint(i, x);\n        model.bounds[0] = x[0] < model.bounds[0] ? x[0] : model.bounds[0];\n        model.bounds[1] = x[0] > model.bounds[1] ? x[0] : model.bounds[1];\n        model.bounds[2] = x[1] < model.bounds[2] ? x[1] : model.bounds[2];\n        model.bounds[3] = x[1] > model.bounds[3] ? x[1] : model.bounds[3];\n        model.bounds[4] = x[2] < model.bounds[4] ? x[2] : model.bounds[4];\n        model.bounds[5] = x[2] > model.bounds[5] ? x[2] : model.bounds[5];\n      }\n    } else {\n      vtkMath.uninitializeBounds(model.bounds);\n    }\n    return model.bounds;\n  };\n\n  publicAPI.getLength2 = () => {\n    publicAPI.getBounds();\n    let length = 0.0;\n    let diff = 0;\n    for (let i = 0; i < 3; i++) {\n      diff = model.bounds[2 * i + 1] - model.bounds[2 * i];\n      length += diff * diff;\n    }\n    return length;\n  };\n\n  publicAPI.getParametricDistance = (pcoords) => {\n    let pDist;\n    let pDistMax = 0.0;\n\n    for (let i = 0; i < 3; i++) {\n      if (pcoords[i] < 0.0) {\n        pDist = -pcoords[i];\n      } else if (pcoords[i] > 1.0) {\n        pDist = pcoords[i] - 1.0;\n      } else {\n        // inside the cell in the parametric direction\n        pDist = 0.0;\n      }\n      if (pDist > pDistMax) {\n        pDistMax = pDist;\n      }\n    }\n    return pDistMax;\n  };\n\n  publicAPI.getNumberOfPoints = () => model.points.getNumberOfPoints();\n\n  publicAPI.deepCopy = (cell) => {\n    cell.initialize(model.points, model.pointsIds);\n  };\n\n  publicAPI.getCellDimension = () => {}; // virtual\n  publicAPI.intersectWithLine = (p1, p2, tol, t, x, pcoords, subId) => {}; // virtual\n  publicAPI.evaluatePosition = (\n    x,\n    closestPoint,\n    subId,\n    pcoords,\n    dist2,\n    weights\n  ) => {}; // virtual\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  bounds: [-1, -1, -1, -1, -1, -1],\n  pointsIds: [],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  macro.obj(publicAPI, model);\n\n  if (!model.points) {\n    model.points = vtkPoints.newInstance();\n  }\n\n  macro.get(publicAPI, model, ['points', 'pointsIds']);\n\n  vtkCell(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkCell');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend });\n","import macro from 'vtk.js/Sources/macro';\nimport vtkCell from 'vtk.js/Sources/Common/DataModel/Cell';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\nexport const InitLink = {\n  ncells: 0,\n  cells: null,\n};\n\nfunction resize(model, sz) {\n  let newSize = sz;\n  if (sz >= model.array.length) {\n    newSize += model.array.length;\n  }\n\n  while (newSize > model.array.length)\n    model.array.push({\n      ncells: 0,\n      cells: null,\n    });\n  model.array.length = newSize;\n}\n\n// ----------------------------------------------------------------------------\n// vtkCellLinks methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCellLinks(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCellLinks');\n\n  /**\n   * Build the link list array. All subclasses of vtkAbstractCellLinks\n   * must support this method.\n   */\n  publicAPI.buildLinks = (data) => {\n    const numPts = data.getPoints().getNumberOfPoints();\n    const numCells = data.getNumberOfCells();\n\n    // fill out lists with number of references to cells\n    const linkLoc = new Uint32Array(numPts);\n\n    // Use fast path if polydata\n    if (data.isA('vtkPolyData')) {\n      // traverse data to determine number of uses of each point\n      for (let cellId = 0; cellId < numCells; ++cellId) {\n        const { cellPointIds } = data.getCellPoints(cellId);\n        cellPointIds.forEach((cellPointId) => {\n          publicAPI.incrementLinkCount(cellPointId);\n        });\n      }\n\n      // now allocate storage for the links\n      publicAPI.allocateLinks(numPts);\n      model.maxId = numPts - 1;\n\n      for (let cellId = 0; cellId < numCells; ++cellId) {\n        const { cellPointIds } = data.getCellPoints(cellId);\n        cellPointIds.forEach((cellPointId) => {\n          publicAPI.insertCellReference(\n            cellPointId,\n            linkLoc[cellPointId]++,\n            cellId\n          );\n        });\n      }\n    } // any other type of dataset\n    else {\n      // traverse data to determine number of uses of each point\n      for (let cellId = 0; cellId < numCells; cellId++) {\n        // TODO: Currently not supported: const cell = data.getCell(cellId);\n        const cell = vtkCell.newInstance();\n        cell.getPointsIds().forEach((cellPointId) => {\n          publicAPI.incrementLinkCount(cellPointId);\n        });\n      }\n\n      // now allocate storage for the links\n      publicAPI.allocateLinks(numPts);\n      model.maxId = numPts - 1;\n\n      for (let cellId = 0; cellId < numCells; ++cellId) {\n        // TODO: Currently not supported: const cell = data.getCell(cellId);\n        const cell = vtkCell.newInstance();\n        cell.getPointsIds().forEach((cellPointId) => {\n          publicAPI.insertCellReference(\n            cellPointId,\n            linkLoc[cellPointId]++,\n            cellId\n          );\n        });\n      }\n    } // end else\n  };\n\n  /**\n   * Build the link list array with a provided connectivity array.\n   */\n  // publicAPI.buildLinks = (data, connectivity) => {};\n\n  /**\n   * Allocate the specified number of links (i.e., number of points) that\n   * will be built.\n   */\n  publicAPI.allocate = (numLinks, ext = 1000) => {\n    model.array = Array(numLinks)\n      .fill()\n      .map(() => ({\n        ncells: 0,\n        cells: null,\n      }));\n    model.extend = ext;\n    model.maxId = -1;\n  };\n\n  publicAPI.initialize = () => {\n    model.array = null;\n  };\n\n  /**\n   * Get a link structure given a point id.\n   */\n  publicAPI.getLink = (ptId) => model.array[ptId];\n\n  /**\n   * Get the number of cells using the point specified by ptId.\n   */\n  publicAPI.getNcells = (ptId) => model.array[ptId].ncells;\n\n  /**\n   * Return a list of cell ids using the point.\n   */\n  publicAPI.getCells = (ptId) => model.array[ptId].cells;\n\n  /**\n   * Insert a new point into the cell-links data structure. The size parameter\n   * is the initial size of the list.\n   */\n  publicAPI.insertNextPoint = (numLinks) => {\n    model.array.push({ ncells: numLinks, cells: Array(numLinks) });\n    ++model.maxId;\n  };\n\n  /**\n   * Insert a cell id into the list of cells (at the end) using the cell id\n   * provided. (Make sure to extend the link list (if necessary) using the\n   * method resizeCellList().)\n   */\n  publicAPI.insertNextCellReference = (ptId, cellId) => {\n    model.array[ptId].cells[model.array[ptId].ncells++] = cellId;\n  };\n\n  /**\n   * Delete point (and storage) by destroying links to using cells.\n   */\n  publicAPI.deletePoint = (ptId) => {\n    model.array[ptId].ncells = 0;\n    model.array[ptId].cells = null;\n  };\n\n  /**\n   * Delete the reference to the cell (cellId) from the point (ptId). This\n   * removes the reference to the cellId from the cell list, but does not\n   * resize the list (recover memory with resizeCellList(), if necessary).\n   */\n  publicAPI.removeCellReference = (cellId, ptId) => {\n    model.array[ptId].cells = model.array[ptId].cells.filter(\n      (cell) => cell !== cellId\n    );\n    model.array[ptId].ncells = model.array[ptId].cells.length;\n  };\n\n  /**\n   * Add the reference to the cell (cellId) from the point (ptId). This\n   * adds a reference to the cellId from the cell list, but does not resize\n   * the list (extend memory with resizeCellList(), if necessary).\n   */\n  publicAPI.addCellReference = (cellId, ptId) => {\n    model.array[ptId].cells[model.array[ptId].ncells++] = cellId;\n  };\n\n  /**\n   * Change the length of a point's link list (i.e., list of cells using a\n   * point) by the size specified.\n   */\n  publicAPI.resizeCellList = (ptId, size) => {\n    model.array[ptId].cells.length = size;\n  };\n\n  /**\n   * Reclaim any unused memory.\n   */\n  publicAPI.squeeze = () => {\n    resize(model, model.maxId + 1);\n  };\n\n  /**\n   * Reset to a state of no entries without freeing the memory.\n   */\n  publicAPI.reset = () => {\n    model.maxId = -1;\n  };\n\n  /**\n   * Standard DeepCopy method.  Since this object contains no reference\n   * to other objects, there is no ShallowCopy.\n   */\n  publicAPI.deepCopy = (src) => {\n    model.array = [...src.array];\n    model.extend = src.extend;\n    model.maxId = src.maxId;\n  };\n\n  /**\n   * Increment the count of the number of cells using the point.\n   */\n  publicAPI.incrementLinkCount = (ptId) => {\n    ++model.array[ptId].ncells;\n  };\n\n  publicAPI.allocateLinks = (n) => {\n    for (let i = 0; i < n; ++i) {\n      model.array[i].cells = new Array(model.array[i].ncells);\n    }\n  };\n\n  /**\n   * Insert a cell id into the list of cells using the point.\n   */\n  publicAPI.insertCellReference = (ptId, pos, cellId) => {\n    model.array[ptId].cells[pos] = cellId;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  array: null, // pointer to data\n  maxId: 0, // maximum index inserted thus far\n  extend: 0, // grow array by this point\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  macro.obj(publicAPI, model);\n\n  vtkCellLinks(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkCellLinks');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend });\n","export const CellType = {\n  // Linear cells\n  VTK_EMPTY_CELL: 0,\n  VTK_VERTEX: 1,\n  VTK_POLY_VERTEX: 2,\n  VTK_LINE: 3,\n  VTK_POLY_LINE: 4,\n  VTK_TRIANGLE: 5,\n  VTK_TRIANGLE_STRIP: 6,\n  VTK_POLYGON: 7,\n  VTK_PIXEL: 8,\n  VTK_QUAD: 9,\n  VTK_TETRA: 10,\n  VTK_VOXEL: 11,\n  VTK_HEXAHEDRON: 12,\n  VTK_WEDGE: 13,\n  VTK_PYRAMID: 14,\n  VTK_PENTAGONAL_PRISM: 15,\n  VTK_HEXAGONAL_PRISM: 16,\n\n  // Quadratic, isoparametric cells\n  VTK_QUADRATIC_EDGE: 21,\n  VTK_QUADRATIC_TRIANGLE: 22,\n  VTK_QUADRATIC_QUAD: 23,\n  VTK_QUADRATIC_POLYGON: 36,\n  VTK_QUADRATIC_TETRA: 24,\n  VTK_QUADRATIC_HEXAHEDRON: 25,\n  VTK_QUADRATIC_WEDGE: 26,\n  VTK_QUADRATIC_PYRAMID: 27,\n  VTK_BIQUADRATIC_QUAD: 28,\n  VTK_TRIQUADRATIC_HEXAHEDRON: 29,\n  VTK_QUADRATIC_LINEAR_QUAD: 30,\n  VTK_QUADRATIC_LINEAR_WEDGE: 31,\n  VTK_BIQUADRATIC_QUADRATIC_WEDGE: 32,\n  VTK_BIQUADRATIC_QUADRATIC_HEXAHEDRON: 33,\n  VTK_BIQUADRATIC_TRIANGLE: 34,\n\n  // Cubic, isoparametric cell\n  VTK_CUBIC_LINE: 35,\n\n  // Special class of cells formed by convex group of points\n  VTK_CONVEX_POINT_SET: 41,\n\n  // Polyhedron cell (consisting of polygonal faces)\n  VTK_POLYHEDRON: 42,\n\n  // Higher order cells in parametric form\n  VTK_PARAMETRIC_CURVE: 51,\n  VTK_PARAMETRIC_SURFACE: 52,\n  VTK_PARAMETRIC_TRI_SURFACE: 53,\n  VTK_PARAMETRIC_QUAD_SURFACE: 54,\n  VTK_PARAMETRIC_TETRA_REGION: 55,\n  VTK_PARAMETRIC_HEX_REGION: 56,\n\n  // Higher order cells\n  VTK_HIGHER_ORDER_EDGE: 60,\n  VTK_HIGHER_ORDER_TRIANGLE: 61,\n  VTK_HIGHER_ORDER_QUAD: 62,\n  VTK_HIGHER_ORDER_POLYGON: 63,\n  VTK_HIGHER_ORDER_TETRAHEDRON: 64,\n  VTK_HIGHER_ORDER_WEDGE: 65,\n  VTK_HIGHER_ORDER_PYRAMID: 66,\n  VTK_HIGHER_ORDER_HEXAHEDRON: 67,\n\n  // Arbitrary order Lagrange elements (formulated separated from generic higher order cells)\n  VTK_LAGRANGE_CURVE: 68,\n  VTK_LAGRANGE_TRIANGLE: 69,\n  VTK_LAGRANGE_QUADRILATERAL: 70,\n  VTK_LAGRANGE_TETRAHEDRON: 71,\n  VTK_LAGRANGE_HEXAHEDRON: 72,\n  VTK_LAGRANGE_WEDGE: 73,\n  VTK_LAGRANGE_PYRAMID: 74,\n\n  VTK_NUMBER_OF_CELL_TYPES: 75,\n};\n\n// This list should contain the cell class names in\n// the same order as in CellType.\nexport const CellTypesStrings = [\n  'vtkEmptyCell',\n  'vtkVertex',\n  'vtkPolyVertex',\n  'vtkLine',\n  'vtkPolyLine',\n  'vtkTriangle',\n  'vtkTriangleStrip',\n  'vtkPolygon',\n  'vtkPixel',\n  'vtkQuad',\n  'vtkTetra',\n  'vtkVoxel',\n  'vtkHexahedron',\n  'vtkWedge',\n  'vtkPyramid',\n  'vtkPentagonalPrism',\n  'vtkHexagonalPrism',\n  'UnknownClass',\n  'UnknownClass',\n  'UnknownClass',\n  'UnknownClass',\n  'vtkQuadraticEdge',\n  'vtkQuadraticTriangle',\n  'vtkQuadraticQuad',\n  'vtkQuadraticTetra',\n  'vtkQuadraticHexahedron',\n  'vtkQuadraticWedge',\n  'vtkQuadraticPyramid',\n  'vtkBiQuadraticQuad',\n  'vtkTriQuadraticHexahedron',\n  'vtkQuadraticLinearQuad',\n  'vtkQuadraticLinearWedge',\n  'vtkBiQuadraticQuadraticWedge',\n  'vtkBiQuadraticQuadraticHexahedron',\n  'vtkBiQuadraticTriangle',\n  'vtkCubicLine',\n  'vtkQuadraticPolygon',\n  'UnknownClass',\n  'UnknownClass',\n  'UnknownClass',\n  'UnknownClass',\n  'vtkConvexPointSet',\n  'UnknownClass',\n  'UnknownClass',\n  'UnknownClass',\n  'UnknownClass',\n  'UnknownClass',\n  'UnknownClass',\n  'UnknownClass',\n  'UnknownClass',\n  'UnknownClass',\n  'vtkParametricCurve',\n  'vtkParametricSurface',\n  'vtkParametricTriSurface',\n  'vtkParametricQuadSurface',\n  'vtkParametricTetraRegion',\n  'vtkParametricHexRegion',\n  'UnknownClass',\n  'UnknownClass',\n  'UnknownClass',\n  'vtkHigherOrderEdge',\n  'vtkHigherOrderTriangle',\n  'vtkHigherOrderQuad',\n  'vtkHigherOrderPolygon',\n  'vtkHigherOrderTetrahedron',\n  'vtkHigherOrderWedge',\n  'vtkHigherOrderPyramid',\n  'vtkHigherOrderHexahedron',\n];\n\nexport default {\n  CellType,\n  CellTypesStrings,\n};\n","import macro from 'vtk.js/Sources/macro';\nimport {\n  CellType,\n  CellTypesStrings,\n} from 'vtk.js/Sources/Common/DataModel/CellTypes/Constants';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n/**\n * Given an int (as defined in vtkCellType.h) identifier for a class\n * return it's classname.\n */\nfunction getClassNameFromTypeId(typeId) {\n  return typeId < CellTypesStrings.length\n    ? CellTypesStrings[typeId]\n    : 'UnknownClass';\n}\n\n/**\n * Given a data object classname, return it's int identified (as\n * defined in vtkCellType.h)\n */\nfunction getTypeIdFromClassName(cellTypeString) {\n  return CellTypesStrings.findIndex(cellTypeString);\n}\n\n/**\n * This convenience method is a fast check to determine if a cell type\n * represents a linear or nonlinear cell.  This is generally much more\n * efficient than getting the appropriate vtkCell and checking its IsLinear\n * method.\n */\nfunction isLinear(type) {\n  return (\n    type < CellType.VTK_QUADRATIC_EDGE ||\n    type === CellType.VTK_CONVEX_POINT_SET ||\n    type === CellType.VTK_POLYHEDRON\n  );\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nexport const STATIC = {\n  getClassNameFromTypeId,\n  getTypeIdFromClassName,\n  isLinear,\n};\n\n// ----------------------------------------------------------------------------\n// vtkCellTypes methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCellTypes(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCellTypes');\n\n  /**\n   * Allocate memory for this array. Delete old storage only if necessary.\n   */\n  publicAPI.allocate = (sz = 512, ext = 1000) => {\n    model.size = sz > 0 ? sz : 1;\n    model.extend = ext > 0 ? ext : 1;\n    model.maxId = -1;\n    model.typeArray = new Uint8Array(sz);\n    model.locationArray = new Uint32Array(sz);\n  };\n\n  /**\n   * Add a cell at specified id.\n   */\n  publicAPI.insertCell = (cellId, type, loc) => {\n    model.typeArray[cellId] = type;\n    model.locationArray[cellId] = loc;\n\n    if (cellId > model.maxId) {\n      model.maxId = cellId;\n    }\n  };\n\n  /**\n   * Add a cell to the object in the next available slot.\n   */\n  publicAPI.insertNextCell = (type, loc) => {\n    publicAPI.insertCell(++model.maxId, type, loc);\n    return model.maxId;\n  };\n\n  /**\n   * Specify a group of cell types. This version is provided to maintain\n   * backwards compatibility and does a copy of the cellLocations\n   */\n  publicAPI.setCellTypes = (ncells, cellTypes, cellLocations) => {\n    model.size = ncells;\n\n    model.typeArray = cellTypes;\n    model.locationArray = cellLocations;\n\n    model.maxId = ncells - 1;\n  };\n\n  /**\n   * Return the location of the cell in the associated vtkCellArray.\n   */\n  publicAPI.getCellLocation = (cellId) => model.locationArray[cellId];\n\n  /**\n   * Delete cell by setting to nullptr cell type.\n   */\n  publicAPI.deleteCell = (cellId) => {\n    model.typeArray[cellId] = CellType.VTK_EMPTY_CELL;\n  };\n\n  /**\n   * Return the number of types in the list.\n   */\n  publicAPI.getNumberOfTypes = () => model.maxId + 1;\n\n  /**\n   * Return true if type specified is contained in list; false otherwise.\n   */\n  publicAPI.isType = (type) => {\n    const numTypes = publicAPI.getNumberOfTypes();\n\n    for (let i = 0; i < numTypes; ++i) {\n      if (type === publicAPI.getCellType(i)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Add the type specified to the end of the list. Range checking is performed.\n   */\n  publicAPI.insertNextType = (type) => publicAPI.insertNextCell(type, -1);\n\n  /**\n   * Return the type of cell.\n   */\n  publicAPI.getCellType = (cellId) => model.typeArray[cellId];\n\n  /**\n   * Reclaim any extra memory.\n   */\n  // TODO: publicAPI.squeeze = () =>  {};\n\n  /**\n   * Initialize object without releasing memory.\n   */\n  publicAPI.reset = () => {\n    model.maxId = -1;\n  };\n\n  /**\n   * Standard DeepCopy method.  Since this object contains no reference\n   * to other objects, there is no ShallowCopy.\n   */\n  publicAPI.deepCopy = (src) => {\n    publicAPI.allocate(src.getSize(), src.getExtend());\n    model.typeArray.set(src.getTypeArray());\n    model.locationArray.set(src.getLocationArray());\n    model.maxId = src.getMaxId();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // typeArray: null, // pointer to types array\n  // locationArray: null;   // pointer to array of offsets\n  size: 0, // allocated size of data\n  maxId: -1, // maximum index inserted thus far\n  extend: 1000, // grow array by this point\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  macro.obj(publicAPI, model);\n\n  macro.get(publicAPI, model, ['size', 'maxId', 'extend']);\n  macro.getArray(publicAPI, model, ['typeArray', 'locationArray']);\n\n  vtkCellTypes(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkCellTypes');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend }, STATIC);\n","import vtk from 'vtk.js/Sources/vtk';\nimport macro from 'vtk.js/Sources/macro';\nimport vtkDataSet from 'vtk.js/Sources/Common/DataModel/DataSet';\nimport vtkPoints from 'vtk.js/Sources/Common/Core/Points';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n// vtkPointSet methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPointSet(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPointSet');\n\n  // Create empty points\n  if (!model.points) {\n    model.points = vtkPoints.newInstance();\n  } else {\n    model.points = vtk(model.points);\n  }\n\n  publicAPI.getBounds = () => model.points.getBounds();\n\n  publicAPI.computeBounds = () => {\n    publicAPI.getBounds();\n  };\n\n  const superShallowCopy = publicAPI.shallowCopy;\n  publicAPI.shallowCopy = (other, debug = false) => {\n    superShallowCopy(other, debug);\n    model.points = vtkPoints.newInstance();\n    model.points.shallowCopy(other.getPoints());\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // points: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkDataSet.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['points']);\n\n  // Object specific methods\n  vtkPointSet(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkPointSet');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","export const IntersectionState = {\n  NO_INTERSECTION: 0,\n  YES_INTERSECTION: 1,\n  ON_LINE: 2,\n};\n\nexport default {\n  IntersectionState,\n};\n","import macro from 'vtk.js/Sources/macro';\nimport Constants from 'vtk.js/Sources/Common/DataModel/Line/Constants';\nimport vtkCell from 'vtk.js/Sources/Common/DataModel/Cell';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\n\nconst { IntersectionState } = Constants;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\nfunction distanceToLine(x, p1, p2, closestPoint = null) {\n  const outObj = { t: Number.MIN_VALUE, distance: 0 };\n  const p21 = [];\n  let closest;\n  // Determine appropriate vector\n  p21[0] = p2[0] - p1[0];\n  p21[1] = p2[1] - p1[1];\n  p21[2] = p2[2] - p1[2];\n\n  // Get parametric location\n  const num =\n    p21[0] * (x[0] - p1[0]) + p21[1] * (x[1] - p1[1]) + p21[2] * (x[2] - p1[2]);\n  const denom = vtkMath.dot(p21, p21);\n\n  // trying to avoid an expensive fabs\n  let tolerance = 1e-5 * num;\n  if (denom !== 0.0) {\n    outObj.t = num / denom;\n  }\n  if (tolerance < 0.0) {\n    tolerance = -tolerance;\n  }\n  if (-tolerance < denom && denom < tolerance) {\n    closest = p1;\n  } else if (denom <= 0.0 || outObj.t < 0.0) {\n    // If parametric coordinate is within 0<=p<=1, then the point is closest to\n    // the line.  Otherwise, it's closest to a point at the end of the line.\n    closest = p1;\n  } else if (outObj.t > 1.0) {\n    closest = p2;\n  } else {\n    closest = p21;\n    p21[0] = p1[0] + outObj.t * p21[0];\n    p21[1] = p1[1] + outObj.t * p21[1];\n    p21[2] = p1[2] + outObj.t * p21[2];\n  }\n\n  if (closestPoint) {\n    closestPoint[0] = closest[0];\n    closestPoint[1] = closest[1];\n    closestPoint[2] = closest[2];\n  }\n  outObj.distance = vtkMath.distance2BetweenPoints(closest, x);\n  return outObj;\n}\n\nfunction intersection(a1, a2, b1, b2, u, v) {\n  const a21 = [];\n  const b21 = [];\n  const b1a1 = [];\n\n  u[0] = 0.0;\n  v[0] = 0.0;\n\n  // Determine line vectors.\n  a21[0] = a2[0] - a1[0];\n  a21[1] = a2[1] - a1[1];\n  a21[2] = a2[2] - a1[2];\n  b21[0] = b2[0] - b1[0];\n  b21[1] = b2[1] - b1[1];\n  b21[2] = b2[2] - b1[2];\n  b1a1[0] = b1[0] - a1[0];\n  b1a1[1] = b1[1] - a1[1];\n  b1a1[2] = b1[2] - a1[2];\n\n  // Compute the system (least squares) matrix.\n  const A = [];\n  A[0] = [vtkMath.dot(a21, a21), -vtkMath.dot(a21, b21)];\n  A[1] = [A[0][1], vtkMath.dot(b21, b21)];\n\n  // Compute the least squares system constant term.\n  const c = [];\n  c[0] = vtkMath.dot(a21, b1a1);\n  c[1] = -vtkMath.dot(b21, b1a1);\n\n  // Solve the system of equations\n  if (vtkMath.solveLinearSystem(A, c, 2) === 0) {\n    // The lines are colinear. Therefore, one of the four endpoints is the\n    // point of closest approach\n    let minDist = Number.MAX_VALUE;\n    const p = [a1, a2, b1, b2];\n    const l1 = [b1, b1, a1, a1];\n    const l2 = [b2, b2, a2, a2];\n    const uv1 = [v[0], v[0], u[0], u[0]];\n    const uv2 = [u[0], u[0], v[0], v[0]];\n    let obj;\n    for (let i = 0; i < 4; i++) {\n      obj = distanceToLine(p[i], l1[i], l2[i]);\n      if (obj.distance < minDist) {\n        minDist = obj.distance;\n        uv1[i] = obj.t;\n        uv2[i] = i % 2;\n      }\n    }\n    return IntersectionState.ON_LINE;\n  }\n  u[0] = c[0];\n  v[0] = c[1];\n\n  // Check parametric coordinates for intersection.\n  if (u[0] >= 0.0 && u[0] <= 1.0 && v[0] >= 0.0 && v[0] <= 1.0) {\n    return IntersectionState.YES_INTERSECTION;\n  }\n\n  return IntersectionState.NO_INTERSECTION;\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nexport const STATIC = {\n  distanceToLine,\n  intersection,\n};\n\n// ----------------------------------------------------------------------------\n// vtkLine methods\n// ----------------------------------------------------------------------------\n\nfunction vtkLine(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkLine');\n\n  publicAPI.getCellDimension = () => 1;\n  publicAPI.intersectWithLine = (p1, p2, tol, x, pcoords) => {\n    const outObj = { intersect: 0, t: Number.MIN_VALUE, subId: 0 };\n    pcoords[1] = 0.0;\n    pcoords[2] = 0.0;\n    const projXYZ = [];\n\n    const a1 = [];\n    const a2 = [];\n    model.points.getPoint(0, a1);\n    model.points.getPoint(1, a2);\n\n    const u = [];\n    const v = [];\n    const intersect = intersection(p1, p2, a1, a2, u, v);\n    outObj.t = u[0];\n    pcoords[0] = v[0];\n\n    if (intersect === IntersectionState.YES_INTERSECTION) {\n      // make sure we are within tolerance\n      for (let i = 0; i < 3; i++) {\n        x[i] = a1[i] + pcoords[0] * (a2[i] - a1[i]);\n        projXYZ[i] = p1[i] + outObj.t * (p2[i] - p1[i]);\n      }\n      if (vtkMath.distance2BetweenPoints(x, projXYZ) <= tol * tol) {\n        outObj.intersect = 1;\n        return outObj;\n      }\n    } else {\n      let outDistance;\n      // check to see if it lies within tolerance\n      // one of the parametric coords must be outside 0-1\n      if (outObj.t < 0.0) {\n        outObj.t = 0.0;\n        outDistance = distanceToLine(p1, a1, a2, x);\n        pcoords[0] = outDistance.t;\n        if (outDistance.distance <= tol * tol) {\n          outObj.intersect = 1;\n          return outObj;\n        }\n        return outObj;\n      }\n      if (outObj.t > 1.0) {\n        outObj.t = 1.0;\n        outDistance = distanceToLine(p2, a1, a2, x);\n        pcoords[0] = outDistance.t;\n        if (outDistance.distance <= tol * tol) {\n          outObj.intersect = 1;\n          return outObj;\n        }\n        return outObj;\n      }\n      if (pcoords[0] < 0.0) {\n        pcoords[0] = 0.0;\n        outDistance = distanceToLine(a1, p1, p2, x);\n        outObj.t = outDistance.t;\n        if (outDistance.distance <= tol * tol) {\n          outObj.intersect = 1;\n          return outObj;\n        }\n        return outObj;\n      }\n      if (pcoords[1] > 1.0) {\n        pcoords[1] = 1.0;\n        outDistance = distanceToLine(a2, p1, p2, x);\n        outObj.t = outDistance.t;\n        if (outDistance.distance <= tol * tol) {\n          outObj.intersect = 1;\n          return outObj;\n        }\n        return outObj;\n      }\n    }\n    return outObj;\n  };\n  publicAPI.evaluatePosition = (\n    x,\n    closestPoint,\n    subId,\n    pcoords,\n    dist2,\n    weights\n  ) => {}; // virtual\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  vtkCell.extend(publicAPI, model, initialValues);\n\n  vtkLine(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkLine');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend }, STATIC, Constants);\n","import macro from 'vtk.js/Sources/macro';\nimport vtkCell from 'vtk.js/Sources/Common/DataModel/Cell';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport vtkLine from 'vtk.js/Sources/Common/DataModel/Line';\nimport vtkPlane from 'vtk.js/Sources/Common/DataModel/Plane';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction computeNormalDirection(v1, v2, v3, n) {\n  // order is important!!! maintain consistency with triangle vertex order\n  const ax = v3[0] - v2[0];\n  const ay = v3[1] - v2[1];\n  const az = v3[2] - v2[2];\n  const bx = v1[0] - v2[0];\n  const by = v1[1] - v2[1];\n  const bz = v1[2] - v2[2];\n\n  n[0] = ay * bz - az * by;\n  n[1] = az * bx - ax * bz;\n  n[2] = ax * by - ay * bx;\n}\n\nfunction computeNormal(v1, v2, v3, n) {\n  computeNormalDirection(v1, v2, v3, n);\n  const length = Math.sqrt(n[0] * n[0] + n[1] * n[1] + n[2] * n[2]);\n  if (length !== 0.0) {\n    n[0] /= length;\n    n[1] /= length;\n    n[2] /= length;\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nexport const STATIC = {\n  computeNormalDirection,\n  computeNormal,\n};\n\n// ----------------------------------------------------------------------------\n// vtkTriangle methods\n// ----------------------------------------------------------------------------\n\nfunction vtkTriangle(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkTriangle');\n\n  publicAPI.getCellDimension = () => 2;\n  publicAPI.intersectWithLine = (p1, p2, tol, x, pcoords) => {\n    const outObj = { subId: 0, t: 0, intersect: -1 };\n    pcoords[2] = 0.0;\n    const closestPoint = [];\n    const tol2 = tol * tol;\n\n    // Get normal for triangle\n    const pt1 = [];\n    const pt2 = [];\n    const pt3 = [];\n    model.points.getPoint(0, pt1);\n    model.points.getPoint(1, pt2);\n    model.points.getPoint(2, pt3);\n    const n = [];\n    const weights = [];\n    computeNormal(pt1, pt2, pt3, n);\n    if (n[0] !== 0 || n[1] !== 0 || n[2] !== 0) {\n      // Intersect plane of triangle with line\n      const plane = vtkPlane.intersectWithLine(p1, p2, pt1, n);\n      outObj.t = plane.t;\n      x[0] = plane.x[0];\n      x[1] = plane.x[1];\n      x[2] = plane.x[2];\n      if (!plane.intersection) {\n        pcoords[0] = 0.0;\n        pcoords[1] = 0.0;\n        outObj.intersect = 0;\n        return outObj;\n      }\n\n      // Evaluate position\n      const inside = publicAPI.evaluatePosition(\n        x,\n        closestPoint,\n        pcoords,\n        weights\n      );\n      if (inside.evaluation >= 0) {\n        if (inside.dist2 <= tol2) {\n          outObj.intersect = 1;\n          return outObj;\n        }\n        outObj.intersect = inside.evaluation;\n        return outObj;\n      }\n    }\n\n    // Normals are null, so the triangle is degenerated and\n    // we still need to check intersection between line and\n    // the longest edge.\n    const dist2Pt1Pt2 = vtkMath.distance2BetweenPoints(pt1, pt2);\n    const dist2Pt2Pt3 = vtkMath.distance2BetweenPoints(pt2, pt3);\n    const dist2Pt3Pt1 = vtkMath.distance2BetweenPoints(pt3, pt1);\n    if (!model.line) {\n      model.line = vtkLine.newInstance();\n    }\n    if (dist2Pt1Pt2 > dist2Pt2Pt3 && dist2Pt1Pt2 > dist2Pt3Pt1) {\n      model.line.getPoints().setPoint(0, pt1);\n      model.line.getPoints().setPoint(1, pt2);\n    } else if (dist2Pt2Pt3 > dist2Pt3Pt1 && dist2Pt2Pt3 > dist2Pt1Pt2) {\n      model.line.getPoints().setPoint(0, pt2);\n      model.line.getPoints().setPoint(1, pt3);\n    } else {\n      model.line.getPoints().setPoint(0, pt3);\n      model.line.getPoints().setPoint(1, pt1);\n    }\n\n    const intersectLine = model.line.intersectWithLine(p1, p2, tol, x, pcoords);\n    if (intersectLine.intersect) {\n      const pt3Pt1 = [];\n      const pt3Pt2 = [];\n      const pt3X = [];\n      // Compute r and s manually, using dot and norm.\n      for (let i = 0; i < 3; i++) {\n        pt3Pt1[i] = pt1[i] - pt3[i];\n        pt3Pt2[i] = pt2[i] - pt3[i];\n        pt3X[i] = x[i] - pt3[i];\n      }\n      pcoords[0] = vtkMath.dot(pt3X, pt3Pt1) / dist2Pt3Pt1;\n      pcoords[1] = vtkMath.dot(pt3X, pt3Pt2) / dist2Pt2Pt3;\n      outObj.evaluation = 1;\n      return outObj;\n    }\n\n    pcoords[0] = 0.0;\n    pcoords[1] = 0.0;\n    outObj.evaluation = 0;\n    return outObj;\n  };\n\n  publicAPI.evaluatePosition = (x, closestPoint, pcoords, weights) => {\n    // will return obj\n    const outObj = { subId: 0, dist2: 0, evaluation: -1 };\n    let i;\n    let j;\n    const pt1 = [];\n    const pt2 = [];\n    const pt3 = [];\n    const n = [];\n    let fabsn;\n    const rhs = [];\n    const c1 = [];\n    const c2 = [];\n    let det = 0;\n    let idx = 0;\n    const indices = [];\n    let dist2Point;\n    let dist2Line1;\n    let dist2Line2;\n    let closest = [];\n    const closestPoint1 = [];\n    const closestPoint2 = [];\n    const cp = [];\n\n    outObj.subId = 0;\n    pcoords[2] = 0.0;\n\n    // Get normal for triangle, only the normal direction is needed, i.e. the\n    // normal need not be normalized (unit length)\n    //\n    model.points.getPoint(1, pt1);\n    model.points.getPoint(2, pt2);\n    model.points.getPoint(0, pt3);\n\n    computeNormalDirection(pt1, pt2, pt3, n);\n\n    // Project point to plane\n    vtkPlane.generalizedProjectPoint(x, pt1, n, cp);\n\n    // Construct matrices.  Since we have over determined system, need to find\n    // which 2 out of 3 equations to use to develop equations. (Any 2 should\n    // work since we've projected point to plane.)\n    let maxComponent = 0.0;\n    for (i = 0; i < 3; i++) {\n      // trying to avoid an expensive call to fabs()\n      if (n[i] < 0) {\n        fabsn = -n[i];\n      } else {\n        fabsn = n[i];\n      }\n      if (fabsn > maxComponent) {\n        maxComponent = fabsn;\n        idx = i;\n      }\n    }\n\n    for (j = 0, i = 0; i < 3; i++) {\n      if (i !== idx) {\n        indices[j++] = i;\n      }\n    }\n\n    for (i = 0; i < 2; i++) {\n      rhs[i] = cp[indices[i]] - pt3[indices[i]];\n      c1[i] = pt1[indices[i]] - pt3[indices[i]];\n      c2[i] = pt2[indices[i]] - pt3[indices[i]];\n    }\n    det = vtkMath.determinant2x2(c1, c2);\n    if (det === 0.0) {\n      pcoords[0] = 0.0;\n      pcoords[1] = 0.0;\n      outObj.evaluation = -1;\n      return outObj;\n    }\n\n    pcoords[0] = vtkMath.determinant2x2(rhs, c2) / det;\n    pcoords[1] = vtkMath.determinant2x2(c1, rhs) / det;\n\n    // Okay, now find closest point to element\n    weights[0] = 1 - (pcoords[0] + pcoords[1]);\n    weights[1] = pcoords[0];\n    weights[2] = pcoords[1];\n\n    if (\n      weights[0] >= 0.0 &&\n      weights[0] <= 1.0 &&\n      weights[1] >= 0.0 &&\n      weights[1] <= 1.0 &&\n      weights[2] >= 0.0 &&\n      weights[2] <= 1.0\n    ) {\n      // projection distance\n      if (closestPoint) {\n        outObj.dist2 = vtkMath.distance2BetweenPoints(cp, x);\n        closestPoint[0] = cp[0];\n        closestPoint[1] = cp[1];\n        closestPoint[2] = cp[2];\n      }\n      outObj.evaluation = 1;\n    } else {\n      let t;\n      if (closestPoint) {\n        if (weights[1] < 0.0 && weights[2] < 0.0) {\n          dist2Point = vtkMath.distance2BetweenPoints(x, pt3);\n          dist2Line1 = vtkLine.distanceToLine(x, pt1, pt3, t, closestPoint1);\n          dist2Line2 = vtkLine.distanceToLine(x, pt3, pt2, t, closestPoint2);\n          if (dist2Point < dist2Line1) {\n            outObj.dist2 = dist2Point;\n            closest = pt3;\n          } else {\n            outObj.dist2 = dist2Line1;\n            closest = closestPoint1;\n          }\n          if (dist2Line2 < outObj.dist2) {\n            outObj.dist2 = dist2Line2;\n            closest = closestPoint2;\n          }\n          for (i = 0; i < 3; i++) {\n            closestPoint[i] = closest[i];\n          }\n        } else if (weights[2] < 0.0 && weights[0] < 0.0) {\n          dist2Point = vtkMath.distance2BetweenPoints(x, pt1);\n          dist2Line1 = vtkLine.distanceToLine(x, pt1, pt3, t, closestPoint1);\n          dist2Line2 = vtkLine.distanceToLine(x, pt1, pt2, t, closestPoint2);\n          if (dist2Point < dist2Line1) {\n            outObj.dist2 = dist2Point;\n            closest = pt1;\n          } else {\n            outObj.dist2 = dist2Line1;\n            closest = closestPoint1;\n          }\n          if (dist2Line2 < outObj.dist2) {\n            outObj.dist2 = dist2Line2;\n            closest = closestPoint2;\n          }\n          for (i = 0; i < 3; i++) {\n            closestPoint[i] = closest[i];\n          }\n        } else if (weights[1] < 0.0 && weights[0] < 0.0) {\n          dist2Point = vtkMath.distance2BetweenPoints(x, pt2);\n          dist2Line1 = vtkLine.distanceToLine(x, pt2, pt3, t, closestPoint1);\n          dist2Line2 = vtkLine.distanceToLine(x, pt1, pt2, t, closestPoint2);\n          if (dist2Point < dist2Line1) {\n            outObj.dist2 = dist2Point;\n            closest = pt2;\n          } else {\n            outObj.dist2 = dist2Line1;\n            closest = closestPoint1;\n          }\n          if (dist2Line2 < outObj.dist2) {\n            outObj.dist2 = dist2Line2;\n            closest = closestPoint2;\n          }\n          for (i = 0; i < 3; i++) {\n            closestPoint[i] = closest[i];\n          }\n        } else if (weights[0] < 0.0) {\n          const lineDistance = vtkLine.distanceToLine(\n            x,\n            pt1,\n            pt2,\n            closestPoint\n          );\n          outObj.dist2 = lineDistance.distance;\n        } else if (weights[1] < 0.0) {\n          const lineDistance = vtkLine.distanceToLine(\n            x,\n            pt2,\n            pt3,\n            closestPoint\n          );\n          outObj.dist2 = lineDistance.distance;\n        } else if (weights[2] < 0.0) {\n          const lineDistance = vtkLine.distanceToLine(\n            x,\n            pt1,\n            pt3,\n            closestPoint\n          );\n          outObj.dist2 = lineDistance.distance;\n        }\n      }\n      outObj.evaluation = 0;\n    }\n\n    return outObj;\n  };\n\n  publicAPI.evaluateLocation = (pcoords, x, weights) => {\n    const p0 = [];\n    const p1 = [];\n    const p2 = [];\n    model.points.getPoint(0, p0);\n    model.points.getPoint(1, p1);\n    model.points.getPoint(2, p2);\n    const u3 = 1.0 - pcoords[0] - pcoords[1];\n\n    for (let i = 0; i < 3; i++) {\n      x[i] = p0[i] * u3 + p1[i] * pcoords[0] + p2[i] * pcoords[1];\n    }\n\n    weights[0] = u3;\n    weights[1] = pcoords[0];\n    weights[2] = pcoords[1];\n  };\n\n  publicAPI.getParametricDistance = (pcoords) => {\n    let pDist;\n    let pDistMax = 0.0;\n    const pc = [];\n    pc[0] = pcoords[0];\n    pc[1] = pcoords[1];\n    pc[2] = 1.0 - pcoords[0] - pcoords[1];\n\n    for (let i = 0; i < 3; i++) {\n      if (pc[i] < 0.0) {\n        pDist = -pc[i];\n      } else if (pc[i] > 1.0) {\n        pDist = pc[i] - 1.0;\n      } else {\n        // inside the cell in the parametric direction\n        pDist = 0.0;\n      }\n      if (pDist > pDistMax) {\n        pDistMax = pDist;\n      }\n    }\n    return pDistMax;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  vtkCell.extend(publicAPI, model, initialValues);\n\n  vtkTriangle(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkTriangle');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend }, STATIC);\n","export const POLYDATA_FIELDS = ['verts', 'lines', 'polys', 'strips'];\n\nexport default {\n  POLYDATA_FIELDS,\n};\n","import macro from 'vtk.js/Sources/macro';\nimport vtk from 'vtk.js/Sources/vtk';\nimport vtkCellArray from 'vtk.js/Sources/Common/Core/CellArray';\nimport vtkCellLinks from 'vtk.js/Sources/Common/DataModel/CellLinks';\nimport vtkCellTypes from 'vtk.js/Sources/Common/DataModel/CellTypes';\nimport vtkPointSet from 'vtk.js/Sources/Common/DataModel/PointSet';\nimport vtkTriangle from 'vtk.js/Sources/Common/DataModel/Triangle';\n\nimport { CellType } from 'vtk.js/Sources/Common/DataModel/CellTypes/Constants';\nimport { POLYDATA_FIELDS } from 'vtk.js/Sources/Common/DataModel/PolyData/Constants';\n\n// ----------------------------------------------------------------------------\n// vtkPolyData methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPolyData(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPolyData');\n\n  function camelize(str) {\n    return str\n      .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (letter) => letter.toUpperCase())\n      .replace(/\\s+/g, '');\n  }\n\n  // build empty cell arrays and set methods\n  POLYDATA_FIELDS.forEach((type) => {\n    publicAPI[`getNumberOf${camelize(type)}`] = () =>\n      model[type].getNumberOfCells();\n    if (!model[type]) {\n      model[type] = vtkCellArray.newInstance();\n    } else {\n      model[type] = vtk(model[type]);\n    }\n  });\n\n  publicAPI.getNumberOfCells = () =>\n    POLYDATA_FIELDS.reduce(\n      (num, cellType) => num + model[cellType].getNumberOfCells(),\n      0\n    );\n\n  const superShallowCopy = publicAPI.shallowCopy;\n  publicAPI.shallowCopy = (other, debug = false) => {\n    superShallowCopy(other, debug);\n    POLYDATA_FIELDS.forEach((type) => {\n      model[type] = vtkCellArray.newInstance();\n      model[type].shallowCopy(other.getReferenceByName(type));\n    });\n  };\n\n  publicAPI.buildCells = () => {\n    // here are the number of cells we have\n    const nVerts = publicAPI.getNumberOfVerts();\n    const nLines = publicAPI.getNumberOfLines();\n    const nPolys = publicAPI.getNumberOfPolys();\n    const nStrips = publicAPI.getNumberOfStrips();\n\n    // pre-allocate the space we need\n    const nCells = nVerts + nLines + nPolys + nStrips;\n\n    const types = new Uint8Array(nCells);\n    let pTypes = types;\n    const locs = new Uint32Array(nCells);\n    let pLocs = locs;\n\n    // record locations and type of each cell.\n    // verts\n    let nextCellPts = 0;\n    if (nVerts) {\n      model.verts.getCellSizes().forEach((numCellPts, index) => {\n        pLocs[index] = nextCellPts;\n        pTypes[index] =\n          numCellPts > 1 ? CellType.VTK_POLY_VERTEX : CellType.VTK_VERTEX;\n        nextCellPts += numCellPts + 1;\n      });\n\n      pLocs = pLocs.subarray(nVerts);\n      pTypes = pTypes.subarray(nVerts);\n    }\n\n    // lines\n    if (nLines) {\n      model.lines.getCellSizes().forEach((numCellPts, index) => {\n        pLocs[index] = nextCellPts;\n        pTypes[index] =\n          numCellPts > 2 ? CellType.VTK_POLY_LINE : CellType.VTK_LINE;\n        if (numCellPts === 1) {\n          console.log(\n            'Building VTK_LINE ',\n            index,\n            ' with only one point, but VTK_LINE needs at least two points. Check the input.'\n          );\n        }\n        nextCellPts += numCellPts + 1;\n      });\n\n      pLocs = pLocs.subarray(nLines);\n      pTypes = pTypes.subarray(nLines);\n    }\n\n    // polys\n    if (nPolys) {\n      model.polys.getCellSizes().forEach((numCellPts, index) => {\n        pLocs[index] = nextCellPts;\n        switch (numCellPts) {\n          case 3:\n            pTypes[index] = CellType.VTK_TRIANGLE;\n            break;\n          case 4:\n            pTypes[index] = CellType.VTK_QUAD;\n            break;\n          default:\n            pTypes[index] = CellType.VTK_POLYGON;\n            break;\n        }\n        if (numCellPts < 3) {\n          console.log(\n            'Building VTK_TRIANGLE ',\n            index,\n            ' with less than three points, but VTK_TRIANGLE needs at least three points. Check the input.'\n          );\n        }\n        nextCellPts += numCellPts + 1;\n      });\n\n      pLocs += pLocs.subarray(nPolys);\n      pTypes += pTypes.subarray(nPolys);\n    }\n\n    // strips\n    if (nStrips) {\n      pTypes.fill(CellType.VTK_TRIANGLE_STRIP, 0, nStrips);\n\n      model.strips.getCellSizes().forEach((numCellPts, index) => {\n        pLocs[index] = nextCellPts;\n        nextCellPts += numCellPts + 1;\n      });\n    }\n\n    // set up the cell types data structure\n    model.cells = vtkCellTypes.newInstance();\n    model.cells.setCellTypes(nCells, types, locs);\n  };\n\n  /**\n   * Create upward links from points to cells that use each point. Enables\n   * topologically complex queries.\n   */\n  publicAPI.buildLinks = (initialSize = 0) => {\n    if (model.cells === undefined) {\n      publicAPI.buildCells();\n    }\n\n    model.links = vtkCellLinks.newInstance();\n    if (initialSize > 0) {\n      model.links.allocate(initialSize);\n    } else {\n      model.links.allocate(publicAPI.getPoints().getNumberOfPoints());\n    }\n\n    model.links.buildLinks(publicAPI);\n  };\n\n  // Returns an object made of the cellType and a subarray `cellPointIds` of\n  // the cell points.\n  publicAPI.getCellPoints = (cellId) => {\n    const cellType = model.cells.getCellType(cellId);\n    let cells = null;\n    switch (cellType) {\n      case CellType.VTK_VERTEX:\n      case CellType.VTK_POLY_VERTEX:\n        cells = model.verts;\n        break;\n\n      case CellType.VTK_LINE:\n      case CellType.VTK_POLY_LINE:\n        cells = model.lines;\n        break;\n\n      case CellType.VTK_TRIANGLE:\n      case CellType.VTK_QUAD:\n      case CellType.VTK_POLYGON:\n        cells = model.polys;\n        break;\n\n      case CellType.VTK_TRIANGLE_STRIP:\n        cells = model.strips;\n        break;\n\n      default:\n        cells = null;\n        return { type: 0, cellPointIds: null };\n    }\n    const loc = model.cells.getCellLocation(cellId);\n    const cellPointIds = cells.getCell(loc);\n    return { cellType, cellPointIds };\n  };\n\n  publicAPI.getPointCells = (ptId) => model.links.getCells(ptId);\n\n  publicAPI.getCellEdgeNeighbors = (cellId, point1, point2) => {\n    const link1 = model.links.getLink(point1);\n    const link2 = model.links.getLink(point2);\n\n    return link1.cells.filter(\n      (cell) => cell !== cellId && link2.cells.indexOf(cell) !== -1\n    );\n  };\n\n  /**\n   * If you know the type of cell, you may provide it to improve performances.\n   */\n  publicAPI.getCell = (cellId, cellHint = null) => {\n    const cellInfo = publicAPI.getCellPoints(cellId);\n    if (cellInfo.cellType === CellType.VTK_TRIANGLE) {\n      const cell = cellHint || vtkTriangle.newInstance();\n      cell.initialize(publicAPI.getPoints(), cellInfo.cellPointIds);\n      return cell;\n    }\n    return null;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // verts: null,\n  // lines: null,\n  // polys: null,\n  // strips: null,\n  // cells: null,\n  // links: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkPointSet.extend(publicAPI, model, initialValues);\n  macro.get(publicAPI, model, ['cells', 'links']);\n  macro.setGet(publicAPI, model, ['verts', 'lines', 'polys', 'strips']);\n\n  // Object specific methods\n  vtkPolyData(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkPolyData');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import macro from 'vtk.js/Sources/macro';\n\nfunction notImplemented(method) {\n  return () => macro.vtkErrorMacro(`vtkProp::${method} - NOT IMPLEMENTED`);\n}\n\n// ----------------------------------------------------------------------------\n// vtkProp methods\n// ----------------------------------------------------------------------------\n\nfunction vtkProp(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkProp');\n\n  publicAPI.getMTime = () => {\n    let m1 = model.mtime;\n    for (let index = 0; index < model.textures.length; ++index) {\n      const m2 = model.textures[index].getMTime();\n      if (m2 > m1) {\n        m1 = m2;\n      }\n    }\n    return m1;\n  };\n\n  publicAPI.getNestedProps = () => null;\n  publicAPI.getActors = () => [];\n  publicAPI.getActors2D = () => [];\n  publicAPI.getVolumes = () => [];\n\n  publicAPI.pick = notImplemented('pick');\n  publicAPI.hasKey = notImplemented('hasKey');\n\n  publicAPI.getRedrawMTime = () => model.mtime;\n\n  publicAPI.setEstimatedRenderTime = (t) => {\n    model.estimatedRenderTime = t;\n    model.savedEstimatedRenderTime = t;\n  };\n\n  publicAPI.restoreEstimatedRenderTime = () => {\n    model.estimatedRenderTime = model.savedEstimatedRenderTime;\n  };\n\n  publicAPI.addEstimatedRenderTime = (t) => {\n    model.estimatedRenderTime += t;\n  };\n\n  publicAPI.setAllocatedRenderTime = (t) => {\n    model.allocatedRenderTime = t;\n    model.savedEstimatedRenderTime = model.estimatedRenderTime;\n    model.estimatedRenderTime = 0;\n  };\n\n  publicAPI.getSupportsSelection = () => false;\n\n  publicAPI.getTextures = () => model.textures;\n  publicAPI.hasTexture = (texture) => model.textures.indexOf(texture) !== -1;\n  publicAPI.addTexture = (texture) => {\n    if (texture && !publicAPI.hasTexture(texture)) {\n      model.textures = model.textures.concat(texture);\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.removeTexture = (texture) => {\n    const newTextureList = model.textures.filter((item) => item !== texture);\n    if (model.textures.length !== newTextureList.length) {\n      model.textures = newTextureList;\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.removeAllTextures = () => {\n    model.textures = [];\n    publicAPI.modified();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  visibility: true,\n  pickable: true,\n  dragable: true,\n  useBounds: true,\n  allocatedRenderTime: 10,\n  estimatedRenderTime: 0,\n  savedEstimatedRenderTime: 0,\n  renderTimeMultiplier: 1,\n  paths: null,\n  textures: [],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['estimatedRenderTime', 'allocatedRenderTime']);\n  macro.setGet(publicAPI, model, [\n    'visibility',\n    'pickable',\n    'dragable',\n    'useBounds',\n    'renderTimeMultiplier',\n  ]);\n\n  // Object methods\n  vtkProp(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkProp');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import { vec3, quat, mat4 } from 'gl-matrix';\n\nimport macro from 'vtk.js/Sources/macro';\nimport vtkBoundingBox from 'vtk.js/Sources/Common/DataModel/BoundingBox';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport vtkProp from 'vtk.js/Sources/Rendering/Core/Prop';\n\n// ----------------------------------------------------------------------------\n// vtkProp3D methods\n// ----------------------------------------------------------------------------\n\nfunction vtkProp3D(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkProp3D');\n\n  publicAPI.addPosition = (deltaXYZ) => {\n    model.position = model.position.map(\n      (value, index) => value + deltaXYZ[index]\n    );\n    publicAPI.modified();\n  };\n\n  publicAPI.getOrientationWXYZ = () => {\n    const q = quat.create();\n    mat4.getRotation(q, model.rotation);\n    const oaxis = vec3.create();\n    const w = quat.getAxisAngle(oaxis, q);\n    return [vtkMath.degreesFromRadians(w), oaxis[0], oaxis[1], oaxis[2]];\n  };\n\n  publicAPI.rotateX = (val) => {\n    if (val === 0.0) {\n      return;\n    }\n    mat4.rotateX(\n      model.rotation,\n      model.rotation,\n      vtkMath.radiansFromDegrees(val)\n    );\n    publicAPI.modified();\n  };\n\n  publicAPI.rotateY = (val) => {\n    if (val === 0.0) {\n      return;\n    }\n    mat4.rotateY(\n      model.rotation,\n      model.rotation,\n      vtkMath.radiansFromDegrees(val)\n    );\n    publicAPI.modified();\n  };\n\n  publicAPI.rotateZ = (val) => {\n    if (val === 0.0) {\n      return;\n    }\n    mat4.rotateZ(\n      model.rotation,\n      model.rotation,\n      vtkMath.radiansFromDegrees(val)\n    );\n    publicAPI.modified();\n  };\n\n  publicAPI.rotateWXYZ = (degrees, x, y, z) => {\n    if (degrees === 0.0 || (x === 0.0 && y === 0.0 && z === 0.0)) {\n      return;\n    }\n\n    // convert to radians\n    const angle = vtkMath.radiansFromDegrees(degrees);\n\n    const q = quat.create();\n    quat.setAxisAngle(q, [x, y, z], angle);\n\n    const quatMat = mat4.create();\n    mat4.fromQuat(quatMat, q);\n    mat4.multiply(model.rotation, model.rotation, quatMat);\n    publicAPI.modified();\n  };\n\n  publicAPI.setUserMatrix = (matrix) => {\n    mat4.copy(model.userMatrix, matrix);\n    publicAPI.modified();\n  };\n\n  publicAPI.getMatrix = () => {\n    publicAPI.computeMatrix();\n    return model.matrix;\n  };\n\n  publicAPI.computeMatrix = () => {\n    // check whether or not need to rebuild the matrix\n    if (publicAPI.getMTime() > model.matrixMTime.getMTime()) {\n      mat4.identity(model.matrix);\n      if (model.userMatrix) {\n        mat4.multiply(model.matrix, model.matrix, model.userMatrix);\n      }\n      mat4.translate(model.matrix, model.matrix, model.origin);\n      mat4.translate(model.matrix, model.matrix, model.position);\n      mat4.multiply(model.matrix, model.matrix, model.rotation);\n      mat4.scale(model.matrix, model.matrix, model.scale);\n      mat4.translate(model.matrix, model.matrix, [\n        -model.origin[0],\n        -model.origin[1],\n        -model.origin[2],\n      ]);\n      mat4.transpose(model.matrix, model.matrix);\n\n      // check for identity\n      model.isIdentity = true;\n      for (let i = 0; i < 4; ++i) {\n        for (let j = 0; j < 4; ++j) {\n          if ((i === j ? 1.0 : 0.0) !== model.matrix[i + j * 4]) {\n            model.isIdentity = false;\n          }\n        }\n      }\n      model.matrixMTime.modified();\n    }\n  };\n\n  publicAPI.getCenter = () => vtkBoundingBox.getCenter(model.bounds);\n  publicAPI.getLength = () => vtkBoundingBox.getLength(model.bounds);\n  publicAPI.getXRange = () => vtkBoundingBox.getXRange(model.bounds);\n  publicAPI.getYRange = () => vtkBoundingBox.getYRange(model.bounds);\n  publicAPI.getZRange = () => vtkBoundingBox.getZRange(model.bounds);\n\n  publicAPI.getUserMatrix = () => model.userMatrix;\n\n  function updateIdentityFlag() {\n    publicAPI.computeMatrix();\n  }\n\n  publicAPI.onModified(updateIdentityFlag);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  origin: [0, 0, 0],\n  position: [0, 0, 0],\n  rotation: null,\n  scale: [1, 1, 1],\n  bounds: [1, -1, 1, -1, 1, -1],\n\n  userMatrix: null,\n  userMatrixMTime: null,\n\n  cachedProp3D: null,\n  isIdentity: true,\n  matrixMTime: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkProp.extend(publicAPI, model, initialValues);\n\n  model.matrixMTime = {};\n  macro.obj(model.matrixMTime);\n\n  // Build VTK API\n  macro.get(publicAPI, model, ['bounds', 'isIdentity']);\n  macro.setGetArray(\n    publicAPI,\n    model,\n    ['origin', 'position', 'orientation', 'scale'],\n    3\n  );\n\n  // Object internal instance\n  model.matrix = mat4.create();\n  model.rotation = mat4.create();\n  model.userMatrix = mat4.create();\n  model.transform = null; // FIXME\n\n  // Object methods\n  vtkProp3D(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkProp3D');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import { vec3, mat4 } from 'gl-matrix';\nimport macro from 'vtk.js/Sources/macro';\nimport vtkProp3D from 'vtk.js/Sources/Rendering/Core/Prop3D';\nimport vtkProperty from 'vtk.js/Sources/Rendering/Core/Property';\n\nconst { vtkDebugMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// vtkActor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkActor(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkActor');\n\n  // Capture 'parentClass' api for internal use\n  const superClass = Object.assign({}, publicAPI);\n\n  publicAPI.getActors = () => publicAPI;\n\n  publicAPI.getIsOpaque = () => {\n    if (model.forceOpaque) {\n      return true;\n    }\n    if (model.forceTranslucent) {\n      return false;\n    }\n    // make sure we have a property\n    if (!model.property) {\n      // force creation of a property\n      publicAPI.getProperty();\n    }\n\n    let isOpaque = model.property.getOpacity() >= 1.0;\n\n    // are we using an opaque texture, if any?\n    isOpaque = isOpaque && (!model.texture || !model.texture.isTranslucent());\n\n    // are we using an opaque scalar array, if any?\n    isOpaque = isOpaque && (!model.mapper || model.mapper.getIsOpaque());\n\n    return isOpaque;\n  };\n\n  publicAPI.hasTranslucentPolygonalGeometry = () => {\n    if (model.mapper === null) {\n      return false;\n    }\n    // make sure we have a property\n    if (model.property === null) {\n      // force creation of a property\n      publicAPI.setProperty(publicAPI.makeProperty());\n    }\n\n    // is this actor opaque ?\n    return !publicAPI.getIsOpaque();\n  };\n\n  publicAPI.makeProperty = vtkProperty.newInstance;\n\n  publicAPI.getProperty = () => {\n    if (model.property === null) {\n      model.property = publicAPI.makeProperty();\n    }\n    return model.property;\n  };\n\n  publicAPI.getBounds = () => {\n    if (model.mapper === null) {\n      return model.bounds;\n    }\n\n    // Check for the special case when the mapper's bounds are unknown\n    const bds = model.mapper.getBounds();\n    if (!bds || bds.length !== 6) {\n      return bds;\n    }\n\n    // Check for the special case when the actor is empty.\n    if (bds[0] > bds[1]) {\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n      model.bounds = [1, -1, 1, -1, 1, -1];\n      model.boundsMTime.modified();\n      return bds;\n    }\n\n    // Check if we have cached values for these bounds - we cache the\n    // values returned by model.mapper.getBounds() and we store the time\n    // of caching. If the values returned this time are different, or\n    // the modified time of this class is newer than the cached time,\n    // then we need to rebuild.\n    if (\n      !model.mapperBounds ||\n      bds[0] !== model.mapperBounds[0] ||\n      bds[1] !== model.mapperBounds[1] ||\n      bds[2] !== model.mapperBounds[2] ||\n      bds[3] !== model.mapperBounds[3] ||\n      bds[4] !== model.mapperBounds[4] ||\n      bds[5] !== model.mapperBounds[5] ||\n      publicAPI.getMTime() > model.boundsMTime.getMTime()\n    ) {\n      vtkDebugMacro('Recomputing bounds...');\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n      const bbox = [\n        vec3.fromValues(bds[1], bds[3], bds[5]),\n        vec3.fromValues(bds[1], bds[2], bds[5]),\n        vec3.fromValues(bds[0], bds[2], bds[5]),\n        vec3.fromValues(bds[0], bds[3], bds[5]),\n        vec3.fromValues(bds[1], bds[3], bds[4]),\n        vec3.fromValues(bds[1], bds[2], bds[4]),\n        vec3.fromValues(bds[0], bds[2], bds[4]),\n        vec3.fromValues(bds[0], bds[3], bds[4]),\n      ];\n\n      publicAPI.computeMatrix();\n      const tmp4 = mat4.create();\n      mat4.transpose(tmp4, model.matrix);\n      bbox.forEach((pt) => vec3.transformMat4(pt, pt, tmp4));\n\n      /* eslint-disable no-multi-assign */\n      model.bounds[0] = model.bounds[2] = model.bounds[4] = Number.MAX_VALUE;\n      model.bounds[1] = model.bounds[3] = model.bounds[5] = -Number.MAX_VALUE;\n      /* eslint-enable no-multi-assign */\n\n      model.bounds = model.bounds.map(\n        (d, i) =>\n          i % 2 === 0\n            ? bbox.reduce((a, b) => (a > b[i / 2] ? b[i / 2] : a), d)\n            : bbox.reduce(\n                (a, b) => (a < b[(i - 1) / 2] ? b[(i - 1) / 2] : a),\n                d\n              )\n      );\n\n      model.boundsMTime.modified();\n    }\n    return model.bounds;\n  };\n\n  publicAPI.getMTime = () => {\n    let mt = superClass.getMTime();\n    if (model.property !== null) {\n      const time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n    }\n\n    if (model.backfaceProperty !== null) {\n      const time = model.backfaceProperty.getMTime();\n      mt = time > mt ? time : mt;\n    }\n\n    return mt;\n  };\n\n  publicAPI.getRedrawMTime = () => {\n    let mt = model.mtime;\n    if (model.mapper !== null) {\n      let time = model.mapper.getMTime();\n      mt = time > mt ? time : mt;\n      if (model.mapper.getInput() !== null) {\n        // FIXME !!! getInputAlgorithm / getInput\n        model.mapper.getInputAlgorithm().update();\n        time = model.mapper.getInput().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n    return mt;\n  };\n\n  publicAPI.getSupportsSelection = () =>\n    model.mapper ? model.mapper.getSupportsSelection() : false;\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  mapper: null,\n  property: null,\n  backfaceProperty: null,\n\n  forceOpaque: false,\n  forceTranslucent: false,\n\n  bounds: [1, -1, 1, -1, 1, -1],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkProp3D.extend(publicAPI, model, initialValues);\n\n  // vtkTimeStamp\n  model.boundsMTime = {};\n  macro.obj(model.boundsMTime);\n\n  // Build VTK API\n  macro.set(publicAPI, model, ['property']);\n  macro.setGet(publicAPI, model, [\n    'backfaceProperty',\n    'forceOpaque',\n    'forceTranslucent',\n    'mapper',\n  ]);\n\n  // Object methods\n  vtkActor(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkActor');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import macro from 'vtk.js/Sources/macro';\nimport vtkOpenGLRenderWindow from 'vtk.js/Sources/Rendering/OpenGL/RenderWindow';\nimport vtkRenderer from 'vtk.js/Sources/Rendering/Core/Renderer';\nimport vtkRenderWindow from 'vtk.js/Sources/Rendering/Core/RenderWindow';\nimport vtkRenderWindowInteractor from 'vtk.js/Sources/Rendering/Core/RenderWindowInteractor';\nimport vtkInteractorStyleTrackballCamera from 'vtk.js/Sources/Interaction/Style/InteractorStyleTrackballCamera';\n\n// Load basic classes for vtk() factory\nimport 'vtk.js/Sources/Common/Core/Points';\nimport 'vtk.js/Sources/Common/Core/DataArray';\nimport 'vtk.js/Sources/Common/DataModel/PolyData';\nimport 'vtk.js/Sources/Rendering/Core/Actor';\nimport 'vtk.js/Sources/Rendering/Core/Mapper';\n\nconst STYLE_CONTAINER = {\n  margin: '0',\n  padding: '0',\n  position: 'absolute',\n  top: '0',\n  left: '0',\n  width: '100vw',\n  height: '100vh',\n  overflow: 'hidden',\n};\n\nconst STYLE_CONTROL_PANEL = {\n  position: 'absolute',\n  left: '25px',\n  top: '25px',\n  backgroundColor: 'white',\n  borderRadius: '5px',\n  listStyle: 'none',\n  padding: '5px 10px',\n  margin: '0',\n  display: 'block',\n  border: 'solid 1px black',\n  maxWidth: 'calc(100vw - 70px)',\n  maxHeight: 'calc(100vh - 60px)',\n  overflow: 'auto',\n};\n\nfunction applyStyle(el, style) {\n  Object.keys(style).forEach((key) => {\n    el.style[key] = style[key];\n  });\n}\n\nfunction vtkFullScreenRenderWindow(publicAPI, model) {\n  // Full screen DOM handler\n  if (!model.rootContainer) {\n    model.rootContainer = document.querySelector('body');\n  }\n\n  if (!model.container) {\n    model.container = document.createElement('div');\n    applyStyle(model.container, model.containerStyle || STYLE_CONTAINER);\n    model.rootContainer.appendChild(model.container);\n  }\n\n  // VTK renderWindow/renderer\n  model.renderWindow = vtkRenderWindow.newInstance();\n  model.renderer = vtkRenderer.newInstance();\n  model.renderWindow.addRenderer(model.renderer);\n\n  // OpenGlRenderWindow\n  model.openGLRenderWindow = vtkOpenGLRenderWindow.newInstance();\n  model.openGLRenderWindow.setContainer(model.container);\n  model.renderWindow.addView(model.openGLRenderWindow);\n\n  // Interactor\n  model.interactor = vtkRenderWindowInteractor.newInstance();\n  model.interactor.setInteractorStyle(\n    vtkInteractorStyleTrackballCamera.newInstance()\n  );\n  model.interactor.setView(model.openGLRenderWindow);\n  model.interactor.initialize();\n  model.interactor.bindEvents(model.container);\n\n  // Expose background\n  publicAPI.setBackground = model.renderer.setBackground;\n\n  publicAPI.removeController = () => {\n    const el = model.controlContainer;\n    if (el) {\n      el.parentNode.removeChild(el);\n    }\n  };\n\n  publicAPI.setControllerVisibility = (visible) => {\n    model.controllerVisibility = visible;\n    if (model.controlContainer) {\n      if (visible) {\n        model.controlContainer.style.display = 'block';\n      } else {\n        model.controlContainer.style.display = 'none';\n      }\n    }\n  };\n\n  publicAPI.toggleControllerVisibility = () => {\n    publicAPI.setControllerVisibility(!model.controllerVisibility);\n  };\n\n  publicAPI.addController = (html) => {\n    model.controlContainer = document.createElement('div');\n    applyStyle(\n      model.controlContainer,\n      model.controlPanelStyle || STYLE_CONTROL_PANEL\n    );\n    model.rootContainer.appendChild(model.controlContainer);\n    model.controlContainer.innerHTML = html;\n\n    publicAPI.setControllerVisibility(model.controllerVisibility);\n\n    model.rootContainer.addEventListener('keypress', (e) => {\n      if (String.fromCharCode(e.charCode) === 'c') {\n        publicAPI.toggleControllerVisibility();\n      }\n    });\n  };\n\n  // Update BG color\n  publicAPI.setBackground(...model.background);\n\n  // Representation API\n  publicAPI.addRepresentation = (representation) => {\n    representation.getActors().forEach((actor) => {\n      model.renderer.addActor(actor);\n    });\n  };\n  publicAPI.removeRepresentation = (representation) => {\n    representation\n      .getActors()\n      .forEach((actor) => model.renderer.removeActor(actor));\n  };\n\n  // Properly release GL context\n  publicAPI.delete = macro.chain(\n    publicAPI.setContainer,\n    model.openGLRenderWindow.delete,\n    publicAPI.delete\n  );\n\n  // Handle window resize\n  publicAPI.resize = () => {\n    const dims = model.container.getBoundingClientRect();\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    model.openGLRenderWindow.setSize(\n      Math.floor(dims.width * devicePixelRatio),\n      Math.floor(dims.height * devicePixelRatio)\n    );\n    if (model.resizeCallback) {\n      model.resizeCallback(dims);\n    }\n    model.renderWindow.render();\n  };\n\n  publicAPI.setResizeCallback = (cb) => {\n    model.resizeCallback = cb;\n    publicAPI.resize();\n  };\n\n  if (model.listenWindowResize) {\n    window.addEventListener('resize', publicAPI.resize);\n  }\n  publicAPI.resize();\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  background: [0.32, 0.34, 0.43],\n  containerStyle: null,\n  controlPanelStyle: null,\n  listenWindowResize: true,\n  resizeCallback: null,\n  controllerVisibility: true,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, [\n    'renderWindow',\n    'renderer',\n    'openGLRenderWindow',\n    'interactor',\n    'rootContainer',\n    'container',\n    'controlContainer',\n  ]);\n\n  // Object specific methods\n  vtkFullScreenRenderWindow(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","export const ColorSpace = {\n  RGB: 0,\n  HSV: 1,\n  LAB: 2,\n  DIVERGING: 3,\n};\n\nexport const Scale = {\n  LINEAR: 0,\n  LOG10: 1,\n};\n\nexport default {\n  ColorSpace,\n  Scale,\n};\n","import vtkColorMaps from 'vtk.js/Sources/Rendering/Core/ColorTransferFunction/ColorMaps.json';\n\nconst presetMap = Object.create(null);\n\nvtkColorMaps\n  .filter((p) => p.RGBPoints)\n  .filter((p) => p.ColorSpace !== 'CIELAB')\n  .forEach((p) => {\n    presetMap[p.Name] = p;\n  });\n\n// ----------------------------------------------------------------------------\n\nconst rgbPresetNames = Object.keys(presetMap);\nrgbPresetNames.sort();\n\n// ----------------------------------------------------------------------------\n\nfunction getPresetByName(name) {\n  return presetMap[name];\n}\n\n// ----------------------------------------------------------------------------\n\nfunction addPreset(preset) {\n  if (!preset.RGBPoints || preset.ColorSpace === 'CIELAB') {\n    return;\n  }\n\n  if (!presetMap[preset.Name]) {\n    rgbPresetNames.push(preset.Name);\n    rgbPresetNames.sort();\n  }\n\n  presetMap[preset.Name] = preset;\n}\n\n// ----------------------------------------------------------------------------\n\nfunction removePresetByName(name) {\n  const index = rgbPresetNames.indexOf(name);\n  if (index > -1) {\n    rgbPresetNames.splice(index, 1);\n  }\n  delete presetMap[name];\n}\n\n// ----------------------------------------------------------------------------\n\nexport default {\n  addPreset,\n  removePresetByName,\n  getPresetByName,\n  rgbPresetNames,\n};\n","import macro from 'vtk.js/Sources/macro';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport vtkScalarsToColors from 'vtk.js/Sources/Common/Core/ScalarsToColors';\nimport Constants from 'vtk.js/Sources/Rendering/Core/ColorTransferFunction/Constants';\nimport vtkColorMaps from 'vtk.js/Sources/Rendering/Core/ColorTransferFunction/ColorMaps';\n\nconst { ColorSpace, Scale } = Constants;\nconst { ScalarMappingTarget } = vtkScalarsToColors;\nconst { vtkDebugMacro, vtkErrorMacro, vtkWarningMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n/* eslint-disable no-continue                                                */\n\n// Convert to and from a special polar version of CIELAB (useful for creating\n// continuous diverging color maps).\nfunction vtkColorTransferFunctionLabToMsh(lab, msh) {\n  const L = lab[0];\n  const a = lab[1];\n  const b = lab[2];\n  const M = Math.sqrt(L * L + a * a + b * b);\n  const s = M > 0.001 ? Math.acos(L / M) : 0.0;\n  const h = s > 0.001 ? Math.atan2(b, a) : 0.0;\n  msh[0] = M;\n  msh[1] = s;\n  msh[2] = h;\n}\n\nfunction vtkColorTransferFunctionMshToLab(msh, lab) {\n  const M = msh[0];\n  const s = msh[1];\n  const h = msh[2];\n\n  lab[0] = M * Math.cos(s);\n  lab[1] = M * Math.sin(s) * Math.cos(h);\n  lab[2] = M * Math.sin(s) * Math.sin(h);\n}\n\n// For the case when interpolating from a saturated color to an unsaturated\n// color, find a hue for the unsaturated color that makes sense.\nfunction vtkColorTransferFunctionAdjustHue(msh, unsatM) {\n  if (msh[0] >= unsatM - 0.1) {\n    // The best we can do is hold hue constant.\n    return msh[2];\n  }\n\n  // This equation is designed to make the perceptual change of the\n  // interpolation to be close to constant.\n  const hueSpin =\n    (msh[1] * Math.sqrt(unsatM * unsatM - msh[0] * msh[0])) /\n    (msh[0] * Math.sin(msh[1]));\n  // Spin hue away from 0 except in purple hues.\n  if (msh[2] > -0.3 * Math.PI) {\n    return msh[2] + hueSpin;\n  }\n\n  return msh[2] - hueSpin;\n}\n\nfunction vtkColorTransferFunctionAngleDiff(a1, a2) {\n  let adiff = a1 - a2;\n  if (adiff < 0.0) {\n    adiff = -adiff;\n  }\n  while (adiff >= 2.0 * Math.PI) {\n    adiff -= 2.0 * Math.PI;\n  }\n  if (adiff > Math.PI) {\n    adiff = 2.0 * Math.PI - adiff;\n  }\n  return adiff;\n}\n\n// Interpolate a diverging color map.\nfunction vtkColorTransferFunctionInterpolateDiverging(s, rgb1, rgb2, result) {\n  const lab1 = [];\n  const lab2 = [];\n  vtkMath.rgb2lab(rgb1, lab1);\n  vtkMath.rgb2lab(rgb2, lab2);\n\n  const msh1 = [];\n  const msh2 = [];\n  vtkColorTransferFunctionLabToMsh(lab1, msh1);\n  vtkColorTransferFunctionLabToMsh(lab2, msh2);\n\n  // If the endpoints are distinct saturated colors, then place white in between\n  // them.\n  let localS = s;\n  if (\n    msh1[1] > 0.05 &&\n    msh2[1] > 0.05 &&\n    vtkColorTransferFunctionAngleDiff(msh1[2], msh2[2]) > 0.33 * Math.PI\n  ) {\n    // Insert the white midpoint by setting one end to white and adjusting the\n    // scalar value.\n    let Mmid = Math.max(msh1[0], msh2[0]);\n    Mmid = Math.max(88.0, Mmid);\n    if (s < 0.5) {\n      msh2[0] = Mmid;\n      msh2[1] = 0.0;\n      msh2[2] = 0.0;\n      localS *= 2.0;\n    } else {\n      msh1[0] = Mmid;\n      msh1[1] = 0.0;\n      msh1[2] = 0.0;\n      localS = 2.0 * localS - 1.0;\n    }\n  }\n\n  // If one color has no saturation, then its hue value is invalid.  In this\n  // case, we want to set it to something logical so that the interpolation of\n  // hue makes sense.\n  if (msh1[1] < 0.05 && msh2[1] > 0.05) {\n    msh1[2] = vtkColorTransferFunctionAdjustHue(msh2, msh1[0]);\n  } else if (msh2[1] < 0.05 && msh1[1] > 0.05) {\n    msh2[2] = vtkColorTransferFunctionAdjustHue(msh1, msh2[0]);\n  }\n\n  const mshTmp = [];\n  mshTmp[0] = (1 - localS) * msh1[0] + localS * msh2[0];\n  mshTmp[1] = (1 - localS) * msh1[1] + localS * msh2[1];\n  mshTmp[2] = (1 - localS) * msh1[2] + localS * msh2[2];\n\n  // Now convert back to RGB\n  const labTmp = [];\n  vtkColorTransferFunctionMshToLab(mshTmp, labTmp);\n  vtkMath.lab2rgb(labTmp, result);\n}\n\n// ----------------------------------------------------------------------------\n// vtkColorTransferFunction methods\n// ----------------------------------------------------------------------------\n\nfunction vtkColorTransferFunction(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkColorTransferFunction');\n\n  // Return the number of points which specify this function\n  publicAPI.getSize = () => model.nodes.length;\n\n  //----------------------------------------------------------------------------\n  // Add a point defined in RGB\n  publicAPI.addRGBPoint = (x, r, g, b) =>\n    publicAPI.addRGBPointLong(x, r, g, b, 0.5, 0.0);\n\n  //----------------------------------------------------------------------------\n  // Add a point defined in RGB\n  publicAPI.addRGBPointLong = (x, r, g, b, midpoint, sharpness) => {\n    // Error check\n    if (midpoint < 0.0 || midpoint > 1.0) {\n      vtkErrorMacro('Midpoint outside range [0.0, 1.0]');\n      return -1;\n    }\n\n    if (sharpness < 0.0 || sharpness > 1.0) {\n      vtkErrorMacro('Sharpness outside range [0.0, 1.0]');\n      return -1;\n    }\n\n    // remove any node already at this X location\n    if (!model.allowDuplicateScalars) {\n      publicAPI.removePoint(x);\n    }\n\n    // Create the new node\n    const node = { x, r, g, b, midpoint, sharpness };\n\n    // Add it, then sort to get everything in order\n    model.nodes.push(node);\n    publicAPI.sortAndUpdateRange();\n\n    // We need to find the index of the node we just added in order\n    // to return this value\n    let i = 0;\n    for (; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === x) {\n        break;\n      }\n    }\n\n    // If we didn't find it, something went horribly wrong so\n    // return -1\n    if (i < model.nodes.length) {\n      return i;\n    }\n\n    return -1;\n  };\n\n  //----------------------------------------------------------------------------\n  // Add a point defined in HSV\n  publicAPI.addHSVPoint = (x, h, s, v) =>\n    publicAPI.addHSVPointLong(x, h, s, v, 0.5, 0.0);\n\n  //----------------------------------------------------------------------------\n  // Add a point defined in HSV\n  publicAPI.addHSVPointLong = (x, h, s, v, midpoint, sharpness) => {\n    const rgb = [];\n    const hsv = [h, s, v];\n\n    vtkMath.hsv2rgb(hsv, rgb);\n    return publicAPI.addRGBPoint(\n      x,\n      rgb[0],\n      rgb[1],\n      rgb[2],\n      midpoint,\n      sharpness\n    );\n  };\n\n  //----------------------------------------------------------------------------\n  // Set nodes directly\n  publicAPI.setNodes = (nodes) => {\n    if (model.nodes !== nodes) {\n      model.nodes = nodes;\n      publicAPI.sortAndUpdateRange();\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  // Sort the vector in increasing order, then fill in\n  // the Range\n  publicAPI.sortAndUpdateRange = () => {\n    model.nodes.sort((a, b) => a.x - b.x);\n\n    const modifiedInvoked = publicAPI.updateRange();\n    // If range is updated, Modified() has been called, don't call it again.\n    if (!modifiedInvoked) {\n      publicAPI.modified();\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.updateRange = () => {\n    const oldRange = [2];\n    oldRange[0] = model.mappingRange[0];\n    oldRange[1] = model.mappingRange[1];\n\n    const size = model.nodes.length;\n    if (size) {\n      model.mappingRange[0] = model.nodes[0].x;\n      model.mappingRange[1] = model.nodes[size - 1].x;\n    } else {\n      model.mappingRange[0] = 0;\n      model.mappingRange[1] = 0;\n    }\n\n    // If the range is the same, then no need to call Modified()\n    if (\n      oldRange[0] === model.mappingRange[0] &&\n      oldRange[1] === model.mappingRange[1]\n    ) {\n      return false;\n    }\n\n    publicAPI.modified();\n    return true;\n  };\n\n  //----------------------------------------------------------------------------\n  // Remove a point\n  publicAPI.removePoint = (x) => {\n    // First find the node since we need to know its\n    // index as our return value\n    let i = 0;\n    for (; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === x) {\n        break;\n      }\n    }\n\n    const retVal = i;\n\n    // If the node doesn't exist, we return -1\n    if (i >= model.nodes.length) {\n      return -1;\n    }\n\n    // If the first or last point has been removed, then we update the range\n    // No need to sort here as the order of points hasn't changed.\n    let modifiedInvoked = false;\n    model.nodes.splice(i, 1);\n    if (i === 0 || i === model.nodes.length) {\n      modifiedInvoked = publicAPI.updateRange();\n    }\n    if (!modifiedInvoked) {\n      publicAPI.modified();\n    }\n\n    return retVal;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.movePoint = (oldX, newX) => {\n    if (oldX === newX) {\n      // Nothing to do.\n      return;\n    }\n\n    publicAPI.removePoint(newX);\n    for (let i = 0; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === oldX) {\n        model.nodes[i].x = newX;\n        publicAPI.sortAndUpdateRange();\n        break;\n      }\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  // Remove all points\n  publicAPI.removeAllPoints = () => {\n    model.nodes = [];\n    publicAPI.sortAndUpdateRange();\n  };\n\n  //----------------------------------------------------------------------------\n  // Add a line defined in RGB\n  publicAPI.addRGBSegment = (x1, r1, g1, b1, x2, r2, g2, b2) => {\n    // First, find all points in this range and remove them\n    publicAPI.sortAndUpdateRange();\n    for (let i = 0; i < model.nodes.length; ) {\n      if (model.nodes[i].x >= x1 && model.nodes[i].x <= x2) {\n        model.nodes.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n\n    // Now add the points\n    publicAPI.addRGBPointLong(x1, r1, g1, b1, 0.5, 0.0);\n    publicAPI.addRGBPointLong(x2, r2, g2, b2, 0.5, 0.0);\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  // Add a line defined in HSV\n  publicAPI.addHSVSegment = (x1, h1, s1, v1, x2, h2, s2, v2) => {\n    const hsv1 = [h1, s1, v1];\n    const hsv2 = [h2, s2, v2];\n    const rgb1 = [];\n    const rgb2 = [];\n\n    vtkMath.hsv2rgb(hsv1, rgb1);\n    vtkMath.hsv2rgb(hsv2, rgb2);\n    publicAPI.addRGBSegment(\n      x1,\n      rgb1[0],\n      rgb1[1],\n      rgb1[2],\n      x2,\n      rgb2[0],\n      rgb2[1],\n      rgb2[2]\n    );\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the RGBA color evaluated at the specified location\n  publicAPI.mapValue = (x) => {\n    const rgb = [];\n    publicAPI.getColor(x, rgb);\n\n    return [\n      Math.floor(255.0 * rgb[0] + 0.5),\n      Math.floor(255.0 * rgb[1] + 0.5),\n      Math.floor(255.0 * rgb[2] + 0.5),\n      255,\n    ];\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the RGB color evaluated at the specified location\n  publicAPI.getColor = (x, rgb) => {\n    if (model.indexedLookup) {\n      const numNodes = publicAPI.getSize();\n      // todo\n      const idx = publicAPI.getAnnotatedValueIndexInternal(x);\n      if (idx < 0 || numNodes === 0) {\n        publicAPI.getNanColor(rgb);\n      } else {\n        const nodeVal = [];\n        publicAPI.getNodeValue(idx % numNodes, nodeVal);\n        rgb[0] = nodeVal.r;\n        rgb[1] = nodeVal.g;\n        rgb[2] = nodeVal.b;\n      }\n      return;\n    }\n    publicAPI.getTable(x, x, 1, rgb);\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the red color evaluated at the specified location\n  publicAPI.getRedValue = (x) => {\n    const rgb = [];\n    publicAPI.getColor(x, rgb);\n    return rgb[0];\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the green color evaluated at the specified location\n  publicAPI.getGreenValue = (x) => {\n    const rgb = [];\n    publicAPI.getColor(x, rgb);\n    return rgb[1];\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the blue color evaluated at the specified location\n  publicAPI.getBlueValue = (x) => {\n    const rgb = [];\n    publicAPI.getColor(x, rgb);\n    return rgb[2];\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns a table of RGB colors at regular intervals along the function\n  publicAPI.getTable = (xStart, xEnd, size, table) => {\n    // Special case: If either the start or end is a NaN, then all any\n    // interpolation done on them is also a NaN.  Therefore, fill the table with\n    // the NaN color.\n    if (vtkMath.isNan(xStart) || vtkMath.isNan(xEnd)) {\n      for (let i = 0; i < size; i++) {\n        table[i * 3 + 0] = model.nanColor[0];\n        table[i * 3 + 1] = model.nanColor[1];\n        table[i * 3 + 2] = model.nanColor[2];\n      }\n      return;\n    }\n\n    let idx = 0;\n    const numNodes = model.nodes.length;\n\n    // Need to keep track of the last value so that\n    // we can fill in table locations past this with\n    // this value if Clamping is On.\n    let lastR = 0.0;\n    let lastG = 0.0;\n    let lastB = 0.0;\n    if (numNodes !== 0) {\n      lastR = model.nodes[numNodes - 1].r;\n      lastG = model.nodes[numNodes - 1].g;\n      lastB = model.nodes[numNodes - 1].b;\n    }\n\n    let x = 0.0;\n    let x1 = 0.0;\n    let x2 = 0.0;\n    const rgb1 = [0.0, 0.0, 0.0];\n    const rgb2 = [0.0, 0.0, 0.0];\n    let midpoint = 0.0;\n    let sharpness = 0.0;\n\n    const tmpVec = [];\n\n    // If the scale is logarithmic, make sure the range is valid.\n    let usingLogScale = model.scale === Scale.LOG10;\n    if (usingLogScale) {\n      // Note: This requires range[0] <= range[1].\n      usingLogScale = model.mappingRange[0] > 0.0;\n    }\n\n    let logStart = 0.0;\n    let logEnd = 0.0;\n    let logX = 0.0;\n    if (usingLogScale) {\n      logStart = Math.log10(xStart);\n      logEnd = Math.log10(xEnd);\n    }\n\n    // For each table entry\n    for (let i = 0; i < size; i++) {\n      // Find our location in the table\n      const tidx = 3 * i;\n\n      // Find our X location. If we are taking only 1 sample, make\n      // it halfway between start and end (usually start and end will\n      // be the same in this case)\n      if (size > 1) {\n        if (usingLogScale) {\n          logX = logStart + (i / (size - 1.0)) * (logEnd - logStart);\n          x = 10.0 ** logX;\n        } else {\n          x = xStart + (i / (size - 1.0)) * (xEnd - xStart);\n        }\n      } else if (usingLogScale) {\n        logX = 0.5 * (logStart + logEnd);\n        x = 10.0 ** logX;\n      } else {\n        x = 0.5 * (xStart + xEnd);\n      }\n\n      // Do we need to move to the next node?\n      while (idx < numNodes && x > model.nodes[idx].x) {\n        idx++;\n        // If we are at a valid point index, fill in\n        // the value at this node, and the one before (the\n        // two that surround our current sample location)\n        // idx cannot be 0 since we just incremented it.\n        if (idx < numNodes) {\n          x1 = model.nodes[idx - 1].x;\n          x2 = model.nodes[idx].x;\n          if (usingLogScale) {\n            x1 = Math.log10(x1);\n            x2 = Math.log10(x2);\n          }\n\n          rgb1[0] = model.nodes[idx - 1].r;\n          rgb2[0] = model.nodes[idx].r;\n\n          rgb1[1] = model.nodes[idx - 1].g;\n          rgb2[1] = model.nodes[idx].g;\n\n          rgb1[2] = model.nodes[idx - 1].b;\n          rgb2[2] = model.nodes[idx].b;\n\n          // We only need the previous midpoint and sharpness\n          // since these control this region\n          midpoint = model.nodes[idx - 1].midpoint;\n          sharpness = model.nodes[idx - 1].sharpness;\n\n          // Move midpoint away from extreme ends of range to avoid\n          // degenerate math\n          if (midpoint < 0.00001) {\n            midpoint = 0.00001;\n          }\n\n          if (midpoint > 0.99999) {\n            midpoint = 0.99999;\n          }\n        }\n      }\n\n      // Are we at or past the end? If so, just use the last value\n      if (x > model.mappingRange[1]) {\n        table[tidx] = 0.0;\n        table[tidx + 1] = 0.0;\n        table[tidx + 2] = 0.0;\n        if (model.clamping) {\n          if (publicAPI.getUseAboveRangeColor()) {\n            table[tidx] = model.aboveRangeColor[0];\n            table[tidx + 1] = model.aboveRangeColor[1];\n            table[tidx + 2] = model.aboveRangeColor[2];\n          } else {\n            table[tidx] = lastR;\n            table[tidx + 1] = lastG;\n            table[tidx + 2] = lastB;\n          }\n        }\n      } else if (x < model.mappingRange[0] || (vtkMath.isInf(x) && x < 0)) {\n        // we are before the first node? If so, duplicate this node's values.\n        // We have to deal with -inf here\n        table[tidx] = 0.0;\n        table[tidx + 1] = 0.0;\n        table[tidx + 2] = 0.0;\n        if (model.clamping) {\n          if (publicAPI.getUseBelowRangeColor()) {\n            table[tidx] = model.belowRangeColor[0];\n            table[tidx + 1] = model.belowRangeColor[1];\n            table[tidx + 2] = model.belowRangeColor[2];\n          } else if (numNodes > 0) {\n            table[tidx] = model.nodes[0].r;\n            table[tidx + 1] = model.nodes[0].g;\n            table[tidx + 2] = model.nodes[0].b;\n          }\n        }\n      } else if (idx === 0 && Math.abs(x - xStart) < 1e-6) {\n        if (numNodes > 0) {\n          table[tidx] = model.nodes[0].r;\n          table[tidx + 1] = model.nodes[0].g;\n          table[tidx + 2] = model.nodes[0].b;\n        } else {\n          table[tidx] = 0.0;\n          table[tidx + 1] = 0.0;\n          table[tidx + 2] = 0.0;\n        }\n      } else {\n        // OK, we are between two nodes - interpolate\n        // Our first attempt at a normalized location [0,1] -\n        // we will be modifying this based on midpoint and\n        // sharpness to get the curve shape we want and to have\n        // it pass through (y1+y2)/2 at the midpoint.\n        let s = 0.0;\n        if (usingLogScale) {\n          s = (logX - x1) / (x2 - x1);\n        } else {\n          s = (x - x1) / (x2 - x1);\n        }\n\n        // Readjust based on the midpoint - linear adjustment\n        if (s < midpoint) {\n          s = (0.5 * s) / midpoint;\n        } else {\n          s = 0.5 + (0.5 * (s - midpoint)) / (1.0 - midpoint);\n        }\n\n        // override for sharpness > 0.99\n        // In this case we just want piecewise constant\n        if (sharpness > 0.99) {\n          // Use the first value since we are below the midpoint\n          if (s < 0.5) {\n            table[tidx] = rgb1[0];\n            table[tidx + 1] = rgb1[1];\n            table[tidx + 2] = rgb1[2];\n            continue;\n          } else {\n            // Use the second value at or above the midpoint\n            table[tidx] = rgb2[0];\n            table[tidx + 1] = rgb2[1];\n            table[tidx + 2] = rgb2[2];\n            continue;\n          }\n        }\n\n        // Override for sharpness < 0.01\n        // In this case we want piecewise linear\n        if (sharpness < 0.01) {\n          // Simple linear interpolation\n          if (model.colorSpace === ColorSpace.RGB) {\n            table[tidx] = (1 - s) * rgb1[0] + s * rgb2[0];\n            table[tidx + 1] = (1 - s) * rgb1[1] + s * rgb2[1];\n            table[tidx + 2] = (1 - s) * rgb1[2] + s * rgb2[2];\n          } else if (model.colorSpace === ColorSpace.HSV) {\n            const hsv1 = [];\n            const hsv2 = [];\n            vtkMath.rgb2hsv(rgb1, hsv1);\n            vtkMath.rgb2hsv(rgb2, hsv2);\n\n            if (\n              model.hSVWrap &&\n              (hsv1[0] - hsv2[0] > 0.5 || hsv2[0] - hsv1[0] > 0.5)\n            ) {\n              if (hsv1[0] > hsv2[0]) {\n                hsv1[0] -= 1.0;\n              } else {\n                hsv2[0] -= 1.0;\n              }\n            }\n\n            const hsvTmp = [];\n            hsvTmp[0] = (1.0 - s) * hsv1[0] + s * hsv2[0];\n            if (hsvTmp[0] < 0.0) {\n              hsvTmp[0] += 1.0;\n            }\n            hsvTmp[1] = (1.0 - s) * hsv1[1] + s * hsv2[1];\n            hsvTmp[2] = (1.0 - s) * hsv1[2] + s * hsv2[2];\n\n            // Now convert this back to RGB\n            vtkMath.hsv2rgb(hsvTmp, tmpVec);\n            table[tidx] = tmpVec[0];\n            table[tidx + 1] = tmpVec[1];\n            table[tidx + 2] = tmpVec[2];\n          } else if (model.colorSpace === ColorSpace.LAB) {\n            const lab1 = [];\n            const lab2 = [];\n            vtkMath.rgb2lab(rgb1, lab1);\n            vtkMath.rgb2lab(rgb2, lab2);\n\n            const labTmp = [];\n            labTmp[0] = (1 - s) * lab1[0] + s * lab2[0];\n            labTmp[1] = (1 - s) * lab1[1] + s * lab2[1];\n            labTmp[2] = (1 - s) * lab1[2] + s * lab2[2];\n\n            // Now convert back to RGB\n            vtkMath.lab2rgb(labTmp, tmpVec);\n            table[tidx] = tmpVec[0];\n            table[tidx + 1] = tmpVec[1];\n            table[tidx + 2] = tmpVec[2];\n          } else if (model.colorSpace === ColorSpace.DIVERGING) {\n            vtkColorTransferFunctionInterpolateDiverging(s, rgb1, rgb2, tmpVec);\n            table[tidx] = tmpVec[0];\n            table[tidx + 1] = tmpVec[1];\n            table[tidx + 2] = tmpVec[2];\n          } else {\n            vtkErrorMacro('ColorSpace set to invalid value.', model.colorSpace);\n          }\n          continue;\n        }\n\n        // We have a sharpness between [0.01, 0.99] - we will\n        // used a modified hermite curve interpolation where we\n        // derive the slope based on the sharpness, and we compress\n        // the curve non-linearly based on the sharpness\n\n        // First, we will adjust our position based on sharpness in\n        // order to make the curve sharper (closer to piecewise constant)\n        if (s < 0.5) {\n          s = 0.5 * (s * 2.0) ** (1.0 + 10.0 * sharpness);\n        } else if (s > 0.5) {\n          s = 1.0 - 0.5 * ((1.0 - s) * 2) ** (1 + 10.0 * sharpness);\n        }\n\n        // Compute some coefficients we will need for the hermite curve\n        const ss = s * s;\n        const sss = ss * s;\n\n        const h1 = 2.0 * sss - 3 * ss + 1;\n        const h2 = -2 * sss + 3 * ss;\n        const h3 = sss - 2 * ss + s;\n        const h4 = sss - ss;\n\n        let slope;\n        let t;\n\n        if (model.colorSpace === ColorSpace.RGB) {\n          for (let j = 0; j < 3; j++) {\n            // Use one slope for both end points\n            slope = rgb2[j] - rgb1[j];\n            t = (1.0 - sharpness) * slope;\n\n            // Compute the value\n            table[tidx + j] = h1 * rgb1[j] + h2 * rgb2[j] + h3 * t + h4 * t;\n          }\n        } else if (model.colorSpace === ColorSpace.HSV) {\n          const hsv1 = [];\n          const hsv2 = [];\n          vtkMath.rgb2hsv(rgb1, hsv1);\n          vtkMath.rgb2hsv(rgb2, hsv2);\n\n          if (\n            model.hSVWrap &&\n            (hsv1[0] - hsv2[0] > 0.5 || hsv2[0] - hsv1[0] > 0.5)\n          ) {\n            if (hsv1[0] > hsv2[0]) {\n              hsv1[0] -= 1.0;\n            } else {\n              hsv2[0] -= 1.0;\n            }\n          }\n\n          const hsvTmp = [];\n\n          for (let j = 0; j < 3; j++) {\n            // Use one slope for both end points\n            slope = hsv2[j] - hsv1[j];\n            t = (1.0 - sharpness) * slope;\n\n            // Compute the value\n            hsvTmp[j] = h1 * hsv1[j] + h2 * hsv2[j] + h3 * t + h4 * t;\n            if (j === 0 && hsvTmp[j] < 0.0) {\n              hsvTmp[j] += 1.0;\n            }\n          }\n          // Now convert this back to RGB\n          vtkMath.hsv2rgb = (hsvTmp, tmpVec);\n          table[tidx] = tmpVec[0];\n          table[tidx + 1] = tmpVec[1];\n          table[tidx + 2] = tmpVec[2];\n        } else if (model.colorSpace === ColorSpace.LAB) {\n          const lab1 = [];\n          const lab2 = [];\n          vtkMath.rgb2lab(rgb1, lab1);\n          vtkMath.rgb2lab(rgb2, lab2);\n\n          const labTmp = [];\n          for (let j = 0; j < 3; j++) {\n            // Use one slope for both end points\n            slope = lab2[j] - lab1[j];\n            t = (1.0 - sharpness) * slope;\n\n            // Compute the value\n            labTmp[j] = h1 * lab1[j] + h2 * lab2[j] + h3 * t + h4 * t;\n          }\n          // Now convert this back to RGB\n          vtkMath.lab2rgb(labTmp, tmpVec);\n          table[tidx] = tmpVec[0];\n          table[tidx + 1] = tmpVec[1];\n          table[tidx + 2] = tmpVec[2];\n        } else if (model.colorSpace === ColorSpace.DIVERGING) {\n          // I have not implemented proper interpolation by a hermite curve for\n          // the diverging color map, but I cannot think of a good use case for\n          // that anyway.\n          vtkColorTransferFunctionInterpolateDiverging(s, rgb1, rgb2, tmpVec);\n          table[tidx] = tmpVec[0];\n          table[tidx + 1] = tmpVec[1];\n          table[tidx + 2] = tmpVec[2];\n        } else {\n          vtkErrorMacro('ColorSpace set to invalid value.');\n        }\n\n        // Final error check to make sure we don't go outside [0,1]\n        for (let j = 0; j < 3; j++) {\n          table[tidx + j] = table[tidx + j] < 0.0 ? 0.0 : table[tidx + j];\n          table[tidx + j] = table[tidx + j] > 1.0 ? 1.0 : table[tidx + j];\n        }\n      }\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getUint8Table = (xStart, xEnd, size, withAlpha = false) => {\n    if (\n      publicAPI.getMTime() <= model.buildTime &&\n      model.tableSize === size &&\n      model.tableWithAlpha !== withAlpha\n    ) {\n      return model.table;\n    }\n\n    if (model.nodes.length === 0) {\n      vtkErrorMacro(\n        'Attempting to lookup a value with no points in the function'\n      );\n      return model.table;\n    }\n\n    const nbChannels = withAlpha ? 4 : 3;\n    if (model.tableSize !== size || model.tableWithAlpha !== withAlpha) {\n      model.table = new Uint8Array(size * nbChannels);\n      model.tableSize = size;\n      model.tableWithAlpha = withAlpha;\n    }\n\n    const tmpTable = [];\n    publicAPI.getTable(xStart, xEnd, size, tmpTable);\n\n    for (let i = 0; i < size; i++) {\n      model.table[i * nbChannels + 0] = Math.floor(\n        tmpTable[i * 3 + 0] * 255.0 + 0.5\n      );\n      model.table[i * nbChannels + 1] = Math.floor(\n        tmpTable[i * 3 + 1] * 255.0 + 0.5\n      );\n      model.table[i * nbChannels + 2] = Math.floor(\n        tmpTable[i * 3 + 2] * 255.0 + 0.5\n      );\n      if (withAlpha) {\n        model.table[i * nbChannels + 3] = 255;\n      }\n    }\n\n    model.buildTime.modified();\n    return model.table;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.buildFunctionFromTable = (xStart, xEnd, size, table) => {\n    let inc = 0.0;\n\n    publicAPI.removeAllPoints();\n\n    if (size > 1) {\n      inc = (xEnd - xStart) / (size - 1.0);\n    }\n\n    for (let i = 0; i < size; i++) {\n      const node = {\n        x: xStart + inc * i,\n        r: table[i * 3],\n        g: table[i * 3 + 1],\n        b: table[i * 3 + 2],\n        sharpness: 0.0,\n        midpoint: 0.5,\n      };\n      model.nodes.push(node);\n    }\n\n    publicAPI.sortAndUpdateRange();\n  };\n\n  //----------------------------------------------------------------------------\n  // For a specified index value, get the node parameters\n  publicAPI.getNodeValue = (index, val) => {\n    if (index < 0 || index >= model.nodes.length) {\n      vtkErrorMacro('Index out of range!');\n      return -1;\n    }\n\n    val[0] = model.nodes[index].x;\n    val[1] = model.nodes[index].r;\n    val[2] = model.nodes[index].g;\n    val[3] = model.nodes[index].b;\n    val[4] = model.nodes[index].midpoint;\n    val[5] = model.nodes[index].sharpness;\n\n    return 1;\n  };\n\n  //----------------------------------------------------------------------------\n  // For a specified index value, get the node parameters\n  publicAPI.setNodeValue = (index, val) => {\n    if (index < 0 || index >= model.nodes.length) {\n      vtkErrorMacro('Index out of range!');\n      return -1;\n    }\n\n    const oldX = model.nodes[index].x;\n    model.nodes[index].x = val[0];\n    model.nodes[index].r = val[1];\n    model.nodes[index].g = val[2];\n    model.nodes[index].b = val[3];\n    model.nodes[index].midpoint = val[4];\n    model.nodes[index].sharpness = val[5];\n\n    if (oldX !== val[0]) {\n      // The point has been moved, the order of points or the range might have\n      // been modified.\n      publicAPI.sortAndUpdateRange();\n      // No need to call Modified() here because SortAndUpdateRange() has done it\n      // already.\n    } else {\n      publicAPI.modified();\n    }\n\n    return 1;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getNumberOfAvailableColors = () => {\n    if (model.indexedLookup && publicAPI.getSize()) {\n      return publicAPI.getSize();\n    }\n    if (model.tableSize) {\n      // Not sure if this is correct since it is only set if\n      // \"const unsigned char *::GetTable(double xStart, double xEnd,int size)\"\n      // has been called.\n      return model.tableSize;\n    }\n    return 16777216; // 2^24\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getIndexedColor = (idx, rgba) => {\n    const n = publicAPI.getSize();\n    if (n > 0 && idx >= 0) {\n      const nodeValue = [];\n      publicAPI.getNodeValue(idx % n, nodeValue);\n      for (let j = 0; j < 3; ++j) {\n        rgba[j] = nodeValue[j + 1];\n      }\n      rgba[3] = 1.0; // NodeColor is RGB-only.\n      return;\n    }\n    publicAPI.getNanColor(rgba);\n    rgba[3] = 1.0; // NanColor is RGB-only.\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.fillFromDataPointer = (nb, ptr) => {\n    if (nb <= 0 || !ptr) {\n      return;\n    }\n\n    publicAPI.removeAllPoints();\n\n    for (let i = 0; i < nb; i++) {\n      publicAPI.addRGBPoint(\n        ptr[i * 4],\n        ptr[i * 4 + 1],\n        ptr[i * 4 + 2],\n        ptr[i * 4 + 3]\n      );\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.setMappingRange = (min, max) => {\n    const range = [min, max];\n    const originalRange = publicAPI.getRange();\n    if (originalRange[1] === range[1] && originalRange[0] === range[0]) {\n      return;\n    }\n\n    if (range[1] === range[0]) {\n      vtkErrorMacro('attempt to set zero width color range');\n      return;\n    }\n\n    const scale = (range[1] - range[0]) / (originalRange[1] - originalRange[0]);\n    const shift = range[0] - originalRange[0] * scale;\n\n    for (let i = 0; i < model.nodes.length; ++i) {\n      model.nodes[i].x = model.nodes[i].x * scale + shift;\n    }\n\n    model.mappingRange[0] = range[0];\n    model.mappingRange[1] = range[1];\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.adjustRange = (range) => {\n    const functionRange = publicAPI.getRange();\n\n    // Make sure we have points at each end of the range\n    const rgb = [];\n    if (functionRange[0] < range[0]) {\n      publicAPI.getColor(range[0], rgb);\n      publicAPI.addRGBPoint(range[0], rgb[0], rgb[1], rgb[2]);\n    } else {\n      publicAPI.getColor(functionRange[0], rgb);\n      publicAPI.addRGBPoint(range[0], rgb[0], rgb[1], rgb[2]);\n    }\n\n    if (functionRange[1] > range[1]) {\n      publicAPI.getColor(range[1], rgb);\n      publicAPI.addRGBPoint(range[1], rgb[0], rgb[1], rgb[2]);\n    } else {\n      publicAPI.getColor(functionRange[1], rgb);\n      publicAPI.addRGBPoint(range[1], rgb[0], rgb[1], rgb[2]);\n    }\n\n    // Remove all points out-of-range\n    publicAPI.sortAndUpdateRange();\n    for (let i = 0; i < model.nodes.length; ) {\n      if (model.nodes[i].x >= range[0] && model.nodes[i].x <= range[1]) {\n        model.nodes.splice(i, 1);\n      } else {\n        ++i;\n      }\n    }\n\n    return 1;\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.estimateMinNumberOfSamples = (x1, x2) => {\n    const d = publicAPI.findMinimumXDistance();\n    return Math.ceil((x2 - x1) / d);\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.findMinimumXDistance = () => {\n    if (model.nodes.length < 2) {\n      return -1.0;\n    }\n\n    let distance = Number.MAX_VALUE;\n    for (let i = 0; i < model.nodes.length - 1; i++) {\n      const currentDist = model.nodes[i + 1].x - model.nodes[i].x;\n      if (currentDist < distance) {\n        distance = currentDist;\n      }\n    }\n\n    return distance;\n  };\n\n  publicAPI.mapScalarsThroughTable = (\n    input,\n    output,\n    outFormat,\n    inputOffset\n  ) => {\n    if (publicAPI.getSize() === 0) {\n      vtkDebugMacro('Transfer Function Has No Points!');\n      return;\n    }\n\n    if (model.indexedLookup) {\n      publicAPI.mapDataIndexed(input, output, outFormat, inputOffset);\n    } else {\n      publicAPI.mapData(input, output, outFormat, inputOffset);\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.mapData = (input, output, outFormat, inputOffset) => {\n    if (publicAPI.getSize() === 0) {\n      vtkWarningMacro('Transfer Function Has No Points!');\n      return;\n    }\n\n    const alpha = Math.floor(publicAPI.getAlpha() * 255.0 + 0.5);\n    const length = input.getNumberOfTuples();\n    const inIncr = input.getNumberOfComponents();\n\n    const outputV = output.getData();\n    const inputV = input.getData();\n    const rgb = [];\n\n    if (outFormat === ScalarMappingTarget.RGBA) {\n      for (let i = 0; i < length; i++) {\n        const x = inputV[i * inIncr + inputOffset];\n        publicAPI.getColor(x, rgb);\n        outputV[i * 4] = Math.floor(rgb[0] * 255.0 + 0.5);\n        outputV[i * 4 + 1] = Math.floor(rgb[1] * 255.0 + 0.5);\n        outputV[i * 4 + 2] = Math.floor(rgb[2] * 255.0 + 0.5);\n        outputV[i * 4 + 3] = alpha;\n      }\n    }\n\n    if (outFormat === ScalarMappingTarget.RGB) {\n      for (let i = 0; i < length; i++) {\n        const x = inputV[i * inIncr + inputOffset];\n        publicAPI.getColor(x, rgb);\n        outputV[i * 3] = Math.floor(rgb[0] * 255.0 + 0.5);\n        outputV[i * 3 + 1] = Math.floor(rgb[1] * 255.0 + 0.5);\n        outputV[i * 3 + 2] = Math.floor(rgb[2] * 255.0 + 0.5);\n      }\n    }\n\n    if (outFormat === ScalarMappingTarget.LUMINANCE) {\n      for (let i = 0; i < length; i++) {\n        const x = inputV[i * inIncr + inputOffset];\n        publicAPI.getColor(x, rgb);\n        outputV[i] = Math.floor(\n          rgb[0] * 76.5 + rgb[1] * 150.45 + rgb[2] * 28.05 + 0.5\n        );\n      }\n    }\n\n    if (outFormat === ScalarMappingTarget.LUMINANCE_ALPHA) {\n      for (let i = 0; i < length; i++) {\n        const x = inputV[i * inIncr + inputOffset];\n        publicAPI.getColor(x, rgb);\n        outputV[i * 2] = Math.floor(\n          rgb[0] * 76.5 + rgb[1] * 150.45 + rgb[2] * 28.05 + 0.5\n        );\n        outputV[i * 2 + 1] = alpha;\n      }\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.applyColorMap = (colorMap) => {\n    if (colorMap.ColorSpace) {\n      model.colorSpace = ColorSpace[colorMap.ColorSpace.toUpperCase()];\n      if (model.colorSpace === undefined) {\n        vtkErrorMacro(\n          `ColorSpace ${colorMap.ColorSpace} not supported, using RGB instead`\n        );\n        model.colorSpace = ColorSpace.RGB;\n      }\n    }\n    if (colorMap.NanColor) {\n      model.nanColor = [].concat(colorMap.NanColor);\n      while (model.nanColor.length < 4) {\n        model.nanColor.push(1.0);\n      }\n    }\n    if (colorMap.RGBPoints) {\n      const size = colorMap.RGBPoints.length;\n      model.nodes = [];\n      const midpoint = 0.5;\n      const sharpness = 0.0;\n      for (let i = 0; i < size; i += 4) {\n        model.nodes.push({\n          x: colorMap.RGBPoints[i],\n          r: colorMap.RGBPoints[i + 1],\n          g: colorMap.RGBPoints[i + 2],\n          b: colorMap.RGBPoints[i + 3],\n          midpoint,\n          sharpness,\n        });\n      }\n    }\n    // FIXME: not supported ?\n    // if (colorMap.IndexedColors) {\n    // }\n    // if (colorMap.Annotations) {\n    // }\n\n    publicAPI.sortAndUpdateRange();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  clamping: true,\n  colorSpace: ColorSpace.RGB,\n  hSVWrap: true,\n  scale: Scale.LINEAR,\n\n  nanColor: null,\n  belowRangeColor: null,\n  aboveRangeColor: null,\n  useAboveRangeColor: false,\n  useBelowRangeColor: false,\n\n  allowDuplicateScalars: false,\n\n  table: null,\n  tableSize: 0,\n  buildTime: null,\n\n  nodes: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkScalarsToColors.extend(publicAPI, model, initialValues);\n\n  // Internal objects initialization\n  model.table = [];\n  model.nodes = [];\n\n  model.nanColor = [0.5, 0.0, 0.0, 1.0];\n  model.belowRangeColor = [0.0, 0.0, 0.0, 1.0];\n  model.aboveRangeColor = [1.0, 1.0, 1.0, 1.0];\n\n  model.buildTime = {};\n  macro.obj(model.buildTime);\n\n  // Create get-only macros\n  macro.get(publicAPI, model, ['buildTime', 'mappingRange']);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, [\n    'useAboveRangeColor',\n    'useBelowRangeColor',\n    'colorSpace',\n  ]);\n\n  macro.setArray(\n    publicAPI,\n    model,\n    ['nanColor', 'belowRangeColor', 'aboveRangeColor'],\n    4\n  );\n\n  // Create get macros for array\n  macro.getArray(publicAPI, model, [\n    'nanColor',\n    'belowRangeColor',\n    'aboveRangeColor',\n  ]);\n\n  // For more macro methods, see \"Sources/macro.js\"\n\n  // Object specific methods\n  vtkColorTransferFunction(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(\n  extend,\n  'vtkColorTransferFunction'\n);\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend, vtkColorMaps }, Constants);\n","import macro from 'vtk.js/Sources/macro';\n\nconst { vtkErrorMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// vtkPiecewiseFunction methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPiecewiseFunction(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPiecewiseFunction');\n\n  // Return the number of points which specify this function\n  publicAPI.getSize = () => model.nodes.length;\n\n  // Return the type of function stored in object:\n  // Function Types:\n  //    0 : Constant        (No change in slope between end points)\n  //    1 : NonDecreasing   (Always increasing or zero slope)\n  //    2 : NonIncreasing   (Always decreasing or zero slope)\n  //    3 : Varied          (Contains both decreasing and increasing slopes)\n  //    4 : Unknown         (Error condition)\n  //\n  publicAPI.getType = () => {\n    let value;\n    let prevValue = 0.0;\n    let functionType = 0;\n\n    if (model.nodes.length > 0) {\n      prevValue = model.nodes[0].y;\n    }\n\n    for (let i = 1; i < model.nodes.length; i++) {\n      value = model.nodes[i].y;\n\n      // Do not change the function type if equal\n      if (value !== prevValue) {\n        if (value > prevValue) {\n          switch (functionType) {\n            case 0:\n            case 1:\n              functionType = 1; // NonDecreasing\n              break;\n            default:\n            case 2:\n              functionType = 3; // Varied\n              break;\n          }\n        } else {\n          // value < prev_value\n          switch (functionType) {\n            case 0:\n            case 2:\n              functionType = 2; // NonIncreasing\n              break;\n            default:\n            case 1:\n              functionType = 3; // Varied\n              break;\n          }\n        }\n      }\n\n      prevValue = value;\n\n      // Exit loop if we find a Varied function\n      if (functionType === 3) {\n        break;\n      }\n    }\n\n    switch (functionType) {\n      case 0:\n        return 'Constant';\n      case 1:\n        return 'NonDecreasing';\n      case 2:\n        return 'NonIncreasing';\n      default:\n      case 3:\n        return 'Varied';\n    }\n  };\n\n  // Since we no longer store the data in an array, we must\n  // copy out of the vector into an array. No modified check -\n  // could be added if performance is a problem\n  publicAPI.getDataPointer = () => {\n    const size = model.nodes.length;\n\n    model.function = null;\n\n    if (size > 0) {\n      model.function = [];\n      for (let i = 0; i < size; i++) {\n        model.function[2 * i] = model.nodes[i].x;\n        model.function[2 * i + 1] = model.nodes[i].y;\n      }\n    }\n    return model.function;\n  };\n\n  // Returns the first point location which starts a non-zero segment of the\n  // function. Note that the value at this point may be zero.\n  publicAPI.getFirstNonZeroValue = () => {\n    // Check if no points specified\n    if (model.nodes.length === 0) {\n      return 0;\n    }\n\n    let allZero = 1;\n    let x = 0.0;\n    let i = 0;\n    for (; i < model.nodes.length; i++) {\n      if (model.nodes[i].y !== 0.0) {\n        allZero = 0;\n        break;\n      }\n    }\n\n    // If every specified point has a zero value then return\n    // a large value\n    if (allZero) {\n      x = Number.MAX_VALUE;\n    } else if (i > 0) {\n      // A point was found with a non-zero value\n      // Return the value of the point that precedes this one\n      x = model.nodes[i - 1].x;\n    } else if (model.clamping) {\n      // If this is the first point in the function, return its\n      // value is clamping is off, otherwise VTK_DOUBLE_MIN if\n      // clamping is on.\n      x = -Number.MAX_VALUE;\n    } else {\n      x = model.nodes[0].x;\n    }\n\n    return x;\n  };\n\n  // For a specified index value, get the node parameters\n  publicAPI.getNodeValue = (index, val) => {\n    const size = model.nodes.length;\n\n    if (index < 0 || index >= size) {\n      vtkErrorMacro('Index out of range!');\n      return -1;\n    }\n\n    val[0] = model.nodes[index].x;\n    val[1] = model.nodes[index].y;\n    val[2] = model.nodes[index].midpoint;\n    val[3] = model.nodes[index].sharpness;\n\n    return 1;\n  };\n\n  // For a specified index value, get the node parameters\n  publicAPI.setNodeValue = (index, val) => {\n    const size = model.nodes.length;\n\n    if (index < 0 || index >= size) {\n      vtkErrorMacro('Index out of range!');\n      return -1;\n    }\n\n    const oldX = model.nodes[index].x;\n    model.nodes[index].x = val[0];\n    model.nodes[index].y = val[1];\n    model.nodes[index].midpoint = val[2];\n    model.nodes[index].sharpness = val[3];\n\n    if (oldX !== val[0]) {\n      // The point has been moved, the order of points or the range might have\n      // been modified.\n      publicAPI.sortAndUpdateRange();\n      // No need to call Modified() here because SortAndUpdateRange() has done it\n      // already.\n    } else {\n      publicAPI.modified();\n    }\n\n    return 1;\n  };\n\n  // Adds a point to the function. If a duplicate point is inserted\n  // then the function value at that location is set to the new value.\n  // This is the legacy version that assumes midpoint = 0.5 and\n  // sharpness = 0.0\n  publicAPI.addPoint = (x, y) => publicAPI.addPointLong(x, y, 0.5, 0.0);\n\n  // Adds a point to the function and returns the array index of the point.\n  publicAPI.addPointLong = (x, y, midpoint, sharpness) => {\n    // Error check\n    if (midpoint < 0.0 || midpoint > 1.0) {\n      vtkErrorMacro('Midpoint outside range [0.0, 1.0]');\n      return -1;\n    }\n\n    if (sharpness < 0.0 || sharpness > 1.0) {\n      vtkErrorMacro('Sharpness outside range [0.0, 1.0]');\n      return -1;\n    }\n\n    // remove any node already at this X location\n    if (!model.allowDuplicateScalars) {\n      publicAPI.removePoint(x);\n    }\n\n    // Create the new node\n    const node = { x, y, midpoint, sharpness };\n\n    // Add it, then sort to get everything in order\n    model.nodes.push(node);\n    publicAPI.sortAndUpdateRange();\n\n    // Now find this node so we can return the index\n    let i;\n    for (i = 0; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === x) {\n        break;\n      }\n    }\n\n    // If we didn't find it, something went horribly wrong so\n    // return -1\n    if (i < model.nodes.length) {\n      return i;\n    }\n\n    return -1;\n  };\n\n  publicAPI.setNodes = (nodes) => {\n    if (model.nodes !== nodes) {\n      model.nodes = nodes;\n      publicAPI.sortAndUpdateRange();\n    }\n  };\n\n  // Sort the vector in increasing order, then fill in\n  // the Range\n  publicAPI.sortAndUpdateRange = () => {\n    model.nodes.sort((a, b) => a.x - b.x);\n    const modifiedInvoked = publicAPI.updateRange();\n    // If range is updated, Modified() has been called, don't call it again.\n    if (!modifiedInvoked) {\n      publicAPI.modified();\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.updateRange = () => {\n    const oldRange = model.range.slice();\n\n    const size = model.nodes.length;\n    if (size) {\n      model.range[0] = model.nodes[0].x;\n      model.range[1] = model.nodes[size - 1].x;\n    } else {\n      model.range[0] = 0;\n      model.range[1] = 0;\n    }\n    // If the rage is the same, then no need to call Modified()\n    if (oldRange[0] === model.range[0] && oldRange[1] === model.range[1]) {\n      return false;\n    }\n\n    publicAPI.modified();\n    return true;\n  };\n\n  // Removes a point from the function. If no point is found then function\n  // remains the same.\n  publicAPI.removePoint = (x) => {\n    // First find the node since we need to know its\n    // index as our return value\n    let i;\n    for (i = 0; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === x) {\n        break;\n      }\n    }\n\n    // If the node doesn't exist, we return -1\n    if (i >= model.nodes.length) {\n      return -1;\n    }\n\n    const retVal = i;\n\n    // If the first or last point has been removed, then we update the range\n    // No need to sort here as the order of points hasn't changed.\n    let modifiedInvoked = false;\n    model.nodes.splice(i, 1);\n    if (i === 0 || i === model.nodes.length) {\n      modifiedInvoked = publicAPI.updateRange();\n    }\n    if (!modifiedInvoked) {\n      publicAPI.modified();\n    }\n\n    return retVal;\n  };\n\n  // Removes all points from the function.\n  publicAPI.removeAllPoints = () => {\n    model.nodes = [];\n    publicAPI.sortAndUpdateRange();\n  };\n\n  // Add in end points of line and remove any points between them\n  // Legacy method with no way to specify midpoint and sharpness\n  publicAPI.addSegment = (x1, y1, x2, y2) => {\n    // First, find all points in this range and remove them\n    publicAPI.sortAndUpdateRange();\n    for (let i = 0; i < model.nodes.length; ) {\n      if (model.nodes[i].x >= x1 && model.nodes[i].x <= x2) {\n        model.nodes.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n\n    // Now add the points\n    publicAPI.addPoint(x1, y1, 0.5, 0.0);\n    publicAPI.addPoint(x2, y2, 0.5, 0.0);\n  };\n\n  // Return the value of the function at a position\n  publicAPI.getValue = (x) => {\n    const table = [];\n    publicAPI.getTable(x, x, 1, table);\n    return table[0];\n  };\n\n  // Remove all points outside the range, and make sure a point\n  // exists at each end of the range. Used as a convenience method\n  // for transfer function editors\n  publicAPI.adjustRange = (range) => {\n    if (range.length < 2) {\n      return 0;\n    }\n\n    const functionRange = publicAPI.getRange();\n\n    // Make sure we have points at each end of the range\n    if (functionRange[0] < range[0]) {\n      publicAPI.addPoint(range[0], publicAPI.getValue(range[0]));\n    } else {\n      publicAPI.addPoint(range[0], publicAPI.getValue(functionRange[0]));\n    }\n\n    if (functionRange[1] > range[1]) {\n      publicAPI.addPoint(range[1], publicAPI.getValue(range[1]));\n    } else {\n      publicAPI.addPoint(range[1], publicAPI.getValue(functionRange[1]));\n    }\n\n    // Remove all points out-of-range\n    publicAPI.sortAndUpdateRange();\n    for (let i = 0; i < model.nodes.length; ) {\n      if (model.nodes[i].x >= range[0] && model.nodes[i].x <= range[1]) {\n        model.nodes.splice(i, 1);\n      } else {\n        ++i;\n      }\n    }\n\n    publicAPI.sortAndUpdateRange();\n    return 1;\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.estimateMinNumberOfSamples = (x1, x2) => {\n    const d = publicAPI.findMinimumXDistance();\n    return Math.ceil((x2 - x1) / d);\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.findMinimumXDistance = () => {\n    const size = model.nodes.length;\n    if (size < 2) {\n      return -1.0;\n    }\n\n    let distance = model.nodes[1].x - model.nodes[0].x;\n    for (let i = 0; i < size - 1; i++) {\n      const currentDist = model.nodes[i + 1].x - model.nodes[i].x;\n      if (currentDist < distance) {\n        distance = currentDist;\n      }\n    }\n\n    return distance;\n  };\n\n  // Returns a table of function values evaluated at regular intervals\n  /* eslint-disable prefer-destructuring */\n  /* eslint-disable no-continue */\n  publicAPI.getTable = (xStart, xEnd, size, table, stride = 1) => {\n    let i;\n    let idx = 0;\n    const numNodes = model.nodes.length;\n\n    // Need to keep track of the last value so that\n    // we can fill in table locations past this with\n    // this value if Clamping is On.\n    let lastValue = 0.0;\n    if (numNodes !== 0) {\n      lastValue = model.nodes[numNodes - 1].y;\n    }\n\n    let x = 0.0;\n    let x1 = 0.0;\n    let x2 = 0.0;\n    let y1 = 0.0;\n    let y2 = 0.0;\n    let midpoint = 0.0;\n    let sharpness = 0.0;\n\n    // For each table entry\n    for (i = 0; i < size; i++) {\n      // Find our location in the table\n      const tidx = stride * i;\n\n      // Find our X location. If we are taking only 1 sample, make\n      // it halfway between start and end (usually start and end will\n      // be the same in this case)\n      if (size > 1) {\n        x = xStart + (i / (size - 1.0)) * (xEnd - xStart);\n      } else {\n        x = 0.5 * (xStart + xEnd);\n      }\n\n      // Do we need to move to the next node?\n      while (idx < numNodes && x > model.nodes[idx].x) {\n        idx++;\n        // If we are at a valid point index, fill in\n        // the value at this node, and the one before (the\n        // two that surround our current sample location)\n        // idx cannot be 0 since we just incremented it.\n        if (idx < numNodes) {\n          x1 = model.nodes[idx - 1].x;\n          x2 = model.nodes[idx].x;\n\n          y1 = model.nodes[idx - 1].y;\n          y2 = model.nodes[idx].y;\n\n          // We only need the previous midpoint and sharpness\n          // since these control this region\n          midpoint = model.nodes[idx - 1].midpoint;\n          sharpness = model.nodes[idx - 1].sharpness;\n\n          // Move midpoint away from extreme ends of range to avoid\n          // degenerate math\n          if (midpoint < 0.00001) {\n            midpoint = 0.00001;\n          }\n\n          if (midpoint > 0.99999) {\n            midpoint = 0.99999;\n          }\n        }\n      }\n\n      // Are we at the end? If so, just use the last value\n      if (idx >= numNodes) {\n        table[tidx] = model.clamping ? lastValue : 0.0;\n      } else if (idx === 0) {\n        // Are we before the first node? If so, duplicate this nodes values\n        table[tidx] = model.clamping ? model.nodes[0].y : 0.0;\n      } else {\n        // Otherwise, we are between two nodes - interpolate\n        // Our first attempt at a normalized location [0,1] -\n        // we will be modifying this based on midpoint and\n        // sharpness to get the curve shape we want and to have\n        // it pass through (y1+y2)/2 at the midpoint.\n        let s = (x - x1) / (x2 - x1);\n\n        // Readjust based on the midpoint - linear adjustment\n        if (s < midpoint) {\n          s = (0.5 * s) / midpoint;\n        } else {\n          s = 0.5 + (0.5 * (s - midpoint)) / (1.0 - midpoint);\n        }\n\n        // override for sharpness > 0.99\n        // In this case we just want piecewise constant\n        if (sharpness > 0.99) {\n          // Use the first value since we are below the midpoint\n          if (s < 0.5) {\n            table[tidx] = y1;\n            continue;\n          } else {\n            // Use the second value at or above the midpoint\n            table[tidx] = y2;\n            continue;\n          }\n        }\n\n        // Override for sharpness < 0.01\n        // In this case we want piecewise linear\n        if (sharpness < 0.01) {\n          // Simple linear interpolation\n          table[tidx] = (1 - s) * y1 + s * y2;\n          continue;\n        }\n\n        // We have a sharpness between [0.01, 0.99] - we will\n        // used a modified hermite curve interpolation where we\n        // derive the slope based on the sharpness, and we compress\n        // the curve non-linearly based on the sharpness\n\n        // First, we will adjust our position based on sharpness in\n        // order to make the curve sharper (closer to piecewise constant)\n        if (s < 0.5) {\n          s = 0.5 * (s * 2) ** (1.0 + 10 * sharpness);\n        } else if (s > 0.5) {\n          s = 1.0 - 0.5 * ((1.0 - s) * 2) ** (1 + 10 * sharpness);\n        }\n\n        // Compute some coefficients we will need for the hermite curve\n        const ss = s * s;\n        const sss = ss * s;\n\n        const h1 = 2 * sss - 3 * ss + 1;\n        const h2 = -2 * sss + 3 * ss;\n        const h3 = sss - 2 * ss + s;\n        const h4 = sss - ss;\n\n        // Use one slope for both end points\n        const slope = y2 - y1;\n        const t = (1.0 - sharpness) * slope;\n\n        // Compute the value\n        table[tidx] = h1 * y1 + h2 * y2 + h3 * t + h4 * t;\n\n        // Final error check to make sure we don't go outside\n        // the Y range\n        const min = y1 < y2 ? y1 : y2;\n        const max = y1 > y2 ? y1 : y2;\n\n        table[tidx] = table[tidx] < min ? min : table[tidx];\n        table[tidx] = table[tidx] > max ? max : table[tidx];\n      }\n    }\n  };\n}\n/* eslint-enable prefer-destructuring */\n/* eslint-enable no-continue */\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // model.function = NULL;\n  range: [0, 0],\n  clamping: true,\n  allowDuplicateScalars: false,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  macro.obj(publicAPI, model);\n\n  // Internal objects initialization\n  model.nodes = [];\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['allowDuplicateScalars', 'clamping']);\n\n  macro.setArray(publicAPI, model, ['range'], 2);\n\n  // Create get macros for array\n  macro.getArray(publicAPI, model, ['range']);\n\n  // For more macro methods, see \"Sources/macro.js\"\n\n  // Object specific methods\n  vtkPiecewiseFunction(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkPiecewiseFunction');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend });\n","import macro from 'vtk.js/Sources/macro';\nimport vtkColorTransferFunction from 'vtk.js/Sources/Rendering/Core/ColorTransferFunction';\nimport vtkPiecewiseFunction from 'vtk.js/Sources/Common/DataModel/PiecewiseFunction';\nimport Constants from 'vtk.js/Sources/Rendering/Core/VolumeProperty/Constants';\n\nconst { InterpolationType } = Constants;\nconst { vtkErrorMacro } = macro;\n\nconst VTK_MAX_VRCOMP = 4;\n\n// ----------------------------------------------------------------------------\n// vtkVolumeProperty methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVolumeProperty(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVolumeProperty');\n\n  publicAPI.getMTime = () => {\n    let mTime = model.mtime;\n    let time;\n\n    for (let index = 0; index < VTK_MAX_VRCOMP; index++) {\n      // Color MTimes\n      if (model.componentData[index].colorChannels === 1) {\n        if (model.componentData[index].grayTransferFunction) {\n          // time that Gray transfer function was last modified\n          time = model.componentData[index].grayTransferFunction.getMTime();\n          mTime = mTime > time ? mTime : time;\n        }\n      } else if (model.componentData[index].colorChannels === 3) {\n        if (model.componentData[index].rGBTransferFunction) {\n          // time that RGB transfer function was last modified\n          time = model.componentData[index].rGBTransferFunction.getMTime();\n          mTime = mTime > time ? mTime : time;\n        }\n      }\n\n      // Opacity MTimes\n      if (model.componentData[index].scalarOpacity) {\n        // time that Scalar opacity transfer function was last modified\n        time = model.componentData[index].scalarOpacity.getMTime();\n        mTime = mTime > time ? mTime : time;\n      }\n\n      if (model.componentData[index].gradientOpacity) {\n        if (!model.componentData[index].disableGradientOpacity) {\n          // time that Gradient opacity transfer function was last modified\n          time = model.componentData[index].gradientOpacity.getMTime();\n          mTime = mTime > time ? mTime : time;\n        }\n      }\n    }\n\n    return mTime;\n  };\n\n  publicAPI.getColorChannels = (index) => {\n    if (index < 0 || index > 3) {\n      vtkErrorMacro('Bad index - must be between 0 and 3');\n      return 0;\n    }\n\n    return model.componentData[index].colorChannels;\n  };\n\n  // Set the color of a volume to a gray transfer function\n  publicAPI.setGrayTransferFunction = (index, func) => {\n    if (model.componentData[index].grayTransferFunction !== func) {\n      model.componentData[index].grayTransferFunction = func;\n      publicAPI.modified();\n    }\n\n    if (model.componentData[index].colorChannels !== 1) {\n      model.componentData[index].colorChannels = 1;\n      publicAPI.modified();\n    }\n  };\n\n  // Get the currently set gray transfer function. Create one if none set.\n  publicAPI.getGrayTransferFunction = (index) => {\n    if (model.componentData[index].grayTransferFunction === null) {\n      model.componentData[\n        index\n      ].grayTransferFunction = vtkPiecewiseFunction.newInstance();\n      model.componentData[index].grayTransferFunction.addPoint(0, 0.0);\n      model.componentData[index].grayTransferFunction.addPoint(1024, 1.0);\n      if (model.componentData[index].colorChannels !== 1) {\n        model.componentData[index].colorChannels = 1;\n      }\n      publicAPI.modified();\n    }\n\n    return model.componentData[index].grayTransferFunction;\n  };\n\n  // Set the color of a volume to an RGB transfer function\n  publicAPI.setRGBTransferFunction = (index, func) => {\n    if (model.componentData[index].rGBTransferFunction !== func) {\n      model.componentData[index].rGBTransferFunction = func;\n      publicAPI.modified();\n    }\n\n    if (model.componentData[index].colorChannels !== 3) {\n      model.componentData[index].colorChannels = 3;\n      publicAPI.modified();\n    }\n  };\n\n  // Get the currently set RGB transfer function. Create one if none set.\n  publicAPI.getRGBTransferFunction = (index) => {\n    if (model.componentData[index].rGBTransferFunction === null) {\n      model.componentData[\n        index\n      ].rGBTransferFunction = vtkColorTransferFunction.newInstance();\n      model.componentData[index].rGBTransferFunction.addRGBPoint(\n        0,\n        0.0,\n        0.0,\n        0.0\n      );\n      model.componentData[index].rGBTransferFunction.addRGBPoint(\n        1024,\n        1.0,\n        1.0,\n        1.0\n      );\n      if (model.componentData[index].colorChannels !== 3) {\n        model.componentData[index].colorChannels = 3;\n      }\n      publicAPI.modified();\n    }\n\n    return model.componentData[index].rGBTransferFunction;\n  };\n\n  // Set the scalar opacity of a volume to a transfer function\n  publicAPI.setScalarOpacity = (index, func) => {\n    if (model.componentData[index].scalarOpacity !== func) {\n      model.componentData[index].scalarOpacity = func;\n      publicAPI.modified();\n    }\n  };\n\n  // Get the scalar opacity transfer function. Create one if none set.\n  publicAPI.getScalarOpacity = (index) => {\n    if (model.componentData[index].scalarOpacity === null) {\n      model.componentData[\n        index\n      ].scalarOpacity = vtkPiecewiseFunction.newInstance();\n      model.componentData[index].scalarOpacity.addPoint(0, 1.0);\n      model.componentData[index].scalarOpacity.addPoint(1024, 1.0);\n      publicAPI.modified();\n    }\n\n    return model.componentData[index].scalarOpacity;\n  };\n\n  publicAPI.setComponentWeight = (index, value) => {\n    if (index < 0 || index >= VTK_MAX_VRCOMP) {\n      vtkErrorMacro('Invalid index');\n      return;\n    }\n\n    const val = Math.min(1, Math.max(0, value));\n    if (model.componentData[index].componentWeight !== val) {\n      model.componentData[index].componentWeight = val;\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.getComponentWeight = (index) => {\n    if (index < 0 || index >= VTK_MAX_VRCOMP) {\n      vtkErrorMacro('Invalid index');\n      return 0.0;\n    }\n\n    return model.componentData[index].componentWeight;\n  };\n\n  publicAPI.setInterpolationTypeToNearest = () => {\n    publicAPI.setInterpolationType(InterpolationType.NEAREST);\n  };\n\n  publicAPI.setInterpolationTypeToLinear = () => {\n    publicAPI.setInterpolationType(InterpolationType.LINEAR);\n  };\n\n  publicAPI.setInterpolationTypeToFastLinear = () => {\n    publicAPI.setInterpolationType(InterpolationType.FAST_LINEAR);\n  };\n\n  publicAPI.getInterpolationTypeAsString = () =>\n    macro.enumToString(InterpolationType, model.interpolationType);\n\n  const sets = [\n    'useGradientOpacity',\n    'scalarOpacityUnitDistance',\n    'gradientOpacityMinimumValue',\n    'gradientOpacityMinimumOpacity',\n    'gradientOpacityMaximumValue',\n    'gradientOpacityMaximumOpacity',\n  ];\n  sets.forEach((val) => {\n    const cap = macro.capitalize(val);\n    publicAPI[`set${cap}`] = (index, value) => {\n      if (model.componentData[index][`${val}`] !== value) {\n        model.componentData[index][`${val}`] = value;\n        publicAPI.modified();\n      }\n    };\n  });\n\n  const gets = [\n    'useGradientOpacity',\n    'scalarOpacityUnitDistance',\n    'gradientOpacityMinimumValue',\n    'gradientOpacityMinimumOpacity',\n    'gradientOpacityMaximumValue',\n    'gradientOpacityMaximumOpacity',\n  ];\n  gets.forEach((val) => {\n    const cap = macro.capitalize(val);\n    publicAPI[`get${cap}`] = (index) => model.componentData[index][`${val}`];\n  });\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  independentComponents: 1,\n  interpolationType: InterpolationType.FAST_LINEAR,\n  shade: 0,\n  ambient: 0.1,\n  diffuse: 0.7,\n  specular: 0.2,\n  specularPower: 10.0,\n  useLabelOutline: false,\n  labelOutlineThickness: 1,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n\n  if (!model.componentData) {\n    model.componentData = [];\n    for (let i = 0; i < VTK_MAX_VRCOMP; ++i) {\n      model.componentData.push({\n        colorChannels: 1,\n        grayTransferFunction: null,\n        rGBTransferFunction: null,\n        scalarOpacity: null,\n        scalarOpacityUnitDistance: 1.0,\n\n        gradientOpacityMinimumValue: 0,\n        gradientOpacityMinimumOpacity: 0.0,\n        gradientOpacityMaximumValue: 1.0,\n        gradientOpacityMaximumOpacity: 1.0,\n        useGradientOpacity: false,\n\n        componentWeight: 1.0,\n      });\n    }\n  }\n\n  macro.setGet(publicAPI, model, [\n    'independentComponents',\n    'interpolationType',\n    'shade',\n    'ambient',\n    'diffuse',\n    'specular',\n    'specularPower',\n    'useLabelOutline',\n    'labelOutlineThickness',\n  ]);\n\n  // Object methods\n  vtkVolumeProperty(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkVolumeProperty');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend }, Constants);\n","import { vec3, mat4 } from 'gl-matrix';\nimport macro from 'vtk.js/Sources/macro';\nimport vtkProp3D from 'vtk.js/Sources/Rendering/Core/Prop3D';\nimport vtkVolumeProperty from 'vtk.js/Sources/Rendering/Core/VolumeProperty';\n\nconst { vtkDebugMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// vtkVolume methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVolume(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVolume');\n\n  publicAPI.getVolumes = () => publicAPI;\n\n  publicAPI.makeProperty = vtkVolumeProperty.newInstance;\n\n  publicAPI.getProperty = () => {\n    if (model.property === null) {\n      model.property = publicAPI.makeProperty();\n    }\n    return model.property;\n  };\n\n  publicAPI.getBounds = () => {\n    if (model.mapper === null) {\n      return model.bounds;\n    }\n\n    // Check for the special case when the mapper's bounds are unknown\n    const bds = model.mapper.getBounds();\n    if (!bds || bds.length !== 6) {\n      return bds;\n    }\n\n    // Check for the special case when the actor is empty.\n    if (bds[0] > bds[1]) {\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n      model.bounds = [1, -1, 1, -1, 1, -1];\n      model.boundsMTime.modified();\n      return bds;\n    }\n\n    // Check if we have cached values for these bounds - we cache the\n    // values returned by model.mapper.getBounds() and we store the time\n    // of caching. If the values returned this time are different, or\n    // the modified time of this class is newer than the cached time,\n    // then we need to rebuild.\n    const zip = (rows) => rows[0].map((_, c) => rows.map((row) => row[c]));\n    if (\n      !model.mapperBounds ||\n      !zip([bds, model.mapperBounds]).reduce(\n        (a, b) => a && b[0] === b[1],\n        true\n      ) ||\n      publicAPI.getMTime() > model.boundsMTime.getMTime()\n    ) {\n      vtkDebugMacro('Recomputing bounds...');\n      model.mapperBounds = bds.map((x) => x);\n      const bbox = [\n        vec3.fromValues(bds[1], bds[3], bds[5]),\n        vec3.fromValues(bds[1], bds[2], bds[5]),\n        vec3.fromValues(bds[0], bds[2], bds[5]),\n        vec3.fromValues(bds[0], bds[3], bds[5]),\n        vec3.fromValues(bds[1], bds[3], bds[4]),\n        vec3.fromValues(bds[1], bds[2], bds[4]),\n        vec3.fromValues(bds[0], bds[2], bds[4]),\n        vec3.fromValues(bds[0], bds[3], bds[4]),\n      ];\n\n      publicAPI.computeMatrix();\n      const tmp4 = mat4.create();\n      mat4.transpose(tmp4, model.matrix);\n      bbox.forEach((pt) => vec3.transformMat4(pt, pt, tmp4));\n\n      /* eslint-disable no-multi-assign */\n      model.bounds[0] = model.bounds[2] = model.bounds[4] = Number.MAX_VALUE;\n      model.bounds[1] = model.bounds[3] = model.bounds[5] = -Number.MAX_VALUE;\n      /* eslint-enable no-multi-assign */\n      model.bounds = model.bounds.map(\n        (d, i) =>\n          i % 2 === 0\n            ? bbox.reduce((a, b) => (a > b[i / 2] ? b[i / 2] : a), d)\n            : bbox.reduce(\n                (a, b) => (a < b[(i - 1) / 2] ? b[(i - 1) / 2] : a),\n                d\n              )\n      );\n      model.boundsMTime.modified();\n    }\n    return model.bounds;\n  };\n\n  publicAPI.getMTime = () => {\n    let mt = model.mtime;\n    if (model.property !== null) {\n      const time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n    }\n    return mt;\n  };\n\n  publicAPI.getRedrawMTime = () => {\n    let mt = model.mtime;\n    if (model.mapper !== null) {\n      let time = model.mapper.getMTime();\n      mt = time > mt ? time : mt;\n      if (model.mapper.getInput() !== null) {\n        // FIXME !!! getInputAlgorithm / getInput\n        model.mapper.getInputAlgorithm().update();\n        time = model.mapper.getInput().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n    return mt;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  mapper: null,\n  property: null,\n  bounds: [1, -1, 1, -1, 1, -1],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkProp3D.extend(publicAPI, model, initialValues);\n\n  // vtkTimeStamp\n  model.boundsMTime = {};\n  macro.obj(model.boundsMTime);\n\n  // Build VTK API\n  macro.set(publicAPI, model, ['property']);\n  macro.setGet(publicAPI, model, ['mapper']);\n  macro.getArray(publicAPI, model, ['bounds'], 6);\n\n  // Object methods\n  vtkVolume(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkVolume');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import macro from 'vtk.js/Sources/macro';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport Constants from 'vtk.js/Sources/Rendering/Core/VolumeMapper/Constants';\n\nconst { BlendMode } = Constants;\n\n// ----------------------------------------------------------------------------\n// vtkVolumeMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVolumeMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVolumeMapper');\n\n  publicAPI.getBounds = () => {\n    const input = publicAPI.getInputData();\n    if (!input) {\n      model.bounds = vtkMath.createUninitializedBounds();\n    } else {\n      if (!model.static) {\n        publicAPI.update();\n      }\n      model.bounds = input.getBounds();\n    }\n    return model.bounds;\n  };\n\n  publicAPI.update = () => {\n    publicAPI.getInputData();\n  };\n\n  publicAPI.setBlendModeToComposite = () => {\n    publicAPI.setBlendMode(BlendMode.COMPOSITE_BLEND);\n  };\n\n  publicAPI.setBlendModeToMaximumIntensity = () => {\n    publicAPI.setBlendMode(BlendMode.MAXIMUM_INTENSITY_BLEND);\n  };\n\n  publicAPI.setBlendModeToMinimumIntensity = () => {\n    publicAPI.setBlendMode(BlendMode.MINIMUM_INTENSITY_BLEND);\n  };\n\n  publicAPI.setBlendModeToAverageIntensity = () => {\n    publicAPI.setBlendMode(BlendMode.AVERAGE_INTENSITY_BLEND);\n  };\n\n  publicAPI.getBlendModeAsString = () =>\n    macro.enumToString(BlendMode, model.blendMode);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n// TODO: what values to use for averageIPScalarRange to get GLSL to use max / min values like [-Math.inf, Math.inf]?\nconst DEFAULT_VALUES = {\n  bounds: [1, -1, 1, -1, 1, -1],\n  sampleDistance: 1.0,\n  imageSampleDistance: 1.0,\n  maximumSamplesPerRay: 1000,\n  autoAdjustSampleDistances: true,\n  blendMode: BlendMode.COMPOSITE_BLEND,\n  averageIPScalarRange: [-1000000.0, 1000000.0],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.algo(publicAPI, model, 1, 0);\n\n  macro.setGet(publicAPI, model, [\n    'sampleDistance',\n    'imageSampleDistance',\n    'maximumSamplesPerRay',\n    'autoAdjustSampleDistances',\n    'blendMode',\n  ]);\n\n  macro.setGetArray(publicAPI, model, ['averageIPScalarRange'], 2);\n\n  macro.event(publicAPI, model, 'lightingActivated');\n\n  // Object methods\n  vtkVolumeMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkVolumeMapper');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import macro from 'vtk.js/Sources/macro';\nimport vtkOpenGLRenderWindow from 'vtk.js/Sources/Rendering/OpenGL/RenderWindow';\nimport vtkRenderer from 'vtk.js/Sources/Rendering/Core/Renderer';\nimport vtkRenderWindow from 'vtk.js/Sources/Rendering/Core/RenderWindow';\nimport vtkRenderWindowInteractor from 'vtk.js/Sources/Rendering/Core/RenderWindowInteractor';\nimport vtkInteractorStyleTrackballCamera from 'vtk.js/Sources/Interaction/Style/InteractorStyleTrackballCamera';\n\n// Load basic classes for vtk() factory\nimport 'vtk.js/Sources/Common/Core/Points';\nimport 'vtk.js/Sources/Common/Core/DataArray';\nimport 'vtk.js/Sources/Common/DataModel/PolyData';\nimport 'vtk.js/Sources/Rendering/Core/Actor';\nimport 'vtk.js/Sources/Rendering/Core/Mapper';\n\nfunction vtkGenericRenderWindow(publicAPI, model) {\n  // Capture resize trigger method to remove from publicAPI\n  const invokeResize = publicAPI.invokeResize;\n  delete publicAPI.invokeResize;\n\n  // VTK renderWindow/renderer\n  model.renderWindow = vtkRenderWindow.newInstance();\n  model.renderer = vtkRenderer.newInstance();\n  model.renderWindow.addRenderer(model.renderer);\n\n  // OpenGLRenderWindow\n  model.openGLRenderWindow = vtkOpenGLRenderWindow.newInstance();\n  model.renderWindow.addView(model.openGLRenderWindow);\n\n  // Interactor\n  model.interactor = vtkRenderWindowInteractor.newInstance();\n  model.interactor.setInteractorStyle(\n    vtkInteractorStyleTrackballCamera.newInstance()\n  );\n  model.interactor.setView(model.openGLRenderWindow);\n  model.interactor.initialize();\n\n  // Expose background\n  publicAPI.setBackground = model.renderer.setBackground;\n\n  // Update BG color\n  publicAPI.setBackground(...model.background);\n\n  // Handle window resize\n  publicAPI.resize = () => {\n    if (model.container) {\n      const dims = model.container.getBoundingClientRect();\n      const devicePixelRatio = window.devicePixelRatio || 1;\n      model.openGLRenderWindow.setSize(\n        Math.floor(dims.width * devicePixelRatio),\n        Math.floor(dims.height * devicePixelRatio)\n      );\n      invokeResize();\n      model.renderWindow.render();\n    }\n  };\n\n  // Handle DOM container relocation\n  publicAPI.setContainer = (el) => {\n    if (model.container) {\n      model.interactor.unbindEvents(model.container);\n    }\n\n    // Switch container\n    model.container = el;\n    model.openGLRenderWindow.setContainer(model.container);\n\n    // Bind to new container\n    if (model.container) {\n      model.interactor.bindEvents(model.container);\n    }\n  };\n\n  // Properly release GL context\n  publicAPI.delete = macro.chain(\n    publicAPI.setContainer,\n    model.openGLRenderWindow.delete,\n    publicAPI.delete\n  );\n\n  // Handle size\n  if (model.listenWindowResize) {\n    window.addEventListener('resize', publicAPI.resize);\n  }\n  publicAPI.resize();\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  background: [0.32, 0.34, 0.43],\n  listenWindowResize: true,\n  container: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, [\n    'renderWindow',\n    'renderer',\n    'openGLRenderWindow',\n    'interactor',\n    'container',\n  ]);\n  macro.event(publicAPI, model, 'resize');\n\n  // Object specific methods\n  vtkGenericRenderWindow(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import Constants from 'vtk.js/Sources/Rendering/Core/ImageMapper/Constants';\nimport macro from 'vtk.js/Sources/macro';\nimport vtkAbstractMapper from 'vtk.js/Sources/Rendering/Core/AbstractMapper';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport vtkPlane from 'vtk.js/Sources/Common/DataModel/Plane';\n\nimport { vec3 } from 'gl-matrix';\n\nconst { vtkWarningMacro } = macro;\nconst { SlicingMode } = Constants;\n\n// ----------------------------------------------------------------------------\n// vtkImageMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageMapper');\n\n  publicAPI.getSliceAtPosition = (pos) => {\n    const image = publicAPI.getInputData();\n\n    let pos3;\n    if (pos.length === 3) {\n      pos3 = pos;\n    } else if (Number.isFinite(pos)) {\n      const bds = image.getBounds();\n      switch (model.slicingMode) {\n        case SlicingMode.X:\n          pos3 = [pos, (bds[3] + bds[2]) / 2, (bds[5] + bds[4]) / 2];\n          break;\n        case SlicingMode.Y:\n          pos3 = [(bds[1] + bds[0]) / 2, pos, (bds[5] + bds[4]) / 2];\n          break;\n        case SlicingMode.Z:\n          pos3 = [(bds[1] + bds[0]) / 2, (bds[3] + bds[2]) / 2, pos];\n          break;\n        default:\n          break;\n      }\n    }\n\n    const ijk = [0, 0, 0];\n    image.worldToIndex(pos3, ijk);\n\n    const ex = image.getExtent();\n    const { ijkMode } = publicAPI.getClosestIJKAxis();\n    let slice = 0;\n    switch (ijkMode) {\n      case SlicingMode.I:\n        slice = vtkMath.clampValue(ijk[0], ex[0], ex[1]);\n        slice = Math.round(slice);\n        break;\n      case SlicingMode.J:\n        slice = vtkMath.clampValue(ijk[1], ex[2], ex[3]);\n        slice = Math.round(slice);\n        break;\n      case SlicingMode.K:\n        slice = vtkMath.clampValue(ijk[2], ex[4], ex[5]);\n        slice = Math.round(slice);\n        break;\n      default:\n        return 0;\n    }\n    return slice;\n  };\n\n  publicAPI.setSliceFromCamera = (cam) => {\n    const fp = cam.getFocalPoint();\n    switch (model.slicingMode) {\n      case SlicingMode.I:\n      case SlicingMode.J:\n      case SlicingMode.K:\n        {\n          const slice = publicAPI.getSliceAtPosition(fp);\n          publicAPI.setSlice(slice);\n        }\n        break;\n      case SlicingMode.X:\n        publicAPI.setSlice(fp[0]);\n        break;\n      case SlicingMode.Y:\n        publicAPI.setSlice(fp[1]);\n        break;\n      case SlicingMode.Z:\n        publicAPI.setSlice(fp[2]);\n        break;\n      default:\n        break;\n    }\n  };\n\n  publicAPI.setXSlice = (id) => {\n    publicAPI.setSlicingMode(SlicingMode.X);\n    publicAPI.setSlice(id);\n  };\n\n  publicAPI.setYSlice = (id) => {\n    publicAPI.setSlicingMode(SlicingMode.Y);\n    publicAPI.setSlice(id);\n  };\n\n  publicAPI.setZSlice = (id) => {\n    publicAPI.setSlicingMode(SlicingMode.Z);\n    publicAPI.setSlice(id);\n  };\n\n  publicAPI.setISlice = (id) => {\n    publicAPI.setSlicingMode(SlicingMode.I);\n    publicAPI.setSlice(id);\n  };\n\n  publicAPI.setJSlice = (id) => {\n    publicAPI.setSlicingMode(SlicingMode.J);\n    publicAPI.setSlice(id);\n  };\n\n  publicAPI.setKSlice = (id) => {\n    publicAPI.setSlicingMode(SlicingMode.K);\n    publicAPI.setSlice(id);\n  };\n\n  publicAPI.getSlicingModeNormal = () => {\n    const out = [0, 0, 0];\n    const a = publicAPI.getInputData().getDirection();\n    const mat3 = [[a[0], a[1], a[2]], [a[3], a[4], a[5]], [a[6], a[7], a[8]]];\n\n    switch (model.slicingMode) {\n      case SlicingMode.X:\n        out[0] = 1;\n        break;\n      case SlicingMode.Y:\n        out[1] = 1;\n        break;\n      case SlicingMode.Z:\n        out[2] = 1;\n        break;\n      case SlicingMode.I:\n        vtkMath.multiply3x3_vect3(mat3, [1, 0, 0], out);\n        break;\n      case SlicingMode.J:\n        vtkMath.multiply3x3_vect3(mat3, [0, 1, 0], out);\n        break;\n      case SlicingMode.K:\n        vtkMath.multiply3x3_vect3(mat3, [0, 0, 1], out);\n        break;\n      default:\n        break;\n    }\n    return out;\n  };\n\n  function computeClosestIJKAxis() {\n    let inVec3;\n    switch (model.slicingMode) {\n      case SlicingMode.X:\n        inVec3 = [1, 0, 0];\n        break;\n      case SlicingMode.Y:\n        inVec3 = [0, 1, 0];\n        break;\n      case SlicingMode.Z:\n        inVec3 = [0, 0, 1];\n        break;\n      default:\n        model.closestIJKAxis = {\n          ijkMode: model.slicingMode,\n          flip: false,\n        };\n        return;\n    }\n\n    // Project vec3 onto direction cosines\n    const out = [0, 0, 0];\n    // The direction matrix in vtkImageData is the indexToWorld rotation matrix\n    // with a column-major data layout since it is stored as a WebGL matrix.\n    // We need the worldToIndex rotation matrix for the projection, and it needs\n    // to be in a row-major data layout to use vtkMath for operations.\n    // To go from the indexToWorld column-major matrix to the worldToIndex\n    // row-major matrix, we need to transpose it (column -> row) then inverse it.\n    // However, that 3x3 matrix is a rotation matrix which is orthonormal, meaning\n    // that its inverse is equal to its transpose. We therefore need to apply two\n    // transpositions resulting in a no-op.\n    const a = publicAPI.getInputData().getDirection();\n    const mat3 = [[a[0], a[1], a[2]], [a[3], a[4], a[5]], [a[6], a[7], a[8]]];\n    vtkMath.multiply3x3_vect3(mat3, inVec3, out);\n\n    let maxAbs = 0.0;\n    let ijkMode = -1;\n    let flip = false;\n    for (let axis = 0; axis < out.length; ++axis) {\n      const absValue = Math.abs(out[axis]);\n      if (absValue > maxAbs) {\n        maxAbs = absValue;\n        flip = out[axis] < 0.0;\n        ijkMode = axis;\n      }\n    }\n\n    if (maxAbs !== 1.0) {\n      const xyzLabel = 'IJKXYZ'[model.slicingMode];\n      const ijkLabel = 'IJKXYZ'[ijkMode];\n      vtkWarningMacro(\n        `Unaccurate slicing along ${xyzLabel} axis which ` +\n          `is not aligned with any IJK axis of the image data. ` +\n          `Using ${ijkLabel} axis  as a fallback (${maxAbs}% aligned). ` +\n          `Necessitates slice reformat that is not yet implemented.  ` +\n          `You can switch the slicing mode on your mapper to do IJK slicing instead.`\n      );\n    }\n\n    model.closestIJKAxis = { ijkMode, flip };\n  }\n\n  publicAPI.setSlicingMode = (mode) => {\n    if (model.slicingMode === mode) {\n      return;\n    }\n    model.slicingMode = mode;\n    if (publicAPI.getInputData()) {\n      computeClosestIJKAxis();\n    }\n    publicAPI.modified();\n  };\n\n  publicAPI.getClosestIJKAxis = () => {\n    if (\n      (model.closestIJKAxis === undefined ||\n        model.closestIJKAxis.ijkMode === SlicingMode.NONE) &&\n      publicAPI.getInputData()\n    ) {\n      computeClosestIJKAxis();\n    }\n    return model.closestIJKAxis;\n  };\n\n  publicAPI.getBounds = () => {\n    const image = publicAPI.getInputData();\n    if (!image) {\n      return vtkMath.createUninitializedBounds();\n    }\n    if (!model.useCustomExtents) {\n      return image.getBounds();\n    }\n\n    const ex = model.customDisplayExtent.slice();\n    const { ijkMode } = publicAPI.getClosestIJKAxis();\n    let nSlice = model.slice;\n    if (ijkMode !== model.slicingMode) {\n      // If not IJK slicing, get the IJK slice from the XYZ position/slice\n      nSlice = publicAPI.getSliceAtPosition(model.slice);\n    }\n    switch (ijkMode) {\n      case SlicingMode.I:\n        ex[0] = nSlice;\n        ex[1] = nSlice;\n        break;\n      case SlicingMode.J:\n        ex[2] = nSlice;\n        ex[3] = nSlice;\n        break;\n      case SlicingMode.K:\n        ex[4] = nSlice;\n        ex[5] = nSlice;\n        break;\n      default:\n        break;\n    }\n\n    return image.extentToBounds(ex);\n  };\n\n  publicAPI.getBoundsForSlice = (slice = model.slice, thickness = 0) => {\n    const image = publicAPI.getInputData();\n    if (!image) {\n      return vtkMath.createUninitializedBounds();\n    }\n    const extent = image.getExtent();\n    const { ijkMode } = publicAPI.getClosestIJKAxis();\n    let nSlice = slice;\n    if (ijkMode !== model.slicingMode) {\n      // If not IJK slicing, get the IJK slice from the XYZ position/slice\n      nSlice = publicAPI.getSliceAtPosition(slice);\n    }\n    switch (ijkMode) {\n      case SlicingMode.I:\n        extent[0] = nSlice - thickness;\n        extent[1] = nSlice + thickness;\n        break;\n      case SlicingMode.J:\n        extent[2] = nSlice - thickness;\n        extent[3] = nSlice + thickness;\n        break;\n      case SlicingMode.K:\n        extent[4] = nSlice - thickness;\n        extent[5] = nSlice + thickness;\n        break;\n      default:\n        break;\n    }\n    return image.extentToBounds(extent);\n  };\n\n  publicAPI.getIsOpaque = () => true;\n\n  function doPicking(p1, p2) {\n    const imageData = publicAPI.getInputData();\n    const extent = imageData.getExtent();\n\n    // Slice origin\n    const ijk = [extent[0], extent[2], extent[4]];\n    const { ijkMode } = publicAPI.getClosestIJKAxis();\n    let nSlice = model.slice;\n    if (ijkMode !== model.slicingMode) {\n      // If not IJK slicing, get the IJK slice from the XYZ position/slice\n      nSlice = publicAPI.getSliceAtPosition(nSlice);\n    }\n    ijk[ijkMode] += nSlice;\n    const worldOrigin = [0, 0, 0];\n    imageData.indexToWorld(ijk, worldOrigin);\n\n    // Normal computation\n    ijk[ijkMode] += 1;\n    const worldNormal = [0, 0, 0];\n    imageData.indexToWorld(ijk, worldNormal);\n    worldNormal[0] -= worldOrigin[0];\n    worldNormal[1] -= worldOrigin[1];\n    worldNormal[2] -= worldOrigin[2];\n    vec3.normalize(worldNormal, worldNormal);\n\n    const intersect = vtkPlane.intersectWithLine(\n      p1,\n      p2,\n      worldOrigin,\n      worldNormal\n    );\n    if (intersect.intersection) {\n      const point = intersect.x;\n      const absoluteIJK = [0, 0, 0];\n      imageData.worldToIndex(point, absoluteIJK);\n      // `t` is the parametric position along the line\n      // defined in Plane.intersectWithLine\n      return {\n        t: intersect.t,\n        absoluteIJK,\n      };\n    }\n    return null;\n  }\n\n  publicAPI.intersectWithLineForPointPicking = (p1, p2) => {\n    const pickingData = doPicking(p1, p2);\n    if (pickingData) {\n      const imageData = publicAPI.getInputData();\n      const extent = imageData.getExtent();\n\n      // Get closer integer ijk\n      // NB: point picking means closest slice, means rounding\n      const ijk = [\n        Math.round(pickingData.absoluteIJK[0]),\n        Math.round(pickingData.absoluteIJK[1]),\n        Math.round(pickingData.absoluteIJK[2]),\n      ];\n\n      // Are we outside our actual extent\n      if (\n        ijk[0] < extent[0] ||\n        ijk[0] > extent[1] ||\n        ijk[1] < extent[2] ||\n        ijk[1] > extent[3] ||\n        ijk[2] < extent[4] ||\n        ijk[2] > extent[5]\n      ) {\n        return null;\n      }\n\n      return {\n        t: pickingData.t,\n        ijk,\n      };\n    }\n    return null;\n  };\n\n  publicAPI.intersectWithLineForCellPicking = (p1, p2) => {\n    const pickingData = doPicking(p1, p2);\n    if (pickingData) {\n      const imageData = publicAPI.getInputData();\n      const extent = imageData.getExtent();\n      const absIJK = pickingData.absoluteIJK;\n\n      // Get closer integer ijk\n      // NB: cell picking means closest voxel, means flooring\n      const ijk = [\n        Math.floor(absIJK[0]),\n        Math.floor(absIJK[1]),\n        Math.floor(absIJK[2]),\n      ];\n\n      // Are we outside our actual extent\n      if (\n        ijk[0] < extent[0] ||\n        ijk[0] > extent[1] - 1 ||\n        ijk[1] < extent[2] ||\n        ijk[1] > extent[3] - 1 ||\n        ijk[2] < extent[4] ||\n        ijk[2] > extent[5] - 1\n      ) {\n        return null;\n      }\n\n      // Parametric coordinates within cell\n      const pCoords = [\n        absIJK[0] - ijk[0],\n        absIJK[1] - ijk[1],\n        absIJK[2] - ijk[2],\n      ];\n\n      return {\n        t: pickingData.t,\n        ijk,\n        pCoords,\n      };\n    }\n    return null;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  displayExtent: [0, 0, 0, 0, 0, 0],\n  customDisplayExtent: [0, 0, 0, 0],\n  useCustomExtents: false,\n  slice: 0,\n  slicingMode: SlicingMode.NONE,\n  closestIJKAxis: { ijkMode: SlicingMode.NONE, flip: false },\n  renderToRectangle: false,\n  sliceAtFocalPoint: false,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  vtkAbstractMapper.extend(publicAPI, model, initialValues);\n\n  macro.get(publicAPI, model, ['slicingMode']);\n  macro.setGet(publicAPI, model, [\n    'slice',\n    'closestIJKAxis',\n    'useCustomExtents',\n    'renderToRectangle',\n    'sliceAtFocalPoint',\n  ]);\n  macro.setGetArray(publicAPI, model, ['customDisplayExtent'], 4);\n\n  // Object methods\n  vtkImageMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkImageMapper');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend }, Constants);\n","import macro from 'vtk.js/Sources/macro';\nimport Constants from 'vtk.js/Sources/Rendering/Core/ImageProperty/Constants';\n\nconst { InterpolationType } = Constants;\n\n// ----------------------------------------------------------------------------\n// vtkImageProperty methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageProperty(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageProperty');\n\n  publicAPI.setInterpolationTypeToNearest = () => {\n    publicAPI.setInterpolationType(InterpolationType.NEAREST);\n  };\n\n  publicAPI.setInterpolationTypeToLinear = () => {\n    publicAPI.setInterpolationType(InterpolationType.LINEAR);\n  };\n\n  publicAPI.getInterpolationTypeAsString = () =>\n    macro.enumToString(InterpolationType, model.interpolationType);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\nconst DEFAULT_VALUES = {\n  interpolationType: InterpolationType.LINEAR,\n  colorWindow: 255,\n  colorLevel: 127.5,\n  ambient: 1.0,\n  diffuse: 0.0,\n  opacity: 1.0,\n  rGBTransferFunction: null,\n  scalarOpacity: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n\n  macro.setGet(publicAPI, model, [\n    'interpolationType',\n    'colorWindow',\n    'colorLevel',\n    'ambient',\n    'diffuse',\n    'opacity',\n    'rGBTransferFunction',\n    'scalarOpacity',\n  ]);\n\n  publicAPI.getMTime = () => {\n    let mTime = model.mtime;\n    if (model.rGBTransferFunction) {\n      const time = model.rGBTransferFunction.getMTime();\n      mTime = time > mTime ? time : mTime;\n    }\n\n    return mTime;\n  };\n\n  // Object methods\n  vtkImageProperty(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkImageProperty');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import { vec3, mat4 } from 'gl-matrix';\nimport macro from 'vtk.js/Sources/macro';\nimport vtkProp3D from 'vtk.js/Sources/Rendering/Core/Prop3D';\nimport vtkImageProperty from 'vtk.js/Sources/Rendering/Core/ImageProperty';\n\nconst { vtkDebugMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// vtkImageSlice methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageSlice(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageSlice');\n\n  publicAPI.getActors = () => publicAPI;\n  publicAPI.getImages = () => publicAPI;\n\n  publicAPI.getIsOpaque = () => {\n    if (model.forceOpaque) {\n      return true;\n    }\n    if (model.forceTranslucent) {\n      return false;\n    }\n    // make sure we have a property\n    if (!model.property) {\n      // force creation of a property\n      publicAPI.getProperty();\n    }\n\n    let isOpaque = model.property.getOpacity() >= 1.0;\n\n    // are we using an opaque scalar array, if any?\n    isOpaque = isOpaque && (!model.mapper || model.mapper.getIsOpaque());\n\n    return isOpaque;\n  };\n\n  // Always render during opaque pass, to keep the behavior\n  // predictable and because depth-peeling kills alpha-blending.\n  // In the future, the Renderer should render images in layers,\n  // i.e. where each image will have a layer number assigned to it,\n  // and the Renderer will do the images in their own pass.\n  publicAPI.hasTranslucentPolygonalGeometry = () => false;\n\n  publicAPI.makeProperty = vtkImageProperty.newInstance;\n\n  publicAPI.getProperty = () => {\n    if (model.property === null) {\n      model.property = publicAPI.makeProperty();\n    }\n    return model.property;\n  };\n\n  publicAPI.getBounds = () => {\n    if (model.mapper === null) {\n      return model.bounds;\n    }\n\n    // Check for the special case when the mapper's bounds are unknown\n    const bds = model.mapper.getBounds();\n    if (!bds || bds.length !== 6) {\n      return bds;\n    }\n\n    // Check for the special case when the actor is empty.\n    if (bds[0] > bds[1]) {\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n      model.bounds = [1, -1, 1, -1, 1, -1];\n      model.boundsMTime.modified();\n      return bds;\n    }\n\n    // Check if we have cached values for these bounds - we cache the\n    // values returned by model.mapper.getBounds() and we store the time\n    // of caching. If the values returned this time are different, or\n    // the modified time of this class is newer than the cached time,\n    // then we need to rebuild.\n    const zip = (rows) => rows[0].map((_, c) => rows.map((row) => row[c]));\n    if (\n      !model.mapperBounds ||\n      !zip([bds, model.mapperBounds]).reduce(\n        (a, b) => a && b[0] === b[1],\n        true\n      ) ||\n      publicAPI.getMTime() > model.boundsMTime.getMTime()\n    ) {\n      vtkDebugMacro('Recomputing bounds...');\n      model.mapperBounds = bds.map((x) => x);\n      const bbox = [\n        vec3.fromValues(bds[1], bds[3], bds[5]),\n        vec3.fromValues(bds[1], bds[2], bds[5]),\n        vec3.fromValues(bds[0], bds[2], bds[5]),\n        vec3.fromValues(bds[0], bds[3], bds[5]),\n        vec3.fromValues(bds[1], bds[3], bds[4]),\n        vec3.fromValues(bds[1], bds[2], bds[4]),\n        vec3.fromValues(bds[0], bds[2], bds[4]),\n        vec3.fromValues(bds[0], bds[3], bds[4]),\n      ];\n\n      publicAPI.computeMatrix();\n      const tmp4 = mat4.create();\n      mat4.transpose(tmp4, model.matrix);\n      bbox.forEach((pt) => vec3.transformMat4(pt, pt, tmp4));\n\n      /* eslint-disable no-multi-assign */\n      model.bounds[0] = model.bounds[2] = model.bounds[4] = Number.MAX_VALUE;\n      model.bounds[1] = model.bounds[3] = model.bounds[5] = -Number.MAX_VALUE;\n      /* eslint-enable no-multi-assign */\n      model.bounds = model.bounds.map(\n        (d, i) =>\n          i % 2 === 0\n            ? bbox.reduce((a, b) => (a > b[i / 2] ? b[i / 2] : a), d)\n            : bbox.reduce(\n                (a, b) => (a < b[(i - 1) / 2] ? b[(i - 1) / 2] : a),\n                d\n              )\n      );\n      model.boundsMTime.modified();\n    }\n    return model.bounds;\n  };\n\n  publicAPI.getBoundsForSlice = (slice, thickness = 0) => {\n    // Check for the special case when the mapper's bounds are unknown\n    const bds = model.mapper.getBoundsForSlice(slice, thickness);\n    if (!bds || bds.length !== 6) {\n      return bds;\n    }\n\n    // Check for the special case when the actor is empty.\n    if (bds[0] > bds[1]) {\n      return bds;\n    }\n\n    const bbox = [\n      vec3.fromValues(bds[1], bds[3], bds[5]),\n      vec3.fromValues(bds[1], bds[2], bds[5]),\n      vec3.fromValues(bds[0], bds[2], bds[5]),\n      vec3.fromValues(bds[0], bds[3], bds[5]),\n      vec3.fromValues(bds[1], bds[3], bds[4]),\n      vec3.fromValues(bds[1], bds[2], bds[4]),\n      vec3.fromValues(bds[0], bds[2], bds[4]),\n      vec3.fromValues(bds[0], bds[3], bds[4]),\n    ];\n\n    publicAPI.computeMatrix();\n    const tmp4 = mat4.create();\n    mat4.transpose(tmp4, model.matrix);\n    bbox.forEach((pt) => vec3.transformMat4(pt, pt, tmp4));\n\n    let newBounds = [\n      Number.MAX_VALUE,\n      -Number.MAX_VALUE,\n      Number.MAX_VALUE,\n      -Number.MAX_VALUE,\n      Number.MAX_VALUE,\n      -Number.MAX_VALUE,\n    ];\n    newBounds = newBounds.map(\n      (d, i) =>\n        i % 2 === 0\n          ? bbox.reduce((a, b) => (a > b[i / 2] ? b[i / 2] : a), d)\n          : bbox.reduce((a, b) => (a < b[(i - 1) / 2] ? b[(i - 1) / 2] : a), d)\n    );\n    return newBounds;\n  };\n\n  //----------------------------------------------------------------------------\n  // Get the minimum X bound\n  publicAPI.getMinXBound = () => {\n    publicAPI.getBounds();\n    return model.bounds[0];\n  };\n\n  // Get the maximum X bound\n  publicAPI.getMaxXBound = () => {\n    publicAPI.getBounds();\n    return model.bounds[1];\n  };\n\n  // Get the minimum Y bound\n  publicAPI.getMinYBound = () => {\n    publicAPI.getBounds();\n    return model.bounds[2];\n  };\n\n  // Get the maximum Y bound\n  publicAPI.getMaxYBound = () => {\n    publicAPI.getBounds();\n    return model.bounds[3];\n  };\n\n  // Get the minimum Z bound\n  publicAPI.getMinZBound = () => {\n    publicAPI.getBounds();\n    return model.bounds[4];\n  };\n\n  // Get the maximum Z bound\n  publicAPI.getMaxZBound = () => {\n    publicAPI.getBounds();\n    return model.bounds[5];\n  };\n\n  publicAPI.getMTime = () => {\n    let mt = model.mtime;\n    if (model.property !== null) {\n      const time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n    }\n\n    return mt;\n  };\n\n  publicAPI.getRedrawMTime = () => {\n    let mt = model.mtime;\n    if (model.mapper !== null) {\n      let time = model.mapper.getMTime();\n      mt = time > mt ? time : mt;\n      if (model.mapper.getInput() !== null) {\n        // FIXME !!! getInputAlgorithm / getInput\n        model.mapper.getInputAlgorithm().update();\n        time = model.mapper.getInput().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n    if (model.property !== null) {\n      let time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n      if (model.property.getRGBTransferFunction() !== null) {\n        time = model.property.getRGBTransferFunction().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n    return mt;\n  };\n\n  publicAPI.getSupportsSelection = () =>\n    model.mapper ? model.mapper.getSupportsSelection() : false;\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  mapper: null,\n  property: null,\n\n  bounds: [1, -1, 1, -1, 1, -1],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkProp3D.extend(publicAPI, model, initialValues);\n\n  // vtkTimeStamp\n  model.boundsMTime = {};\n  macro.obj(model.boundsMTime);\n\n  // Build VTK API\n  macro.set(publicAPI, model, ['property']);\n  macro.setGet(publicAPI, model, ['mapper']);\n  macro.getArray(publicAPI, model, ['bounds'], 6);\n\n  // Object methods\n  vtkImageSlice(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkImageSlice');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import macro from 'vtk.js/Sources/macro';\nimport vtkInteractorStyleTrackballCamera from 'vtk.js/Sources/Interaction/Style/InteractorStyleTrackballCamera';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport { States } from 'vtk.js/Sources/Rendering/Core/InteractorStyle/Constants';\n\n// ----------------------------------------------------------------------------\n// vtkInteractorStyleImage methods\n// ----------------------------------------------------------------------------\n\nfunction vtkInteractorStyleImage(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkInteractorStyleImage');\n\n  // Public API methods\n  publicAPI.superHandleMouseMove = publicAPI.handleMouseMove;\n  publicAPI.handleMouseMove = (callData) => {\n    const pos = callData.position;\n    const renderer = callData.pokedRenderer;\n\n    switch (model.state) {\n      case States.IS_WINDOW_LEVEL:\n        publicAPI.windowLevel(renderer, pos);\n        publicAPI.invokeInteractionEvent({ type: 'InteractionEvent' });\n        break;\n\n      case States.IS_SLICE:\n        publicAPI.slice(renderer, pos);\n        publicAPI.invokeInteractionEvent({ type: 'InteractionEvent' });\n        break;\n\n      default:\n        break;\n    }\n    publicAPI.superHandleMouseMove(callData);\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.superHandleLeftButtonPress = publicAPI.handleLeftButtonPress;\n  publicAPI.handleLeftButtonPress = (callData) => {\n    const pos = callData.position;\n\n    if (!callData.shiftKey && !callData.controlKey) {\n      model.windowLevelStartPosition[0] = pos.x;\n      model.windowLevelStartPosition[1] = pos.y;\n      // Get the last (the topmost) image\n      publicAPI.setCurrentImageNumber(model.currentImageNumber);\n      const property = model.currentImageProperty;\n      if (property) {\n        model.windowLevelInitial[0] = property.getColorWindow();\n        model.windowLevelInitial[1] = property.getColorLevel();\n      }\n      publicAPI.startWindowLevel();\n    } else if (model.interactionMode === 'IMAGE3D' && callData.shiftKey) {\n      // If shift is held down, do a rotation\n      publicAPI.startRotate();\n    } else if (\n      model.interactionMode === 'IMAGE_SLICING' &&\n      callData.controlKey\n    ) {\n      // If ctrl is held down in slicing mode, slice the image\n      model.lastSlicePosition = pos.y;\n      publicAPI.startSlice();\n    } else {\n      // The rest of the button + key combinations remain the same\n      publicAPI.superHandleLeftButtonPress(callData);\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.superHandleLeftButtonRelease = publicAPI.handleLeftButtonRelease;\n  publicAPI.handleLeftButtonRelease = () => {\n    switch (model.state) {\n      case States.IS_WINDOW_LEVEL:\n        publicAPI.endWindowLevel();\n        break;\n\n      case States.IS_SLICE:\n        publicAPI.endSlice();\n        break;\n\n      default:\n        publicAPI.superHandleLeftButtonRelease();\n        break;\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleStartMouseWheel = (callData) => {\n    publicAPI.startSlice();\n    publicAPI.handleMouseWheel(callData);\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleEndMouseWheel = () => {\n    publicAPI.endSlice();\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.handleMouseWheel = (callData) => {\n    const camera = callData.pokedRenderer.getActiveCamera();\n\n    let distance = camera.getDistance();\n    distance += callData.spinY;\n\n    // clamp the distance to the clipping range\n    const range = camera.getClippingRange();\n    if (distance < range[0]) {\n      distance = range[0];\n    }\n    if (distance > range[1]) {\n      distance = range[1];\n    }\n    camera.setDistance(distance);\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.windowLevel = (renderer, position) => {\n    model.windowLevelCurrentPosition[0] = position.x;\n    model.windowLevelCurrentPosition[1] = position.y;\n    const rwi = model.interactor;\n\n    if (model.currentImageProperty) {\n      const size = rwi.getView().getViewportSize(renderer);\n\n      const mWindow = model.windowLevelInitial[0];\n      const level = model.windowLevelInitial[1];\n\n      // Compute normalized delta\n      let dx =\n        ((model.windowLevelCurrentPosition[0] -\n          model.windowLevelStartPosition[0]) *\n          4.0) /\n        size[0];\n      let dy =\n        ((model.windowLevelStartPosition[1] -\n          model.windowLevelCurrentPosition[1]) *\n          4.0) /\n        size[1];\n\n      // Scale by current values\n      if (Math.abs(mWindow) > 0.01) {\n        dx *= mWindow;\n      } else {\n        dx *= mWindow < 0 ? -0.01 : 0.01;\n      }\n      if (Math.abs(level) > 0.01) {\n        dy *= level;\n      } else {\n        dy *= level < 0 ? -0.01 : 0.01;\n      }\n\n      // Abs so that direction does not flip\n      if (mWindow < 0.0) {\n        dx *= -1;\n      }\n      if (level < 0.0) {\n        dy *= -1;\n      }\n\n      // Compute new mWindow level\n      let newWindow = dx + mWindow;\n      const newLevel = level - dy;\n\n      if (newWindow < 0.01) {\n        newWindow = 0.01;\n      }\n\n      model.currentImageProperty.setColorWindow(newWindow);\n      model.currentImageProperty.setColorLevel(newLevel);\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.slice = (renderer, position) => {\n    const rwi = model.interactor;\n\n    const dy = position.y - model.lastSlicePosition;\n\n    const camera = renderer.getActiveCamera();\n    const range = camera.getClippingRange();\n    let distance = camera.getDistance();\n\n    // scale the interaction by the height of the viewport\n    let viewportHeight = 0.0;\n    if (camera.getParallelProjection()) {\n      viewportHeight = camera.getParallelScale();\n    } else {\n      const angle = vtkMath.radiansFromDegrees(camera.getViewAngle());\n      viewportHeight = 2.0 * distance * Math.tan(0.5 * angle);\n    }\n\n    const size = rwi.getView().getViewportSize(renderer);\n    const delta = (dy * viewportHeight) / size[1];\n    distance += delta;\n\n    // clamp the distance to the clipping range\n    if (distance < range[0]) {\n      distance = range[0] + viewportHeight * 1e-3;\n    }\n    if (distance > range[1]) {\n      distance = range[1] - viewportHeight * 1e-3;\n    }\n    camera.setDistance(distance);\n\n    model.lastSlicePosition = position.y;\n  };\n\n  //----------------------------------------------------------------------------\n  // This is a way of dealing with images as if they were layers.\n  // It looks through the renderer's list of props and sets the\n  // interactor ivars from the Nth image that it finds.  You can\n  // also use negative numbers, i.e. -1 will return the last image,\n  // -2 will return the second-to-last image, etc.\n  publicAPI.setCurrentImageNumber = (i) => {\n    if (i === null) {\n      return;\n    }\n\n    const renderer = model.interactor.getCurrentRenderer();\n    if (!renderer) {\n      return;\n    }\n    model.currentImageNumber = i;\n\n    function propMatch(j, prop, targetIndex) {\n      if (\n        prop.isA('vtkImageSlice') &&\n        j === targetIndex &&\n        prop.getPickable()\n      ) {\n        return true;\n      }\n      return false;\n    }\n\n    const props = renderer.getViewProps();\n    let targetIndex = i;\n    if (i < 0) {\n      targetIndex += props.length;\n    }\n    let imageProp = null;\n    let foundImageProp = false;\n    for (let j = 0; j < props.length && !foundImageProp; j++) {\n      if (propMatch(j, props[j], targetIndex)) {\n        foundImageProp = true;\n        imageProp = props[j];\n      }\n    }\n\n    if (imageProp) {\n      publicAPI.setCurrentImageProperty(imageProp.getProperty());\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.setCurrentImageProperty = (imageProperty) => {\n    model.currentImageProperty = imageProperty;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  windowLevelStartPosition: [0, 0],\n  windowLevelCurrentPosition: [0, 0],\n  lastSlicePosition: 0,\n  windowLevelInitial: [1.0, 0.5],\n  currentImageProperty: 0,\n  currentImageNumber: -1,\n  interactionMode: 'IMAGE2D',\n  xViewRightVector: [0, 1, 0],\n  xViewUpVector: [0, 0, -1],\n  yViewRightVector: [1, 0, 0],\n  yViewUpVector: [0, 0, -1],\n  zViewRightVector: [1, 0, 0],\n  zViewUpVector: [0, 1, 0],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkInteractorStyleTrackballCamera.extend(publicAPI, model, initialValues);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['interactionMode']);\n\n  // For more macro methods, see \"Sources/macro.js\"\n\n  // Object specific methods\n  vtkInteractorStyleImage(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkInteractorStyleImage');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend });\n","export function getEndianness() {\n  const a = new ArrayBuffer(4);\n  const b = new Uint8Array(a);\n  const c = new Uint32Array(a);\n  b[0] = 0xa1;\n  b[1] = 0xb2;\n  b[2] = 0xc3;\n  b[3] = 0xd4;\n  if (c[0] === 0xd4c3b2a1) return 'LittleEndian';\n  if (c[0] === 0xa1b2c3d4) return 'BigEndian';\n  return null;\n}\n\nexport const ENDIANNESS = getEndianness();\n\nexport function swapBytes(buffer, wordSize) {\n  if (wordSize < 2) {\n    return;\n  }\n\n  const bytes = new Int8Array(buffer);\n  const size = bytes.length;\n  const tempBuffer = [];\n\n  for (let i = 0; i < size; i += wordSize) {\n    for (let j = 0; j < wordSize; j++) {\n      tempBuffer.push(bytes[i + j]);\n    }\n    for (let j = 0; j < wordSize; j++) {\n      bytes[i + j] = tempBuffer.pop();\n    }\n  }\n}\n\nexport default {\n  ENDIANNESS,\n  getEndianness,\n  swapBytes,\n};\n","import pako from 'pako';\n\nimport macro from 'vtk.js/Sources/macro';\nimport Endian from 'vtk.js/Sources/Common/Core/Endian';\nimport { DataTypeByteSize } from 'vtk.js/Sources/Common/Core/DataArray/Constants';\n\nconst { vtkErrorMacro, vtkDebugMacro } = macro;\n\n/* eslint-disable prefer-promise-reject-errors */\n\nlet requestCount = 0;\n\nfunction fetchBinary(url, options = {}) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n\n    xhr.onreadystatechange = (e) => {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200 || xhr.status === 0) {\n          resolve(xhr.response);\n        } else {\n          reject({ xhr, e });\n        }\n      }\n    };\n\n    if (options && options.progressCallback) {\n      xhr.addEventListener('progress', options.progressCallback);\n    }\n\n    // Make request\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.send();\n  });\n}\n\nfunction fetchArray(instance = {}, baseURL, array, options = {}) {\n  if (array.ref && !array.ref.pending) {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      const url = [\n        baseURL,\n        array.ref.basepath,\n        options.compression ? `${array.ref.id}.gz` : array.ref.id,\n      ].join('/');\n\n      xhr.onreadystatechange = (e) => {\n        if (xhr.readyState === 1) {\n          array.ref.pending = true;\n          if (++requestCount === 1 && instance.invokeBusy) {\n            instance.invokeBusy(true);\n          }\n        }\n        if (xhr.readyState === 4) {\n          array.ref.pending = false;\n          if (xhr.status === 200 || xhr.status === 0) {\n            array.buffer = xhr.response;\n\n            if (options.compression) {\n              if (array.dataType === 'string' || array.dataType === 'JSON') {\n                array.buffer = pako.inflate(new Uint8Array(array.buffer), {\n                  to: 'string',\n                });\n              } else {\n                array.buffer = pako.inflate(\n                  new Uint8Array(array.buffer)\n                ).buffer;\n              }\n            }\n\n            if (array.ref.encode === 'JSON') {\n              array.values = JSON.parse(array.buffer);\n            } else {\n              if (Endian.ENDIANNESS !== array.ref.encode && Endian.ENDIANNESS) {\n                // Need to swap bytes\n                vtkDebugMacro(`Swap bytes of ${array.name}`);\n                Endian.swapBytes(\n                  array.buffer,\n                  DataTypeByteSize[array.dataType]\n                );\n              }\n\n              array.values = new window[array.dataType](array.buffer);\n            }\n\n            if (array.values.length !== array.size) {\n              vtkErrorMacro(\n                `Error in FetchArray: ${\n                  array.name\n                }, does not have the proper array size. Got ${\n                  array.values.length\n                }, instead of ${array.size}`\n              );\n            }\n\n            // Done with the ref and work\n            delete array.ref;\n            if (--requestCount === 0 && instance.invokeBusy) {\n              instance.invokeBusy(false);\n            }\n            if (instance.modified) {\n              instance.modified();\n            }\n            resolve(array);\n          } else {\n            reject({ xhr, e });\n          }\n        }\n      };\n\n      if (options && options.progressCallback) {\n        xhr.addEventListener('progress', options.progressCallback);\n      }\n\n      // Make request\n      xhr.open('GET', url, true);\n      xhr.responseType =\n        options.compression || array.dataType !== 'string'\n          ? 'arraybuffer'\n          : 'text';\n      xhr.send();\n    });\n  }\n\n  return Promise.resolve(array);\n}\n\n// ----------------------------------------------------------------------------\n\nfunction fetchJSON(instance = {}, url, options = {}) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n\n    xhr.onreadystatechange = (e) => {\n      if (xhr.readyState === 1) {\n        if (++requestCount === 1 && instance.invokeBusy) {\n          instance.invokeBusy(true);\n        }\n      }\n      if (xhr.readyState === 4) {\n        if (--requestCount === 0 && instance.invokeBusy) {\n          instance.invokeBusy(false);\n        }\n        if (xhr.status === 200 || xhr.status === 0) {\n          if (options.compression) {\n            resolve(\n              JSON.parse(\n                pako.inflate(new Uint8Array(xhr.response), { to: 'string' })\n              )\n            );\n          } else {\n            resolve(JSON.parse(xhr.responseText));\n          }\n        } else {\n          reject({ xhr, e });\n        }\n      }\n    };\n\n    if (options && options.progressCallback) {\n      xhr.addEventListener('progress', options.progressCallback);\n    }\n\n    // Make request\n    xhr.open('GET', url, true);\n    xhr.responseType = options.compression ? 'arraybuffer' : 'text';\n    xhr.send();\n  });\n}\n\n// ----------------------------------------------------------------------------\n\nfunction fetchText(instance = {}, url, options = {}) {\n  if (options && options.compression && options.compression !== 'gz') {\n    vtkErrorMacro('Supported algorithms are: [gz]');\n    vtkErrorMacro(`Unkown compression algorithm: ${options.compression}`);\n  }\n\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n\n    xhr.onreadystatechange = (e) => {\n      if (xhr.readyState === 1) {\n        if (++requestCount === 1 && instance.invokeBusy) {\n          instance.invokeBusy(true);\n        }\n      }\n      if (xhr.readyState === 4) {\n        if (--requestCount === 0 && instance.invokeBusy) {\n          instance.invokeBusy(false);\n        }\n        if (xhr.status === 200 || xhr.status === 0) {\n          if (options.compression) {\n            resolve(\n              pako.inflate(new Uint8Array(xhr.response), { to: 'string' })\n            );\n          } else {\n            resolve(xhr.responseText);\n          }\n        } else {\n          reject({ xhr, e });\n        }\n      }\n    };\n\n    if (options.progressCallback) {\n      xhr.addEventListener('progress', options.progressCallback);\n    }\n\n    // Make request\n    xhr.open('GET', url, true);\n    xhr.responseType = options.compression ? 'arraybuffer' : 'text';\n    xhr.send();\n  });\n}\n\n// ----------------------------------------------------------------------------\n\nexport default {\n  fetchArray,\n  fetchJSON,\n  fetchText,\n  fetchBinary, // Only for HTTP\n};\n\n/* eslint-enable prefer-promise-reject-errors */\n","import macro from 'vtk.js/Sources/macro';\nimport ITKHelper from 'vtk.js/Sources/Common/DataModel/ITKHelper';\n\nconst { convertItkToVtkImage } = ITKHelper;\nlet readImageArrayBuffer = null;\nlet resultPreprocessor = (result) => result;\n\nfunction getArrayName(filename) {\n  const idx = filename.lastIndexOf('.');\n  const name = idx > -1 ? filename.substring(0, idx) : filename;\n  return `Scalars ${name}`;\n}\n\nfunction setReadImageArrayBufferFromITK(fn) {\n  readImageArrayBuffer = fn;\n\n  // itk.js 9.0.0 introduced breaking changes, which can be detected\n  // by an updated function signature.\n  if (readImageArrayBuffer.length === 4) {\n    // first arg is a webworker if reuse is desired.\n    readImageArrayBuffer = (...args) => fn(null, ...args);\n\n    // an object is now passed out which includes a webworker which we\n    // should terminate\n    resultPreprocessor = ({ webWorker, image }) => {\n      webWorker.terminate();\n      return image;\n    };\n  }\n}\n\n// ----------------------------------------------------------------------------\n// vtkITKImageReader methods\n// ----------------------------------------------------------------------------\n\nfunction vtkITKImageReader(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkITKImageReader');\n\n  // Returns a promise to signal when image is ready\n  publicAPI.parseAsArrayBuffer = (arrayBuffer) => {\n    if (!arrayBuffer || arrayBuffer === model.rawDataBuffer) {\n      return Promise.resolve();\n    }\n\n    model.rawDataBuffer = arrayBuffer;\n\n    return readImageArrayBuffer(arrayBuffer, model.fileName)\n      .then(resultPreprocessor)\n      .then((itkImage) => {\n        const imageData = convertItkToVtkImage(itkImage, {\n          scalarArrayName: model.arrayName || getArrayName(model.fileName),\n        });\n        model.output[0] = imageData;\n\n        publicAPI.modified();\n      });\n  };\n\n  publicAPI.requestData = (inData, outData) => {\n    publicAPI.parseAsArrayBuffer(model.rawDataBuffer, model.fileName);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  fileName: '',\n  // If null/undefined a unique array will be generated\n  arrayName: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.algo(publicAPI, model, 0, 1);\n  macro.setGet(publicAPI, model, ['fileName', 'arrayName']);\n\n  // vtkITKImageReader methods\n  vtkITKImageReader(publicAPI, model);\n\n  // Check that ITK function has been injected\n  if (!readImageArrayBuffer) {\n    console.error(`\n      // Dependency needs to be added inside your project\n      import readImageArrayBuffer from 'itk/readImageArrayBuffer';\n      vtkITKImageReader.setReadImageArrayBufferFromITK(readImageArrayBuffer);\n      `);\n  }\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkITKImageReader');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend, setReadImageArrayBufferFromITK };\n","import { render } from \"./DetectObjects.vue?vue&type=template&id=ea19b4c0&scoped=true\"\nimport script from \"./DetectObjects.vue?vue&type=script&lang=js\"\nexport * from \"./DetectObjects.vue?vue&type=script&lang=js\"\n\nimport \"./DetectObjects.vue?vue&type=style&index=0&id=ea19b4c0&lang=less&scoped=true\"\n\nimport exportComponent from \"E:\\\\Git\\\\local\\\\OurProject\\\\frontend\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ea19b4c0\"]])\n\nexport default __exports__"],"names":["module","exports","$","safeAdd","x","y","lsw","msw","bitRotateLeft","num","cnt","md5cmn","q","a","b","s","t","md5ff","c","d","md5gg","md5hh","md5ii","binlMD5","len","i","olda","oldb","oldc","oldd","length","binl2rstr","input","output","length32","String","fromCharCode","rstr2binl","undefined","length8","charCodeAt","rstrMD5","rstrHMACMD5","key","data","hash","bkey","ipad","opad","concat","rstr2hex","hexTab","charAt","str2rstrUTF8","unescape","encodeURIComponent","rawMD5","hexMD5","rawHMACMD5","k","hexHMACMD5","md5","string","raw","define","require","utils","settle","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","config","Promise","resolve","reject","requestData","requestHeaders","headers","isFormData","request","XMLHttpRequest","auth","username","password","Authorization","btoa","fullPath","baseURL","url","open","method","toUpperCase","params","paramsSerializer","timeout","onreadystatechange","readyState","status","responseURL","indexOf","responseHeaders","getAllResponseHeaders","responseData","responseType","response","responseText","statusText","onabort","onerror","ontimeout","timeoutErrorMessage","isStandardBrowserEnv","cookies","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","forEach","val","toLowerCase","setRequestHeader","isUndefined","e","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","cancel","abort","send","bind","Axios","mergeConfig","defaults","createInstance","defaultConfig","context","instance","prototype","extend","axios","create","instanceConfig","Cancel","CancelToken","isCancel","all","promises","spread","message","this","toString","__CANCEL__","executor","TypeError","resolvePromise","token","reason","throwIfRequested","source","value","InterceptorManager","dispatchRequest","interceptors","arguments","chain","interceptor","unshift","fulfilled","rejected","push","shift","getUri","replace","merge","handlers","use","eject","id","fn","h","isAbsoluteURL","combineURLs","requestedURL","enhanceError","code","error","Error","transformData","throwIfCancellationRequested","transformRequest","common","adapter","transformResponse","isAxiosError","toJSON","name","description","number","fileName","lineNumber","columnNumber","stack","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","prop","isObject","deepMerge","axiosKeys","otherKeys","Object","keys","filter","validateStatus","fns","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","getDefaultAdapter","process","call","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","JSON","stringify","parse","maxContentLength","thisArg","args","Array","apply","encode","serializedParams","parts","isArray","v","isDate","toISOString","join","hashmarkIndex","slice","relativeURL","write","expires","path","domain","secure","cookie","isNumber","Date","toGMTString","isString","document","match","RegExp","decodeURIComponent","remove","now","test","originURL","msie","navigator","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","search","hostname","port","pathname","window","location","requestURL","parsed","normalizedName","ignoreDuplicateOf","split","line","trim","substr","callback","arr","constructor","FormData","result","ArrayBuffer","isView","isFunction","pipe","URLSearchParams","str","product","obj","l","hasOwnProperty","assignValue","TinyEmitter","MESSAGE_RESULT","MESSAGE_EVENT","RESULT_SUCCESS","Worker","worker","super","_messageId","_messages","Map","_worker","onmessage","_onMessage","_id","Math","ceil","random","terminate","isFree","size","jobsLength","exec","operationName","transferable","onEvent","res","rej","messageId","set","postMessage","emit","eventName","type","_onEvent","_onResult","success","payload","get","delete","defineProperty","enumerable","writable","__listeners","handler","once","off","on","readAs","file","as","Blob","reader","FileReader","onload","target","readAsDataURL","readAsText","readAsArrayBuffer","assign","deflate","inflate","constants","pako","zlib_deflate","strings","msg","ZStream","Z_NO_FLUSH","Z_FINISH","Z_OK","Z_STREAM_END","Z_SYNC_FLUSH","Z_DEFAULT_COMPRESSION","Z_DEFAULT_STRATEGY","Z_DEFLATED","Deflate","options","level","chunkSize","windowBits","memLevel","strategy","to","opt","gzip","err","ended","chunks","strm","avail_out","deflateInit2","header","deflateSetHeader","dictionary","dict","string2buf","Uint8Array","deflateSetDictionary","_dict_set","deflator","deflateRaw","mode","_mode","next_in","avail_in","Buf8","next_out","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","chunk","flattenChunks","zlib_inflate","GZheader","Inflate","inflateInit2","inflateGetHeader","inflator","inflateRaw","next_out_utf8","tail","utf8str","allowBufError","binstring2buf","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","utf8border","buf2string","arraySet","inflateEnd","ungzip","TYPED_OK","Uint16Array","Int32Array","_has","sources","p","buf","subarray","fnTyped","dest","src","src_offs","dest_offs","pos","fnUntyped","setTyped","Buf16","Buf32","STR_APPLY_OK","STR_APPLY_UIA_OK","__","_utf8len","c2","m_pos","str_len","buf_len","max","out","c_len","utf16buf","adler32","adler","s1","s2","n","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_BINARY","Z_TEXT","Z_UNKNOWN","makeTable","table","crcTable","crc32","crc","end","configuration_table","trees","MAX_MEM_LEVEL","MAX_WBITS","DEF_MEM_LEVEL","LENGTH_CODES","LITERALS","L_CODES","D_CODES","BL_CODES","HEAP_SIZE","MAX_BITS","MIN_MATCH","MAX_MATCH","MIN_LOOKAHEAD","PRESET_DICT","INIT_STATE","EXTRA_STATE","NAME_STATE","COMMENT_STATE","HCRC_STATE","BUSY_STATE","FINISH_STATE","BS_NEED_MORE","BS_BLOCK_DONE","BS_FINISH_STARTED","BS_FINISH_DONE","OS_CODE","errorCode","rank","f","zero","flush_pending","state","pending","pending_buf","pending_out","total_out","flush_block_only","last","_tr_flush_block","block_start","strstart","put_byte","putShortMSB","read_buf","start","wrap","total_in","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","limit","w_size","_win","wmask","w_mask","prev","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","m","more","_w_size","window_size","hash_size","head","insert","ins_h","hash_shift","hash_mask","deflate_stored","flush","max_block_size","pending_buf_size","max_start","deflate_fast","hash_head","bflush","match_length","_tr_tally","max_lazy_match","last_lit","deflate_slow","max_insert","prev_match","match_available","deflate_rle","deflate_huff","Config","good_length","max_lazy","nice_length","max_chain","func","lm_init","DeflateState","gzhead","gzindex","last_flush","w_bits","hash_bits","dyn_ltree","dyn_dtree","bl_tree","l_desc","d_desc","bl_desc","bl_count","heap","heap_len","heap_max","depth","l_buf","lit_bufsize","d_buf","opt_len","static_len","matches","bi_buf","bi_valid","deflateResetKeep","data_type","_tr_init","deflateReset","ret","deflateInit","old_flush","beg","text","hcrc","extra","comment","time","os","level_flags","bstate","_tr_align","_tr_stored_block","avail","next","tmpDict","dictLength","deflateInfo","xflags","extra_len","done","BAD","TYPE","_in","_out","dmax","wsize","whave","wnext","s_window","hold","bits","lcode","dcode","lmask","dmask","here","op","dist","from","from_source","lencode","distcode","lenbits","distbits","top","dolen","dodist","sane","inflate_fast","inflate_table","CODES","LENS","DISTS","Z_MEM_ERROR","HEAD","FLAGS","TIME","OS","EXLEN","EXTRA","NAME","COMMENT","HCRC","DICTID","DICT","TYPEDO","STORED","COPY_","COPY","TABLE","LENLENS","CODELENS","LEN_","LEN","LENEXT","DIST","DISTEXT","MATCH","LIT","CHECK","LENGTH","DONE","MEM","SYNC","ENOUGH_LENS","ENOUGH_DISTS","DEF_WBITS","zswap32","InflateState","havedict","flags","check","total","wbits","offset","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","inflateResetKeep","inflateReset","inflateReset2","inflateInit","lenfix","distfix","virgin","fixedtables","sym","updatewindow","copy","put","left","here_bits","here_op","here_val","last_bits","last_op","last_val","opts","hbuf","order","inf_leave","dictid","inflateInfo","MAXBITS","lbase","lext","dbase","dext","lens_index","codes","table_index","incr","fill","low","mask","min","root","curr","drop","used","huff","base","base_index","count","offs","extra_index","STORED_BLOCK","STATIC_TREES","DYN_TREES","Buf_size","MAX_BL_BITS","END_BLOCK","REP_3_6","REPZ_3_10","REPZ_11_138","extra_lbits","extra_dbits","extra_blbits","bl_order","DIST_CODE_LEN","static_ltree","static_dtree","_dist_code","_length_code","base_length","static_l_desc","static_d_desc","static_bl_desc","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","TreeDesc","dyn_tree","stat_desc","max_code","d_code","put_short","w","send_bits","send_code","tree","bi_reverse","bi_flush","gen_bitlen","desc","xbits","stree","overflow","gen_codes","next_code","tr_static_init","init_block","bi_windup","copy_block","smaller","_n2","_m2","pqdownheap","j","compress_block","ltree","dtree","lc","lx","build_tree","node","scan_tree","curlen","prevlen","nextlen","max_count","min_count","send_tree","build_bl_tree","max_blindex","send_all_trees","lcodes","dcodes","blcodes","detect_data_type","black_mask","static_init_done","stored_len","opt_lenb","static_lenb","alea","xor128","xorwow","xorshift7","xor4096","tychei","sr","global","Alea","seed","me","mash","Mash","s0","impl","xg","prng","int32","double","quick","XorGen","strseed","floor","bot","z","init","X","pool","math","nodecrypto","width","digits","rngname","startdenom","pow","significance","seedrandom","entropy","shortseed","mixkey","flatten","tostring","autoseed","arc4","ARC4","g","S","pass","is_math_call","keylen","r","typ","smear","stringseed","randomBytes","crypto","msCrypto","getRandomValues","browser","plugins","screen","ex","factory","commonjsGlobal","self","unwrapExports","__esModule","createCommonjsModule","race","isMobile","copyArray","cardboardVrDisplay","classCallCheck","Constructor","createClass","defineProperties","props","descriptor","configurable","protoProps","staticProps","slicedToArray","sliceIterator","_arr","_n","_d","_e","_s","_i","Symbol","iterator","MIN_TIMESTEP","MAX_TIMESTEP","base64","mimeType","_base","lerp","isIOS","platform","isWebViewAndroid","isFirefoxAndroid","isSafari","getChromeVersion","parseInt","isChromeWithoutDeviceMotion","_match$1$split","_match$1$split2","branch","build","isR7","isLandscapeMode","rtn","orientation","isTimestampDeltaValid","timestampDeltaS","isNaN","getScreenWidth","height","devicePixelRatio","getScreenHeight","requestFullscreen","element","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","getFullscreenElement","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","linkProgram","gl","vertexSource","fragmentSource","attribLocationMap","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","program","createProgram","attribName","attachShader","bindAttribLocation","deleteShader","getProgramUniforms","uniforms","uniformCount","getProgramParameter","ACTIVE_UNIFORMS","uniformName","uniformInfo","getActiveUniform","getUniformLocation","orthoMatrix","right","bottom","near","far","lr","bt","nf","vendor","opera","safariCssSizeWorkaround","canvas","style","setTimeout","frameDataFromPose","piOver180","PI","rad45","mat4_perspectiveFromFieldOfView","fov","upTan","tan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","mat4_fromRotationTranslation","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","mat4_translate","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","mat4_invert","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","defaultOrientation","Float32Array","defaultPosition","updateEyeMatrices","projection","view","pose","vrDisplay","depthNear","depthFar","position","frameData","timestamp","leftProjectionMatrix","leftViewMatrix","_getFieldOfView","_getEyeOffset","rightProjectionMatrix","rightViewMatrix","isInsideCrossOriginIFrame","isFramed","refOrigin","getOriginFromUrl","referrer","thisOrigin","domainIdx","protoSepIdx","domainEndIdx","substring","getQuaternionAngle","quat","console","warn","angle","acos","warnOnce","observedWarnings","deprecateWarning","deprecated","suggested","alternative","WGLUPreserveGLState","bindings","boundValues","activeTexture","binding","TEXTURE_BINDING_2D","TEXTURE_BINDING_CUBE_MAP","textureUnit","TEXTURE0","TEXTURE31","getParameter","ACTIVE_TEXTURE","boundValue","ARRAY_BUFFER_BINDING","bindBuffer","ARRAY_BUFFER","COLOR_CLEAR_VALUE","clearColor","COLOR_WRITEMASK","colorMask","CURRENT_PROGRAM","useProgram","ELEMENT_ARRAY_BUFFER_BINDING","ELEMENT_ARRAY_BUFFER","FRAMEBUFFER_BINDING","bindFramebuffer","FRAMEBUFFER","RENDERBUFFER_BINDING","bindRenderbuffer","RENDERBUFFER","bindTexture","TEXTURE_2D","TEXTURE_CUBE_MAP","VIEWPORT","viewport","BLEND","CULL_FACE","DEPTH_TEST","SCISSOR_TEST","STENCIL_TEST","enable","disable","log","glPreserveState","distortionVS","distortionFS","CardboardDistorter","cardboardUI","bufferScale","dirtySubmitFrameBindings","ctxAttribs","getContextAttributes","meshWidth","meshHeight","bufferWidth","drawingBufferWidth","bufferHeight","drawingBufferHeight","realBindFramebuffer","realEnable","realDisable","realColorMask","realClearColor","realViewport","realCanvasWidth","getOwnPropertyDescriptor","__proto__","realCanvasHeight","isPatched","lastBoundFramebuffer","cullFace","depthTest","blend","scissorTest","stencilTest","attribs","texCoord","viewportOffsetScale","setTextureBounds","vertexBuffer","createBuffer","indexBuffer","indexCount","renderTarget","createTexture","framebuffer","createFramebuffer","depthStencilBuffer","depthBuffer","stencilBuffer","stencil","createRenderbuffer","patch","onResize","destroy","unpatch","deleteProgram","deleteBuffer","deleteTexture","deleteFramebuffer","deleteRenderbuffer","glState","clear","COLOR_BUFFER_BIT","texImage2D","alpha","RGBA","RGB","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","renderbufferStorage","DEPTH_STENCIL","framebufferRenderbuffer","DEPTH_STENCIL_ATTACHMENT","DEPTH_COMPONENT16","DEPTH_ATTACHMENT","STENCIL_INDEX8","STENCIL_ATTACHMENT","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","pname","leftBounds","rightBounds","submitFrame","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform1i","diffuse","uniform4fv","drawElements","TRIANGLES","UNSIGNED_SHORT","renderNoState","preserveDrawingBuffer","updateDeviceInfo","deviceInfo","vertices","computeMeshVertices_","bufferData","STATIC_DRAW","indices","computeMeshIndices_","lensFrustum","getLeftEyeVisibleTanAngles","noLensFrustum","getLeftEyeNoLensTanAngles","getLeftEyeVisibleScreenRect","vidx","u","sqrt","distortion","distortInverse","halfwidth","halfheight","iidx","getOwnPropertyDescriptor_","proto","attrName","getAttribute","uiVS","uiFS","DEG2RAD","kAnglePerGearSection","kOuterRimEndAngle","kInnerRimBeginAngle","kOuterRadius","kMiddleRadius","kInnerRadius","kCenterLineThicknessDp","kButtonWidthDp","kTouchSlopFactor","CardboardUI","gearOffset","gearVertexCount","arrowOffset","arrowVertexCount","projMat","listener","Distortion","coefficients","removeEventListener","listen","optionsCallback","backCallback","event","midline","clientWidth","buttonSize","clientX","clientY","clientHeight","physicalPixels","scalingRatio","dps","lineWidth","buttonScale","buttonBorder","addGearSegment","theta","cos","sin","segmentTheta","addArrowVertex","angledLineWidth","render","uniform4f","color","uniformMatrix4fv","projectionMat","drawArrays","TRIANGLE_STRIP","radius","r0","r1","dr0","distort","abs","dr1","r2","degToRad","radToDeg","Vector3","normalize","scalar","invScalar","multiplyScalar","applyQuaternion","qx","qy","qz","qw","ix","iy","iz","iw","dot","crossVectors","ax","ay","az","bx","by","bz","Quaternion","Device","widthMeters","heightMeters","bevelMeters","quaternion","setFromEulerXYZ","c1","c3","s3","setFromEulerYXZ","setFromAxisAngle","axis","halfAngle","multiply","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","inverse","slerp","qb","cosHalfTheta","halfTheta","sinHalfTheta","ratioA","ratioB","setFromUnitVectors","v1","EPS","vFrom","vTo","DEFAULT_ANDROID","DEFAULT_IOS","Viewers","CardboardV1","CardboardViewer","label","interLensDistance","baselineLensDistance","screenLensDistance","distortionCoefficients","inverseCoefficients","CardboardV2","DeviceInfo","deviceParams","additionalViewers","viewer","updateDeviceParams","device","determineDevice_","getDevice","setViewer","METERS_PER_INCH","metersPerPixelX","xdpi","metersPerPixelY","ydpi","bevelMm","getDistortedFieldOfViewLeftEye","eyeToScreenDistance","outerDist","innerDist","bottomDist","topDist","outerAngle","atan","innerAngle","bottomAngle","topAngle","fovLeft","fovTop","fovRight","fovBottom","halfWidth","halfHeight","verticalLensOffset","centerX","centerY","centerZ","screenLeft","screenTop","screenRight","screenBottom","undistortedFrustum","eyeX","eyeY","getFieldOfViewLeftEye","opt_isUndistorted","getUndistortedFieldOfViewLeftEye","getFieldOfViewRightEye","getUndistortedParams_","getUndistortedViewportLeftEye","screenWidth","screenHeight","xPxPerTanAngle","yPxPerTanAngle","round","eyePosX","eyePosY","halfLensDistance","maxFov","viewerMax","format","last_updated","devices","DPDB_CACHE","Dpdb","onDeviceParamsUpdated","dpdb","recalculateDeviceParams_","xhr","loading","DeviceParams","SensorSample","sample","timestampS","ComplementaryFilter","kFilter","isDebug","currentAccelMeasurement","currentGyroMeasurement","previousGyroMeasurement","filterQ","previousFilterQ","accelQ","isOrientationInitialized","estimatedGravity","measuredGravity","gyroIntegralQ","PosePredictor","predictionTimeS","previousQ","previousTimestampS","deltaQ","outQ","FusionPoseSensor","predictionTime","yawOnly","accelerometer","gyroscope","posePredictor","chromeVersion","isDeviceMotionInRadians","isWithoutDeviceMotion","filterToWorldQ","inverseWorldToScreenQ","worldToScreenQ","originalPoseAdjustQ","setScreenTransform_","resetQ","orientationOut_","getDeviceParams","newDeviceParams","calcDeviceParams_","db","rules","matched","rule","matchRule_","dpi","bw","ua","resX","resY","sensorSample","addAccelMeasurement","vector","addGyroMeasurement","deltaT","run_","accelToQuaternion_","gyroDeltaQ","gyroToQuaternionDelta_","invFilterQ","toFixed","targetQ","getOrientation","accel","normAccel","gyro","dt","getPrediction","currentQ","angularSpeed","predictAngle","getPosition","_deviceOrientationQ","deviceOrientationFixQ","deviceOrientationFilterToWorldQ","filterOrientation","resetPose","onDeviceOrientation_","beta","gamma","onDeviceMotion_","deviceMotion","updateDeviceMotion_","accGravity","accelerationIncludingGravity","rotRate","rotationRate","timeStamp","deltaS","onOrientationChange_","screenOrientation","onMessage_","deviceMotionEvent","onDeviceMotionCallback_","onOrientationChangeCallback_","onMessageCallback_","onDeviceOrientationCallback_","stop","SENSOR_FREQUENCY","X_AXIS","Z_AXIS","SENSOR_TO_VR","PoseSensor","sensor","fusionSensor","api","errors","_sensorQ","_outQ","_onSensorRead","_onSensorError","RelativeOrientationSensor","frequency","referenceFrame","useDeviceMotion","K_FILTER","PREDICTION_TIME_S","YAW_ONLY","DEBUG","rotateInstructionsAsset","RotateInstructions","loadIcon_","overlay","backgroundColor","fontFamily","zIndex","img","icon","marginLeft","marginTop","appendChild","textAlign","fontSize","lineHeight","margin","innerHTML","snackbar","padding","boxSizing","snackbarText","float","snackbarButton","fontWeight","textTransform","borderLeft","paddingLeft","textDecoration","hide","show","parent","parentElement","removeChild","body","display","querySelector","showTemporarily","ms","timer","disableShowTemporarily","clearTimeout","update","DEFAULT_VIEWER","VIEWER_KEY","CLASS_NAME","ViewerSelector","defaultViewer","selectedKey","localStorage","getItem","dialog","createDialog_","onChangeCallbacks_","selected","checked","contains","getCurrentViewer","getSelectedKey_","onChange","cb","fireOnChange_","onSave_","setItem","container","classList","add","background","boxShadow","createH1_","createChoice_","createButton_","h1","marginBottom","div","onclick","button","letterSpacing","border","unwrapExports$$1","createCommonjsModule$$1","NoSleep","commonjsGlobal$$1","modules","installedModules","__webpack_require__","moduleId","getter","o","object","property","_createClass","_classCallCheck","mediaFile","oldIOS","parseFloat","MSStream","noSleepTimer","noSleepVideo","currentTime","setInterval","play","clearInterval","pause","NoSleep$1","nextDisplayId","defaultLeftBounds","defaultRightBounds","raf","requestAnimationFrame","caf","cancelAnimationFrame","VRFrameData","VRDisplayCapabilities","hasPosition","hasExternalDisplay","canPresent","maxLayers","hasOrientation","VRDisplay","USE_WAKELOCK","wakelock","isPolyfilled","displayId","displayName","isPresenting","capabilities","stageParameters","waitingForPresent_","layer_","originalParent_","fullscreenElement_","fullscreenWrapper_","fullscreenElementCachedStyle_","fullscreenEventTarget_","fullscreenChangeHandler_","fullscreenErrorHandler_","wakelock_","getFrameData","_getPose","getPose","_resetPose","getImmediatePose","wrapForFullscreen","cssProperties","insertBefore","firstChild","applyFullscreenElementStyle","removeFullscreenWrapper","removeAttribute","requestPresent","layers","wasPresenting","incomingLayer","layer","updatePresent_","predistorted","onFullscreenChange","actualFullscreenElement","lock","catch","beginPresent_","unlock","disableWakeLock","endPresent_","removeFullscreenListeners_","fireVRDisplayPresentChange_","onFullscreenError","addFullscreenListeners_","enableWakeLock","exitPresent","getLayers","CustomEvent","detail","dispatchEvent","fireVRDisplayConnect_","changeHandler","errorHandler","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","getEyeParameters","whichEye","ADDITIONAL_VIEWERS","MOBILE_WAKE_LOCK","DPDB_URL","CARDBOARD_UI_DISABLED","ROTATE_INSTRUCTIONS_DISABLED","BUFFER_SCALE","DIRTY_SUBMIT_FRAME_BINDINGS","Eye","LEFT","RIGHT","CardboardVRDisplay","config$$1","bufferScale_","poseSensor_","distorter_","cardboardUI_","dpdb_","onDeviceParamsUpdated_","deviceInfo_","viewerSelector_","onViewerChanged_","rotateInstructions_","onResize_","linearVelocity","linearAcceleration","angularVelocity","angularAcceleration","fieldOfView","eyeParams","renderWidth","renderHeight","newParams","updateBounds_","getContext","stopPropagation","preventDefault","orientationHandler","vrdisplaypresentchangeHandler","fireVRDisplayDeviceParamsChange_","lastWidth","lastHeight","vrdisplay","version","DefaultConfig","PROVIDE_MOBILE_VRDISPLAY","GET_VR_DISPLAYS_TIMEOUT","WebVRPolyfill","polyfillDisplays","enabled","hasNative","native","getVRDisplays","displays","getPolyfillDisplays","_polyfillDisplaysPopulated","NativeVRFrameData","nativeFrameData","nativeGetFrameData","timeoutId","_this","vrDisplaysNative","timeoutPromise","nativeDisplays","webvrPolyfill","freeze","default","require$$0","_createElementVNode","class","for","_createElementBlock","_createVNode","_component_Tabinfor","_withCtx","_hoisted_1","_component_el_divider","_component_el_row","gutter","justify","_component_el_col","span","_component_el_card","align","_hoisted_2","_hoisted_3","ref","multiple","_cache","$event","$options","outputFileInformation","_component_el_button","onClick","_hoisted_4","_Fragment","_renderList","$data","modelPathArr","item","index","_createBlock","_component_el_radio","model_path","model_name","_hoisted_5","_ctx","uploadfile","_hoisted_6","_hoisted_7","_hoisted_8","handleFileUpload","BiaoqianBaocun","_component_el_table","tableData","fixed","onCurrentChange","handleCurrentChange","stripe","_component_el_table_column","addItem","scope","handleDelete","$index","row","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","BodyData","ViewData","_component_Bottominfor","itkConfig","itkModulesPath","createWebworkerPromise","existingWorker","_webworkerPromise","WebworkerPromise","webworkerPromise","webWorkerUrl","startsWith","URL","createObjectURL","readImageFile","webWorker","_ref","usedWorker","PromiseFileReader","arrayBuffer","operation","image","readImageDICOMFileSeries","fileList","fetchFileDescriptions","fileDescription","fileDescriptions","transferables","map","factoryMapping","vtkObject","vtk","isA","vtkClass","model","keyName","newInst","modified","register","vtkClassName","globalMTime","VOID","getCurrentGlobalMTime","fakeConsole","noOp","consoleMethods","methodName","loggerFunctions","debug","info","setLoggerFunction","vtkLogMacro","vtkInfoMacro","vtkDebugMacro","vtkErrorMacro","vtkWarningMacro","ERROR_ONCE_MAP","vtkOnceErrorMacro","TYPED_ARRAYS","Float64Array","Int8Array","Int16Array","Uint32Array","capitalize","uncapitalize","formatBytesToProperUnit","precision","units","Number","currentUnit","pop","formatNumbersWithThousandSeparator","separator","sections","reverse","safeArrays","enumToString","find","getStateArrayMapFunc","getState","setImmediateVTK","publicAPI","callbacks","unsubscribe","isInteger","mtime","classHierarchy","isDeleted","deleted","otherMTime","getMTime","onModified","className","getClassName","noWarning","noFunction","_len","list","_key","subset","getReferenceByName","field","el","jsonArchive","sortedObj","sort","shallowCopy","other","otherModel","keyList","otherKeyList","keyIdx","splice","fieldNames","objectSetterMap","enum","RangeError","findSetter","fields","setGet","getArray","setArray","defaultVal","_len2","_key2","array","changeDetected","otherArray","setGetArray","algo","numberOfInputs","numberOfOutputs","setInputData","dataset","inputData","inputConnection","getInputData","setInputConnection","outputPort","getInputConnection","addInputConnection","addInputData","getOutputData","shouldUpdate","getOutputPort","outputPortAccess","inputArrayToProcess","localMTime","minOutputMTime","Infinity","mt","ins","getNumberOfInputPorts","getNumberOfOutputPorts","getInputArrayToProcess","inputPort","arrayDesc","ds","fieldAssociation","arrayName","setInputArrayToProcess","attributeType","EVENT_ABORT","previousDelete","curCallbackID","callbackID","cbID","invoke","currentCallbacks","priority","continueNext","cb1","cb2","newInstance","initialValues","_len3","_key3","_len4","_key4","isVtkObject","traverseInstanceTree","extractFunction","accumulator","visitedInstances","modelObj","subObj","debounce","wait","immediate","_len5","_key5","later","callNow","throttle","delay","isThrottled","argsToUse","wrapper","_len6","_key6","keystore","initialKeystore","setKey","getKey","getAllKeys","deleteKey","clearKeystore","nextProxyId","ROOT_GROUP_NAME","proxy","parentDelete","proxyId","ui","propertyMap","groupChildrenNames","registerProperties","descriptionList","currentGroupName","childrenNames","children","listProxyProperties","gName","getProperties","groupName","values","propertyNames","registerLinks","links","link","persistent","updateOnBind","sLink","proxyManager","getPropertyLink","registerPropertyLinkForGC","updateUI","updateProxyProperty","propertyName","propUI","activate","setActiveMethod","getProxyGroup","propertyLinkSubscribers","otherLink","gcPropertyLinks","subscribers","unbind","propertyLinkMap","updateInProgress","force","needUpdate","sourceLink","newValue","linkToUpdate","indexToDelete","subscription","updateMe","linkHandler","listPropertyNames","getPropertyByName","getPropertyDomainByName","getProxySection","proxyGroup","properties","proxyPropertyMapping","subscriptions","modelKey","methodSrc","methodDst","proxyPropertyState","applyState","modelKeys","mapping","propValues","PIXEL_STEP","LINE_HEIGHT","PAGE_HEIGHT","normalizeWheel","wheelEvent","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","setImmediate","macro","VTK_SMALL_NUMBER","notImplemented","createArray","radiansFromDegrees","deg","degreesFromRadians","rad","nearestPowerOfTwo","xi","isPowerOfTwo","subtract","cross","Zx","Zy","Zz","norm","sum","den","distance2BetweenPoints","determinant2x2","NaN","multiply3x3_vect3","mat_3x3","in_3","out_3","luFactorLinearSystem","A","largest","temp1","temp2","maxI","scale","luSolveLinearSystem","ii","idx","solveLinearSystem","rgb2hsv","rgb","hsv","onethird","onesixth","twothird","cmax","cmin","hsv2rgb","fivesixth","lab2xyz","lab","xyz","L","var_Y","var_X","var_Z","ref_X","ref_Y","ref_Z","xyz2lab","xyz2rgb","maxVal","rgb2xyz","rgb2lab","lab2rgb","uninitializeBounds","bounds","areBoundsInitialized","computeBoundsFromPoints","point1","point2","clampValue","minValue","maxValue","clampVector","minVector","maxVector","roundVector","isInf","isFinite","isNan","createUninitializedBounds","MAX_VALUE","PLANE_TOLERANCE","COINCIDE","DISJOINT","evaluate","normal","origin","distanceToPlane","distance","projectPoint","xproj","xo","vtkMath","projectVector","vproj","n2","generalizedProjectPoint","intersectWithLine","p1","p2","outObj","intersection","betweenPoints","p21","p1Origin","fabsden","fabstolerance","intersectWithPlane","plane1Origin","plane1Normal","plane2Origin","plane2Normal","l0","l1","absCross","maxc","iP","d1","d2","STATIC","vtkPlane","evaluateFunction","evaluateGradient","retVal","planeOrigin","planeNormal","DEFAULT_VALUES","INIT_BOUNDS","isValid","getCenter","getLength","getLengths","getXRange","getYRange","getZRange","getMaxLength","getDiagonalLength","oppositeSign","getCorners","corners","computeCornerPoints","computeScale3","scale3","center","vtkBoundingBox","clone","equals","getBounds","setMinPoint","xMin","xMax","yMin","yMax","zMin","zMax","setMaxPoint","addPoint","addBounds","_xMin","_xMax","_yMin","_yMax","_zMin","_zMax","addBox","intersect","bbox","newBounds","bBounds","intersects","MaxPnt","MinPnt","intersectPlane","dir","sign","ti","bound","containsPoint","getMinPoint","getMaxPoint","getBound","reset","setBounds","delta","sx","sy","sz","DataTypeByteSize","Uint8ClampedArray","VtkDataTypes","CHAR","SIGNED_CHAR","UNSIGNED_CHAR","SHORT","INT","UNSIGNED_INT","DOUBLE","DefaultDataType","Constants","TUPLE_HOLDER","createRangeHelper","mean","getRange","computeRange","component","numberOfComponents","helper","ensureRangeSize","rangeArray","ranges","getDataType","typedArray","getMaxNorm","normArray","numComps","getNumberOfComponents","maxNorm","getNumberOfTuples","getTuple","vtkDataArray","dataChange","getElementComponentSize","BYTES_PER_ELEMENT","getComponent","tupleIdx","compIdx","setComponent","getData","componentIndex","rangeIdx","range","rangeTuple","setRange","rangeValue","setTuple","tuple","tupleToFill","getTupleLocation","getNumberOfValues","dataType","newClone","empty","getName","setData","vtkFieldData","superGetState","arrays","initialize","initializeFields","copyAllOn","clearFieldFlags","copyFieldFlags","copyStructure","getCopyFieldFlags","getNumberOfArrays","getNumberOfActiveArrays","addArray","removeAllArrays","removeArray","entry","removeArrayByIndex","arrayIdx","getArrays","arraySpec","getArrayByIndex","getArrayByName","reduce","getArrayWithIndex","hasArray","getArrayName","getFlag","passData","fromId","toId","copyFlag","doCopyAllOff","destArr","tId","ncomps","newSize","copyFieldOn","copyFieldOff","doCopyAllOn","copyAllOff","deepCopy","arrNew","copyFlags","AttributeTypes","SCALARS","VECTORS","NORMALS","TCOORDS","TENSORS","GLOBALIDS","PEDIGREEIDS","EDGEFLAG","NUM_ATTRIBUTES","AttributeLimitTypes","MAX","EXACT","NOLIMIT","CellGhostTypes","DUPLICATECELL","HIGHCONNECTIVITYCELL","LOWCONNECTIVITYCELL","REFINEDCELL","EXTERIORCELL","HIDDENCELL","PointGhostTypes","DUPLICATEPOINT","HIDDENPOINT","AttributeCopyOperations","COPYTUPLE","INTERPOLATE","PASSDATA","ALLCOPY","ghostArrayName","DesiredOutputPrecision","DEFAULT","SINGLE","vtkDataSetAttributes","attrTypes","cleanAttributeType","attType","cleanAttType","ee","checkNumberOfComponents","uncleanAttType","currentAttribute","setActiveAttributeByName","setActiveAttributeByIndex","getActiveAttribute","activeVal","da","copyAttributeFlags","attCopyOp","ty","dataArrays","superShallowCopy","activeScalars","activeVectors","activeTensors","activeNormals","activeTCoords","activeGlobalIds","activePedigreeIds","FieldDataTypes","UNIFORM","DATA_OBJECT_FIELD","COORDINATE","POINT_DATA","POINT","POINT_FIELD_DATA","CELL","CELL_FIELD_DATA","VERTEX","VERTEX_FIELD_DATA","EDGE","EDGE_FIELD_DATA","ROW","ROW_DATA","FieldAssociations","FIELD_ASSOCIATION_POINTS","FIELD_ASSOCIATION_CELLS","FIELD_ASSOCIATION_NONE","FIELD_ASSOCIATION_POINTS_THEN_CELLS","FIELD_ASSOCIATION_VERTICES","FIELD_ASSOCIATION_EDGES","FIELD_ASSOCIATION_ROWS","NUMBER_OF_ASSOCIATIONS","DATASET_FIELDS","vtkDataSet","fieldName","StructuredType","UNCHANGED","SINGLE_POINT","X_LINE","Y_LINE","Z_LINE","XY_PLANE","YZ_PLANE","XZ_PLANE","XYZ_GRID","EMPTY","getDataDescriptionFromExtent","inExt","dataDim","EPSILON","ARRAY_TYPE","glMatrix","fromValues","divide","transformMat4","transformMat3","exactEquals","a0","a1","a2","b0","b1","b2","vec","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","identity","transpose","invert","adjoint","determinant","b3","translate","rotate","b12","b20","b21","b22","rotateX","rotateY","rotateZ","fromTranslation","fromScaling","fromRotation","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","fromQuat2","translation","aw","magnitude","getTranslation","mat","getScaling","getRotation","trace","fromRotationTranslationScale","fromRotationTranslationScaleOrigin","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","fromQuat","yx","zx","zy","frustum","rl","tb","perspective","fovy","aspect","perspectiveFromFieldOfView","ortho","lookAt","eye","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","frob","multiplyScalarAndAdd","a3","a4","a5","a6","a7","a8","a9","a14","a15","b4","b5","b6","b7","b8","b9","b13","b14","b15","mul","sub","fromMat4","fromMat2d","normalFromMat4","vtkImageData","setExtent","inExtent","extent","dataDescription","vtkStructuredData","setDimensions","getDimensions","getNumberOfCells","dims","nCells","getNumberOfPoints","getPoint","ijk","vec3","coords","vout","indexToWorldVec3","extentToBounds","computeTransforms","trans","mat4","indexToWorld","direction","spacing","worldToIndex","setDirection","vin","indexToWorldBounds","bin","bout","in1","in2","ain","aout","worldToIndexVec3","worldToIndexBounds","computeHistogram","worldBounds","voxelFunc","dimensions","yStride","zStride","pixels","getPointData","getScalars","maximum","minimum","sumOfSquares","isum","inum","pixel","average","variance","sigma","dvals","mat3","ITKPixelTypes","Unknown","Scalar","Offset","Vector","Point","CovariantVector","SymmetricSecondRankTensor","DiffusionTensor3D","Complex","FixedArray","Matrix","VariableLengthVector","VariableSizeMatrix","convertItkToVtkImage","itkImage","vtkImage","imageType","dimension","col","imageData","pointData","scalarArrayName","components","setScalars","pixelType","setVectors","setTensors","vtkArrayTypeToItkComponentType","convertVtkToItkImage","copyData","componentType","getOrigin","getSpacing","getDirection","rows","columns","idy","vtkArray","getTensors","getVectors","Wrap","REPEAT","MIRRORED_REPEAT","Filter","NEAREST","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","PASS_TYPES","vtkViewNode","prepass","traverse","renderPass","passTraversal","getTraverseOperation","customRenderPass","getOperation","getViewNodeFor","dataObject","renderable","child","vn","getFirstAncestorOfType","addMissingNode","dobj","renderableChildMap","setVisited","newNode","createViewNode","setParent","addMissingNodes","dataObjs","prepareNodes","visited","removeUnusedNodes","getVisited","getRenderable","includes","dataObj","myFactory","createNode","setRenderable","vtkOpenGLTexture","updateArrayDataType","pixData","openGLDataType","pixCount","newArray","scaleTextureToHighestPowerOfTwo","openGLRenderWindow","getWebgl2","newWidth","newHeight","jFactor","iFactor","joff","jidx","jlow","jhi","jmix","jmix1","ioff","ilow","ihi","imix","computeScaleOffsets","numPixelsIn","renWin","openGLRenderer","getParent","getInterpolate","generateMipmap","setMinificationFilter","setMagnificationFilter","getRepeat","setWrapR","setWrapS","setWrapT","setImage","handle","textureBuildTime","getImage","getImageLoaded","create2DFromImage","sendParameters","ext","getExtent","inScalars","indata","scalars","createCubeFromRaw","create2DFromRaw","destroyTexture","deactivate","numberOfDimensions","resetFormatAndType","getOpenGLFilterMode","minificationFilter","magnificationFilter","getOpenGLWrapMode","wrapS","wrapT","TEXTURE_WRAP_R","wrapR","getTextureUnit","getTextureUnitForTexture","activateTexture","deactivateTexture","releaseGraphicsResources","rwin","internalFormat","shaderProgram","autoParameters","sendParametersTime","isBound","oid","getIntegerv","TEXTURE_BASE_LEVEL","baseLevel","TEXTURE_MAX_LEVEL","maxLevel","getInternalFormat","vtktype","getDefaultInternalFormat","getDefaultTextureInternalFormat","setInternalFormat","iFormat","InternalFormat","getFormat","getDefaultFormat","RED","RG","LUMINANCE","LUMINANCE_ALPHA","getDefaultDataType","vtkScalarType","getExtension","getOpenGLDataType","getShiftAndScale","BYTE","emode","dataArray","scaledData","pixelStorei","UNPACK_ALIGNMENT","invertedData","widthLevel","heightLevel","row1","row2","tempData","TEXTURE_CUBE_MAP_POSITIVE_X","createDepthFromRaw","DEPTH_COMPONENT","needNearestPowerOfTwo","ctx","drawImage","getImageData","safeImage","create3DFromRaw","TEXTURE_3D","texImage3D","create3DFilterableFromRaw","volumeInfo","nc","volCopyData","outArray","outIdx","inValue","smin","smax","dataTypeToUse","soffset","sscale","maxTexDim","MAX_TEXTURE_SIZE","xstride","ystride","targetWidth","xreps","yreps","targetHeight","yRep","xrepsThisRow","outXContIncr","inY","xRep","inOffset","inX","setOpenGLRenderWindow","rw","getMaximumTextureSize","isCurrent","minLOD","maxLOD","vtkFramebuffer","getBothMode","saveCurrentBindingsAndBuffers","modeIn","saveCurrentBindings","saveCurrentBuffers","previousDrawBinding","previousActiveFramebuffer","getActiveFramebuffer","restorePreviousBindingsAndBuffers","restorePreviousBindings","restorePreviousBuffers","setActiveFramebuffer","glFramebuffer","colorTexture","setColorBuffer","texture","getHandle","getGLFramebuffer","depthTexture","getSize","populateFramebuffer","previousReadBinding","previousDrawBuffer","previousReadBuffer","vtkRenderPass","currentOperation","setCurrentOperation","currentTraverseOperation","viewNode","currentParent","preDelegateOperations","delegates","postDelegateOperations","vtkForwardPass","numlayers","getNumberOfLayers","renderers","getChildren","renNode","ren","getRenderers","getLayer","opaqueActorCount","translucentActorCount","volumeCount","depthRequested","getFramebufferSize","vtkOpenGLFramebuffer","fbSize","getZBufferTexture","getColorTexture","incrementOpaqueActorCount","incrementTranslucentActorCount","incrementVolumeCount","vtkGenericWidgetRepresentation","vtkOpenGLActor","buildPass","getTextures","getMapper","ogltextures","activeTextures","oglmapper","traverseOpaqueZBufferPass","traverseOpaquePass","getVisibility","getIsOpaque","getSelector","getPickable","traverseTranslucentPass","activateTextures","queryPass","opaqueZBufferPass","opaquePass","enableDepthMask","translucentPass","disableDepthMask","getKeyMatrices","keyMatrixTime","computeMatrix","keyMatrices","mcwc","getMatrix","getIsIdentity","normalMatrix","vtkOpenGLActor2D","depthMask","vtkOpenGLCamera","tsize","getTiledSizeAndOrigin","lowerLeftU","lowerLeftV","usize","vsize","scissor","volumePass","lastRenderer","wcvc","getViewMatrix","aspectRatio","getAspectRatio","vcdc","getProjectionMatrix","wcdc","ObjectType","TEXTURE_BUFFER","vtkOpenGLBufferObject","convertType","internalType","internalHandle","dirty","getType","setType","isReady","generateBuffer","objectTypeGL","alreadyGenerated","release","getError","objectType","PassTypes","MIN_KNOWN_PASS","ACTOR_PASS","COMPOSITE_INDEX_PASS","ID_LOW24","MAX_KNOWN_PASS","SelectionContent","VALUES","INDICES","FRUSTUM","LOCATIONS","THRESHOLDS","BLOCKS","QUERY","SelectionField","FIELD","vtkSelectionNode","points","contentType","fieldType","selectionList","vtkOpenGLHardwareSelector","releasePixBuffers","pixBuffer","beginSelection","renderer","maxAttributeId","setSelector","hitProps","endSelection","preCapturePass","postCapturePass","select","sel","captureBuffers","generateSelection","area","invokeEvent","originalBackground","getBackgroundByReference","setBackground","currentPass","passRequired","traverseAllPasses","savePixelBuffer","passNo","getPixelData","buildPropHitList","pixelbuffer","convert","renderProp","setPropColorValueFromInt","idOffset","renderCompositeIndex","renderAttributeId","attribid","getPropFromID","passTypeToString","isPropHit","Boolean","pb","propColorValue","getPixelInformation","inDisplayPosition","maxDistance","outSelectedPosition","maxDist","displayPosition","actorid","propID","compositeID","dispPos","curPos","valid","convertSelection","fieldassociation","dataMap","setContentType","setFieldType","pixelCount","setSelectionList","attributeIDs","getInfoHash","fx1","fy1","fx2","fy2","has","attributeID","attach","superSetArea","setArea","Shading","FLAT","GOURAUD","PHONG","Representation","POINTS","WIREFRAME","SURFACE","Interpolation","vtkProperty","setColor","setDiffuseColor","setAmbientColor","setSpecularColor","computeCompositeColor","getColor","ambient","specular","ambientColor","diffuseColor","specularColor","addShaderVariable","setInterpolationToFlat","setInterpolation","setInterpolationToGouraud","setInterpolationToPhong","getInterpolationAsString","interpolation","setRepresentationToWireframe","setRepresentation","setRepresentationToSurface","setRepresentationToPoints","getRepresentationAsString","representation","edgeColor","specularPower","opacity","edgeVisibility","backfaceCulling","frontfaceCulling","pointSize","lighting","shading","materialName","setAxisAngle","getAxisAngle","out_axis","omega","cosom","sinom","scale0","scale1","conjugate","fromMat3","fRoot","fTrace","vec4","tmpvec3","xUnitVec3","yUnitVec3","matr","computeInverseShiftAndScaleMatrix","coordShift","coordScale","inverseScale","matrix","shouldApplyCoordShiftAndScale","vtkOpenGLCellArrayBufferObject","createVBO","cellArray","inRep","outRep","elementCount","blockSize","vertexOffset","normalOffset","tCoordOffset","tCoordComponents","colorComponents","colorOffset","customData","normalData","tcoordData","colorData","colors","textureComponents","tcoords","normals","customAttributes","colorBO","vtkBufferObject","stride","addAPoint","pointIdx","normalIdx","tcoordIdx","colorIdx","custIdx","cellCount","cellBuilders","anythingToPoints","numPoints","cellPts","linesToWireframe","polysToWireframe","stripsToWireframe","polysToSurface","npts","stripsToSurface","cellCounters","countFunc","caboCount","packedUCVBO","packedVBO","vboidx","ucidx","diagSq","distSq","distShift","useShiftAndScale","log10","setCoordShiftAndScale","coordShiftAndScaleEnabled","haveCellNormals","cellOffset","attr","haveCellScalars","colorBOStride","inverseShiftAndScaleMatrix","tcoordBO","vtkShader","compile","stype","shaderType","isCompiled","getShaderParameter","COMPILE_STATUS","lastError","getShaderInfoLog","cleanup","substitute","replaceStr","replaced","gflag","regex","resultstr","vtkShaderProgram","setCompiled","getSource","linked","setBound","setContext","geometryShader","inked","uniformLocs","LINK_STATUS","getProgramInfoLog","setLinked","attributeLocs","setUniformMatrix","findUniform","setUniformMatrix3x3","uniformMatrix3fv","setUniformf","uniform1f","setUniformfv","uniform1fv","setUniformi","setUniformiv","uniform1iv","setUniform2f","v2","uniform2f","setUniform2fv","uniform2fv","setUniform2i","uniform2i","setUniform2iv","uniform2iv","setUniform3f","uniform3f","setUniform3fArray","setUniform3fv","uniform3fv","setUniform3i","uniform3i","setUniform3iv","uniform3iv","setUniform4f","setUniform4fv","setUniform4i","uniform4i","setUniform4iv","uniform4iv","loc","isUniformUsed","isAttributeUsed","getAttribLocation","shader","getShaderType","thandle","vertexShaderHandle","comntext","detachShader","fragmentShaderHandle","errror","setLastCameraMTime","lastCameraMTime","geometryShaderHandle","compiled","attributesLocs","md5Hash","setShaderType","vtkOpenGLVertexArrayObject","exposedMethod","instancingExtension","forceEmulation","extension","supported","handleVAO","createVertexArray","createVertexArrayOES","bindVertexArrayOES","bindVertexArray","ibuff","buffers","buff","iatt","attributes","attrIt","matrixCount","isMatrix","divisor","vertexAttribDivisorANGLE","vertexAttribDivisor","disableVertexAttribArray","shaderProgramChanged","deleteVertexArrayOES","deleteVertexArray","handleProgram","addAttributeArray","elementType","elementTupleSize","addAttributeArrayWithDivisor","Index","buffFound","found","addAttributeMatrixWithDivisor","removeAttributeArray","vtkOpenGLHelper","win","VAO","CABO","oglwin","setElementCount","shaderSourceTime","attributeUpdateTime","primitiveType","vtkVertexArrayObject","vtkCellArrayBufferObject","vtkAbstractMapper","addClippingPlane","plane","clippingPlanes","getNumberOfClippingPlanes","removeAllClippingPlanes","removeClippingPlane","getClippingPlanes","setClippingPlanes","planes","nbPlanes","vtkAbstractMapper3D","diff","getClippingPlaneInDataCoords","propMatrix","hnormal","clipPlanes","getNormal","v3","v4","VectorMode","MAGNITUDE","COMPONENT","RGBCOLORS","ScalarMappingTarget","ColorMode","MAP_SCALARS","DIRECT_SCALARS","ScalarMode","USE_POINT_DATA","USE_CELL_DATA","USE_POINT_FIELD_DATA","USE_CELL_FIELD_DATA","USE_FIELD_DATA","GetArray","BY_ID","BY_NAME","vtkMapper","intColorToUChar","floatColorToUChar","vtkScalarsToColors","setVectorModeToMagnitude","setVectorMode","setVectorModeToComponent","setVectorModeToRGBColors","isOpaque","setAnnotations","annotations","annotationArray","annotation","updateAnnotatedValueMap","setAnnotation","checkForAnnotatedValue","getNumberOfAnnotatedValues","getAnnotatedValue","getAnnotation","getAnnotatedValueIndex","removeAnnotation","needToRemove","resetAnnotations","annotatedValueMap","getAnnotationColor","rgba","indexedLookup","getIndexedColor","getAnnotatedValueIndexInternal","na","mapScalars","colorMode","componentIn","newColors","convertToRGBA","newscalars","mapVectorsThroughTable","mapScalarsThroughTable","mapVectorsToMagnitude","compsToUse","inIncr","outputV","inputV","outputFormat","vectorComponentIn","vectorSizeIn","vectorMode","getVectorMode","vectorSize","vectorComponent","inComponents","getVectorComponent","getVectorSize","inputOffset","magValues","luminanceToRGBA","convtFun","newValues","luminanceAlphaToRGBA","rGBToRGBA","rGBAToRGBA","numComp","numTuples","usingLogScale","getNumberOfAvailableColors","setMappingRange","getMappingRange","mappingRange","BELOW_RANGE_COLOR_INDEX","ABOVE_RANGE_COLOR_INDEX","NAN_COLOR_INDEX","vtkLookupTable","opaqueFlagBuildTime","opaque","nanColor","useBelowRangeColor","belowRangeColor","useAboveRangeColor","aboveRangeColor","opaqueFlag","linearIndexLookup","dIndex","maxIndex","linearLookup","indexedLookupFunction","lookupShiftAndScale","outFormat","lookupFunc","trange","getNumberOfColors","getAlpha","cptr","forceBuild","hinc","sinc","vinc","ainc","numberOfColors","hueRange","saturationRange","valueRange","alphaRange","buildSpecialColors","buildTime","tptr","addCoincidentTopologyMethods","nameList","factor","unit","CATEGORIES","resolveCoincidentTopologyPolygonOffsetFaces","resolveCoincidentTopology","RESOLVE_COINCIDENT_TOPOLOGY_MODE","getResolveCoincidentTopologyPolygonOffsetFaces","setResolveCoincidentTopologyPolygonOffsetFaces","getResolveCoincidentTopology","setResolveCoincidentTopology","setResolveCoincidentTopologyToDefault","setResolveCoincidentTopologyToOff","setResolveCoincidentTopologyToPolygonOffset","getResolveCoincidentTopologyAsString","staticOffsetModel","Polygon","Line","staticOffsetAPI","static","setForceCompileOnly","forceCompileOnly","createDefaultLookupTable","lookupTable","getColorModeAsString","setColorModeToDefault","setColorMode","setColorModeToMapScalars","setColorModeToDirectScalars","getScalarModeAsString","scalarMode","setScalarModeToDefault","setScalarMode","setScalarModeToUsePointData","setScalarModeToUseCellData","setScalarModeToUsePointFieldData","setScalarModeToUseCellFieldData","setScalarModeToUseFieldData","otherStaticMethods","topologyOffset","CoincidentTopologyHelper","getCoincidentTopologyPolygonOffsetParameters","globalValue","getResolveCoincidentTopologyPolygonOffsetParameters","localValue","getRelativeCoincidentTopologyPolygonOffsetParameters","getCoincidentTopologyLineOffsetParameters","getResolveCoincidentTopologyLineOffsetParameters","getRelativeCoincidentTopologyLineOffsetParameters","getCoincidentTopologyPointOffsetParameter","getResolveCoincidentTopologyPointOffsetParameters","getRelativeCoincidentTopologyPointOffsetParameters","getAbstractScalars","arrayAccessMode","arrayId","scalarVisibility","cellFLag","cellFlag","getCellData","pd","cd","fd","getFieldData","colorByArrayName","colorCoordinates","colorTextureMap","colorMapColors","useLookupTableScalarRange","getLookupTable","scalarRange","canUseTextureMapForColoring","mapScalarsToTexture","lut","scalarToTextureCoordinate","scalarValue","rangeMin","invRangeWidth","texCoordS","texCoordT","createColorTextureCoordinates","numScalars","tableRange","tableNumberOfColors","useLogScale","scalarTexelWidth","paddedRange","outputCount","scalarIdx","outputs","inputValue","origAlpha","setAlpha","tmp","scalarComponent","interpolateScalarsBeforeMapping","getIndexedLookup","gasResult","clearColorArrays","getPrimitiveCount","pcount","getPoints","verts","getVerts","lines","getLines","triangles","getPolys","acquireInvertibleLookupTable","valueToColor","colorToValue","useInvertibleColorFor","clearInvertibleColor","renderTime","fieldDataTupleId","useInvertibleColors","invertibleScalars","viewSpecificProperties","customShaderAttributes","primTypes","Start","Points","Lines","Tris","TriStrips","TrisEdges","TriStripsEdges","End","StartEvent","EndEvent","vtkOpenGLPolyDataMapper","safeMatrixMultiply","matrixArray","matrixType","tmpMat","openGLActor","openGLCamera","getActiveCamera","haveSeenDepthRequest","renderDepth","primitives","actor","renderPiece","buildShaders","shaders","getShaderTemplate","openGLSpec","getViewSpecificProperties","OpenGL","shaderReplacements","ShaderReplacements","currReplacement","replaceFirst","ssrc","substituteRes","originalValue","replacementValue","replaceAll","replaceShaderValues","openGLSpecProp","vertexShaderCode","vtkPolyDataVS","vertexSpecProp","VertexShaderCode","Vertex","fragmentShaderCode","vtkPolyDataFS","fragmentSpecProp","FragmentShaderCode","Fragment","geometryShaderCode","geometrySpecProp","GeometryShaderCode","Geometry","replaceShaderColor","VSSource","GSSource","FSSource","lastLightComplexity","lastBoundBO","colorDec","colorImpl","getCABO","getColorComponents","drawingEdges","getInterpolateScalarsBeforeMapping","getColorCoordinates","replaceShaderLight","shadowFactor","lastLightCount","sstring","replaceShaderNormal","getNormalOffset","getOpenGLMode","getProperty","getRepresentation","getPrimitiveType","LINES","replaceShaderPositionVC","getPointSize","replaceShaderTCoord","getTCoordOffset","tus","getActiveTextures","tNumComp","tcdim","getComponents","getTarget","getColorTextureMap","replaceShaderClip","numClipPlanes","getCoincidentParameters","cp","getEdgeVisibility","primType","replaceShaderCoincidentOffset","replaceShaderPicking","getNeedToRebuildShaders","cellBO","lightComplexity","numberOfLights","poly","currentInput","needLighting","pointNormals","getNormals","cellNormals","flat","getInterpolation","getLighting","lights","getLightsByReference","light","getSwitch","getIntensity","lightTypeIsHeadLight","getPositional","needRebuild","lastHaveSeenDepthRequest","getProgram","getShaderSourceTime","updateShaders","newShader","getShaderCache","readyShaderProgramArray","setProgram","getVAO","readyShaderProgram","setMapperShaderParameters","setPropertyShaderParameters","setCameraShaderParameters","setLightingShaderParameters","listCallbacks","ShadersCallbacks","userData","primitiveIDOffset","getElementCount","VBOBuildTime","getAttributeUpdateTime","getVertexOffset","getStride","getCustomShaderAttributes","getCustomData","getTCoordComponents","getColorBO","getColorOffset","getColorBOStride","planeEquations","planeEquation","internalColorTexture","tex","texUnit","tname","selector","getPropColorValue","getCurrentPass","dColor","getColorByReference","intensity","lightColor","ld","transform","newLightDirection","lightTypeIsSceneLight","lightDirection","lightHalfAngle","cam","viewTF","lp","getTransformedPosition","np","getAttenuationValuesByReference","getExponent","getConeAngle","keyMats","camm","getKeyMatrixTime","progm","getLastCameraMTime","shiftScaleEnabled","getCoordShiftAndScaleEnabled","inverseShiftScaleMatrix","getInverseShiftAndScaleMatrix","actorIsIdentity","actMats","tmpMat4","tmpMat3","getParallelProjection","ppty","getOpacity","aColor","getEdgeColorByReference","getAmbientColorByReference","getAmbient","getDiffuseColorByReference","getDiffuse","sColor","getSpecularColorByReference","getSpecular","getSpecularPower","renderPieceStart","updateBufferObjects","renderPieceDraw","drawSurfaceWithEdges","cabo","rep","renderPieceFinish","LastBoundBO","getStatic","getBackfaceCulling","getFrontfaceCulling","enableCullFace","FRONT","BACK","disableCullFace","computeBounds","getInput","getNeedToRebuildBufferObjects","buildBufferObjects","vmtime","getColorMapColors","getScalarMode","getScalarVisibility","getTCoords","VBOBuildString","getStrips","shaderRebuildString","vtkHelper","setPrimitiveType","lastSelectionPass","vtkHardwareSelector","vtkOpenGLGlyph3DMapper","superClass","hardwareSupport","multiply4x4WithOffset","getColorArray","updateGlyphShaderParameters","normalMatrixUsed","mcvcMatrixUsed","carray","garray","narray","ofs","mcdcMatrix","mcvcMatrix","cdata","tmpColor","getMatrixArray","getNormalArray","numPts","compositePass","drawArraysInstancedANGLE","drawArraysInstanced","glyphBOBuildTime","matrixBuffer","normalBuffer","colorBuffer","pickBuffer","buildArrays","getBuildTime","parray","mcwcMatrix","SlicingMode","NONE","I","J","K","Y","Z","InterpolationType","vtkOpenGLImageMapper","openGLImageSlice","tris","openGLTexture","opacityTexture","getSliceAtFocalPoint","setSliceFromCamera","lastTextureComponents","FALSE","cw","getColorWindow","cl","getColorLevel","cfun","getRGBTransferFunction","cRange","oglShiftScale","ofun","getScalarOpacity","oscale","oshift","oRange","mid","texColorUnit","texOpacityUnit","i2wmat4","getIndexToWorld","imagemat","inverseShiftScaleMat","iType","getInterpolationType","cWidth","cTable","cfunToString","colorTextureString","cfTable","getTable","oWidth","oTable","ofunToString","opacityTextureString","ofTable","ijkMode","getClosestIJKAxis","nSlice","getSlice","getSlicingMode","getSliceAtPosition","sliceOffset","setGenerateMipmap","sliceSize","ptsArray","tcoordArray","basicScalars","bsIdx","setName","cells","vtkOpenGLImageSlice","vtkOpenGLPixelSpaceCallbackMapper","camera","texels","getUseZValues","zbt","getWidth","getHeight","fb","getFramebuffer","readPixels","invokeCallback","setDepthRequested","vtkOpenGLRenderer","isActiveCameraCreated","resetCamera","updateLights","getViewPropsWithNestedProps","createLight","clearMask","getTransparent","getPreserveDepthBuffer","clearDepth","DEPTH_BUFFER_BIT","ts","cameraPass","getSizeByReference","getViewportByReference","vport","tileViewPort","vpu","vpv","ndvp","normalizedDisplayToDisplay","vpu2","vpv2","ndvp2","vtkOpenGLSkybox","imat","lastFormat","camPos","tmaps","vtkOpenGLSphereMapper","vtkSphereMapperVS","replacement","fragString","tmp4","vbo","pointArray","scales","getScaleArray","setColorOffset","setColorBOStride","setColorBO","setColorComponents","setStride","cos30","vboIdx","ucIdx","getRadius","vtkOpenGLStickMapper","vtkStickMapperVS","anorms","orientationArray","getOrientationArray","verticesArray","vtkOpenGLVolume","traverseVolumePass","MCWCMatrix","FAST_LINEAR","BlendMode","COMPOSITE_BLEND","MAXIMUM_INTENSITY_BLEND","MINIMUM_INTENSITY_BLEND","AVERAGE_INTENSITY_BLEND","vtkOpenGLVolumeMapper","zBufferTexture","jitterTexture","scalarTexture","openGLVolume","vtkVolumeVS","vtkVolumeFS","vtkImageLabelOutline","getUseLabelOutline","iComps","getIndependentComponents","spc","maxSamples","getSampleDistance","gopacity","getUseGradientOpacity","getBlendMode","averageIPScalarRange","getAverageIPScalarRange","lightNum","getLights","getShade","lastZBufferTexture","getRenderTargetSize","modelToView","crange","getClippingRange","dcxmin","dcxmax","dcymin","dcymax","idxToView","idxNormalMatrix","getMaximumSamplesPerRay","vctoijk","volInfo","getVolumeInfo","pos2","getWorldToIndex","displayToWorld","displayToView","ldir","vprop","totalComp","getComponentWeight","useGO","gomin","getGradientOpacityMinimumOpacity","gomax","getGradientOpacityMaximumOpacity","goRange","getGradientOpacityMinimumValue","getGradientOpacityMaximumValue","labelOutlineThickness","getLabelOutlineThickness","lastXYF","fvp","getAutoAdjustSampleDistances","rwi","getVTKWindow","getInteractor","rft","getLastFrameTime","avgFrameTime","avgWindowArea","isAnimating","txyf","getDesiredUpdateRate","targetXYF","getStillUpdateRate","getImageSampleDistance","xyf","copyShader","copyVAO","blendFuncSeparate","ONE","ONE_MINUS_SRC_ALPHA","SRC_ALPHA","Bounds","numIComps","oSize","tmpTable","opacityFactor","getScalarOpacityUnitDistance","cSize","scalarTextureString","fullViewportTime","vtkViewNodeFactory","overrides","cpt","setMyFactory","registerOverride","vtkOpenGLViewNodeFactory","SET_GET_FIELDS","vtkShaderCache","nFSSource","gl2","fragDepthString","nVSSource","nGSSource","vertexCode","fragmentCode","geometryCode","getShaderProgram","getCompiled","bindShader","hashInput","shaderPrograms","sps","getVertexShader","setSource","getFragmentShader","getGeometryShader","setMd5Hash","releaseCurrentShader","sp","astShaderBound","lastShaderBound","vtkOpenGLTextureUnitManager","deleteTable","numberOfTextureUnits","textureUnits","MAX_TEXTURE_IMAGE_UNITS","allocate","isAllocated","allocateUnit","textureUnitId","free","IS_CHROME","checkRenderTargetSupport","GL_CONTEXT_COUNT","GL_CONTEXT_LISTENERS","createGLContext","deleteGLContext","pushMonitorGLContextCount","popMonitorGLContextCount","vtkOpenGLRenderWindow","updateWindow","viewStream","setSize","useOffScreen","cursor","cursorVisibility","containerSize","getCanvasDataURL","imageFormat","temporaryCanvas","temporaryContext","mainBoundingClientRect","getBoundingClientRect","renderWindow","viewProps","getViewProps","viewProp","getContainer","canvasList","getElementsByTagName","currentCanvas","boundingClientRect","newXPosition","newYPosition","screenshot","toDataURL","invokeImageReady","getRenderersByReference","initialized","get3DContext","textureUnitManager","shaderCache","depthFunc","LEQUAL","makeCurrent","setContainer","parentNode","bgImage","useBackgroundImage","getContainerSize","activeFramebuffer","isInViewport","vCoords","getViewportSize","getViewportCenter","displayToNormalizedDisplay","worldToView","viewToWorld","worldToDisplay","val2","viewToNormalizedDisplay","normalizedDisplayToView","normalizedDisplayToViewport","viewportToNormalizedViewport","normalizedViewportToViewport","displayToLocalDisplay","viewportToNormalizedDisplay","webgl2Supported","WebGL2RenderingContext","webgl2","defaultToWebgl2","invokeHaveVRDisplay","restoreContext","startVR","oldCanvasSize","hideCanvasInVR","queryVRSize","leftEye","rightEye","vrResolution","vrFrameData","switchToVRAnimation","vrSceneFrame","vrRender","stopVR","returnFromVRAnimation","setProjectionMatrix","setViewport","updateGamepads","computeViewParametersFromPhysicalMatrix","rp","textureResourceIds","activeUnit","getTextureUnitManager","useFloat","R8","RG8","RGB8","RGBA8","R16F","RG16F","RGB16F","RGBA16F","setBackgroundImage","setUseBackgroundImage","captureNextImage","previous","notifyStartCaptureImage","onImageReady","imageURL","getGLInformations","glTextureFloat","glTextureHalfFloat","glDebugRendererInfo","glDrawBuffers","glAnisotropic","MAX_VERTEX_ATTRIBS","MAX_VARYING_VECTORS","MAX_VERTEX_UNIFORM_VECTORS","MAX_FRAGMENT_UNIFORM_VECTORS","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_CUBE_MAP_TEXTURE_SIZE","MAX_TEXTURE_MAX_ANISOTROPY_EXT","ALIASED_POINT_SIZE_RANGE","ALIASED_LINE_WIDTH_RANGE","MAX_VIEWPORT_DIMS","MAX_RENDERBUFFER_SIZE","RED_BITS","GREEN_BITS","BLUE_BITS","ALPHA_BITS","DEPTH_BITS","STENCIL_BITS","SUBPIXEL_BITS","SAMPLES","SAMPLE_BUFFERS","ALPHA","HALF_FLOAT_OES","MAX_DRAW_BUFFERS_WEBGL","getShaderPrecisionFormat","HIGH_FLOAT","rangeMax","MEDIUM_FLOAT","LOW_FLOAT","HIGH_INT","MEDIUM_INT","LOW_INT","getSupportedExtensions","RENDERER","VENDOR","VERSION","SHADING_LANGUAGE_VERSION","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","renderPasses","depthMaskEnabled","cullFaceEnabled","setViewStream","stream","mainRenderer","invalidateCache","Image","vtkCamera","dopbasis","upbasis","tmpMatrix","tmpvec1","tmpvec2","rotateMatrix","newPosition","newFocalPoint","computeViewPlaneNormal","viewPlaneNormal","directionOfProjection","orthogonalizeViewUp","vt","viewUp","setPosition","computeDistance","setFocalPoint","focalPoint","setDistance","dx","dy","dz","dolly","amount","roll","at","viewUpVec4","viewDir","azimuth","fp","yaw","elevation","pitch","zoom","parallelProjection","parallelScale","viewAngle","applyTransform","vuOld","posNew","fpNew","vuNew","setViewUp","getThickness","clippingRange","setThickness","thickness","setClippingRange","setThicknessFromFocalPoint","setRoll","getRoll","setObliqueAngles","getOrientationWXYZ","getFrustumPlanes","getCameraLightTransformMatrix","sourceCamera","physicalOrientationToWorldDirection","ori","oriq","coriq","qdir","getPhysicalToWorldMatrix","getWorldToPhysicalMatrix","physVRight","physicalViewNorth","physicalViewUp","physicalScale","physicalTranslation","computeViewParametersFromViewMatrix","vmat","oldDist","setDirectionOfProjection","setViewMatrix","viewMatrix","projectionMatrix","nearz","farz","xmin","windowCenter","xmax","ymin","ymax","useOffAxisProjection","useHorizontalViewAngle","znear","zfar","getCompositeProjectionMatrix","vMat","pMat","setDeviceAngles","rotmat","dop","vup","setOrientationWXYZ","degrees","quatMat","newdop","newvup","computeClippingRange","screenBottomLeft","screenBottomRight","screenTopRight","freezeFocalPoint","LIGHT_TYPES","vtkLight","transformMatrix","getTransformedFocalPoint","directionMTime","setDirectionAngle","elevationRadians","azimuthRadians","setPositional","setLightTypeToHeadLight","setLightType","setLightTypeToCameraLight","setLightTypeToSceneLight","setTransformMatrix","lightType","lightTypeIsCameraLight","switch","positional","exponent","coneAngle","attenuationValues","shadowAttenuation","vtkViewport","gatherProps","allProps","getNestedProps","hasViewProp","addViewProp","removeViewProp","newPropList","removeAllViewProps","allPropsArray","addActor2D","removeActor2D","getActors2D","actors2D","viewToDisplay","nvp","normalizedDisplayToNormalizedViewport","normalizedViewportToView","viewToNormalizedViewport","normalizedViewportToNormalizedDisplay","PickPropFrom","vtkWindow","background2","gradientBackground","pixelAspect","vtkRenderer","COMPUTE_VISIBLE_PROP_BOUNDS_EVENT","RESET_CAMERA_CLIPPING_RANGE_EVENT","RESET_CAMERA_EVENT","updateCamera","activeCamera","getActiveCameraAndResetIfCreated","updateLightsGeometryToFollowCamera","setPositionFrom","getPositionByReference","setFocalPointFrom","getFocalPointByReference","updateLightGeometry","lightFollowCamera","allocateTime","updateGeometry","setLayer","setPreserveColorBuffer","setActiveCamera","makeCamera","getActors","actors","addActor","removeActor","removeAllActors","getVolumes","volumes","addVolume","removeVolume","volume","removeAllVolumes","addLight","removeLight","removeAllLights","setLightCollection","makeLight","automaticLightCreation","createdLight","getFocalPoint","normalizedDisplayToWorld","vpd","worldToNormalizedDisplay","computeVisiblePropBounds","allBounds","nothingVisible","getUseBounds","boundsToUse","getViewPlaneNormal","setViewAngle","w1","w2","w3","getViewAngle","getViewUp","resetCameraClippingRange","setParallelScale","setPhysicalScale","setPhysicalTranslation","minGap","getParallelScale","clippingRangeExpansion","nearClippingPlaneTolerance","setRenderWindow","visibleActorCount","visibleVolumeCount","m1","m2","m3","preserveColorBuffer","pickedProp","allocatedRenderTime","timeFactor","twoSidedLighting","lastRenderTimeInSeconds","numberOfPropsRendered","propArray","pathArray","preserveDepthBuffer","interactive","erase","draw","useShadows","useDepthPeeling","occlusionRatio","maximumNumberOfPeels","delegate","texturedBackground","backgroundTexture","vtkRenderWindow","addRenderer","hasRenderer","removeRenderer","addView","hasView","views","removeView","interactor","getStatistics","results","propCount","invisiblePropCount","mpr","captureImages","neverRendered","numberOfLayers","LeftController","RightController","Input","Trigger","TrackPad","Grip","ApplicationMenu","deviceInputMap","handledEvents","vtkRenderWindowInteractor","animationRequesters","Set","updateCurrentRenderer","currentRenderer","findPokedRenderer","getScreenEventPositionFor","getCanvas","scaleX","scaleY","getTouchEventPositionsFor","touches","positions","touch","identifier","getModifierKeysFor","controlKey","ctrlKey","altKey","shiftKey","getKeysFor","modifierKeys","keyCode","charCode","interactionRegistration","addListeners","rootElm","invMethod","handleMouseMove","handleMouseUp","handleTouchEnd","handleTouchMove","forceRender","enableRender","inRender","invokeRenderEvent","startEventLoop","aren","setInteractorStyle","interactorStyle","setInteractor","setEnabled","getCurrentRenderer","bindEvents","handleWheel","handleMouseDown","handleKeyPress","handleKeyDown","handleKeyUp","handleTouchStart","unbindEvents","keyPressEvent","keyDownEvent","keyUpEvent","callData","which","leftButtonPressEvent","middleButtonPressEvent","rightButtonPressEvent","requestAnimation","requestor","lastFrameTime","lastFrameStart","animationRequest","handleAnimation","startAnimationEvent","vrAnimation","cancelAnimation","skipWarning","endAnimationEvent","requestStr","gamepads","getGamepads","gp","lastGamepadValues","buttons","pressed","button3DEvent","gamepad","hand","move3DEvent","moveTimeoutID","startMouseMoveEvent","mouseMoveEvent","endMouseMoveEvent","currTime","FrameTime","animationEvent","wheelTimeoutID","startMouseWheelEvent","mouseWheelEvent","endMouseWheelEvent","leftButtonReleaseEvent","middleButtonReleaseEvent","rightButtonReleaseEvent","recognizeGestures","recognizeGesture","changedTouches","setView","rc","interactiveren","viewportren","getInteractive","lowerFirst","arg","pokedRenderer","startingEventPositions","currentGesture","endPinchEvent","endRotateEvent","endPanEvent","posVals","startVals","originalDistance","newDistance","originalAngle","atan2","newAngle","angleDeviation","thresh","pinchDistance","rotateDistance","panDistance","startPinchEvent","rotation","startRotateEvent","startPanEvent","rotateEvent","pinchEvent","panEvent","picker","pickingManager","desiredUpdateRate","stillUpdateRate","computeWorldToDisplay","getRenderWindow","getViews","computeDisplayToWorld","vtkInteractorObserver","unsubscribeFromEvents","subscribedEvents","subscribeToEvents","processEvents","getView","setPriority","States","IS_START","IS_NONE","IS_ROTATE","IS_PAN","IS_SPIN","IS_DOLLY","IS_CAMERA_POSE","IS_WINDOW_LEVEL","IS_SLICE","stateNames","Rotate","Pan","Spin","Dolly","CameraPose","WindowLevel","Slice","vtkInteractorStyle","invokeStartInteractionEvent","invokeEndInteractionEvent","ac","anActor","handleObservers","autoAdjustCameraClippingRange","vtkInteractorStyleConstants","vtkInteractorStyleTrackballCamera","handleMouseRotate","invokeInteractionEvent","handleMousePan","handleMouseDolly","handleMouseSpin","previousPosition","handleButton3D","ed","startCameraPose","endCameraPose","handleMove3D","updateCameraPose","oldTrans","getPhysicalTranslation","speed","axes","pscale","getPhysicalScale","handleLeftButtonPress","startDolly","startPan","startSpin","startRotate","handleLeftButtonRelease","endDolly","endPan","endSpin","endRotate","handleStartMouseWheel","handleMouseWheel","handleEndMouseWheel","handleStartPinch","previousScale","handleEndPinch","handleStartRotate","previousRotation","handleEndRotate","handleStartPan","previousTranslation","handleEndPan","handlePinch","dollyByFactor","handlePan","viewFocus","focalDepth","lastTrans","newPickPoint","oldPickPoint","motionVector","viewPoint","getLightFollowCamera","handleRotate","deltaElevation","deltaAzimuth","rxf","motionFactor","ryf","oldAngle","dyf","INVALID_BOUNDS","vtkPoints","setNumberOfPoints","nbPoints","setNumberOfComponents","setPoint","xRange","yRange","zRange","extractCellSizes","currentIdx","vtkCellArray","recompute","numberOfCells","cellSizes","getCellSizes","superSetData","getCell","cellLoc","numberOfPoints","vtkCell","pointIdsList","pointsIds","triangleData","pointsData","pointId","pointOffset","trianglePointOffset","getLength2","getParametricDistance","pcoords","pDist","pDistMax","cell","getCellDimension","tol","subId","evaluatePosition","closestPoint","dist2","weights","resize","ncells","vtkCellLinks","buildLinks","numCells","linkLoc","cellId","cellPointIds","getCellPoints","cellPointId","incrementLinkCount","allocateLinks","maxId","insertCellReference","getPointsIds","numLinks","getLink","ptId","getNcells","getCells","insertNextPoint","insertNextCellReference","deletePoint","removeCellReference","addCellReference","resizeCellList","squeeze","CellType","VTK_EMPTY_CELL","VTK_VERTEX","VTK_POLY_VERTEX","VTK_LINE","VTK_POLY_LINE","VTK_TRIANGLE","VTK_TRIANGLE_STRIP","VTK_POLYGON","VTK_PIXEL","VTK_QUAD","VTK_TETRA","VTK_VOXEL","VTK_HEXAHEDRON","VTK_WEDGE","VTK_PYRAMID","VTK_PENTAGONAL_PRISM","VTK_HEXAGONAL_PRISM","VTK_QUADRATIC_EDGE","VTK_QUADRATIC_TRIANGLE","VTK_QUADRATIC_QUAD","VTK_QUADRATIC_POLYGON","VTK_QUADRATIC_TETRA","VTK_QUADRATIC_HEXAHEDRON","VTK_QUADRATIC_WEDGE","VTK_QUADRATIC_PYRAMID","VTK_BIQUADRATIC_QUAD","VTK_TRIQUADRATIC_HEXAHEDRON","VTK_QUADRATIC_LINEAR_QUAD","VTK_QUADRATIC_LINEAR_WEDGE","VTK_BIQUADRATIC_QUADRATIC_WEDGE","VTK_BIQUADRATIC_QUADRATIC_HEXAHEDRON","VTK_BIQUADRATIC_TRIANGLE","VTK_CUBIC_LINE","VTK_CONVEX_POINT_SET","VTK_POLYHEDRON","VTK_PARAMETRIC_CURVE","VTK_PARAMETRIC_SURFACE","VTK_PARAMETRIC_TRI_SURFACE","VTK_PARAMETRIC_QUAD_SURFACE","VTK_PARAMETRIC_TETRA_REGION","VTK_PARAMETRIC_HEX_REGION","VTK_HIGHER_ORDER_EDGE","VTK_HIGHER_ORDER_TRIANGLE","VTK_HIGHER_ORDER_QUAD","VTK_HIGHER_ORDER_POLYGON","VTK_HIGHER_ORDER_TETRAHEDRON","VTK_HIGHER_ORDER_WEDGE","VTK_HIGHER_ORDER_PYRAMID","VTK_HIGHER_ORDER_HEXAHEDRON","VTK_LAGRANGE_CURVE","VTK_LAGRANGE_TRIANGLE","VTK_LAGRANGE_QUADRILATERAL","VTK_LAGRANGE_TETRAHEDRON","VTK_LAGRANGE_HEXAHEDRON","VTK_LAGRANGE_WEDGE","VTK_LAGRANGE_PYRAMID","VTK_NUMBER_OF_CELL_TYPES","CellTypesStrings","getClassNameFromTypeId","typeId","getTypeIdFromClassName","cellTypeString","findIndex","isLinear","vtkCellTypes","typeArray","locationArray","insertCell","insertNextCell","setCellTypes","cellTypes","cellLocations","getCellLocation","deleteCell","getNumberOfTypes","isType","numTypes","getCellType","insertNextType","getExtend","getTypeArray","getLocationArray","getMaxId","vtkPointSet","IntersectionState","NO_INTERSECTION","YES_INTERSECTION","ON_LINE","distanceToLine","MIN_VALUE","closest","denom","tolerance","b1a1","minDist","l2","uv1","uv2","vtkLine","projXYZ","outDistance","computeNormalDirection","computeNormal","vtkTriangle","tol2","pt1","pt2","pt3","inside","evaluation","dist2Pt1Pt2","dist2Pt2Pt3","dist2Pt3Pt1","intersectLine","pt3Pt1","pt3Pt2","pt3X","fabsn","rhs","dist2Point","dist2Line1","dist2Line2","closestPoint1","closestPoint2","maxComponent","lineDistance","evaluateLocation","p0","u3","pc","POLYDATA_FIELDS","vtkPolyData","camelize","letter","cellType","buildCells","nVerts","getNumberOfVerts","nLines","getNumberOfLines","nPolys","getNumberOfPolys","nStrips","getNumberOfStrips","types","pTypes","locs","pLocs","nextCellPts","numCellPts","polys","strips","initialSize","getPointCells","getCellEdgeNeighbors","link1","link2","cellHint","cellInfo","vtkProp","textures","pick","hasKey","getRedrawMTime","setEstimatedRenderTime","estimatedRenderTime","savedEstimatedRenderTime","restoreEstimatedRenderTime","addEstimatedRenderTime","setAllocatedRenderTime","getSupportsSelection","hasTexture","addTexture","removeTexture","newTextureList","removeAllTextures","visibility","pickable","dragable","useBounds","renderTimeMultiplier","paths","vtkProp3D","updateIdentityFlag","addPosition","deltaXYZ","oaxis","rotateWXYZ","setUserMatrix","userMatrix","matrixMTime","isIdentity","getUserMatrix","userMatrixMTime","cachedProp3D","vtkActor","forceOpaque","forceTranslucent","isTranslucent","mapper","hasTranslucentPolygonalGeometry","setProperty","makeProperty","bds","mapperBounds","boundsMTime","pt","backfaceProperty","getInputAlgorithm","STYLE_CONTAINER","STYLE_CONTROL_PANEL","borderRadius","listStyle","maxWidth","maxHeight","applyStyle","vtkFullScreenRenderWindow","rootContainer","containerStyle","removeController","controlContainer","setControllerVisibility","visible","controllerVisibility","toggleControllerVisibility","addController","html","controlPanelStyle","addRepresentation","removeRepresentation","resizeCallback","setResizeCallback","listenWindowResize","ColorSpace","HSV","LAB","DIVERGING","Scale","LOG10","presetMap","vtkColorMaps","RGBPoints","Name","rgbPresetNames","getPresetByName","addPreset","preset","removePresetByName","vtkColorTransferFunctionLabToMsh","msh","M","vtkColorTransferFunctionMshToLab","vtkColorTransferFunctionAdjustHue","unsatM","hueSpin","vtkColorTransferFunctionAngleDiff","adiff","vtkColorTransferFunctionInterpolateDiverging","rgb1","rgb2","lab1","lab2","msh1","msh2","localS","Mmid","mshTmp","labTmp","vtkColorTransferFunction","nodes","addRGBPoint","addRGBPointLong","midpoint","sharpness","allowDuplicateScalars","removePoint","sortAndUpdateRange","addHSVPoint","addHSVPointLong","setNodes","modifiedInvoked","updateRange","oldRange","movePoint","oldX","newX","removeAllPoints","addRGBSegment","g1","g2","addHSVSegment","h2","hsv1","hsv2","mapValue","numNodes","getNanColor","nodeVal","getNodeValue","getRedValue","getGreenValue","getBlueValue","xStart","xEnd","lastR","lastG","lastB","tmpVec","logStart","logEnd","logX","tidx","clamping","getUseAboveRangeColor","getUseBelowRangeColor","colorSpace","hSVWrap","hsvTmp","ss","sss","h3","h4","slope","getUint8Table","withAlpha","tableSize","tableWithAlpha","nbChannels","buildFunctionFromTable","inc","setNodeValue","nodeValue","fillFromDataPointer","nb","ptr","originalRange","adjustRange","functionRange","estimateMinNumberOfSamples","findMinimumXDistance","currentDist","mapDataIndexed","mapData","applyColorMap","colorMap","NanColor","vtkPiecewiseFunction","prevValue","functionType","getDataPointer","function","getFirstNonZeroValue","allZero","addPointLong","addSegment","getValue","lastValue","VTK_MAX_VRCOMP","vtkVolumeProperty","mTime","componentData","colorChannels","grayTransferFunction","rGBTransferFunction","scalarOpacity","gradientOpacity","disableGradientOpacity","getColorChannels","setGrayTransferFunction","getGrayTransferFunction","setRGBTransferFunction","setScalarOpacity","setComponentWeight","componentWeight","setInterpolationTypeToNearest","setInterpolationType","setInterpolationTypeToLinear","setInterpolationTypeToFastLinear","getInterpolationTypeAsString","interpolationType","sets","cap","gets","independentComponents","shade","useLabelOutline","scalarOpacityUnitDistance","gradientOpacityMinimumValue","gradientOpacityMinimumOpacity","gradientOpacityMaximumValue","gradientOpacityMaximumOpacity","useGradientOpacity","vtkVolume","zip","_","vtkVolumeMapper","setBlendModeToComposite","setBlendMode","setBlendModeToMaximumIntensity","setBlendModeToMinimumIntensity","setBlendModeToAverageIntensity","getBlendModeAsString","blendMode","sampleDistance","imageSampleDistance","maximumSamplesPerRay","autoAdjustSampleDistances","vtkGenericRenderWindow","invokeResize","vtkImageMapper","computeClosestIJKAxis","inVec3","slicingMode","closestIJKAxis","flip","maxAbs","absValue","xyzLabel","ijkLabel","doPicking","worldOrigin","worldNormal","point","absoluteIJK","pos3","setSlice","setXSlice","setSlicingMode","setYSlice","setZSlice","setISlice","setJSlice","setKSlice","getSlicingModeNormal","useCustomExtents","customDisplayExtent","getBoundsForSlice","intersectWithLineForPointPicking","pickingData","intersectWithLineForCellPicking","absIJK","pCoords","displayExtent","renderToRectangle","sliceAtFocalPoint","vtkImageProperty","colorWindow","colorLevel","vtkImageSlice","getImages","getMinXBound","getMaxXBound","getMinYBound","getMaxYBound","getMinZBound","getMaxZBound","vtkInteractorStyleImage","superHandleMouseMove","windowLevel","superHandleLeftButtonPress","interactionMode","lastSlicePosition","startSlice","windowLevelStartPosition","setCurrentImageNumber","currentImageNumber","currentImageProperty","windowLevelInitial","startWindowLevel","superHandleLeftButtonRelease","endWindowLevel","endSlice","getDistance","windowLevelCurrentPosition","mWindow","newWindow","newLevel","setColorWindow","setColorLevel","viewportHeight","propMatch","targetIndex","imageProp","foundImageProp","setCurrentImageProperty","imageProperty","xViewRightVector","xViewUpVector","yViewRightVector","yViewUpVector","zViewRightVector","zViewUpVector","getEndianness","ITKHelper","readImageArrayBuffer","resultPreprocessor","filename","lastIndexOf","vtkITKImageReader","parseAsArrayBuffer","rawDataBuffer","inData","outData","ImgShow","Tabinfor","Bottominfor","MyVueCropper","beforeRouteEnter","vm","scrollTop","currentRow","isUpload","canUpload","claheImg","sharpenImg","before","fileimg","isNotCut","cutVisible","funtype","fit","colorList","uploadSrc","prehandle","denoise","prePhoto","imgArr","watch","newVal","oldVal","deep","created","getUploadImg","getCustomModel","methods","getImgArrayBuffer","atchDownload","downloadimgWithWords","imgUpload","historyGetPage","createSrc","goCompress","$message","inputFile","files","that","content","old_items","new_itmes","elementA","download","blob","click","newline","printImage","replacer","byteLength","outputTextArea","textContent","showcolor","showBody","showView","judge","view3d","fullScreenRenderer","getRenderer","setMapper","setSampleDistance","piecewiseFun","newPreset","ImageConstants","container1","genericRenderWindow1","renderer1","renderWindow1","camera1","istyle","setInteractionMode","actor1","mapper1","setSliceAtFocalPoint","position1","normal1","setParallelProjection","container2","genericRenderWindow2","renderer2","renderWindow2","camera2","istyle2","actor2","mapper2","position2","normal2","container3","genericRenderWindow3","renderer3","renderWindow3","camera3","istyle3","actor3","mapper3","position3","normal3","dDicom","vtkITKHelper","dNii","dataTransfer","checkUpload","afterImg","clearQueue","notvisible","getMore","uploadMore","beforeUpload","$refs","uploadFile","fileClick","cut","fileSuffix","whiteList","setCurrent","singleTable","setCurrentRow","__exports__"],"sourceRoot":""}